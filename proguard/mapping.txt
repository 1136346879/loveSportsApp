android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    boolean assumeMaterial(android.content.Context) -> assumeMaterial
    void syncState() -> syncState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback) -> createCallback
android.support.v4.app.ActivityCompat$SharedElementCallback21Impl -> android.support.v4.app.ActivityCompat$SharedElementCallback21Impl:
    android.support.v4.app.SharedElementCallback mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.ActivityCompat21:
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> createCallback
android.support.v4.app.ActivityCompat21$SharedElementCallback21 -> android.support.v4.app.ActivityCompat21$SharedElementCallback21:
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl -> android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl:
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityManagerCompat -> android.support.v4.app.ActivityManagerCompat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityManagerCompatKitKat -> android.support.v4.app.ActivityManagerCompatKitKat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21 -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21:
    android.support.v4.app.ActivityOptionsCompat21 mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat21 -> android.support.v4.app.ActivityOptionsCompat21:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View[],java.lang.String[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat21) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> setFirstOut
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> setLastIn
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> calculateFragments
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> calculateBackFragments
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> beginTransition
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> getEnterTransition
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> getExitTransition
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap) -> captureExitingViews
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> remapSharedElements
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> configureTransitions
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> prepareSharedElementTransition
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> callSharedElementEnd
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> setEpicenterIn
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> mapSharedElementsIn
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> remapNames
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> mapEnteringSharedElements
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragmentsAfterEnter
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragments
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> setNameOverride
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> setNameOverrides
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setBackNameOverrides
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setNameOverrides
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> access$000
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> access$100
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> access$200
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> access$300
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.BackStackRecord$1:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    android.view.View getView() -> getView
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.BackStackRecord$2:
    android.view.View val$sceneRoot -> val$sceneRoot
    java.lang.Object val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    boolean val$isBack -> val$isBack
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.BackStackRecord$3:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    int val$containerId -> val$containerId
    java.lang.Object val$transition -> val$transition
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.BackStackRecord$TransitionState:
    android.support.v4.util.ArrayMap nameOverrides -> nameOverrides
    java.util.ArrayList hiddenFragmentViews -> hiddenFragmentViews
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> enteringEpicenterView
    android.view.View nonExistentView -> nonExistentView
    android.support.v4.app.BackStackRecord this$0 -> this$0
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    java.lang.Object mEnterTransition -> mEnterTransition
    java.lang.Object mReturnTransition -> mReturnTransition
    java.lang.Object mExitTransition -> mExitTransition
    java.lang.Object mReenterTransition -> mReenterTransition
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    java.lang.Object getEnterTransition() -> getEnterTransition
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    java.lang.Object getReturnTransition() -> getReturnTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    java.lang.Object getExitTransition() -> getExitTransition
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    java.lang.Object getReenterTransition() -> getReenterTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> supportFinishAfterTransition
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.LayoutInflater$Factory getLayoutInflaterFactory() -> getLayoutInflaterFactory
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map) -> captureExitingViews
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> excludeTarget
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> addTransitionTargets
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> mergeTransitions
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> setSharedElementEpicenter
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> getBoundsOnScreen
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> cleanupTransitions
    void removeTargets(java.lang.Object,java.util.ArrayList) -> removeTargets
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    void access$000(java.util.ArrayList,android.view.View) -> access$000
    android.graphics.Rect access$100(android.view.View) -> access$100
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    android.graphics.Rect val$epicenter -> val$epicenter
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    android.view.View val$container -> val$container
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> val$inFragment
    java.util.Map val$nameOverrides -> val$nameOverrides
    java.util.Map val$renamedViews -> val$renamedViews
    android.transition.Transition val$enterTransition -> val$enterTransition
    java.util.ArrayList val$enteringViews -> val$enteringViews
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    android.graphics.Rect mEpicenter -> mEpicenter
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> val$epicenterView
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.transition.Transition val$enterTransition -> val$enterTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.transition.Transition val$exitTransition -> val$exitTransition
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.transition.Transition val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    java.util.Map val$renamedViews -> val$renamedViews
    java.util.ArrayList val$hiddenViews -> val$hiddenViews
    android.transition.Transition val$overallTransition -> val$overallTransition
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.FragmentTransitionCompat21$EpicenterView:
    android.view.View epicenter -> epicenter
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.FragmentTransitionCompat21$ViewRetriever:
    android.view.View getView() -> getView
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_BIG_TEXT -> EXTRA_BIG_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_SHOW_WHEN -> EXTRA_SHOW_WHEN
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_TEMPLATE -> EXTRA_TEMPLATE
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    java.lang.String EXTRA_BACKGROUND_IMAGE_URI -> EXTRA_BACKGROUND_IMAGE_URI
    java.lang.String EXTRA_MEDIA_SESSION -> EXTRA_MEDIA_SESSION
    java.lang.String EXTRA_COMPACT_ACTIONS -> EXTRA_COMPACT_ACTIONS
    int COLOR_DEFAULT -> COLOR_DEFAULT
    int VISIBILITY_PUBLIC -> VISIBILITY_PUBLIC
    int VISIBILITY_PRIVATE -> VISIBILITY_PRIVATE
    int VISIBILITY_SECRET -> VISIBILITY_SECRET
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_IN_PROGRESS_LABEL -> KEY_IN_PROGRESS_LABEL
    java.lang.String KEY_CONFIRM_LABEL -> KEY_CONFIRM_LABEL
    java.lang.String KEY_CANCEL_LABEL -> KEY_CANCEL_LABEL
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    java.lang.CharSequence mInProgressLabel -> mInProgressLabel
    java.lang.CharSequence mConfirmLabel -> mConfirmLabel
    java.lang.CharSequence mCancelLabel -> mCancelLabel
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
    java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    java.lang.CharSequence getCancelLabel() -> getCancelLabel
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    int MAX_CHARSEQUENCE_LENGTH -> MAX_CHARSEQUENCE_LENGTH
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mShowWhen -> mShowWhen
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    java.lang.String mCategory -> mCategory
    android.os.Bundle mExtras -> mExtras
    int mColor -> mColor
    int mVisibility -> mVisibility
    android.app.Notification mPublicVersion -> mPublicVersion
    android.app.Notification mNotification -> mNotification
    java.util.ArrayList mPeople -> mPeople
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder setColor(int) -> setColor
    android.support.v4.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi21:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    java.lang.String getCategory(android.app.Notification) -> getCategory
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.NotificationCompatApi21:
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    java.lang.String getCategory(android.app.Notification) -> getCategory
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.NotificationCompatApi21$Builder:
    android.app.Notification$Builder b -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int MAX_SIDE_CHANNEL_SDK_VERSION -> MAX_SIDE_CHANNEL_SDK_VERSION
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SharedElementCallback -> android.support.v4.app.SharedElementCallback:
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String TAG -> TAG
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    java.io.File createFilesDir(java.io.File) -> createFilesDir
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.ContextCompatApi21:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
android.support.v4.content.res.ResourcesCompatApi21 -> android.support.v4.content.res.ResourcesCompatApi21:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.BitmapCompat -> android.support.v4.graphics.BitmapCompat:
    android.support.v4.graphics.BitmapCompat$BitmapImpl IMPL -> IMPL
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BaseBitmapImpl -> android.support.v4.graphics.BitmapCompat$BaseBitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BitmapImpl -> android.support.v4.graphics.BitmapCompat$BitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatHoneycombMr1 -> android.support.v4.graphics.BitmapCompatHoneycombMr1:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatJellybeanMR2 -> android.support.v4.graphics.BitmapCompatJellybeanMR2:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompatKitKat -> android.support.v4.graphics.BitmapCompatKitKat:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$LDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LDrawableImpl:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatL -> android.support.v4.graphics.drawable.DrawableCompatL:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.RoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawable:
    int DEFAULT_PAINT_FLAGS -> DEFAULT_PAINT_FLAGS
    android.graphics.Bitmap mBitmap -> mBitmap
    int mTargetDensity -> mTargetDensity
    int mGravity -> mGravity
    android.graphics.Paint mPaint -> mPaint
    android.graphics.BitmapShader mBitmapShader -> mBitmapShader
    float mCornerRadius -> mCornerRadius
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.RectF mDstRectF -> mDstRectF
    boolean mApplyGravity -> mApplyGravity
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    android.graphics.Paint getPaint() -> getPaint
    android.graphics.Bitmap getBitmap() -> getBitmap
    void computeBitmapSize() -> computeBitmapSize
    void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    void setTargetDensity(int) -> setTargetDensity
    int getGravity() -> getGravity
    void setGravity(int) -> setGravity
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void setAntiAlias(boolean) -> setAntiAlias
    boolean hasAntiAlias() -> hasAntiAlias
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setDither(boolean) -> setDither
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    void updateDstRect() -> updateDstRect
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setCornerRadius(float) -> setCornerRadius
    float getCornerRadius() -> getCornerRadius
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getOpacity() -> getOpacity
    boolean isGreaterThanZero(float) -> isGreaterThanZero
android.support.v4.graphics.drawable.RoundedBitmapDrawable21 -> android.support.v4.graphics.drawable.RoundedBitmapDrawable21:
    void getOutline(android.graphics.Outline) -> getOutline
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory:
    java.lang.String TAG -> TAG
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    java.lang.String TAG -> TAG
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_NUM_TRACKS -> METADATA_KEY_NUM_TRACKS
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ART_URI -> METADATA_KEY_ART_URI
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_ALBUM_ART_URI -> METADATA_KEY_ALBUM_ART_URI
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_DISPLAY_TITLE -> METADATA_KEY_DISPLAY_TITLE
    java.lang.String METADATA_KEY_DISPLAY_SUBTITLE -> METADATA_KEY_DISPLAY_SUBTITLE
    java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION -> METADATA_KEY_DISPLAY_DESCRIPTION
    java.lang.String METADATA_KEY_DISPLAY_ICON -> METADATA_KEY_DISPLAY_ICON
    java.lang.String METADATA_KEY_DISPLAY_ICON_URI -> METADATA_KEY_DISPLAY_ICON_URI
    int METADATA_TYPE_LONG -> METADATA_TYPE_LONG
    int METADATA_TYPE_TEXT -> METADATA_TYPE_TEXT
    int METADATA_TYPE_BITMAP -> METADATA_TYPE_BITMAP
    int METADATA_TYPE_RATING -> METADATA_TYPE_RATING
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> METADATA_KEYS_TYPE
    android.os.Bundle mBundle -> mBundle
    java.lang.Object mMetadataObj -> mMetadataObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.CharSequence getText(java.lang.String) -> getText
    java.lang.String getString(java.lang.String) -> getString
    long getLong(java.lang.String) -> getLong
    android.support.v4.media.RatingCompat getRating(java.lang.String) -> getRating
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int size() -> size
    java.util.Set keySet() -> keySet
    android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    java.lang.Object getMediaMetadata() -> getMediaMetadata
    android.os.Bundle access$100(android.support.v4.media.MediaMetadataCompat) -> access$100
    android.support.v4.util.ArrayMap access$200() -> access$200
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaMetadataCompat$Builder -> android.support.v4.media.MediaMetadataCompat$Builder:
    android.os.Bundle mBundle -> mBundle
    android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence) -> putText
    android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String) -> putString
    android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long) -> putLong
    android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat) -> putRating
    android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    android.support.v4.media.MediaMetadataCompat build() -> build
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    java.util.Set keySet(java.lang.Object) -> keySet
    android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String) -> getBitmap
    long getLong(java.lang.Object,java.lang.String) -> getLong
    java.lang.Object getRating(java.lang.Object,java.lang.String) -> getRating
    java.lang.CharSequence getText(java.lang.Object,java.lang.String) -> getText
android.support.v4.media.MediaMetadataCompatApi21$Builder -> android.support.v4.media.MediaMetadataCompatApi21$Builder:
    java.lang.Object newInstance() -> newInstance
    void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap) -> putBitmap
    void putLong(java.lang.Object,java.lang.String,long) -> putLong
    void putRating(java.lang.Object,java.lang.String,java.lang.Object) -> putRating
    void putText(java.lang.Object,java.lang.String,java.lang.CharSequence) -> putText
    void putString(java.lang.Object,java.lang.String,java.lang.String) -> putString
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    java.lang.String TAG -> TAG
    int RATING_NONE -> RATING_NONE
    int RATING_HEART -> RATING_HEART
    int RATING_THUMB_UP_DOWN -> RATING_THUMB_UP_DOWN
    int RATING_3_STARS -> RATING_3_STARS
    int RATING_4_STARS -> RATING_4_STARS
    int RATING_5_STARS -> RATING_5_STARS
    int RATING_PERCENTAGE -> RATING_PERCENTAGE
    float RATING_NOT_RATED -> RATING_NOT_RATED
    int mRatingStyle -> mRatingStyle
    float mRatingValue -> mRatingValue
    java.lang.Object mRatingObj -> mRatingObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v4.media.RatingCompat newUnratedRating(int) -> newUnratedRating
    android.support.v4.media.RatingCompat newHeartRating(boolean) -> newHeartRating
    android.support.v4.media.RatingCompat newThumbRating(boolean) -> newThumbRating
    android.support.v4.media.RatingCompat newStarRating(int,float) -> newStarRating
    android.support.v4.media.RatingCompat newPercentageRating(float) -> newPercentageRating
    boolean isRated() -> isRated
    int getRatingStyle() -> getRatingStyle
    boolean hasHeart() -> hasHeart
    boolean isThumbUp() -> isThumbUp
    float getStarRating() -> getStarRating
    float getPercentRating() -> getPercentRating
    android.support.v4.media.RatingCompat fromRating(java.lang.Object) -> fromRating
    java.lang.Object getRating() -> getRating
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.RatingCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompatApi21 -> android.support.v4.media.RatingCompatApi21:
    java.lang.Object newUnratedRating(int) -> newUnratedRating
    java.lang.Object newHeartRating(boolean) -> newHeartRating
    java.lang.Object newThumbRating(boolean) -> newThumbRating
    java.lang.Object newStarRating(int,float) -> newStarRating
    java.lang.Object newPercentageRating(float) -> newPercentageRating
    boolean isRated(java.lang.Object) -> isRated
    int getRatingStyle(java.lang.Object) -> getRatingStyle
    boolean hasHeart(java.lang.Object) -> hasHeart
    boolean isThumbUp(java.lang.Object) -> isThumbUp
    float getStarRating(java.lang.Object) -> getStarRating
    float getPercentRating(java.lang.Object) -> getPercentRating
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.media.VolumeProviderCompat -> android.support.v4.media.VolumeProviderCompat:
    int VOLUME_CONTROL_FIXED -> VOLUME_CONTROL_FIXED
    int VOLUME_CONTROL_RELATIVE -> VOLUME_CONTROL_RELATIVE
    int VOLUME_CONTROL_ABSOLUTE -> VOLUME_CONTROL_ABSOLUTE
    int mControlType -> mControlType
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    android.support.v4.media.VolumeProviderCompat$Callback mCallback -> mCallback
    java.lang.Object mVolumeProviderObj -> mVolumeProviderObj
    int getCurrentVolume() -> getCurrentVolume
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    void setCurrentVolume(int) -> setCurrentVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
    void setCallback(android.support.v4.media.VolumeProviderCompat$Callback) -> setCallback
    java.lang.Object getVolumeProvider() -> getVolumeProvider
android.support.v4.media.VolumeProviderCompat$1 -> android.support.v4.media.VolumeProviderCompat$1:
    android.support.v4.media.VolumeProviderCompat this$0 -> this$0
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompat$Callback -> android.support.v4.media.VolumeProviderCompat$Callback:
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.VolumeProviderCompatApi21 -> android.support.v4.media.VolumeProviderCompatApi21:
    java.lang.Object createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> createVolumeProvider
    void setCurrentVolume(java.lang.Object,int) -> setCurrentVolume
android.support.v4.media.VolumeProviderCompatApi21$1 -> android.support.v4.media.VolumeProviderCompatApi21$1:
    android.support.v4.media.VolumeProviderCompatApi21$Delegate val$delegate -> val$delegate
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompatApi21$Delegate -> android.support.v4.media.VolumeProviderCompatApi21$Delegate:
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.routing.MediaRouterJellybean -> android.support.v4.media.routing.MediaRouterJellybean:
    java.lang.String TAG -> TAG
    int ROUTE_TYPE_LIVE_AUDIO -> ROUTE_TYPE_LIVE_AUDIO
    int ROUTE_TYPE_LIVE_VIDEO -> ROUTE_TYPE_LIVE_VIDEO
    int ROUTE_TYPE_USER -> ROUTE_TYPE_USER
    int ALL_ROUTE_TYPES -> ALL_ROUTE_TYPES
    java.lang.Object getMediaRouter(android.content.Context) -> getMediaRouter
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    java.util.List getCategories(java.lang.Object) -> getCategories
    java.lang.Object getSelectedRoute(java.lang.Object,int) -> getSelectedRoute
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
    void addCallback(java.lang.Object,int,java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object,java.lang.Object) -> removeCallback
    java.lang.Object createRouteCategory(java.lang.Object,java.lang.String,boolean) -> createRouteCategory
    java.lang.Object createUserRoute(java.lang.Object,java.lang.Object) -> createUserRoute
    void addUserRoute(java.lang.Object,java.lang.Object) -> addUserRoute
    void removeUserRoute(java.lang.Object,java.lang.Object) -> removeUserRoute
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybean$Callback) -> createCallback
    java.lang.Object createVolumeCallback(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback) -> createVolumeCallback
android.support.v4.media.routing.MediaRouterJellybean$Callback -> android.support.v4.media.routing.MediaRouterJellybean$Callback:
    void onRouteSelected(int,java.lang.Object) -> onRouteSelected
    void onRouteUnselected(int,java.lang.Object) -> onRouteUnselected
    void onRouteAdded(java.lang.Object) -> onRouteAdded
    void onRouteRemoved(java.lang.Object) -> onRouteRemoved
    void onRouteChanged(java.lang.Object) -> onRouteChanged
    void onRouteGrouped(java.lang.Object,java.lang.Object,int) -> onRouteGrouped
    void onRouteUngrouped(java.lang.Object,java.lang.Object) -> onRouteUngrouped
    void onRouteVolumeChanged(java.lang.Object) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$Callback mCallback -> mCallback
    void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int) -> onRouteGrouped
    void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup) -> onRouteUngrouped
    void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround:
    java.lang.reflect.Method mGetSystemAudioRouteMethod -> mGetSystemAudioRouteMethod
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
android.support.v4.media.routing.MediaRouterJellybean$RouteCategory -> android.support.v4.media.routing.MediaRouterJellybean$RouteCategory:
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    boolean isGroupable(java.lang.Object) -> isGroupable
android.support.v4.media.routing.MediaRouterJellybean$RouteGroup -> android.support.v4.media.routing.MediaRouterJellybean$RouteGroup:
    java.util.List getGroupedRoutes(java.lang.Object) -> getGroupedRoutes
android.support.v4.media.routing.MediaRouterJellybean$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$RouteInfo:
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.lang.CharSequence getStatus(java.lang.Object) -> getStatus
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    java.lang.Object getCategory(java.lang.Object) -> getCategory
    android.graphics.drawable.Drawable getIconDrawable(java.lang.Object) -> getIconDrawable
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    int getPlaybackStream(java.lang.Object) -> getPlaybackStream
    int getVolume(java.lang.Object) -> getVolume
    int getVolumeMax(java.lang.Object) -> getVolumeMax
    int getVolumeHandling(java.lang.Object) -> getVolumeHandling
    java.lang.Object getTag(java.lang.Object) -> getTag
    void setTag(java.lang.Object,java.lang.Object) -> setTag
    void requestSetVolume(java.lang.Object,int) -> requestSetVolume
    void requestUpdateVolume(java.lang.Object,int) -> requestUpdateVolume
    java.lang.Object getGroup(java.lang.Object) -> getGroup
    boolean isGroup(java.lang.Object) -> isGroup
android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround:
    java.lang.reflect.Method mSelectRouteIntMethod -> mSelectRouteIntMethod
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo:
    void setName(java.lang.Object,java.lang.CharSequence) -> setName
    void setStatus(java.lang.Object,java.lang.CharSequence) -> setStatus
    void setIconDrawable(java.lang.Object,android.graphics.drawable.Drawable) -> setIconDrawable
    void setPlaybackType(java.lang.Object,int) -> setPlaybackType
    void setPlaybackStream(java.lang.Object,int) -> setPlaybackStream
    void setVolume(java.lang.Object,int) -> setVolume
    void setVolumeMax(java.lang.Object,int) -> setVolumeMax
    void setVolumeHandling(java.lang.Object,int) -> setVolumeHandling
    void setVolumeCallback(java.lang.Object,java.lang.Object) -> setVolumeCallback
    void setRemoteControlClient(java.lang.Object,java.lang.Object) -> setRemoteControlClient
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback:
    void onVolumeSetRequest(java.lang.Object,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(java.lang.Object,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback mCallback -> mCallback
    void onVolumeSetRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybeanMr1 -> android.support.v4.media.routing.MediaRouterJellybeanMr1:
    java.lang.String TAG -> TAG
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback) -> createCallback
android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround:
    int WIFI_DISPLAY_SCAN_INTERVAL -> WIFI_DISPLAY_SCAN_INTERVAL
    android.hardware.display.DisplayManager mDisplayManager -> mDisplayManager
    android.os.Handler mHandler -> mHandler
    java.lang.reflect.Method mScanWifiDisplaysMethod -> mScanWifiDisplaysMethod
    boolean mActivelyScanningWifiDisplays -> mActivelyScanningWifiDisplays
    void setActiveScanRouteTypes(int) -> setActiveScanRouteTypes
    void run() -> run
android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback -> android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback:
    void onRoutePresentationDisplayChanged(java.lang.Object) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy:
    void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround:
    java.lang.reflect.Method mGetStatusCodeMethod -> mGetStatusCodeMethod
    int mStatusConnecting -> mStatusConnecting
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo:
    boolean isEnabled(java.lang.Object) -> isEnabled
    android.view.Display getPresentationDisplay(java.lang.Object) -> getPresentationDisplay
android.support.v4.media.routing.MediaRouterJellybeanMr2 -> android.support.v4.media.routing.MediaRouterJellybeanMr2:
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
    void addCallback(java.lang.Object,int,java.lang.Object,int) -> addCallback
android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo:
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo:
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> mImpl
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$1 -> android.support.v4.media.session.MediaControllerCompat$1:
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl:
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.lang.Object mControllerObj -> mControllerObj
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    int PLAYBACK_TYPE_LOCAL -> PLAYBACK_TYPE_LOCAL
    int PLAYBACK_TYPE_REMOTE -> PLAYBACK_TYPE_REMOTE
    int mPlaybackType -> mPlaybackType
    int mAudioStream -> mAudioStream
    int mVolumeControl -> mVolumeControl
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    int getPlaybackType() -> getPlaybackType
    int getAudioStream() -> getAudioStream
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    int getCurrentVolume() -> getCurrentVolume
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21:
    java.lang.Object mControlsObj -> mControlsObj
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void rewind() -> rewind
    void skipToNext() -> skipToNext
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    java.lang.Object fromToken(android.content.Context,java.lang.Object) -> fromToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
    void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> registerCallback
    void unregisterCallback(java.lang.Object,java.lang.Object) -> unregisterCallback
    java.lang.Object getTransportControls(java.lang.Object) -> getTransportControls
    java.lang.Object getPlaybackState(java.lang.Object) -> getPlaybackState
    java.lang.Object getMetadata(java.lang.Object) -> getMetadata
    int getRatingType(java.lang.Object) -> getRatingType
    java.lang.Object getPlaybackInfo(java.lang.Object) -> getPlaybackInfo
    boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> dispatchMediaButtonEvent
    void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
android.support.v4.media.session.MediaControllerCompatApi21$Callback -> android.support.v4.media.session.MediaControllerCompatApi21$Callback:
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> mCallback
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    int FLAG_SCO -> FLAG_SCO
    int STREAM_BLUETOOTH_SCO -> STREAM_BLUETOOTH_SCO
    int STREAM_SYSTEM_ENFORCED -> STREAM_SYSTEM_ENFORCED
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    int getVolumeControl(java.lang.Object) -> getVolumeControl
    int getMaxVolume(java.lang.Object) -> getMaxVolume
    int getCurrentVolume(java.lang.Object) -> getCurrentVolume
    int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi21$TransportControls:
    void play(java.lang.Object) -> play
    void pause(java.lang.Object) -> pause
    void stop(java.lang.Object) -> stop
    void seekTo(java.lang.Object,long) -> seekTo
    void fastForward(java.lang.Object) -> fastForward
    void rewind(java.lang.Object) -> rewind
    void skipToNext(java.lang.Object) -> skipToNext
    void skipToPrevious(java.lang.Object) -> skipToPrevious
    void setRating(java.lang.Object,java.lang.Object) -> setRating
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl -> mImpl
    int FLAG_HANDLES_MEDIA_BUTTONS -> FLAG_HANDLES_MEDIA_BUTTONS
    int FLAG_HANDLES_TRANSPORT_CONTROLS -> FLAG_HANDLES_TRANSPORT_CONTROLS
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback) -> setCallback
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
    android.support.v4.media.session.MediaSessionCompat obtain(java.lang.Object) -> obtain
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.MediaSessionCompat$1:
android.support.v4.media.session.MediaSessionCompat$Callback -> android.support.v4.media.session.MediaSessionCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.support.v4.media.RatingCompat) -> onSetRating
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl:
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21:
    java.lang.Object mSessionObj -> mSessionObj
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase:
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    android.os.Parcelable mInner -> mInner
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object getToken() -> getToken
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompatApi21 -> android.support.v4.media.session.MediaSessionCompatApi21:
    java.lang.Object createSession(android.content.Context,java.lang.String) -> createSession
    java.lang.Object verifySession(java.lang.Object) -> verifySession
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> createCallback
    void setCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> setCallback
    void setFlags(java.lang.Object,int) -> setFlags
    void setPlaybackToLocal(java.lang.Object,int) -> setPlaybackToLocal
    void setPlaybackToRemote(java.lang.Object,java.lang.Object) -> setPlaybackToRemote
    void setActive(java.lang.Object,boolean) -> setActive
    boolean isActive(java.lang.Object) -> isActive
    void sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release(java.lang.Object) -> release
    android.os.Parcelable getSessionToken(java.lang.Object) -> getSessionToken
    void setPlaybackState(java.lang.Object,java.lang.Object) -> setPlaybackState
    void setMetadata(java.lang.Object,java.lang.Object) -> setMetadata
android.support.v4.media.session.MediaSessionCompatApi21$Callback -> android.support.v4.media.session.MediaSessionCompatApi21$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback -> mCallback
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.media.Rating) -> onSetRating
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    long ACTION_STOP -> ACTION_STOP
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_SET_RATING -> ACTION_SET_RATING
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    long ACTION_PLAY_FROM_MEDIA_ID -> ACTION_PLAY_FROM_MEDIA_ID
    long ACTION_PLAY_FROM_SEARCH -> ACTION_PLAY_FROM_SEARCH
    long ACTION_SKIP_TO_QUEUE_ITEM -> ACTION_SKIP_TO_QUEUE_ITEM
    int STATE_NONE -> STATE_NONE
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_ERROR -> STATE_ERROR
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    long PLAYBACK_POSITION_UNKNOWN -> PLAYBACK_POSITION_UNKNOWN
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mSpeed -> mSpeed
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    java.lang.Object mStateObj -> mStateObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getState() -> getState
    long getPosition() -> getPosition
    long getBufferedPosition() -> getBufferedPosition
    float getPlaybackSpeed() -> getPlaybackSpeed
    long getActions() -> getActions
    java.lang.CharSequence getErrorMessage() -> getErrorMessage
    long getLastPositionUpdateTime() -> getLastPositionUpdateTime
    android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    java.lang.Object getPlaybackState() -> getPlaybackState
    int access$100(android.support.v4.media.session.PlaybackStateCompat) -> access$100
    long access$200(android.support.v4.media.session.PlaybackStateCompat) -> access$200
    float access$300(android.support.v4.media.session.PlaybackStateCompat) -> access$300
    long access$400(android.support.v4.media.session.PlaybackStateCompat) -> access$400
    long access$500(android.support.v4.media.session.PlaybackStateCompat) -> access$500
    long access$600(android.support.v4.media.session.PlaybackStateCompat) -> access$600
    java.lang.CharSequence access$700(android.support.v4.media.session.PlaybackStateCompat) -> access$700
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$Builder:
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mRate -> mRate
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    void setState(int,long,float) -> setState
    void setBufferedPosition(long) -> setBufferedPosition
    void setActions(long) -> setActions
    void setErrorMessage(java.lang.CharSequence) -> setErrorMessage
    android.support.v4.media.session.PlaybackStateCompat build() -> build
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    int getState(java.lang.Object) -> getState
    long getPosition(java.lang.Object) -> getPosition
    long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    long getActions(java.lang.Object) -> getActions
    java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long) -> newInstance
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.AsyncTaskCompat -> android.support.v4.os.AsyncTaskCompat:
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.AsyncTaskCompatHoneycomb -> android.support.v4.os.AsyncTaskCompatHoneycomb:
    void executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$OnPrintFinishCallback -> android.support.v4.print.PrintHelper$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void onFinish() -> onFinish
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback -> android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.provider.DocumentFile -> android.support.v4.provider.DocumentFile:
    java.lang.String TAG -> TAG
    android.support.v4.provider.DocumentFile mParent -> mParent
    android.support.v4.provider.DocumentFile fromFile(java.io.File) -> fromFile
    android.support.v4.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    android.support.v4.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    android.support.v4.provider.DocumentFile getParentFile() -> getParentFile
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    android.support.v4.provider.DocumentFile findFile(java.lang.String) -> findFile
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.DocumentsContractApi19 -> android.support.v4.provider.DocumentsContractApi19:
    java.lang.String TAG -> TAG
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    java.lang.String getName(android.content.Context,android.net.Uri) -> getName
    java.lang.String getRawType(android.content.Context,android.net.Uri) -> getRawType
    java.lang.String getType(android.content.Context,android.net.Uri) -> getType
    boolean isDirectory(android.content.Context,android.net.Uri) -> isDirectory
    boolean isFile(android.content.Context,android.net.Uri) -> isFile
    long lastModified(android.content.Context,android.net.Uri) -> lastModified
    long length(android.content.Context,android.net.Uri) -> length
    boolean canRead(android.content.Context,android.net.Uri) -> canRead
    boolean canWrite(android.content.Context,android.net.Uri) -> canWrite
    boolean delete(android.content.Context,android.net.Uri) -> delete
    boolean exists(android.content.Context,android.net.Uri) -> exists
    java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> queryForString
    int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> queryForInt
    long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> queryForLong
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.DocumentsContractApi21 -> android.support.v4.provider.DocumentsContractApi21:
    java.lang.String TAG -> TAG
    android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> createFile
    android.net.Uri createDirectory(android.content.Context,android.net.Uri,java.lang.String) -> createDirectory
    android.net.Uri prepareTreeUri(android.net.Uri) -> prepareTreeUri
    android.net.Uri[] listFiles(android.content.Context,android.net.Uri) -> listFiles
    android.net.Uri renameTo(android.content.Context,android.net.Uri,java.lang.String) -> renameTo
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.RawDocumentFile -> android.support.v4.provider.RawDocumentFile:
    java.io.File mFile -> mFile
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
    java.lang.String getTypeForName(java.lang.String) -> getTypeForName
    boolean deleteContents(java.io.File) -> deleteContents
android.support.v4.provider.SingleDocumentFile -> android.support.v4.provider.SingleDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.TreeDocumentFile -> android.support.v4.provider.TreeDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.speech.tts.TextToSpeechICS -> android.support.v4.speech.tts.TextToSpeechICS:
    java.lang.String TAG -> TAG
    android.speech.tts.TextToSpeech construct(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String) -> construct
android.support.v4.speech.tts.TextToSpeechICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1:
    java.lang.String KEY_FEATURE_EMBEDDED_SYNTHESIS -> KEY_FEATURE_EMBEDDED_SYNTHESIS
    java.lang.String KEY_FEATURE_NETWORK_SYNTHESIS -> KEY_FEATURE_NETWORK_SYNTHESIS
    java.util.Set getFeatures(android.speech.tts.TextToSpeech,java.util.Locale) -> getFeatures
    void setUtteranceProgressListener(android.speech.tts.TextToSpeech,android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> setUtteranceProgressListener
android.support.v4.speech.tts.TextToSpeechICSMR1$1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$1:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void onStart(java.lang.String) -> onStart
    void onError(java.lang.String) -> onError
    void onDone(java.lang.String) -> onDone
android.support.v4.speech.tts.TextToSpeechICSMR1$2 -> android.support.v4.speech.tts.TextToSpeechICSMR1$2:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1:
    void onDone(java.lang.String) -> onDone
    void onError(java.lang.String) -> onError
    void onStart(java.lang.String) -> onStart
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    void resize(int) -> resize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pair -> android.support.v4.util.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    boolean equals(java.lang.Object) -> equals
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    int hashCode() -> hashCode
    android.support.v4.util.Pair create(java.lang.Object,java.lang.Object) -> create
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.OnApplyWindowInsetsListener:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$Api21ViewCompatImpl -> android.support.v4.view.ViewCompat$Api21ViewCompatImpl:
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> bindTempDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    java.lang.reflect.Field mAccessibilityDelegateField -> mAccessibilityDelegateField
    boolean accessibilityDelegateCheckFailed -> accessibilityDelegateCheckFailed
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompatApi21 -> android.support.v4.view.ViewCompatApi21:
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompatApi21$1 -> android.support.v4.view.ViewCompatApi21$1:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> val$listener
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> sChildrenDrawingOrderMethod
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatICS -> android.support.v4.view.ViewConfigurationCompatICS:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl:
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompatApi21 -> android.support.v4.view.ViewGroupCompatApi21:
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    java.lang.Runnable mStartAction -> mStartAction
    java.lang.Runnable mEndAction -> mEndAction
    int mOldLayerType -> mOldLayerType
    int LISTENER_TAG_ID -> LISTENER_TAG_ID
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    java.lang.Runnable access$002(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$002
    java.lang.Runnable access$102(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$102
    java.lang.Runnable access$100(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$100
    java.lang.Runnable access$000(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$000
    int access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> access$402
    int access$400(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$400
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$1:
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mStarterMap -> mStarterMap
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> startAnimation
    void removeStartMessage(android.view.View) -> removeStartMessage
    void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> postStartMessage
    void access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> access$200
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter:
    java.lang.ref.WeakReference mViewRef -> mViewRef
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mLayerMap -> mLayerMap
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl:
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatJB$1 -> android.support.v4.view.ViewPropertyAnimatorCompatJB$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompatKK -> android.support.v4.view.ViewPropertyAnimatorCompatKK:
    void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatKK$1 -> android.support.v4.view.ViewPropertyAnimatorCompatKK$1:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.ViewPropertyAnimatorListenerAdapter:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.ViewPropertyAnimatorUpdateListener:
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.WindowInsetsCompat:
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
android.support.v4.view.WindowInsetsCompatApi21 -> android.support.v4.view.WindowInsetsCompatApi21:
    android.view.WindowInsets mSource -> mSource
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    android.view.WindowInsets unwrap() -> unwrap
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setScrollable(android.view.accessibility.AccessibilityEvent,boolean) -> setScrollable
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    int ACTION_SET_TEXT -> ACTION_SET_TEXT
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE -> ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    java.util.List getActionList() -> getActionList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    java.lang.Object mAction -> mAction
    int getId() -> getId
    java.lang.CharSequence getLabel() -> getLabel
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl:
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    int SELECTION_MODE_NONE -> SELECTION_MODE_NONE
    int SELECTION_MODE_SINGLE -> SELECTION_MODE_SINGLE
    int SELECTION_MODE_MULTIPLE -> SELECTION_MODE_MULTIPLE
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    boolean isHierarchical() -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    int getColumnIndex() -> getColumnIndex
    int getColumnSpan() -> getColumnSpan
    int getRowIndex() -> getRowIndex
    int getRowSpan() -> getRowSpan
    boolean isHeading() -> isHeading
    boolean isSelected() -> isSelected
    java.lang.Object access$200(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> access$200
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    int RANGE_TYPE_INT -> RANGE_TYPE_INT
    int RANGE_TYPE_FLOAT -> RANGE_TYPE_FLOAT
    int RANGE_TYPE_PERCENT -> RANGE_TYPE_PERCENT
    java.lang.Object mInfo -> mInfo
    float getCurrent() -> getCurrent
    float getMax() -> getMax
    float getMin() -> getMin
    int getType() -> getType
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21:
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$AccessibilityAction -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$AccessibilityAction:
    int getId(java.lang.Object) -> getId
    java.lang.CharSequence getLabel(java.lang.Object) -> getLabel
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo:
    boolean isSelected(java.lang.Object) -> isSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> obtainCollectionItemInfo
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo:
    int getColumnCount(java.lang.Object) -> getColumnCount
    int getRowCount(java.lang.Object) -> getRowCount
    boolean isHierarchical(java.lang.Object) -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo:
    int getColumnIndex(java.lang.Object) -> getColumnIndex
    int getColumnSpan(java.lang.Object) -> getColumnSpan
    int getRowIndex(java.lang.Object) -> getRowIndex
    int getRowSpan(java.lang.Object) -> getRowSpan
    boolean isHeading(java.lang.Object) -> isHeading
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo:
    float getCurrent(java.lang.Object) -> getCurrent
    float getMax(java.lang.Object) -> getMax
    float getMin(java.lang.Object) -> getMin
    int getType(java.lang.Object) -> getType
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> INSTANCE
    float[] VALUES -> VALUES
    float STEP_SIZE -> STEP_SIZE
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.CircleImageView -> android.support.v4.widget.CircleImageView:
    int KEY_SHADOW_COLOR -> KEY_SHADOW_COLOR
    int FILL_SHADOW_COLOR -> FILL_SHADOW_COLOR
    float X_OFFSET -> X_OFFSET
    float Y_OFFSET -> Y_OFFSET
    float SHADOW_RADIUS -> SHADOW_RADIUS
    int SHADOW_ELEVATION -> SHADOW_ELEVATION
    android.view.animation.Animation$AnimationListener mListener -> mListener
    int mShadowRadius -> mShadowRadius
    boolean elevationSupported() -> elevationSupported
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColor(int) -> setBackgroundColor
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.CircleImageView$OvalShadow:
    android.graphics.RadialGradient mRadialGradient -> mRadialGradient
    int mShadowRadius -> mShadowRadius
    android.graphics.Paint mShadowPaint -> mShadowPaint
    int mCircleDiameter -> mCircleDiameter
    android.support.v4.widget.CircleImageView this$0 -> this$0
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    android.graphics.drawable.Drawable mStatusBarBackground -> mStatusBarBackground
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    java.lang.Object mLastInsets -> mLastInsets
    boolean mDrawStatusBarBackground -> mDrawStatusBarBackground
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> IMPL
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    int[] access$100() -> access$100
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> access$200
    boolean access$300(android.view.View) -> access$300
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.DrawerLayoutCompatApi21:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener:
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.DrawerLayoutImpl:
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.MaterialProgressDrawable -> android.support.v4.widget.MaterialProgressDrawable:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> LINEAR_INTERPOLATOR
    android.view.animation.Interpolator END_CURVE_INTERPOLATOR -> END_CURVE_INTERPOLATOR
    android.view.animation.Interpolator START_CURVE_INTERPOLATOR -> START_CURVE_INTERPOLATOR
    android.view.animation.Interpolator EASE_INTERPOLATOR -> EASE_INTERPOLATOR
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    float CENTER_RADIUS -> CENTER_RADIUS
    float STROKE_WIDTH -> STROKE_WIDTH
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float CENTER_RADIUS_LARGE -> CENTER_RADIUS_LARGE
    float STROKE_WIDTH_LARGE -> STROKE_WIDTH_LARGE
    int[] COLORS -> COLORS
    int ANIMATION_DURATION -> ANIMATION_DURATION
    float NUM_POINTS -> NUM_POINTS
    java.util.ArrayList mAnimators -> mAnimators
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> mRing
    float mRotation -> mRotation
    int ARROW_WIDTH -> ARROW_WIDTH
    int ARROW_HEIGHT -> ARROW_HEIGHT
    float ARROW_OFFSET_ANGLE -> ARROW_OFFSET_ANGLE
    int ARROW_WIDTH_LARGE -> ARROW_WIDTH_LARGE
    int ARROW_HEIGHT_LARGE -> ARROW_HEIGHT_LARGE
    float MAX_PROGRESS_ARC -> MAX_PROGRESS_ARC
    android.content.res.Resources mResources -> mResources
    android.view.View mParent -> mParent
    android.view.animation.Animation mAnimation -> mAnimation
    float mRotationCount -> mRotationCount
    double mWidth -> mWidth
    double mHeight -> mHeight
    android.view.animation.Animation mFinishAnimation -> mFinishAnimation
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    void setSizeParameters(double,double,double,double,float,float) -> setSizeParameters
    void updateSizes(int) -> updateSizes
    void showArrow(boolean) -> showArrow
    void setArrowScale(float) -> setArrowScale
    void setStartEndTrim(float,float) -> setStartEndTrim
    void setProgressRotation(float) -> setProgressRotation
    void setBackgroundColor(int) -> setBackgroundColor
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    void setupAnimators() -> setupAnimators
    android.view.animation.Animation access$200(android.support.v4.widget.MaterialProgressDrawable) -> access$200
    android.view.View access$300(android.support.v4.widget.MaterialProgressDrawable) -> access$300
    android.view.animation.Interpolator access$400() -> access$400
    android.view.animation.Interpolator access$500() -> access$500
    float access$600(android.support.v4.widget.MaterialProgressDrawable) -> access$600
    float access$602(android.support.v4.widget.MaterialProgressDrawable,float) -> access$602
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.v4.widget.MaterialProgressDrawable$1:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.v4.widget.MaterialProgressDrawable$2:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.v4.widget.MaterialProgressDrawable$3:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$4 -> android.support.v4.widget.MaterialProgressDrawable$4:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$5 -> android.support.v4.widget.MaterialProgressDrawable$5:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.widget.MaterialProgressDrawable$EndCurveInterpolator -> android.support.v4.widget.MaterialProgressDrawable$EndCurveInterpolator:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize -> android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize:
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.v4.widget.MaterialProgressDrawable$Ring:
    android.graphics.RectF mTempBounds -> mTempBounds
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mArrowPaint -> mArrowPaint
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    float mStartTrim -> mStartTrim
    float mEndTrim -> mEndTrim
    float mRotation -> mRotation
    float mStrokeWidth -> mStrokeWidth
    float mStrokeInset -> mStrokeInset
    int[] mColors -> mColors
    int mColorIndex -> mColorIndex
    float mStartingStartTrim -> mStartingStartTrim
    float mStartingEndTrim -> mStartingEndTrim
    float mStartingRotation -> mStartingRotation
    boolean mShowArrow -> mShowArrow
    android.graphics.Path mArrow -> mArrow
    float mArrowScale -> mArrowScale
    double mRingCenterRadius -> mRingCenterRadius
    int mArrowWidth -> mArrowWidth
    int mArrowHeight -> mArrowHeight
    int mAlpha -> mAlpha
    android.graphics.Paint mCirclePaint -> mCirclePaint
    int mBackgroundColor -> mBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    void setArrowDimensions(float,float) -> setArrowDimensions
    void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> drawTriangle
    void setColors(int[]) -> setColors
    void setColorIndex(int) -> setColorIndex
    void goToNextColor() -> goToNextColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStartTrim(float) -> setStartTrim
    float getStartTrim() -> getStartTrim
    float getStartingStartTrim() -> getStartingStartTrim
    float getStartingEndTrim() -> getStartingEndTrim
    void setEndTrim(float) -> setEndTrim
    float getEndTrim() -> getEndTrim
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setInsets(int,int) -> setInsets
    float getInsets() -> getInsets
    void setCenterRadius(double) -> setCenterRadius
    double getCenterRadius() -> getCenterRadius
    void setShowArrow(boolean) -> setShowArrow
    void setArrowScale(float) -> setArrowScale
    float getStartingRotation() -> getStartingRotation
    void storeOriginals() -> storeOriginals
    void resetOriginals() -> resetOriginals
    void invalidateSelf() -> invalidateSelf
android.support.v4.widget.MaterialProgressDrawable$StartCurveInterpolator -> android.support.v4.widget.MaterialProgressDrawable$StartCurveInterpolator:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    android.support.v4.widget.PopupWindowCompat$PopupWindowImpl IMPL -> IMPL
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$PopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompatKitKat -> android.support.v4.widget.PopupWindowCompatKitKat:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.String TAG -> TAG
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> access$800
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$1000
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> access$1100
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_ALPHA -> MAX_ALPHA
    int STARTING_PROGRESS_ALPHA -> STARTING_PROGRESS_ALPHA
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    int INVALID_POINTER -> INVALID_POINTER
    float DRAG_RATE -> DRAG_RATE
    float MAX_PROGRESS_ANGLE -> MAX_PROGRESS_ANGLE
    int SCALE_DOWN_DURATION -> SCALE_DOWN_DURATION
    int ALPHA_ANIMATION_DURATION -> ALPHA_ANIMATION_DURATION
    int ANIMATE_TO_TRIGGER_DURATION -> ANIMATE_TO_TRIGGER_DURATION
    int ANIMATE_TO_START_DURATION -> ANIMATE_TO_START_DURATION
    int CIRCLE_BG_LIGHT -> CIRCLE_BG_LIGHT
    int DEFAULT_CIRCLE_TARGET -> DEFAULT_CIRCLE_TARGET
    android.view.View mTarget -> mTarget
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mTotalDragDistance -> mTotalDragDistance
    int mMediumAnimationDuration -> mMediumAnimationDuration
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    boolean mOriginalOffsetCalculated -> mOriginalOffsetCalculated
    float mInitialMotionY -> mInitialMotionY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mScale -> mScale
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.CircleImageView mCircleView -> mCircleView
    int mCircleViewIndex -> mCircleViewIndex
    int mFrom -> mFrom
    float mStartingScale -> mStartingScale
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.MaterialProgressDrawable mProgress -> mProgress
    android.view.animation.Animation mScaleAnimation -> mScaleAnimation
    android.view.animation.Animation mScaleDownAnimation -> mScaleDownAnimation
    android.view.animation.Animation mAlphaStartAnimation -> mAlphaStartAnimation
    android.view.animation.Animation mAlphaMaxAnimation -> mAlphaMaxAnimation
    android.view.animation.Animation mScaleDownToStartAnimation -> mScaleDownToStartAnimation
    float mSpinnerFinalOffset -> mSpinnerFinalOffset
    boolean mNotify -> mNotify
    int mCircleWidth -> mCircleWidth
    int mCircleHeight -> mCircleHeight
    boolean mUsingCustomStart -> mUsingCustomStart
    android.view.animation.Animation$AnimationListener mRefreshListener -> mRefreshListener
    android.view.animation.Animation mAnimateToCorrectPosition -> mAnimateToCorrectPosition
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    void setSize(int) -> setSize
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> createProgressView
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    boolean isAlphaUsedForScale() -> isAlphaUsedForScale
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> setRefreshing
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    float getMotionEventY(android.view.MotionEvent,int) -> getMotionEventY
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void moveToStart(float) -> moveToStart
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    void setTargetOffsetTopAndBottom(int,boolean) -> setTargetOffsetTopAndBottom
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    android.support.v4.widget.MaterialProgressDrawable access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    boolean access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener access$300(android.support.v4.widget.SwipeRefreshLayout) -> access$300
    android.support.v4.widget.CircleImageView access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    void access$500(android.support.v4.widget.SwipeRefreshLayout,int) -> access$500
    boolean access$600(android.support.v4.widget.SwipeRefreshLayout) -> access$600
    void access$700(android.support.v4.widget.SwipeRefreshLayout,float) -> access$700
    int access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    void access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> access$900
    int access$802(android.support.v4.widget.SwipeRefreshLayout,int) -> access$802
    void access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> access$1000
    boolean access$1100(android.support.v4.widget.SwipeRefreshLayout) -> access$1100
    float access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    void access$1300(android.support.v4.widget.SwipeRefreshLayout,float) -> access$1300
    float access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    int val$startingAlpha -> val$startingAlpha
    int val$endingAlpha -> val$endingAlpha
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.SwipeRefreshLayout$7:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.SwipeRefreshLayout$8:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
cmcc.mhealth.ble.BasePedometorSummary -> cmcc.mhealth.ble.BasePedometorSummary:
    java.util.List pedListM -> pedListM
    java.util.List pedListH -> pedListH
    java.util.List pedListD -> pedListD
    java.util.List subList -> subList
    java.lang.String power -> power
    java.lang.String cal -> cal
    java.lang.String stepNum -> stepNum
    java.lang.String distance -> distance
    java.lang.String strength1 -> strength1
    java.lang.String strength2 -> strength2
    java.lang.String strength3 -> strength3
    java.lang.String strength4 -> strength4
    java.lang.String transType -> transType
    java.lang.String yxbssum -> yxbssum
    java.lang.String yxbs -> yxbs
    java.lang.String date -> date
    java.lang.String typeScale -> typeScale
    java.lang.String startSyncTime -> startSyncTime
    int hour -> hour
    int day -> day
    java.util.Calendar calendar -> calendar
    void initBasePedometorSummary() -> initBasePedometorSummary
    void setBasePedometorSummary(int,int,int,int,int,java.util.Date,int,int) -> setBasePedometorSummary
    void setDailyPedometorSummary(int,int,int,int,int,java.util.Date,int,int) -> setDailyPedometorSummary
    void setPedometorSubData(int,int,int,int,int) -> setPedometorSubData
    cmcc.mhealth.ble.BasePedometorSummary$PedometorSession getPedometorSession(java.lang.String) -> getPedometorSession
cmcc.mhealth.ble.BasePedometorSummary$PedometorSession -> cmcc.mhealth.ble.BasePedometorSummary$PedometorSession:
    java.lang.String TAG -> TAG
    java.util.List pedSession -> pedSession
    java.lang.String date -> date
    java.lang.String deviceID -> deviceID
    cmcc.mhealth.ble.BasePedometorSummary this$0 -> this$0
cmcc.mhealth.ble.BasePedometorSummary$PedometorSubData -> cmcc.mhealth.ble.BasePedometorSummary$PedometorSubData:
    java.lang.String createTime -> createTime
    java.util.List data -> data
    java.lang.String flagtypeScale -> flagtypeScale
    cmcc.mhealth.ble.BasePedometorSummary this$0 -> this$0
cmcc.mhealth.ble.BaseSleepSummary -> cmcc.mhealth.ble.BaseSleepSummary:
    int[] result -> result
    int resultAvaileLength -> resultAvaileLength
    int startsleepHour -> startsleepHour
    int startsleepMin -> startsleepMin
    int fallasleepHour -> fallasleepHour
    int fallasleepMin -> fallasleepMin
    int endsleepHour -> endsleepHour
    int endsleepMin -> endsleepMin
    int sleepResult -> sleepResult
    int sleepDuration -> sleepDuration
    int sleepEfficiency -> sleepEfficiency
    int fallasleepDuration -> fallasleepDuration
    int awakeTimes -> awakeTimes
    java.util.Date startSleep -> startSleep
    java.util.Date endSleep -> endSleep
    java.util.Date fallAsleep -> fallAsleep
    int TimeDuration(int,int,int,int) -> TimeDuration
    int getSleepEfficiency(int,int) -> getSleepEfficiency
    int getSleepResult() -> getSleepResult
    void sleepDownSample(java.util.Date[],int[]) -> sleepDownSample
    void sleepResult(java.util.Date,java.util.Date,int,int) -> sleepResult
    cmcc.mhealth.ble.BaseSleepSummary getSleepSession() -> getSleepSession
cmccsi.mhealth.app.sports.R -> cmccsi.mhealth.app.sports.R:
cmccsi.mhealth.app.sports.R$anim -> cmccsi.mhealth.app.sports.R$anim:
    int ani_in -> ani_in
    int ani_out -> ani_out
    int big_heart -> big_heart
    int dialog_enter -> dialog_enter
    int dialog_enter_frombottom -> dialog_enter_frombottom
    int dialog_enter_fromtop -> dialog_enter_fromtop
    int dialog_exit -> dialog_exit
    int dialog_exit_frombottom -> dialog_exit_frombottom
    int dialog_exit_fromtop -> dialog_exit_fromtop
    int map_close_anim -> map_close_anim
    int pop_enter -> pop_enter
    int pop_exit -> pop_exit
    int progess_round -> progess_round
    int silde_out_left -> silde_out_left
    int silde_out_right -> silde_out_right
    int slide_from_right_slow -> slide_from_right_slow
    int slide_in_left -> slide_in_left
    int slide_in_right -> slide_in_right
    int slide_to_left_slow -> slide_to_left_slow
    int umeng_socialize_fade_in -> umeng_socialize_fade_in
    int umeng_socialize_fade_out -> umeng_socialize_fade_out
    int umeng_socialize_slide_in_from_bottom -> umeng_socialize_slide_in_from_bottom
    int umeng_socialize_slide_out_from_bottom -> umeng_socialize_slide_out_from_bottom
cmccsi.mhealth.app.sports.R$array -> cmccsi.mhealth.app.sports.R$array:
    int UMageList -> UMageList
    int UMgenderList -> UMgenderList
    int umeng_fb_contact_key_array -> umeng_fb_contact_key_array
    int umeng_fb_contact_type_array -> umeng_fb_contact_type_array
cmccsi.mhealth.app.sports.R$attr -> cmccsi.mhealth.app.sports.R$attr:
    int flingable -> flingable
    int normalColor -> normalColor
    int numberPickerDownButtonStyle -> numberPickerDownButtonStyle
    int numberPickerInputTextStyle -> numberPickerInputTextStyle
    int numberPickerStyle -> numberPickerStyle
    int numberPickerUpButtonStyle -> numberPickerUpButtonStyle
    int offset -> offset
    int overColor -> overColor
    int progressIndicator -> progressIndicator
    int roundHeight -> roundHeight
    int roundWidth -> roundWidth
    int selected -> selected
    int selectedIcon -> selectedIcon
    int selectionDivider -> selectionDivider
    int selectionDividerHeight -> selectionDividerHeight
    int selectionDividersDistance -> selectionDividersDistance
    int solidColor -> solidColor
    int text -> text
    int textAlign -> textAlign
    int textColor -> textColor
    int textSize -> textSize
    int textStyle -> textStyle
    int unselectedIcon -> unselectedIcon
cmccsi.mhealth.app.sports.R$bool -> cmccsi.mhealth.app.sports.R$bool:
    int ga_autoActivityTracking -> ga_autoActivityTracking
    int ga_reportUncaughtExceptions -> ga_reportUncaughtExceptions
cmccsi.mhealth.app.sports.R$color -> cmccsi.mhealth.app.sports.R$color:
    int background -> background
    int black -> black
    int blue -> blue
    int blue_low -> blue_low
    int blueexpandable -> blueexpandable
    int bracelet_normal -> bracelet_normal
    int bracelet_selected -> bracelet_selected
    int brief_centercolor -> brief_centercolor
    int coffee -> coffee
    int color_putong -> color_putong
    int cyan -> cyan
    int font_content_value -> font_content_value
    int font_title -> font_title
    int gold -> gold
    int gold_I -> gold_I
    int gold_II -> gold_II
    int gray -> gray
    int gray0 -> gray0
    int gray2 -> gray2
    int gray3 -> gray3
    int gray4 -> gray4
    int gray_60 -> gray_60
    int green -> green
    int green1 -> green1
    int green_friend -> green_friend
    int light_gray -> light_gray
    int light_orange -> light_orange
    int lucensy -> lucensy
    int menu_gray -> menu_gray
    int mypos -> mypos
    int org_I -> org_I
    int org_IIII -> org_IIII
    int racelist_bg -> racelist_bg
    int red -> red
    int text_gray -> text_gray
    int transparent -> transparent
    int umeng_fb_button_send -> umeng_fb_button_send
    int umeng_fb_gray -> umeng_fb_gray
    int umeng_fb_lightblue -> umeng_fb_lightblue
    int umeng_fb_line -> umeng_fb_line
    int umeng_fb_secondary_text_light -> umeng_fb_secondary_text_light
    int umeng_fb_white -> umeng_fb_white
    int white -> white
cmccsi.mhealth.app.sports.R$dimen -> cmccsi.mhealth.app.sports.R$dimen:
    int achartengine_height -> achartengine_height
    int alphabet_size -> alphabet_size
    int bottom_tab_font_size -> bottom_tab_font_size
    int bottom_tab_padding_drawable -> bottom_tab_padding_drawable
    int bottom_tab_padding_up -> bottom_tab_padding_up
    int height_running_center -> height_running_center
    int map_list_height_blue -> map_list_height_blue
    int map_list_width_blue -> map_list_width_blue
    int margin_left_1 -> margin_left_1
    int margin_top_as_bom -> margin_top_as_bom
    int menu_name_margin_left -> menu_name_margin_left
    int menu_name_size -> menu_name_size
    int size_1 -> size_1
    int text_size_running_date -> text_size_running_date
    int umeng_fb_item_content_size -> umeng_fb_item_content_size
    int umeng_fb_item_height -> umeng_fb_item_height
    int umeng_fb_item_line_height -> umeng_fb_item_line_height
    int umeng_fb_item_time_size -> umeng_fb_item_time_size
    int umeng_fb_spinner_padding_left -> umeng_fb_spinner_padding_left
    int umeng_socialize_pad_window_height -> umeng_socialize_pad_window_height
    int umeng_socialize_pad_window_width -> umeng_socialize_pad_window_width
    int weight_acharview_height -> weight_acharview_height
cmccsi.mhealth.app.sports.R$drawable -> cmccsi.mhealth.app.sports.R$drawable:
    int a -> a
    int add_f_auto -> add_f_auto
    int add_f_contact -> add_f_contact
    int addfriendbutton -> addfriendbutton
    int addfriendbutton_orange -> addfriendbutton_orange
    int alert_icon -> alert_icon
    int arrow -> arrow
    int arrow_error -> arrow_error
    int arrow_normal -> arrow_normal
    int avatar_female_middle -> avatar_female_middle
    int avatar_male_middle -> avatar_male_middle
    int back_button_bg -> back_button_bg
    int background -> background
    int bg_about -> bg_about
    int bg_activity_details -> bg_activity_details
    int bg_btn_addfriend -> bg_btn_addfriend
    int bg_btn_addfriend_cancel -> bg_btn_addfriend_cancel
    int bg_btn_pressed -> bg_btn_pressed
    int bg_button -> bg_button
    int bg_calender_nextmonth -> bg_calender_nextmonth
    int bg_checkbox -> bg_checkbox
    int bg_checkbox_checked -> bg_checkbox_checked
    int bg_checkbox_checked_1 -> bg_checkbox_checked_1
    int bg_checkbox_normal -> bg_checkbox_normal
    int bg_checkbox_normal_1 -> bg_checkbox_normal_1
    int bg_ecg -> bg_ecg
    int bg_ecg_detail -> bg_ecg_detail
    int bg_ev_addfriend_cancle -> bg_ev_addfriend_cancle
    int bg_ev_searchfriend -> bg_ev_searchfriend
    int bg_fake_tab -> bg_fake_tab
    int bg_fake_tab_checked -> bg_fake_tab_checked
    int bg_fake_tab_unchecked -> bg_fake_tab_unchecked
    int bg_gps_cancel -> bg_gps_cancel
    int bg_gps_open -> bg_gps_open
    int bg_gps_round_corner -> bg_gps_round_corner
    int bg_gps_share -> bg_gps_share
    int bg_grid_daren -> bg_grid_daren
    int bg_grid_ecg -> bg_grid_ecg
    int bg_grid_gui -> bg_grid_gui
    int bg_grid_haoyou -> bg_grid_haoyou
    int bg_grid_health -> bg_grid_health
    int bg_grid_jingsai -> bg_grid_jingsai
    int bg_grid_message -> bg_grid_message
    int bg_grid_notifacationmsg -> bg_grid_notifacationmsg
    int bg_his_ecg -> bg_his_ecg
    int bg_layout -> bg_layout
    int bg_layout_round_corner -> bg_layout_round_corner
    int bg_layout_round_corner_2 -> bg_layout_round_corner_2
    int bg_race_bt -> bg_race_bt
    int bg_race_ok_bt -> bg_race_ok_bt
    int bg_rank_headlayout -> bg_rank_headlayout
    int bg_rank_radio -> bg_rank_radio
    int bg_rankid -> bg_rankid
    int bg_round_corner -> bg_round_corner
    int bg_switch -> bg_switch
    int bg_title -> bg_title
    int bg_toggle -> bg_toggle
    int bg_toggle_off -> bg_toggle_off
    int bg_toggle_on -> bg_toggle_on
    int bg_weight_radio_off -> bg_weight_radio_off
    int bg_weight_radio_on -> bg_weight_radio_on
    int blue_arrow_bottom -> blue_arrow_bottom
    int bluetooth_more_selected -> bluetooth_more_selected
    int brief_3 -> brief_3
    int brief_4 -> brief_4
    int brief_radio -> brief_radio
    int brief_radio_2 -> brief_radio_2
    int brief_radio_3 -> brief_radio_3
    int brief_radio_text_color -> brief_radio_text_color
    int btn_addfriend -> btn_addfriend
    int btn_addfriend_orange -> btn_addfriend_orange
    int btn_cancel -> btn_cancel
    int btn_canclefriend -> btn_canclefriend
    int btn_ecg_unenable -> btn_ecg_unenable
    int btn_start_ecg -> btn_start_ecg
    int btn_startrunning -> btn_startrunning
    int btn_startrunning_on -> btn_startrunning_on
    int btn_unstart_ecg -> btn_unstart_ecg
    int btn_unstartrunning -> btn_unstartrunning
    int btn_unstartrunning_on -> btn_unstartrunning_on
    int button_start_running -> button_start_running
    int button_unstart_ecg -> button_unstart_ecg
    int cal_achieve1_normal -> cal_achieve1_normal
    int cal_achieve1_press -> cal_achieve1_press
    int cal_achieve2_normal -> cal_achieve2_normal
    int cal_achieve2_press -> cal_achieve2_press
    int cal_achieve3_normal -> cal_achieve3_normal
    int cal_achieve3_press -> cal_achieve3_press
    int cal_achieve4_normal -> cal_achieve4_normal
    int cal_achieve4_press -> cal_achieve4_press
    int cal_archive_explain -> cal_archive_explain
    int cal_archive_process -> cal_archive_process
    int calender_btn_nextmonth -> calender_btn_nextmonth
    int calender_btn_premonth -> calender_btn_premonth
    int camera_crop_height -> camera_crop_height
    int camera_crop_width -> camera_crop_width
    int cancel_button -> cancel_button
    int cb_friend_add_selector -> cb_friend_add_selector
    int center_round -> center_round
    int checkbox_selector -> checkbox_selector
    int color_race_title -> color_race_title
    int color_tab_indicator -> color_tab_indicator
    int countdown_ring_1 -> countdown_ring_1
    int countdown_ring_22 -> countdown_ring_22
    int cteate_race_reward -> cteate_race_reward
    int cutebottom -> cutebottom
    int cutetitle -> cutetitle
    int day_detail_1 -> day_detail_1
    int day_detail_2 -> day_detail_2
    int day_detail_5 -> day_detail_5
    int device_bracelet -> device_bracelet
    int device_mobile -> device_mobile
    int device_pedo_728 -> device_pedo_728
    int device_pedo_801a -> device_pedo_801a
    int device_pedo_801d -> device_pedo_801d
    int device_pedo_901 -> device_pedo_901
    int dialog_delete_button_cancle_press_shape -> dialog_delete_button_cancle_press_shape
    int dialog_delete_button_cancle_select_share -> dialog_delete_button_cancle_select_share
    int dialog_delete_button_cancle_shape -> dialog_delete_button_cancle_shape
    int dialog_delete_button_press_shape -> dialog_delete_button_press_shape
    int dialog_delete_button_select_share -> dialog_delete_button_select_share
    int dialog_delete_button_shape -> dialog_delete_button_shape
    int dialog_delete_button_sure_press_shape -> dialog_delete_button_sure_press_shape
    int dialog_delete_button_sure_select_share -> dialog_delete_button_sure_select_share
    int dialog_delete_button_sure_shape -> dialog_delete_button_sure_shape
    int dialog_delete_shape -> dialog_delete_shape
    int dialog_set_time_divider -> dialog_set_time_divider
    int display_2 -> display_2
    int drawable_load_error -> drawable_load_error
    int ecg_bpm -> ecg_bpm
    int ecg_hr_detaillogo -> ecg_hr_detaillogo
    int ecg_hrv_detaillogo -> ecg_hrv_detaillogo
    int ecg_level2 -> ecg_level2
    int ecg_level3 -> ecg_level3
    int ecg_level4 -> ecg_level4
    int ecg_level5 -> ecg_level5
    int ecg_level6 -> ecg_level6
    int ecg_mood_detaillogo -> ecg_mood_detaillogo
    int ecg_ringbackground3 -> ecg_ringbackground3
    int friend_contact -> friend_contact
    int goal_title_drawable -> goal_title_drawable
    int grid_achievement -> grid_achievement
    int grid_achievement_selected -> grid_achievement_selected
    int grid_daren -> grid_daren
    int grid_daren_selected -> grid_daren_selected
    int grid_gui -> grid_gui
    int grid_gui_selected -> grid_gui_selected
    int grid_haoyou -> grid_haoyou
    int grid_haoyou_selected -> grid_haoyou_selected
    int grid_health -> grid_health
    int grid_health_selected -> grid_health_selected
    int grid_huodong -> grid_huodong
    int grid_huodong_selected -> grid_huodong_selected
    int grid_jingsai -> grid_jingsai
    int grid_jingsai_selected -> grid_jingsai_selected
    int grid_lishi -> grid_lishi
    int grid_lishi_selected -> grid_lishi_selected
    int grid_message -> grid_message
    int grid_message_selected -> grid_message_selected
    int grid_paiming -> grid_paiming
    int grid_paiming_selected -> grid_paiming_selected
    int grid_qiye -> grid_qiye
    int grid_qiye_selected -> grid_qiye_selected
    int grid_quyu -> grid_quyu
    int grid_quyu_selected -> grid_quyu_selected
    int grid_wight -> grid_wight
    int grid_wight_selected -> grid_wight_selected
    int grid_zhishi -> grid_zhishi
    int grid_zhishi_selected -> grid_zhishi_selected
    int gridecg -> gridecg
    int gridecg_select -> gridecg_select
    int his_item_1 -> his_item_1
    int his_item_1_on -> his_item_1_on
    int his_list_detail -> his_list_detail
    int his_titlebar_huo -> his_titlebar_huo
    int his_titlebar_jiao -> his_titlebar_jiao
    int his_titlebar_time -> his_titlebar_time
    int history_icon -> history_icon
    int history_icon_2 -> history_icon_2
    int home_btn_bg_brief -> home_btn_bg_brief
    int home_btn_bg_d -> home_btn_bg_d
    int home_btn_bg_group -> home_btn_bg_group
    int home_btn_bg_history -> home_btn_bg_history
    int home_btn_bg_more -> home_btn_bg_more
    int home_btn_bg_s -> home_btn_bg_s
    int home_btn_bg_setting -> home_btn_bg_setting
    int hr_abnormal -> hr_abnormal
    int hr_normal -> hr_normal
    int hrv_normal -> hrv_normal
    int i_shang -> i_shang
    int i_shang_notifycation -> i_shang_notifycation
    int ic_dialog_error -> ic_dialog_error
    int ic_launcher -> ic_launcher
    int icon_achievement_beijing -> icon_achievement_beijing
    int icon_achievement_earth -> icon_achievement_earth
    int icon_achievement_huanghe -> icon_achievement_huanghe
    int icon_achievement_marathon -> icon_achievement_marathon
    int icon_achievement_qinghailake -> icon_achievement_qinghailake
    int icon_achievement_taiwan -> icon_achievement_taiwan
    int icon_activity_medal -> icon_activity_medal
    int icon_activity_step -> icon_activity_step
    int icon_checkoff -> icon_checkoff
    int icon_checkon -> icon_checkon
    int icon_down -> icon_down
    int icon_history -> icon_history
    int icon_item_rank -> icon_item_rank
    int icon_notify -> icon_notify
    int icon_notify_ticker -> icon_notify_ticker
    int icon_pedo_cal -> icon_pedo_cal
    int icon_pedo_cal_normal -> icon_pedo_cal_normal
    int icon_pedo_distance -> icon_pedo_distance
    int icon_pedo_distance_normal -> icon_pedo_distance_normal
    int icon_pedo_duration -> icon_pedo_duration
    int icon_pedo_stepnum -> icon_pedo_stepnum
    int icon_rank_foot_transparent -> icon_rank_foot_transparent
    int icon_ranking_transparent -> icon_ranking_transparent
    int icon_search -> icon_search
    int icon_share -> icon_share
    int icon_userpicture -> icon_userpicture
    int icon_warn -> icon_warn
    int image_disconnect -> image_disconnect
    int image_racelist_personal -> image_racelist_personal
    int imageview_activitydetails_avg -> imageview_activitydetails_avg
    int imageview_activitydetails_listicon -> imageview_activitydetails_listicon
    int imageview_racelist_now_right -> imageview_racelist_now_right
    int imageview_racelist_timeclock -> imageview_racelist_timeclock
    int imageview_round_while -> imageview_round_while
    int imageview_share_normal -> imageview_share_normal
    int imageview_share_press -> imageview_share_press
    int img_achievement_beijing -> img_achievement_beijing
    int img_achievement_earth -> img_achievement_earth
    int img_achievement_huanghe -> img_achievement_huanghe
    int img_achievement_marathon -> img_achievement_marathon
    int img_achievement_qinghailake -> img_achievement_qinghailake
    int img_achievement_taiwan -> img_achievement_taiwan
    int img_map_end -> img_map_end
    int img_map_start -> img_map_start
    int img_nike -> img_nike
    int img_ride -> img_ride
    int img_ride_unload -> img_ride_unload
    int img_run -> img_run
    int img_run_unload -> img_run_unload
    int img_setting -> img_setting
    int img_setting_down -> img_setting_down
    int img_walk -> img_walk
    int img_walk_unload -> img_walk_unload
    int indicator_autocrop -> indicator_autocrop
    int introduction_background -> introduction_background
    int iv_navagation_scroll_left -> iv_navagation_scroll_left
    int iv_navagation_scroll_right -> iv_navagation_scroll_right
    int left -> left
    int line_horizontal -> line_horizontal
    int line_vertical -> line_vertical
    int list_focused_holo -> list_focused_holo
    int list_history_bg -> list_history_bg
    int list_history_bg_on -> list_history_bg_on
    int list_longpressed_holo -> list_longpressed_holo
    int list_pressed_holo_dark -> list_pressed_holo_dark
    int list_pressed_holo_light -> list_pressed_holo_light
    int list_selector_background_transition_holo_dark -> list_selector_background_transition_holo_dark
    int list_selector_background_transition_holo_light -> list_selector_background_transition_holo_light
    int list_selector_disabled_holo_dark -> list_selector_disabled_holo_dark
    int list_selector_disabled_holo_light -> list_selector_disabled_holo_light
    int listitem_button_round -> listitem_button_round
    int listitem_popmenu_item -> listitem_popmenu_item
    int listitem_round -> listitem_round
    int listitem_round_bottom -> listitem_round_bottom
    int listitem_round_bottom_normal -> listitem_round_bottom_normal
    int listitem_round_center -> listitem_round_center
    int listitem_round_press -> listitem_round_press
    int listitem_round_up -> listitem_round_up
    int listitem_round_up_bottom -> listitem_round_up_bottom
    int listitem_round_up_normal -> listitem_round_up_normal
    int loading -> loading
    int loading_enter_btn -> loading_enter_btn
    int loading_guid1 -> loading_guid1
    int loading_guid2 -> loading_guid2
    int loading_guid3 -> loading_guid3
    int login_button -> login_button
    int login_button_bg -> login_button_bg
    int login_button_bg_on -> login_button_bg_on
    int login_checked -> login_checked
    int login_click -> login_click
    int login_drawable_passwd -> login_drawable_passwd
    int login_drawable_user -> login_drawable_user
    int login_incur -> login_incur
    int login_input -> login_input
    int login_uncheck -> login_uncheck
    int main_activity_button_img -> main_activity_button_img
    int map_cycle_off -> map_cycle_off
    int map_cycle_on -> map_cycle_on
    int map_gps_q -> map_gps_q
    int map_gps_r -> map_gps_r
    int map_history_altitude -> map_history_altitude
    int map_history_distance -> map_history_distance
    int map_history_run -> map_history_run
    int map_location -> map_location
    int map_max_min -> map_max_min
    int map_min -> map_min
    int map_run_off -> map_run_off
    int map_run_on -> map_run_on
    int map_type_cycle -> map_type_cycle
    int map_type_cycle_on -> map_type_cycle_on
    int map_type_run -> map_type_run
    int map_type_run_on -> map_type_run_on
    int map_type_walk -> map_type_walk
    int map_type_walk_on -> map_type_walk_on
    int map_walk_off -> map_walk_off
    int map_walk_on -> map_walk_on
    int menu_more -> menu_more
    int menuitem_changequipment -> menuitem_changequipment
    int menuitem_share -> menuitem_share
    int mesasgekuw -> mesasgekuw
    int my_button_back -> my_button_back
    int noavatar_middle -> noavatar_middle
    int notificationmsg -> notificationmsg
    int np_numberpicker_down_btn_holo_dark -> np_numberpicker_down_btn_holo_dark
    int np_numberpicker_down_btn_holo_light -> np_numberpicker_down_btn_holo_light
    int np_numberpicker_down_disabled_focused_holo_dark -> np_numberpicker_down_disabled_focused_holo_dark
    int np_numberpicker_down_disabled_focused_holo_light -> np_numberpicker_down_disabled_focused_holo_light
    int np_numberpicker_down_disabled_holo_dark -> np_numberpicker_down_disabled_holo_dark
    int np_numberpicker_down_disabled_holo_light -> np_numberpicker_down_disabled_holo_light
    int np_numberpicker_down_focused_holo_dark -> np_numberpicker_down_focused_holo_dark
    int np_numberpicker_down_focused_holo_light -> np_numberpicker_down_focused_holo_light
    int np_numberpicker_down_longpressed_holo_dark -> np_numberpicker_down_longpressed_holo_dark
    int np_numberpicker_down_longpressed_holo_light -> np_numberpicker_down_longpressed_holo_light
    int np_numberpicker_down_normal_holo_dark -> np_numberpicker_down_normal_holo_dark
    int np_numberpicker_down_normal_holo_light -> np_numberpicker_down_normal_holo_light
    int np_numberpicker_down_pressed_holo_dark -> np_numberpicker_down_pressed_holo_dark
    int np_numberpicker_down_pressed_holo_light -> np_numberpicker_down_pressed_holo_light
    int np_numberpicker_selection_divider -> np_numberpicker_selection_divider
    int np_numberpicker_up_btn_holo_dark -> np_numberpicker_up_btn_holo_dark
    int np_numberpicker_up_btn_holo_light -> np_numberpicker_up_btn_holo_light
    int np_numberpicker_up_disabled_focused_holo_dark -> np_numberpicker_up_disabled_focused_holo_dark
    int np_numberpicker_up_disabled_focused_holo_light -> np_numberpicker_up_disabled_focused_holo_light
    int np_numberpicker_up_disabled_holo_dark -> np_numberpicker_up_disabled_holo_dark
    int np_numberpicker_up_disabled_holo_light -> np_numberpicker_up_disabled_holo_light
    int np_numberpicker_up_focused_holo_dark -> np_numberpicker_up_focused_holo_dark
    int np_numberpicker_up_focused_holo_light -> np_numberpicker_up_focused_holo_light
    int np_numberpicker_up_longpressed_holo_dark -> np_numberpicker_up_longpressed_holo_dark
    int np_numberpicker_up_longpressed_holo_light -> np_numberpicker_up_longpressed_holo_light
    int np_numberpicker_up_normal_holo_dark -> np_numberpicker_up_normal_holo_dark
    int np_numberpicker_up_normal_holo_light -> np_numberpicker_up_normal_holo_light
    int np_numberpicker_up_pressed_holo_dark -> np_numberpicker_up_pressed_holo_dark
    int np_numberpicker_up_pressed_holo_light -> np_numberpicker_up_pressed_holo_light
    int opinion_new_spinner -> opinion_new_spinner
    int p -> p
    int page_indicator -> page_indicator
    int page_indicator_focused -> page_indicator_focused
    int pedo_resettime -> pedo_resettime
    int popup -> popup
    int progress_horizontal -> progress_horizontal
    int progress_percent -> progress_percent
    int progress_round -> progress_round
    int progressbar -> progressbar
    int race_race_item -> race_race_item
    int race_race_item_red -> race_race_item_red
    int race_race_item_state0 -> race_race_item_state0
    int race_race_item_state1 -> race_race_item_state1
    int race_race_item_state2 -> race_race_item_state2
    int racelist_item_select -> racelist_item_select
    int radio_streth_step -> radio_streth_step
    int radio_streth_step_left -> radio_streth_step_left
    int radio_streth_step_left2 -> radio_streth_step_left2
    int radio_streth_step_right -> radio_streth_step_right
    int radio_streth_step_right2 -> radio_streth_step_right2
    int radiobutton_activitydetails_normal -> radiobutton_activitydetails_normal
    int radiobutton_activitydetails_press -> radiobutton_activitydetails_press
    int rank_avg_bg -> rank_avg_bg
    int rank_avg_icon -> rank_avg_icon
    int rank_avg_icon_blue -> rank_avg_icon_blue
    int rank_avg_icon_green -> rank_avg_icon_green
    int rank_avg_icon_group -> rank_avg_icon_group
    int rank_id_frist -> rank_id_frist
    int rank_radio_left -> rank_radio_left
    int rank_radio_step -> rank_radio_step
    int rank_radio_step_right -> rank_radio_step_right
    int rank_radio_streth_step_left -> rank_radio_streth_step_left
    int rank_radio_streth_step_left2 -> rank_radio_streth_step_left2
    int rank_radio_streth_step_right -> rank_radio_streth_step_right
    int rank_radio_streth_step_right2 -> rank_radio_streth_step_right2
    int rank_roundexit_normal -> rank_roundexit_normal
    int rank_text_color -> rank_text_color
    int rankitem_groupname_text_color -> rankitem_groupname_text_color
    int rb_blue_bg -> rb_blue_bg
    int right -> right
    int running_bg_1 -> running_bg_1
    int sample_background -> sample_background
    int sample_button_click_bg -> sample_button_click_bg
    int sample_usercatch_button_ok_bg -> sample_usercatch_button_ok_bg
    int scoreview_left -> scoreview_left
    int select_radiobutton_activitydetails -> select_radiobutton_activitydetails
    int select_shape -> select_shape
    int set_ok_button -> set_ok_button
    int set_state_ok -> set_state_ok
    int set_state_ok_down -> set_state_ok_down
    int setting_more -> setting_more
    int setting_view_line -> setting_view_line
    int shape -> shape
    int shape_spinner -> shape_spinner
    int slide_left_item_down -> slide_left_item_down
    int slide_left_item_exit_down -> slide_left_item_exit_down
    int slide_menu_button_bg -> slide_menu_button_bg
    int slide_menu_button_bg_on -> slide_menu_button_bg_on
    int slidingmenu_8_on -> slidingmenu_8_on
    int sport_other -> sport_other
    int sport_running -> sport_running
    int stress_abnormal -> stress_abnormal
    int stress_normal -> stress_normal
    int switch_btn -> switch_btn
    int switch_off -> switch_off
    int switch_on -> switch_on
    int tab_1 -> tab_1
    int tab_2 -> tab_2
    int tab_3 -> tab_3
    int tab_4 -> tab_4
    int tab_activity -> tab_activity
    int tab_activity_on -> tab_activity_on
    int tab_add_friend -> tab_add_friend
    int tab_brief -> tab_brief
    int tab_brief_on -> tab_brief_on
    int tab_bt -> tab_bt
    int tab_corporation -> tab_corporation
    int tab_friend_search -> tab_friend_search
    int tab_group -> tab_group
    int tab_group_on -> tab_group_on
    int tab_health -> tab_health
    int tab_history -> tab_history
    int tab_history_on -> tab_history_on
    int tab_main -> tab_main
    int tab_main_setting -> tab_main_setting
    int tab_more -> tab_more
    int tab_more_on -> tab_more_on
    int tab_play -> tab_play
    int tab_qiyekongjian -> tab_qiyekongjian
    int tab_qiyekongjian_on -> tab_qiyekongjian_on
    int tab_race_bt -> tab_race_bt
    int tab_race_input -> tab_race_input
    int tab_race_rank_on -> tab_race_rank_on
    int tab_race_rank_up -> tab_race_rank_up
    int tab_race_search -> tab_race_search
    int tab_race_select_type -> tab_race_select_type
    int tab_rank_head -> tab_rank_head
    int tab_setting -> tab_setting
    int tab_setting_on -> tab_setting_on
    int tab_yongdongquan_on -> tab_yongdongquan_on
    int tab_yundongjiankang -> tab_yundongjiankang
    int tab_yundongjiankang_on -> tab_yundongjiankang_on
    int tab_yundongquan -> tab_yundongquan
    int tb_4_720 -> tb_4_720
    int tb_5_720 -> tb_5_720
    int text_color_add_friend -> text_color_add_friend
    int textcolor_while2black -> textcolor_while2black
    int title_bg2 -> title_bg2
    int title_update -> title_update
    int toast_star -> toast_star
    int top_menu -> top_menu
    int top_menu_history -> top_menu_history
    int ui_edittextwithdel_delete -> ui_edittextwithdel_delete
    int unknowfriend -> unknowfriend
    int weight_top_round -> weight_top_round
    int weixin_hy -> weixin_hy
    int weixin_pyq -> weixin_pyq
    int white_search -> white_search
    int xlistview_arrow -> xlistview_arrow
    int yellow_point -> yellow_point
cmccsi.mhealth.app.sports.R$id -> cmccsi.mhealth.app.sports.R$id:
    int ImageView3 -> ImageView3
    int Introduction_delete -> Introduction_delete
    int Introduction_delete_detail -> Introduction_delete_detail
    int Introduction_hrv -> Introduction_hrv
    int Introduction_hrv_detail -> Introduction_hrv_detail
    int LLayout_map -> LLayout_map
    int Progress_center_rote1 -> Progress_center_rote1
    int Progress_center_rote2 -> Progress_center_rote2
    int Progress_heartlevel -> Progress_heartlevel
    int Progress_hr_result -> Progress_hr_result
    int Progress_hrv -> Progress_hrv
    int Progress_rr -> Progress_rr
    int RelativeLayout01 -> RelativeLayout01
    int activity_ecg -> activity_ecg
    int adapter_opinion_isreply -> adapter_opinion_isreply
    int adapter_opinion_time -> adapter_opinion_time
    int adapter_opinion_title -> adapter_opinion_title
    int af_avatar_icon -> af_avatar_icon
    int af_btn_addfriend -> af_btn_addfriend
    int af_btn_canclefriend -> af_btn_canclefriend
    int af_click_me_to_dismiss_search_dialog -> af_click_me_to_dismiss_search_dialog
    int af_etn_keyword -> af_etn_keyword
    int af_friend_info -> af_friend_info
    int af_listview_iv_face -> af_listview_iv_face
    int af_listview_ll_face -> af_listview_ll_face
    int af_listview_rank -> af_listview_rank
    int af_listview_rl_face -> af_listview_rl_face
    int af_ll -> af_ll
    int af_timeshowing -> af_timeshowing
    int af_timeshowingtext -> af_timeshowingtext
    int af_tip -> af_tip
    int am_cancle -> am_cancle
    int am_click_me_to_dismiss_search_dialog -> am_click_me_to_dismiss_search_dialog
    int am_gv1 -> am_gv1
    int am_main_listview -> am_main_listview
    int ar_search_button -> ar_search_button
    int arrow_img -> arrow_img
    int at_details_lin -> at_details_lin
    int biref_main -> biref_main
    int bold -> bold
    int bp_item_time -> bp_item_time
    int bt_OK -> bt_OK
    int btn_cal_achievement -> btn_cal_achievement
    int btn_cancel -> btn_cancel
    int btn_device_add_search -> btn_device_add_search
    int btn_device_setting_update -> btn_device_setting_update
    int btn_dialog_delete_cancle -> btn_dialog_delete_cancle
    int btn_dialog_delete_sure -> btn_dialog_delete_sure
    int btn_dialog_delete_yes -> btn_dialog_delete_yes
    int btn_distance_achievement -> btn_distance_achievement
    int btn_friend_search -> btn_friend_search
    int btn_friend_search_add -> btn_friend_search_add
    int btn_friend_search_cancle -> btn_friend_search_cancle
    int btn_match_contact_add -> btn_match_contact_add
    int btn_match_contact_cancle -> btn_match_contact_cancle
    int btn_ok -> btn_ok
    int btn_openGPS -> btn_openGPS
    int btn_save -> btn_save
    int button -> button
    int button1 -> button1
    int button2 -> button2
    int button3 -> button3
    int buttonText -> buttonText
    int button_add -> button_add
    int button_finish_running -> button_finish_running
    int button_get_location -> button_get_location
    int button_input_bg_back -> button_input_bg_back
    int button_ok -> button_ok
    int button_open_map -> button_open_map
    int button_send -> button_send
    int button_set_height -> button_set_height
    int button_set_weight -> button_set_weight
    int button_stop_running -> button_stop_running
    int cb_friend_add -> cb_friend_add
    int cb_week11 -> cb_week11
    int cb_week12 -> cb_week12
    int cb_week13 -> cb_week13
    int cb_week14 -> cb_week14
    int cb_week15 -> cb_week15
    int cb_week16 -> cb_week16
    int cb_week17 -> cb_week17
    int center -> center
    int centermenu_title_linearLayout_menu_item -> centermenu_title_linearLayout_menu_item
    int chart -> chart
    int chart_hr -> chart_hr
    int chart_hrv -> chart_hrv
    int chart_mood -> chart_mood
    int checkBoxAuto -> checkBoxAuto
    int checkBoxRemember -> checkBoxRemember
    int container_data -> container_data
    int container_stepnumofday -> container_stepnumofday
    int content -> content
    int content_details -> content_details
    int date_day -> date_day
    int date_month -> date_month
    int date_year -> date_year
    int decrement -> decrement
    int detail_title -> detail_title
    int dialog_delete -> dialog_delete
    int dialog_fatburn -> dialog_fatburn
    int dingdang_btn_save -> dingdang_btn_save
    int dingdang_ll_sleep -> dingdang_ll_sleep
    int dingdang_ll_sport -> dingdang_ll_sport
    int dingdang_radio_left -> dingdang_radio_left
    int dingdang_radio_right -> dingdang_radio_right
    int dingdang_tb_sleep -> dingdang_tb_sleep
    int dingdang_tb_sport -> dingdang_tb_sport
    int dingdang_tp_sleep -> dingdang_tp_sleep
    int dingdang_tp_sport -> dingdang_tp_sport
    int discard -> discard
    int divider -> divider
    int divider_rel_center_progress -> divider_rel_center_progress
    int ecg_level -> ecg_level
    int ecg_view_line -> ecg_view_line
    int editPassword -> editPassword
    int edittelphone -> edittelphone
    int edittext_input_your_height -> edittext_input_your_height
    int edittext_input_your_weight -> edittext_input_your_weight
    int edittext_phonenum -> edittext_phonenum
    int edittext_tempcode -> edittext_tempcode
    int edittext_username -> edittext_username
    int et_device_add_id -> et_device_add_id
    int et_friend_search_number -> et_friend_search_number
    int fl_pedoprogress -> fl_pedoprogress
    int flag -> flag
    int forget_UpdatePwd_btn_setting -> forget_UpdatePwd_btn_setting
    int forgetpassword_imageView_photo -> forgetpassword_imageView_photo
    int fragment_webview -> fragment_webview
    int frament_activity -> frament_activity
    int gd_main -> gd_main
    int height_textview -> height_textview
    int history_item_calorie -> history_item_calorie
    int history_item_date -> history_item_date
    int history_item_stepnum -> history_item_stepnum
    int history_title_hot -> history_title_hot
    int history_title_step -> history_title_step
    int hr_chinese -> hr_chinese
    int hr_graph -> hr_graph
    int hr_header -> hr_header
    int hr_imageView4 -> hr_imageView4
    int hr_scroll -> hr_scroll
    int hr_time -> hr_time
    int hrv_chinese -> hrv_chinese
    int iamgeview_activitydetails_avater -> iamgeview_activitydetails_avater
    int iamgeview_null -> iamgeview_null
    int icon_fire -> icon_fire
    int id_tv_loadingmsg -> id_tv_loadingmsg
    int ig_disconnect -> ig_disconnect
    int image -> image
    int imageButton1 -> imageButton1
    int imageButton_enter -> imageButton_enter
    int imageButton_title -> imageButton_title
    int imageButton_title_add -> imageButton_title_add
    int imageView1 -> imageView1
    int imageView2 -> imageView2
    int imageview_avatar -> imageview_avatar
    int imageview_cycle_type -> imageview_cycle_type
    int imageview_id_racelist_now_right -> imageview_id_racelist_now_right
    int imageview_loading_title5 -> imageview_loading_title5
    int imageview_rankidfirst -> imageview_rankidfirst
    int imageview_run_type -> imageview_run_type
    int imageview_wailtype -> imageview_wailtype
    int imageview_walk_type -> imageview_walk_type
    int img_bracelet -> img_bracelet
    int img_heart -> img_heart
    int imgbn_nextdate -> imgbn_nextdate
    int imgbn_predate -> imgbn_predate
    int imgbn_time -> imgbn_time
    int increment -> increment
    int indicator -> indicator
    int is_tv_searchitem -> is_tv_searchitem
    int is_tv_searchitem2 -> is_tv_searchitem2
    int italic -> italic
    int item_header -> item_header
    int iv_alert_icon -> iv_alert_icon
    int iv_device_add_image -> iv_device_add_image
    int iv_friend_add_image -> iv_friend_add_image
    int iv_icon -> iv_icon
    int iv_image_device -> iv_image_device
    int iv_leftday -> iv_leftday
    int iv_loaderror -> iv_loaderror
    int iv_map_gps -> iv_map_gps
    int iv_map_start_gps -> iv_map_start_gps
    int iv_nav_indicator -> iv_nav_indicator
    int iv_nav_left -> iv_nav_left
    int iv_nav_right -> iv_nav_right
    int iv_reset -> iv_reset
    int iv_rightday -> iv_rightday
    int iv_search_friend_image -> iv_search_friend_image
    int iv_showGoal -> iv_showGoal
    int iv_type -> iv_type
    int layout -> layout
    int layout_container -> layout_container
    int layout_content -> layout_content
    int layout_dialog -> layout_dialog
    int layout_head -> layout_head
    int left -> left
    int leftmenu_title_textview_company -> leftmenu_title_textview_company
    int lim_accept_buttom -> lim_accept_buttom
    int lim_avatar -> lim_avatar
    int lim_content -> lim_content
    int lim_groupname -> lim_groupname
    int lim_title -> lim_title
    int line_area2 -> line_area2
    int linealayout_time -> linealayout_time
    int linearLayout1 -> linearLayout1
    int linearLayout2 -> linearLayout2
    int linearLayout3 -> linearLayout3
    int linearLayout_list_item_rank -> linearLayout_list_item_rank
    int linearLayout_loading_title -> linearLayout_loading_title
    int linearLayout_password -> linearLayout_password
    int linearLayout_pedo_brief_title -> linearLayout_pedo_brief_title
    int linearLayout_phone -> linearLayout_phone
    int linearLayout_title_menu -> linearLayout_title_menu
    int linear_null -> linear_null
    int linear_tom -> linear_tom
    int linearguideLayout_loading -> linearguideLayout_loading
    int linearguideLayout_mybottomviewgroup -> linearguideLayout_mybottomviewgroup
    int linearguideLayout_myviewpager -> linearguideLayout_myviewpager
    int linearguideLayout_pedo_brief_title -> linearguideLayout_pedo_brief_title
    int linearlayout_null -> linearlayout_null
    int list_device -> list_device
    int list_sports_history_input -> list_sports_history_input
    int ll_activity_persent -> ll_activity_persent
    int ll_activitydetails_top -> ll_activitydetails_top
    int ll_area_rank -> ll_area_rank
    int ll_bracelet -> ll_bracelet
    int ll_btns -> ll_btns
    int ll_cal_achievement -> ll_cal_achievement
    int ll_campaign_rank_top -> ll_campaign_rank_top
    int ll_company_rank -> ll_company_rank
    int ll_device_add_image -> ll_device_add_image
    int ll_device_notice -> ll_device_notice
    int ll_dialog_content -> ll_dialog_content
    int ll_dialog_delete_buttons -> ll_dialog_delete_buttons
    int ll_ecg_hr -> ll_ecg_hr
    int ll_ecg_hrv -> ll_ecg_hrv
    int ll_ecg_mood -> ll_ecg_mood
    int ll_menu -> ll_menu
    int ll_notice -> ll_notice
    int ll_pedomain -> ll_pedomain
    int ll_rank_activite -> ll_rank_activite
    int ll_rgtype -> ll_rgtype
    int ll_search_friend -> ll_search_friend
    int ll_search_friend_add -> ll_search_friend_add
    int ll_share_details -> ll_share_details
    int ll_sleep -> ll_sleep
    int ll_step -> ll_step
    int ll_tab_group -> ll_tab_group
    int ll_userrankno -> ll_userrankno
    int ll_userstepnum -> ll_userstepnum
    int lli_icon -> lli_icon
    int lli_mainLLlayout -> lli_mainLLlayout
    int lli_name -> lli_name
    int loadingImageView -> loadingImageView
    int lv_achievementTypes -> lv_achievementTypes
    int lv_area_list -> lv_area_list
    int lv_campaign_rank_list -> lv_campaign_rank_list
    int lv_campaignlist -> lv_campaignlist
    int lv_content -> lv_content
    int lv_device_type_list -> lv_device_type_list
    int lv_match_contact -> lv_match_contact
    int lv_popmenu -> lv_popmenu
    int lv_rankinglist -> lv_rankinglist
    int lv_types -> lv_types
    int mHsv -> mHsv
    int mViewPager -> mViewPager
    int mViewPager_group -> mViewPager_group
    int main_tab_corporation -> main_tab_corporation
    int main_tab_group -> main_tab_group
    int main_tab_health -> main_tab_health
    int main_tab_play -> main_tab_play
    int map_history_activity -> map_history_activity
    int map_start -> map_start
    int mh_sample_textview -> mh_sample_textview
    int mmf_iv1 -> mmf_iv1
    int mmf_tv1 -> mmf_tv1
    int mood_director -> mood_director
    int multiple_1 -> multiple_1
    int multiple_2 -> multiple_2
    int multiple_3 -> multiple_3
    int newpwd_ag_edit_setting -> newpwd_ag_edit_setting
    int newpwd_edit_setting -> newpwd_edit_setting
    int nickname_textview -> nickname_textview
    int normal -> normal
    int notification_phone_sendmsg_text -> notification_phone_sendmsg_text
    int np__decrement -> np__decrement
    int np__increment -> np__increment
    int numberpicker_input -> numberpicker_input
    int opinion_list_msgs -> opinion_list_msgs
    int opinion_list_nomsg -> opinion_list_nomsg
    int opinion_new_content -> opinion_new_content
    int opinion_new_phone -> opinion_new_phone
    int opinion_new_title -> opinion_new_title
    int opinion_new_typedict -> opinion_new_typedict
    int opinion_view_Content -> opinion_view_Content
    int opinion_view_feedbackContent -> opinion_view_feedbackContent
    int opinion_view_feedbackTime -> opinion_view_feedbackTime
    int opinion_view_reply -> opinion_view_reply
    int opinion_view_replyTime -> opinion_view_replyTime
    int opinion_view_titel -> opinion_view_titel
    int pager -> pager
    int pcp_pedocalprocess -> pcp_pedocalprocess
    int pgsBar -> pgsBar
    int progress -> progress
    int race_regularprogressbar -> race_regularprogressbar
    int race_textview_group_name -> race_textview_group_name
    int race_textview_member_name -> race_textview_member_name
    int radio0 -> radio0
    int radio1 -> radio1
    int radio2 -> radio2
    int radio3 -> radio3
    int radioGroup1 -> radioGroup1
    int radio_left -> radio_left
    int radio_right -> radio_right
    int radiobutton_group -> radiobutton_group
    int radiobutton_personal -> radiobutton_personal
    int radiogroup_activitydetails -> radiogroup_activitydetails
    int rb_personal -> rb_personal
    int rb_sevendays -> rb_sevendays
    int rb_team -> rb_team
    int rb_yestoday -> rb_yestoday
    int refresh_hint -> refresh_hint
    int refresh_root -> refresh_root
    int refresh_time -> refresh_time
    int refresh_time_layout -> refresh_time_layout
    int registe_RadioButton -> registe_RadioButton
    int registe_button_ok -> registe_button_ok
    int registe_button_sendidentifyingcode -> registe_button_sendidentifyingcode
    int registe_edittext_identifyingcode -> registe_edittext_identifyingcode
    int registe_edittext_password -> registe_edittext_password
    int registe_edittext_password2 -> registe_edittext_password2
    int registe_edittext_phonenum -> registe_edittext_phonenum
    int registe_edittext_username -> registe_edittext_username
    int registe_imageview_photo -> registe_imageview_photo
    int registe_textview_identifyingcode -> registe_textview_identifyingcode
    int registe_textview_node -> registe_textview_node
    int registe_textview_node2 -> registe_textview_node2
    int registe_textview_password -> registe_textview_password
    int registe_textview_password2 -> registe_textview_password2
    int registe_textview_phonenum -> registe_textview_phonenum
    int registe_textview_username -> registe_textview_username
    int regularprogressbar -> regularprogressbar
    int rel_center_progress -> rel_center_progress
    int rel_progress -> rel_progress
    int relativelaouut_start_ecg -> relativelaouut_start_ecg
    int rg_nav_content -> rg_nav_content
    int rg_personal_team -> rg_personal_team
    int rg_time -> rg_time
    int right -> right
    int rl_bracelet_setting -> rl_bracelet_setting
    int rl_container -> rl_container
    int rl_container_delete -> rl_container_delete
    int rl_device_add_type -> rl_device_add_type
    int rl_device_setting_update -> rl_device_setting_update
    int rl_distance_achievement -> rl_distance_achievement
    int rl_leveltitle -> rl_leveltitle
    int rl_match_contact_item -> rl_match_contact_item
    int rl_nav -> rl_nav
    int rl_search_friend_item -> rl_search_friend_item
    int rl_select_type -> rl_select_type
    int rl_setting_clear -> rl_setting_clear
    int rl_step_switch -> rl_step_switch
    int rl_tab -> rl_tab
    int rl_update_time -> rl_update_time
    int rlayout_setting_boot_run -> rlayout_setting_boot_run
    int rlayout_setting_device -> rlayout_setting_device
    int rlayout_setting_help -> rlayout_setting_help
    int save -> save
    int self -> self
    int setting_about -> setting_about
    int setting_aboutIS -> setting_aboutIS
    int setting_area -> setting_area
    int setting_birthday -> setting_birthday
    int setting_exit -> setting_exit
    int setting_face -> setting_face
    int setting_face_image -> setting_face_image
    int setting_feedback -> setting_feedback
    int setting_height -> setting_height
    int setting_my_groupname -> setting_my_groupname
    int setting_nickname -> setting_nickname
    int setting_num -> setting_num
    int setting_phone_num -> setting_phone_num
    int setting_phonenum -> setting_phonenum
    int setting_problem -> setting_problem
    int setting_sport_target -> setting_sport_target
    int setting_sport_target_num -> setting_sport_target_num
    int setting_targer_ok -> setting_targer_ok
    int setting_target_weight -> setting_target_weight
    int setting_update -> setting_update
    int setting_version -> setting_version
    int setting_weight_1 -> setting_weight_1
    int simpleMap -> simpleMap
    int startmap_timer -> startmap_timer
    int stress_chinese -> stress_chinese
    int sw_setting_boot_run -> sw_setting_boot_run
    int sw_startStep -> sw_startStep
    int tab_main_gridview_img -> tab_main_gridview_img
    int tab_main_gridview_text -> tab_main_gridview_text
    int tab_rank_head -> tab_rank_head
    int targetWeight_textview -> targetWeight_textview
    int tb_sleep -> tb_sleep
    int tb_sport -> tb_sport
    int textMessage -> textMessage
    int textTitle -> textTitle
    int textView1 -> textView1
    int textView11 -> textView11
    int textView2 -> textView2
    int textView3 -> textView3
    int textView4 -> textView4
    int textView_comment_dialog -> textView_comment_dialog
    int textView_datatime_dialog -> textView_datatime_dialog
    int textView_day_divide -> textView_day_divide
    int textView_forgetpwd -> textView_forgetpwd
    int textView_hr -> textView_hr
    int textView_hr_av -> textView_hr_av
    int textView_hr_av2 -> textView_hr_av2
    int textView_hr_av3 -> textView_hr_av3
    int textView_hrv -> textView_hrv
    int textView_hrv_av -> textView_hrv_av
    int textView_register -> textView_register
    int textView_stress -> textView_stress
    int textView_stress_av -> textView_stress_av
    int textView_title -> textView_title
    int textView_title_rank -> textView_title_rank
    int textView_username -> textView_username
    int text_mbwcl -> text_mbwcl
    int textivew_textstep1 -> textivew_textstep1
    int textview_HR_BPM2 -> textview_HR_BPM2
    int textview_MOOD -> textview_MOOD
    int textview_activitydetails_avgstep -> textview_activitydetails_avgstep
    int textview_activitydetails_group -> textview_activitydetails_group
    int textview_activitydetails_list1_rankid -> textview_activitydetails_list1_rankid
    int textview_activitydetails_list1_rankid_t -> textview_activitydetails_list1_rankid_t
    int textview_activitydetails_name -> textview_activitydetails_name
    int textview_activitydetails_textrankname -> textview_activitydetails_textrankname
    int textview_altitude -> textview_altitude
    int textview_area -> textview_area
    int textview_birthday -> textview_birthday
    int textview_cal -> textview_cal
    int textview_duration -> textview_duration
    int textview_group_name -> textview_group_name
    int textview_heartlevel -> textview_heartlevel
    int textview_heartlevel_2 -> textview_heartlevel_2
    int textview_hr_dialog -> textview_hr_dialog
    int textview_hrv -> textview_hrv
    int textview_kaluli -> textview_kaluli
    int textview_kilometre -> textview_kilometre
    int textview_map_history_time -> textview_map_history_time
    int textview_member_name -> textview_member_name
    int textview_null -> textview_null
    int textview_percent -> textview_percent
    int textview_race_seq -> textview_race_seq
    int textview_racelist_nowTitle -> textview_racelist_nowTitle
    int textview_racelist_nowdate -> textview_racelist_nowdate
    int textview_racelist_nowperson -> textview_racelist_nowperson
    int textview_rank_seq -> textview_rank_seq
    int textview_rr -> textview_rr
    int textview_rr_2 -> textview_rr_2
    int textview_rr_normal -> textview_rr_normal
    int textview_share_cancel -> textview_share_cancel
    int textview_speed -> textview_speed
    int textview_title_add -> textview_title_add
    int textview_title_add_text -> textview_title_add_text
    int textview_weight -> textview_weight
    int textview_weixin_friends -> textview_weixin_friends
    int textview_weixin_quan -> textview_weixin_quan
    int the_imageview -> the_imageview
    int time_am -> time_am
    int time_hours -> time_hours
    int time_minutes -> time_minutes
    int time_pm -> time_pm
    int time_switcher -> time_switcher
    int title -> title
    int tp_sleep -> tp_sleep
    int tp_sport -> tp_sport
    int tp_week11 -> tp_week11
    int tp_week12 -> tp_week12
    int tp_week13 -> tp_week13
    int tp_week14 -> tp_week14
    int tp_week15 -> tp_week15
    int tp_week16 -> tp_week16
    int tp_week17 -> tp_week17
    int tv_Duration -> tv_Duration
    int tv_Medal -> tv_Medal
    int tv_activity_persent -> tv_activity_persent
    int tv_area -> tv_area
    int tv_area_detail -> tv_area_detail
    int tv_bracelet -> tv_bracelet
    int tv_bracelet_dec -> tv_bracelet_dec
    int tv_cal -> tv_cal
    int tv_campaign_rank_empty -> tv_campaign_rank_empty
    int tv_city -> tv_city
    int tv_comfirmpwd -> tv_comfirmpwd
    int tv_currentEquipment -> tv_currentEquipment
    int tv_customlistdialog_title -> tv_customlistdialog_title
    int tv_descript -> tv_descript
    int tv_device -> tv_device
    int tv_device_add_info -> tv_device_add_info
    int tv_device_add_name -> tv_device_add_name
    int tv_device_add_type -> tv_device_add_type
    int tv_device_setting_text_empty -> tv_device_setting_text_empty
    int tv_device_type_title -> tv_device_type_title
    int tv_dialog_title -> tv_dialog_title
    int tv_displaydate -> tv_displaydate
    int tv_distance -> tv_distance
    int tv_distance_describe -> tv_distance_describe
    int tv_duration_describe -> tv_duration_describe
    int tv_emptyView -> tv_emptyView
    int tv_fileLength -> tv_fileLength
    int tv_fileName -> tv_fileName
    int tv_friend_is_added -> tv_friend_is_added
    int tv_friend_mobile -> tv_friend_mobile
    int tv_friend_name -> tv_friend_name
    int tv_heart -> tv_heart
    int tv_ishang -> tv_ishang
    int tv_list_description -> tv_list_description
    int tv_message -> tv_message
    int tv_newpwd -> tv_newpwd
    int tv_percent -> tv_percent
    int tv_percentstep -> tv_percentstep
    int tv_progress_message -> tv_progress_message
    int tv_progress_prcent -> tv_progress_prcent
    int tv_province -> tv_province
    int tv_ranknull -> tv_ranknull
    int tv_search_friend_mobile -> tv_search_friend_mobile
    int tv_search_friend_name -> tv_search_friend_name
    int tv_setting_boot_run_off -> tv_setting_boot_run_off
    int tv_showGoal -> tv_showGoal
    int tv_sport_target -> tv_sport_target
    int tv_stepNum -> tv_stepNum
    int tv_step_off -> tv_step_off
    int tv_stepnumofday -> tv_stepnumofday
    int tv_stepsum -> tv_stepsum
    int tv_type -> tv_type
    int tv_units -> tv_units
    int tv_user_org -> tv_user_org
    int tv_userrankno -> tv_userrankno
    int tv_userstepnum -> tv_userstepnum
    int tv_version -> tv_version
    int tx_race_finish -> tx_race_finish
    int tx_race_now -> tx_race_now
    int tx_race_soon -> tx_race_soon
    int txtv_time -> txtv_time
    int vPager_race -> vPager_race
    int vp_main -> vp_main
    int webview_calender -> webview_calender
    int webview_help -> webview_help
    int xlistview_footer_content -> xlistview_footer_content
    int xlistview_footer_hint_textview -> xlistview_footer_hint_textview
    int xlistview_footer_progressbar -> xlistview_footer_progressbar
    int xlistview_header_arrow -> xlistview_header_arrow
    int xlistview_header_content -> xlistview_header_content
    int xlistview_header_hint_textview -> xlistview_header_hint_textview
    int xlistview_header_progressbar -> xlistview_header_progressbar
    int xlistview_header_text -> xlistview_header_text
    int xlistview_header_time -> xlistview_header_time
cmccsi.mhealth.app.sports.R$integer -> cmccsi.mhealth.app.sports.R$integer:
    int np_config_longAnimTime -> np_config_longAnimTime
cmccsi.mhealth.app.sports.R$layout -> cmccsi.mhealth.app.sports.R$layout:
    int acticity_running -> acticity_running
    int activity_about -> activity_about
    int activity_area -> activity_area
    int activity_area_item -> activity_area_item
    int activity_bracelet_setting -> activity_bracelet_setting
    int activity_details_new -> activity_details_new
    int activity_device_add -> activity_device_add
    int activity_device_setting -> activity_device_setting
    int activity_dingdang_setting -> activity_dingdang_setting
    int activity_ecg_chart -> activity_ecg_chart
    int activity_ecg_detail1 -> activity_ecg_detail1
    int activity_ecg_new -> activity_ecg_new
    int activity_feed_back -> activity_feed_back
    int activity_forgetpwd -> activity_forgetpwd
    int activity_friend -> activity_friend
    int activity_friend_search -> activity_friend_search
    int activity_list_sports_history -> activity_list_sports_history
    int activity_loading -> activity_loading
    int activity_login -> activity_login
    int activity_main_fragment -> activity_main_fragment
    int activity_main_fragment2 -> activity_main_fragment2
    int activity_map_history_orbit -> activity_map_history_orbit
    int activity_match_contact -> activity_match_contact
    int activity_match_contact_items -> activity_match_contact_items
    int activity_message -> activity_message
    int activity_opinion_list -> activity_opinion_list
    int activity_opinion_new -> activity_opinion_new
    int activity_opinion_view -> activity_opinion_view
    int activity_pedo -> activity_pedo
    int activity_progress_new -> activity_progress_new
    int activity_progressupdate -> activity_progressupdate
    int activity_racelist1 -> activity_racelist1
    int activity_rank_areamenu -> activity_rank_areamenu
    int activity_rank_companymenu -> activity_rank_companymenu
    int activity_ranking -> activity_ranking
    int activity_registe -> activity_registe
    int activity_resetpwd -> activity_resetpwd
    int activity_select_run_type -> activity_select_run_type
    int activity_setting -> activity_setting
    int activity_setting_app -> activity_setting_app
    int activity_setting_targetweight -> activity_setting_targetweight
    int activity_settting_target -> activity_settting_target
    int adapter_opinion_list_item -> adapter_opinion_list_item
    int alertdialog_addfriend -> alertdialog_addfriend
    int alertdialog_message -> alertdialog_message
    int cropimage -> cropimage
    int custom_progress_dialog -> custom_progress_dialog
    int customdialog -> customdialog
    int customlistdialog -> customlistdialog
    int date_picker -> date_picker
    int device_name -> device_name
    int device_type_item -> device_type_item
    int device_type_list -> device_type_list
    int dialog_common_ask -> dialog_common_ask
    int dialog_deflut -> dialog_deflut
    int dialog_delete -> dialog_delete
    int dialog_hrv -> dialog_hrv
    int ecg_dialog -> ecg_dialog
    int fragment_campaign_rank -> fragment_campaign_rank
    int fragment_campaignlist -> fragment_campaignlist
    int fragment_ecg_detail -> fragment_ecg_detail
    int fragment_goal -> fragment_goal
    int fragment_main_grid -> fragment_main_grid
    int fragment_map_orbit -> fragment_map_orbit
    int fragment_rankinglist -> fragment_rankinglist
    int fragment_webview -> fragment_webview
    int frament_activity -> frament_activity
    int hr_activity -> hr_activity
    int imageview -> imageview
    int item_searchlist -> item_searchlist
    int layout_gps_dialog -> layout_gps_dialog
    int list_item_activity_rank -> list_item_activity_rank
    int list_item_detail_race -> list_item_detail_race
    int list_item_device -> list_item_device
    int list_item_friend -> list_item_friend
    int list_item_goal_type -> list_item_goal_type
    int list_item_his -> list_item_his
    int list_item_inviting -> list_item_inviting
    int list_item_map_type -> list_item_map_type
    int list_item_messages -> list_item_messages
    int list_item_rank -> list_item_rank
    int list_item_simpletext -> list_item_simpletext
    int main_menu_frid -> main_menu_frid
    int map_fragment -> map_fragment
    int map_list_item -> map_list_item
    int nav_radiogroup_item -> nav_radiogroup_item
    int notification_phone_sendmsg -> notification_phone_sendmsg
    int notification_phone_step -> notification_phone_step
    int number_picker -> number_picker
    int opinion_simple_spinner_dropdown_item -> opinion_simple_spinner_dropdown_item
    int opinion_spinner_item -> opinion_spinner_item
    int popmenu -> popmenu
    int popup_arrow -> popup_arrow
    int popwindow_wenxininfo_new -> popwindow_wenxininfo_new
    int racelist_expandablelist -> racelist_expandablelist
    int refresh_top_item -> refresh_top_item
    int sample_fragment_blank -> sample_fragment_blank
    int setting_help -> setting_help
    int simple_imagetext_listitem -> simple_imagetext_listitem
    int tab_main_gridview_layout -> tab_main_gridview_layout
    int time_picker -> time_picker
    int title_item -> title_item
    int title_menu -> title_menu
    int title_menu2 -> title_menu2
    int view_basic5 -> view_basic5
    int xlistview_footer -> xlistview_footer
    int xlistview_header -> xlistview_header
cmccsi.mhealth.app.sports.R$string -> cmccsi.mhealth.app.sports.R$string:
    int MESSAGE_AVARAR_SET_SUCCESS -> MESSAGE_AVARAR_SET_SUCCESS
    int MESSAGE_COMFIRM_FAIL -> MESSAGE_COMFIRM_FAIL
    int MESSAGE_COMFIRM_PLSINPUTCODE -> MESSAGE_COMFIRM_PLSINPUTCODE
    int MESSAGE_CROP_FAILED -> MESSAGE_CROP_FAILED
    int MESSAGE_CUSTOMER_INFO_EXCEPTION -> MESSAGE_CUSTOMER_INFO_EXCEPTION
    int MESSAGE_GET_SERVERLIST_FAILED -> MESSAGE_GET_SERVERLIST_FAILED
    int MESSAGE_GOAL_UPLAOD_FAILED -> MESSAGE_GOAL_UPLAOD_FAILED
    int MESSAGE_GPS_NODATA -> MESSAGE_GPS_NODATA
    int MESSAGE_INTERNET_ERROR -> MESSAGE_INTERNET_ERROR
    int MESSAGE_INTERNET_NONE -> MESSAGE_INTERNET_NONE
    int MESSAGE_LOGIN_FALSE -> MESSAGE_LOGIN_FALSE
    int MESSAGE_LOGIN_SUCCESS -> MESSAGE_LOGIN_SUCCESS
    int MESSAGE_NOT_ACTIVITY -> MESSAGE_NOT_ACTIVITY
    int MESSAGE_NO_PEDO_DETAIL -> MESSAGE_NO_PEDO_DETAIL
    int MESSAGE_PASSWORD_ERROE -> MESSAGE_PASSWORD_ERROE
    int MESSAGE_PASSWORD_ISEMPTY -> MESSAGE_PASSWORD_ISEMPTY
    int MESSAGE_PASSWORD_ISTOOLEN -> MESSAGE_PASSWORD_ISTOOLEN
    int MESSAGE_PHONE_ERROR -> MESSAGE_PHONE_ERROR
    int MESSAGE_PHONE_ISEMPTY -> MESSAGE_PHONE_ISEMPTY
    int MESSAGE_PHONE_ISTOOLEN -> MESSAGE_PHONE_ISTOOLEN
    int MESSAGE_PHONE_PASSWORD_EXCEPTION -> MESSAGE_PHONE_PASSWORD_EXCEPTION
    int MESSAGE_SERVER_EXCEPTION -> MESSAGE_SERVER_EXCEPTION
    int MESSAGE_SERVER_EXCEPTION2 -> MESSAGE_SERVER_EXCEPTION2
    int MESSAGE_SERVER_EXCEPTION3 -> MESSAGE_SERVER_EXCEPTION3
    int MESSAGE_SYNCHRO_GPS_FAILED -> MESSAGE_SYNCHRO_GPS_FAILED
    int MESSAGE_SYNCHRO_GPS_SUCCESS -> MESSAGE_SYNCHRO_GPS_SUCCESS
    int MESSAGE_UN_SAVE_DATA -> MESSAGE_UN_SAVE_DATA
    int MESSAGE_UPDATED_VERSION -> MESSAGE_UPDATED_VERSION
    int MESSAGE_UPDATE_FALSE -> MESSAGE_UPDATE_FALSE
    int MESSAGE_UPDATE_PWD_SUCCESS -> MESSAGE_UPDATE_PWD_SUCCESS
    int MESSAGE_UPDATE_SUCCESS -> MESSAGE_UPDATE_SUCCESS
    int MESSAGE_UPLOAD_GPS_SUCCESS -> MESSAGE_UPLOAD_GPS_SUCCESS
    int UMContentTooLong -> UMContentTooLong
    int UMDeleteFeedback -> UMDeleteFeedback
    int UMDeleteMsg -> UMDeleteMsg
    int UMDeleteThread -> UMDeleteThread
    int UMEmptyFbNotAllowed -> UMEmptyFbNotAllowed
    int UMFbList_ListItem_State_Fail -> UMFbList_ListItem_State_Fail
    int UMFbList_ListItem_State_ReSend -> UMFbList_ListItem_State_ReSend
    int UMFbList_ListItem_State_Resending -> UMFbList_ListItem_State_Resending
    int UMFbList_ListItem_State_Sending -> UMFbList_ListItem_State_Sending
    int UMFb_Atom_State_Fail -> UMFb_Atom_State_Fail
    int UMFb_Atom_State_Resending -> UMFb_Atom_State_Resending
    int UMFb_Atom_State_Sending -> UMFb_Atom_State_Sending
    int UMFeedbackContent -> UMFeedbackContent
    int UMFeedbackConversationTitle -> UMFeedbackConversationTitle
    int UMFeedbackGoBack -> UMFeedbackGoBack
    int UMFeedbackGotIt -> UMFeedbackGotIt
    int UMFeedbackListTitle -> UMFeedbackListTitle
    int UMFeedbackSeeDetail -> UMFeedbackSeeDetail
    int UMFeedbackSummit -> UMFeedbackSummit
    int UMFeedbackTitle -> UMFeedbackTitle
    int UMFeedbackUmengTitle -> UMFeedbackUmengTitle
    int UMNewReplyAlertTitle -> UMNewReplyAlertTitle
    int UMNewReplyFlick -> UMNewReplyFlick
    int UMNewReplyHint -> UMNewReplyHint
    int UMNewReplyTitle -> UMNewReplyTitle
    int UMResendFeedback -> UMResendFeedback
    int UMViewFeedback -> UMViewFeedback
    int UMViewThread -> UMViewThread
    int achievement_title -> achievement_title
    int app_name -> app_name
    int avtivity_detials_radiobutton_left -> avtivity_detials_radiobutton_left
    int avtivity_detials_radiobutton_right -> avtivity_detials_radiobutton_right
    int bracelet_setting -> bracelet_setting
    int bracelet_setting_pos -> bracelet_setting_pos
    int bracelet_setting_pos_left -> bracelet_setting_pos_left
    int bracelet_setting_pos_right -> bracelet_setting_pos_right
    int bracelet_setting_reset -> bracelet_setting_reset
    int bracelet_setting_resetsport -> bracelet_setting_resetsport
    int bracelet_setting_sleep -> bracelet_setting_sleep
    int bracelet_setting_sport -> bracelet_setting_sport
    int brief_info -> brief_info
    int dialog_area_message -> dialog_area_message
    int dialog_area_no -> dialog_area_no
    int dialog_area_title -> dialog_area_title
    int dialog_area_yes -> dialog_area_yes
    int ecg_float_zero -> ecg_float_zero
    int ecg_hr_rate -> ecg_hr_rate
    int ecg_int_zero -> ecg_int_zero
    int ecg_month -> ecg_month
    int ecg_my_avg -> ecg_my_avg
    int ecg_pressure -> ecg_pressure
    int ecg_semiannual -> ecg_semiannual
    int ecg_today -> ecg_today
    int ecg_variant -> ecg_variant
    int ecg_week -> ecg_week
    int face_image -> face_image
    int friend_match_contact_add -> friend_match_contact_add
    int friend_match_contact_cancle -> friend_match_contact_cancle
    int friend_search -> friend_search
    int friend_title -> friend_title
    int ga_trackingId -> ga_trackingId
    int global_1 -> global_1
    int global_2 -> global_2
    int global_3 -> global_3
    int global_4 -> global_4
    int global_5 -> global_5
    int global_6 -> global_6
    int global_7 -> global_7
    int global_alert -> global_alert
    int global_cancel -> global_cancel
    int global_ok -> global_ok
    int global_save -> global_save
    int global_week -> global_week
    int hello_world -> hello_world
    int his_title -> his_title
    int history_hot -> history_hot
    int history_uploadtime -> history_uploadtime
    int image_content_description -> image_content_description
    int login_title -> login_title
    int main_setting -> main_setting
    int message_title -> message_title
    int msg_show_club_error -> msg_show_club_error
    int nickname -> nickname
    int np_number_picker_decrement_button -> np_number_picker_decrement_button
    int np_number_picker_increment_button -> np_number_picker_increment_button
    int np_number_picker_increment_scroll_action -> np_number_picker_increment_scroll_action
    int np_number_picker_increment_scroll_mode -> np_number_picker_increment_scroll_mode
    int pedometer_title -> pedometer_title
    int phonestep_uploadfailed -> phonestep_uploadfailed
    int phonestep_uploading -> phonestep_uploading
    int phonestep_uploadsuccess -> phonestep_uploadsuccess
    int pull_to_refresh_pull_label -> pull_to_refresh_pull_label
    int pull_to_refresh_refreshing_label -> pull_to_refresh_refreshing_label
    int pull_to_refresh_release_label -> pull_to_refresh_release_label
    int pull_to_refresh_tap_label -> pull_to_refresh_tap_label
    int racelist_title -> racelist_title
    int rank_textview_1day -> rank_textview_1day
    int rank_textview_7day -> rank_textview_7day
    int setting_bracelet -> setting_bracelet
    int setting_bracelet_dec -> setting_bracelet_dec
    int setting_paired_device -> setting_paired_device
    int share_my_shuju -> share_my_shuju
    int stepnum -> stepnum
    int string_birthday -> string_birthday
    int string_weight -> string_weight
    int telephonenumber -> telephonenumber
    int text_addfriend_find_myself -> text_addfriend_find_myself
    int text_campaign_empty -> text_campaign_empty
    int text_device_setting_empty -> text_device_setting_empty
    int text_device_setting_empty_alone -> text_device_setting_empty_alone
    int text_height -> text_height
    int text_input_target_weight -> text_input_target_weight
    int text_login -> text_login
    int text_remember_password -> text_remember_password
    int text_share_cancel -> text_share_cancel
    int text_show_goal_First_indays -> text_show_goal_First_indays
    int text_show_goal_First_indays_huanghe -> text_show_goal_First_indays_huanghe
    int text_show_goal_First_inhours -> text_show_goal_First_inhours
    int text_show_goal_First_inhours_huanghe -> text_show_goal_First_inhours_huanghe
    int text_show_goal_indays -> text_show_goal_indays
    int text_show_goal_indays_huanghe -> text_show_goal_indays_huanghe
    int text_show_goal_inhours -> text_show_goal_inhours
    int text_show_goal_inhours_huanghe -> text_show_goal_inhours_huanghe
    int text_show_goal_percentage -> text_show_goal_percentage
    int text_target_weight -> text_target_weight
    int text_wait -> text_wait
    int text_zeronum -> text_zeronum
    int textivew_race3 -> textivew_race3
    int textview_aboutapk -> textview_aboutapk
    int textview_autologin -> textview_autologin
    int textview_avgStep -> textview_avgStep
    int textview_binddevice -> textview_binddevice
    int textview_boot_run -> textview_boot_run
    int textview_circle_friend_weixin -> textview_circle_friend_weixin
    int textview_daxiao -> textview_daxiao
    int textview_feedback -> textview_feedback
    int textview_forgetpwd -> textview_forgetpwd
    int textview_friend_weixin -> textview_friend_weixin
    int textview_help -> textview_help
    int textview_input_rank_target -> textview_input_rank_target
    int textview_inspect_version -> textview_inspect_version
    int textview_mygroup -> textview_mygroup
    int textview_packname -> textview_packname
    int textview_race0 -> textview_race0
    int textview_race_now -> textview_race_now
    int textview_rankid -> textview_rankid
    int textview_ranknow -> textview_ranknow
    int textview_runtarget -> textview_runtarget
    int textview_runtarget_describe -> textview_runtarget_describe
    int textview_save -> textview_save
    int textview_share -> textview_share
    int textview_thistext -> textview_thistext
    int textview_version -> textview_version
    int textview_ym_sendtime -> textview_ym_sendtime
    int umeng_common_action_cancel -> umeng_common_action_cancel
    int umeng_common_action_continue -> umeng_common_action_continue
    int umeng_common_action_info_exist -> umeng_common_action_info_exist
    int umeng_common_action_pause -> umeng_common_action_pause
    int umeng_common_download_failed -> umeng_common_download_failed
    int umeng_common_download_notification_prefix -> umeng_common_download_notification_prefix
    int umeng_common_info_interrupt -> umeng_common_info_interrupt
    int umeng_common_network_break_alert -> umeng_common_network_break_alert
    int umeng_fb_back -> umeng_fb_back
    int umeng_fb_change_contact_title -> umeng_fb_change_contact_title
    int umeng_fb_contact_email -> umeng_fb_contact_email
    int umeng_fb_contact_info -> umeng_fb_contact_info
    int umeng_fb_contact_info_hint -> umeng_fb_contact_info_hint
    int umeng_fb_contact_key_email -> umeng_fb_contact_key_email
    int umeng_fb_contact_key_other -> umeng_fb_contact_key_other
    int umeng_fb_contact_key_phone -> umeng_fb_contact_key_phone
    int umeng_fb_contact_key_qq -> umeng_fb_contact_key_qq
    int umeng_fb_contact_other -> umeng_fb_contact_other
    int umeng_fb_contact_phone -> umeng_fb_contact_phone
    int umeng_fb_contact_qq -> umeng_fb_contact_qq
    int umeng_fb_contact_save -> umeng_fb_contact_save
    int umeng_fb_feedback -> umeng_fb_feedback
    int umeng_fb_notification_content_formatter_multiple_msg -> umeng_fb_notification_content_formatter_multiple_msg
    int umeng_fb_notification_content_formatter_single_msg -> umeng_fb_notification_content_formatter_single_msg
    int umeng_fb_notification_ticker_text -> umeng_fb_notification_ticker_text
    int umeng_fb_reply_content_default -> umeng_fb_reply_content_default
    int umeng_fb_send -> umeng_fb_send
    int umeng_fb_send_fail -> umeng_fb_send_fail
    int umeng_fb_sending -> umeng_fb_sending
    int umeng_fb_time_minutes_ago -> umeng_fb_time_minutes_ago
    int umeng_fb_time_pre_year_format -> umeng_fb_time_pre_year_format
    int umeng_fb_time_right_now -> umeng_fb_time_right_now
    int umeng_fb_time_this_year_format -> umeng_fb_time_this_year_format
    int umeng_fb_title -> umeng_fb_title
    int umeng_fb_write_contact_title -> umeng_fb_write_contact_title
    int umeng_socialize_back -> umeng_socialize_back
    int umeng_socialize_comment -> umeng_socialize_comment
    int umeng_socialize_friends -> umeng_socialize_friends
    int umeng_socialize_msg_hor -> umeng_socialize_msg_hor
    int umeng_socialize_msg_min -> umeng_socialize_msg_min
    int umeng_socialize_msg_sec -> umeng_socialize_msg_sec
    int umeng_socialize_near_At -> umeng_socialize_near_At
    int umeng_socialize_network_break_alert -> umeng_socialize_network_break_alert
    int umeng_socialize_send -> umeng_socialize_send
    int umeng_socialize_tip_blacklist -> umeng_socialize_tip_blacklist
    int umeng_socialize_tip_loginfailed -> umeng_socialize_tip_loginfailed
    int umeng_socialize_ucenter_login_title_guide -> umeng_socialize_ucenter_login_title_guide
    int umeng_socialize_ucenter_login_title_platform -> umeng_socialize_ucenter_login_title_platform
    int xlistview_footer_hint_normal -> xlistview_footer_hint_normal
    int xlistview_footer_hint_ready -> xlistview_footer_hint_ready
    int xlistview_header_hint_loading -> xlistview_header_hint_loading
    int xlistview_header_hint_normal -> xlistview_header_hint_normal
    int xlistview_header_hint_ready -> xlistview_header_hint_ready
    int xlistview_header_last_time -> xlistview_header_last_time
cmccsi.mhealth.app.sports.R$style -> cmccsi.mhealth.app.sports.R$style:
    int AiTheme -> AiTheme
    int AiTheme_Light -> AiTheme_Light
    int AiThemeSample -> AiThemeSample
    int AiThemeSample_Light -> AiThemeSample_Light
    int AiWidget -> AiWidget
    int AiWidget_EditText -> AiWidget_EditText
    int AiWidget_EditText_NumberPickerInputText -> AiWidget_EditText_NumberPickerInputText
    int AiWidget_EditText_NumberPickerInputText_Light -> AiWidget_EditText_NumberPickerInputText_Light
    int AiWidget_ImageButton -> AiWidget_ImageButton
    int AiWidget_ImageButton_NumberPickerDownButton -> AiWidget_ImageButton_NumberPickerDownButton
    int AiWidget_ImageButton_NumberPickerDownButton_Light -> AiWidget_ImageButton_NumberPickerDownButton_Light
    int AiWidget_ImageButton_NumberPickerUpButton -> AiWidget_ImageButton_NumberPickerUpButton
    int AiWidget_ImageButton_NumberPickerUpButton_Light -> AiWidget_ImageButton_NumberPickerUpButton_Light
    int AiWidget_Light_NumberPicker -> AiWidget_Light_NumberPicker
    int AiWidget_NumberPicker -> AiWidget_NumberPicker
    int AppTheme -> AppTheme
    int CustomDialog -> CustomDialog
    int CustomProgressDialog -> CustomProgressDialog
    int Dialog_GPS -> Dialog_GPS
    int ListItemTextStyle -> ListItemTextStyle
    int MMTabButton -> MMTabButton
    int MyCheckBox -> MyCheckBox
    int PopupAnimation -> PopupAnimation
    int PopupAnimation2 -> PopupAnimation2
    int Theme_AppStartLoad -> Theme_AppStartLoad
    int Theme_AppStartLoadTranslucent -> Theme_AppStartLoadTranslucent
    int Theme_UMDefault -> Theme_UMDefault
    int Theme_UMDialog -> Theme_UMDialog
    int Widget -> Widget
    int Widget_ProgressBar -> Widget_ProgressBar
    int Widget_ProgressBar_RegularProgressBar -> Widget_ProgressBar_RegularProgressBar
    int activitydetails_list1_rankname -> activitydetails_list1_rankname
    int activitydetails_list1_ranknum -> activitydetails_list1_ranknum
    int activitydetails_list1_text_stepname -> activitydetails_list1_text_stepname
    int activitydetails_list1_textrank -> activitydetails_list1_textrank
    int activitydetails_list1_title -> activitydetails_list1_title
    int activitydetails_list2_image_icon -> activitydetails_list2_image_icon
    int activitydetails_textview_list1_stepnum -> activitydetails_textview_list1_stepnum
    int activitydetials_rank_textdb -> activitydetials_rank_textdb
    int brief_textcolor -> brief_textcolor
    int choicetype -> choicetype
    int customdialog -> customdialog
    int dialog_defult -> dialog_defult
    int dialog_fullscreen -> dialog_fullscreen
    int dialog_notfullscreen -> dialog_notfullscreen
    int dialog_withStatusBar -> dialog_withStatusBar
    int fake_tab_button -> fake_tab_button
    int main_tab_bottom -> main_tab_bottom
    int mystyle -> mystyle
    int mystylebottom -> mystylebottom
    int mystyletop -> mystyletop
    int mytheme -> mytheme
    int notitle -> notitle
    int progressBarHorizontal -> progressBarHorizontal
    int race_radiotitle -> race_radiotitle
    int radioButtonStyle -> radioButtonStyle
    int rank_radoibuttom -> rank_radoibuttom
    int rank_setting_more -> rank_setting_more
    int rank_title -> rank_title
    int setting_item -> setting_item
    int setting_item_and -> setting_item_and
    int setting_item_notclick -> setting_item_notclick
    int text_basic_style -> text_basic_style
    int text_list1_step -> text_list1_step
    int textstyle_weightDetails -> textstyle_weightDetails
    int umeng_socialize_action_bar_item_im -> umeng_socialize_action_bar_item_im
    int umeng_socialize_action_bar_item_tv -> umeng_socialize_action_bar_item_tv
    int umeng_socialize_action_bar_itemlayout -> umeng_socialize_action_bar_itemlayout
    int umeng_socialize_dialog_anim_fade -> umeng_socialize_dialog_anim_fade
    int umeng_socialize_dialog_animations -> umeng_socialize_dialog_animations
    int umeng_socialize_popup_dialog -> umeng_socialize_popup_dialog
    int umeng_socialize_popup_dialog_anim -> umeng_socialize_popup_dialog_anim
cmccsi.mhealth.app.sports.R$styleable -> cmccsi.mhealth.app.sports.R$styleable:
    int[] MapTypeView -> MapTypeView
    int MapTypeView_selected -> MapTypeView_selected
    int MapTypeView_selectedIcon -> MapTypeView_selectedIcon
    int MapTypeView_text -> MapTypeView_text
    int MapTypeView_unselectedIcon -> MapTypeView_unselectedIcon
    int[] NumberPicker -> NumberPicker
    int NumberPicker_android_fadingEdgeLength -> NumberPicker_android_fadingEdgeLength
    int NumberPicker_android_maxHeight -> NumberPicker_android_maxHeight
    int NumberPicker_android_maxWidth -> NumberPicker_android_maxWidth
    int NumberPicker_android_minHeight -> NumberPicker_android_minHeight
    int NumberPicker_android_minWidth -> NumberPicker_android_minWidth
    int NumberPicker_android_orientation -> NumberPicker_android_orientation
    int NumberPicker_flingable -> NumberPicker_flingable
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int[] PictureProcessView -> PictureProcessView
    int PictureProcessView_normalColor -> PictureProcessView_normalColor
    int PictureProcessView_overColor -> PictureProcessView_overColor
    int[] RoundAngleImageView -> RoundAngleImageView
    int RoundAngleImageView_roundHeight -> RoundAngleImageView_roundHeight
    int RoundAngleImageView_roundWidth -> RoundAngleImageView_roundWidth
    int[] SaundProgressBar -> SaundProgressBar
    int SaundProgressBar_offset -> SaundProgressBar_offset
    int SaundProgressBar_progressIndicator -> SaundProgressBar_progressIndicator
    int SaundProgressBar_textAlign -> SaundProgressBar_textAlign
    int SaundProgressBar_textColor -> SaundProgressBar_textColor
    int SaundProgressBar_textSize -> SaundProgressBar_textSize
    int SaundProgressBar_textStyle -> SaundProgressBar_textStyle
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new -> cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new:
    android.widget.ImageButton mImageButtonBack -> f
    java.lang.String mActivityTitle -> g
    android.widget.TextView mTextViewTitleRun -> h
    java.lang.String userNm -> a
    boolean isPersonal -> i
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mProgressDialog -> j
    android.support.v4.view.ViewPager mViewPager -> k
    android.support.v4.view.ViewPager mViewPager_group -> l
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$TabFragmentPagerAdapter mFragmentAdapter -> m
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$TabFragmentPagerAdapter mFragmentAdapter_group -> n
    java.util.List mFtList -> b
    java.util.List mFtList_group -> c
    java.lang.String mActivityId -> o
    android.widget.RadioGroup mRadioGroup -> p
    cmccsi.mhealth.app.sports.bean.ActivityDetailData_new mActivity -> q
    java.util.List mTabTitle -> r
    java.util.List mGroupTabTitle -> s
    android.widget.TextView mTextViewName -> t
    android.widget.TextView mTextViewGroup -> u
    android.widget.TextView mTextViewAvgStep -> v
    android.widget.TextView mTextViewPersent -> w
    android.widget.TextView mtv_list_description -> x
    android.widget.TextView mtv_descript -> y
    android.widget.TextView mtv_Medal -> z
    android.widget.TextView mTextViewlist1RankId -> A
    android.widget.ImageView mImageViewAvater -> B
    android.widget.RadioButton mRadioButtonPersonal -> C
    android.widget.LinearLayout mll_activity_persent -> D
    android.widget.LinearLayout mLlActivitydetailsTop -> E
    int indicatorWidth -> F
    android.widget.RelativeLayout rl_nav -> G
    cmccsi.mhealth.app.sports.view.SyncHorizontalScrollView mHsv -> H
    android.widget.RadioGroup rg_nav_content -> I
    android.widget.ImageView iv_nav_indicator -> J
    android.widget.ImageView iv_nav_left -> K
    android.widget.ImageView iv_nav_right -> L
    int currentIndicatorLeft -> M
    int mFlag -> d
    int mClubId -> e
    java.lang.String mDescription -> N
    android.os.Handler handler -> O
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void loadlogic() -> a
    void getActivityDetail() -> b
    void initView() -> c
    void onStop() -> onStop
    void showDialog(java.lang.String,java.lang.String) -> a
    void showMedalDialog(java.lang.String,java.util.List) -> a
    java.util.List getMedalList(cmccsi.mhealth.app.sports.bean.ActivityDetailData_new) -> a
    void displayActivityDetail(cmccsi.mhealth.app.sports.bean.ActivityDetailData_new,int,boolean) -> a
    void displayPersonOfActivity(cmccsi.mhealth.app.sports.bean.RankListInfo_new,int) -> a
    void initNavigationHSV(java.util.List) -> a
    void initViewPager() -> d
    cmccsi.mhealth.app.sports.view.CustomProgressDialog access$0(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> a
    cmccsi.mhealth.app.sports.bean.ActivityDetailData_new access$1(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> b
    void access$2(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new,java.lang.String) -> a
    void access$3(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new,java.lang.String) -> b
    boolean access$4(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> c
    void access$5(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new,cmccsi.mhealth.app.sports.bean.ActivityDetailData_new,int,boolean) -> a
    android.widget.ImageView access$6(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> d
    void access$7(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> e
    void access$8(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new,cmccsi.mhealth.app.sports.bean.ActivityDetailData_new) -> a
    java.lang.String access$9(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> f
    android.os.Handler access$10(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> g
    java.lang.String access$11(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> h
    void access$12(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new,java.lang.String) -> c
    java.util.List access$13(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new,cmccsi.mhealth.app.sports.bean.ActivityDetailData_new) -> b
    void access$14(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new,java.lang.String,java.util.List) -> a
    void access$15(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new,boolean) -> a
    android.support.v4.view.ViewPager access$16(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> i
    android.support.v4.view.ViewPager access$17(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> j
    android.widget.RadioGroup access$18(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> k
    void access$19(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new,cmccsi.mhealth.app.sports.bean.RankListInfo_new,int) -> a
    int access$20(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> l
    android.widget.ImageView access$21(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> m
    void access$22(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new,int) -> a
    java.util.List access$23(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> n
    cmccsi.mhealth.app.sports.view.SyncHorizontalScrollView access$24(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> o
    java.util.List access$25(cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new) -> p
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$1 -> cmccsi.mhealth.app.sports.activity.a:
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new this$0 -> a
    void dispatchMessage(android.os.Message) -> dispatchMessage
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$2 -> cmccsi.mhealth.app.sports.activity.b:
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$3 -> cmccsi.mhealth.app.sports.activity.c:
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$4 -> cmccsi.mhealth.app.sports.activity.d:
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$5 -> cmccsi.mhealth.app.sports.activity.e:
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$6 -> cmccsi.mhealth.app.sports.activity.f:
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$7 -> cmccsi.mhealth.app.sports.activity.g:
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$8 -> cmccsi.mhealth.app.sports.activity.h:
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$9 -> cmccsi.mhealth.app.sports.activity.i:
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$TabFragmentPagerAdapter -> cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new$TabFragmentPagerAdapter:
    java.util.List mlist -> b
    cmccsi.mhealth.app.sports.activity.CampaignContentActivity_new this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new -> cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new:
    cmccsi.mhealth.app.sports.view.XListView listview -> n
    java.util.List listItems -> o
    java.util.List templistItems -> p
    cmccsi.mhealth.app.sports.adapter.CampaignListAdapter listAdapter -> q
    cmccsi.mhealth.app.sports.bean.ActivityInfo mActivityInfo -> r
    java.lang.String mPhonenum -> s
    java.lang.String mPassword -> t
    int ClubId -> u
    int page -> v
    int type -> w
    java.lang.String userNm -> a
    java.lang.String userId -> b
    android.content.Intent intent -> c
    java.lang.String actividId -> d
    android.os.Handler mhandle -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initViews() -> f
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void setmPhonenum(java.lang.String) -> a
    void setmPassword(java.lang.String) -> b
    void setClubId(int) -> a
    void showDialog(java.lang.String,java.lang.String) -> a
    void getmoreActivity(int,int) -> a
    void onRefresh() -> d
    void onLoadMore() -> e
    int access$0(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> a
    void access$1(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new,int) -> a
    java.util.List access$2(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> b
    int access$3(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> c
    cmccsi.mhealth.app.sports.bean.ActivityInfo access$4(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> d
    void access$5(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new,java.util.List) -> a
    cmccsi.mhealth.app.sports.view.XListView access$6(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> e
    java.util.List access$7(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> f
    cmccsi.mhealth.app.sports.adapter.CampaignListAdapter access$8(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> g
    android.support.v4.app.FragmentActivity access$9(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> h
    java.lang.String access$10(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> i
    java.lang.String access$11(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> j
    int access$12(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new) -> k
    void access$13(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new,java.lang.String) -> a
    void access$14(cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new,int,int) -> a
cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new$1 -> cmccsi.mhealth.app.sports.activity.j:
    cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new$2 -> cmccsi.mhealth.app.sports.activity.k:
    cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new$3 -> cmccsi.mhealth.app.sports.activity.l:
    cmccsi.mhealth.app.sports.activity.CampaignViewFragment_new this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity -> cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity:
    java.lang.Boolean update -> a
    java.lang.String mCurrentFilePath -> c
    java.lang.String mStrURL -> d
    java.lang.String mFileNa -> e
    java.lang.String mFileFullName -> f
    java.lang.String mUriPath -> g
    cmccsi.mhealth.app.sports.view.DownLoadApkProgress mMyProgress -> h
    int mProgressMax -> i
    int mDownLoadFileSize -> j
    android.widget.TextView mTvMessage -> k
    android.widget.TextView mTvPrcent -> l
    java.lang.Thread mThreadDownload -> m
    boolean mIsInterruptted -> n
    android.os.Handler mHandler -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void findView() -> a
    void getFile(java.lang.String) -> a
    void getDataSource(java.lang.String) -> b
    void sendMsg(int) -> a
    cmccsi.mhealth.app.sports.view.DownLoadApkProgress access$0(cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity) -> a
    int access$1(cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity) -> b
    android.widget.TextView access$2(cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity) -> c
    int access$3(cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity) -> d
    void access$4(cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity,java.lang.String) -> a
cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity$1 -> cmccsi.mhealth.app.sports.activity.m:
    cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity$2 -> cmccsi.mhealth.app.sports.activity.n:
    cmccsi.mhealth.app.sports.activity.FirmwareDownloadProgressActivity this$0 -> a
    java.lang.String val$strPath -> b
    void run() -> run
cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity -> cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity:
    java.lang.String mStrURL -> b
    java.lang.String mFileNa -> c
    java.lang.String mFilePath -> d
    cmccsi.mhealth.app.sports.view.DownLoadApkProgress mMyProgress -> e
    android.widget.TextView mTvMessage -> f
    android.widget.TextView mTvPrcent -> g
    cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity mFirmwareUpdateProgressActivity -> h
    java.lang.String mDeviceVersion -> i
    java.lang.String mDeviceveId -> j
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro tgBleManager -> k
    android.os.Handler mHandler -> a
    java.lang.Runnable _connect_timeout -> l
    android.os.Handler mHandlerTemp -> m
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void findView() -> a
    void checkUpdate(java.lang.String) -> a
    void updateToken() -> b
    void finishSelf(boolean) -> a
    void connectDevice(java.lang.String) -> b
    boolean checkBlueEnabled() -> c
    void access$0(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity) -> a
    void access$1(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity,boolean) -> a
    cmccsi.mhealth.app.sports.view.DownLoadApkProgress access$2(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity) -> b
    android.widget.TextView access$3(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity) -> c
    android.os.Handler access$4(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity) -> d
    java.lang.Runnable access$5(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity) -> e
    android.widget.TextView access$6(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity) -> f
    java.lang.String access$7(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity) -> g
    void access$8(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity,java.lang.String) -> a
    java.lang.String access$9(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity) -> h
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro access$10(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity) -> i
cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity$1 -> cmccsi.mhealth.app.sports.activity.o:
    cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity$2 -> cmccsi.mhealth.app.sports.activity.p:
    cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity$3 -> cmccsi.mhealth.app.sports.activity.q:
    cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity this$0 -> a
    void run() -> run
    cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity access$0(cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity$3) -> a
cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity$3$1 -> cmccsi.mhealth.app.sports.activity.r:
    cmccsi.mhealth.app.sports.activity.FirmwareUpdateProgressActivity$3 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.FragmentContainerActivity -> cmccsi.mhealth.app.sports.activity.FragmentContainerActivity:
    void onCreate(android.os.Bundle) -> onCreate
cmccsi.mhealth.app.sports.activity.HRActivity -> cmccsi.mhealth.app.sports.activity.HRActivity:
    java.util.List ecgDataList -> a
    android.widget.TextView hr_time -> b
    android.widget.LinearLayout hr_graph -> c
    android.widget.RadioButton multiple_1 -> d
    android.widget.RadioButton multiple_2 -> e
    android.widget.RadioButton multiple_3 -> f
    android.widget.TextView title -> g
    android.widget.ImageButton button_back -> h
    android.widget.PopupWindow popup -> i
    android.widget.ImageView arrow_img -> j
    android.app.Dialog dialog -> k
    android.widget.LinearLayout layout_dialog -> l
    android.widget.TextView textview_hr_dialog -> m
    android.widget.TextView textView_datatime_dialog -> n
    android.widget.TextView textView_comment_dialog -> o
    android.content.Intent intent -> p
    android.os.Bundle bundle -> q
    org.achartengine.renderer.XYMultipleSeriesRenderer hRRenderer -> r
    org.achartengine.model.XYMultipleSeriesDataset mEcgHrData -> s
    java.lang.String[] types -> t
    int dataLength -> u
    int mThre -> v
    double maxHR -> w
    double minHR -> x
    java.lang.String[] mDataTime -> y
    java.lang.String upTime -> z
    org.achartengine.chart.XYChart xyChartHR -> A
    org.achartengine.GraphicalView mHRChartView -> B
    int multiple -> C
    android.widget.LinearLayout$LayoutParams lp -> D
    int count -> E
    void onCreate(android.os.Bundle) -> onCreate
    void loadView() -> a
    void initDialog() -> b
    void getPopupInstance(int) -> a
    void PopupDismiss() -> c
    void initWindow(int) -> b
    int DiptoPx(android.content.Context,int) -> a
    void initialView() -> d
    void requestData() -> e
    double[] calStatics(double[],int) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void access$0(cmccsi.mhealth.app.sports.activity.HRActivity) -> a
    org.achartengine.GraphicalView access$1(cmccsi.mhealth.app.sports.activity.HRActivity) -> b
    android.app.Dialog access$2(cmccsi.mhealth.app.sports.activity.HRActivity) -> c
    org.achartengine.chart.XYChart access$3(cmccsi.mhealth.app.sports.activity.HRActivity) -> d
    android.widget.TextView access$4(cmccsi.mhealth.app.sports.activity.HRActivity) -> e
    android.widget.TextView access$5(cmccsi.mhealth.app.sports.activity.HRActivity) -> f
    java.lang.String[] access$6(cmccsi.mhealth.app.sports.activity.HRActivity) -> g
    android.widget.LinearLayout access$7(cmccsi.mhealth.app.sports.activity.HRActivity) -> h
    android.widget.TextView access$8(cmccsi.mhealth.app.sports.activity.HRActivity) -> i
    void access$9(cmccsi.mhealth.app.sports.activity.HRActivity,int) -> a
    android.widget.PopupWindow access$10(cmccsi.mhealth.app.sports.activity.HRActivity) -> j
    int access$11(cmccsi.mhealth.app.sports.activity.HRActivity,android.content.Context,int) -> a
cmccsi.mhealth.app.sports.activity.HRActivity$1 -> cmccsi.mhealth.app.sports.activity.s:
    cmccsi.mhealth.app.sports.activity.HRActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cmccsi.mhealth.app.sports.activity.HRActivity$2 -> cmccsi.mhealth.app.sports.activity.t:
    cmccsi.mhealth.app.sports.activity.HRActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.HRActivity$3 -> cmccsi.mhealth.app.sports.activity.u:
    cmccsi.mhealth.app.sports.activity.HRActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.HRVActivity -> cmccsi.mhealth.app.sports.activity.HRVActivity:
    android.widget.ImageView hrv_imageView -> b
    android.widget.TextView hrv_time -> c
    android.widget.LinearLayout hrv_graph -> d
    android.widget.RadioButton multiple_1 -> e
    android.widget.RadioButton multiple_2 -> f
    android.widget.RadioButton multiple_3 -> g
    android.widget.TextView title -> h
    android.widget.ImageButton button_back -> i
    android.widget.PopupWindow popup -> j
    android.widget.ImageView arrow_img -> k
    android.app.Dialog dialog -> l
    android.widget.LinearLayout layout_dialog -> m
    android.widget.TextView textview_hr_dialog -> n
    android.widget.TextView textView_datatime_dialog -> o
    android.widget.TextView textView_comment_dialog -> p
    android.content.Intent intent -> q
    android.os.Bundle bundle -> r
    org.achartengine.renderer.XYMultipleSeriesRenderer hRVRenderer -> s
    org.achartengine.model.XYMultipleSeriesDataset mEcgHrvData -> t
    java.lang.String[] types -> u
    int dataLength -> v
    int mThre -> w
    double maxHRV -> x
    double minHRV -> y
    java.lang.String[] mDataTime -> z
    java.lang.String upTime -> A
    org.achartengine.chart.XYChart xyChartHRV -> B
    org.achartengine.GraphicalView mHRVChartView -> C
    int multiple -> D
    android.widget.LinearLayout$LayoutParams lp -> E
    java.util.List ecgDataList -> a
    int count -> F
    void onCreate(android.os.Bundle) -> onCreate
    void loadView() -> a
    void initDialog() -> b
    void getPopupInstance(int) -> a
    void PopupDismiss() -> c
    void initWindow(int) -> b
    int DiptoPx(android.content.Context,int) -> a
    void initialView() -> d
    void requestData() -> e
    double[] calStatics(double[],int) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void access$0(cmccsi.mhealth.app.sports.activity.HRVActivity) -> a
    org.achartengine.GraphicalView access$1(cmccsi.mhealth.app.sports.activity.HRVActivity) -> b
    android.app.Dialog access$2(cmccsi.mhealth.app.sports.activity.HRVActivity) -> c
    org.achartengine.chart.XYChart access$3(cmccsi.mhealth.app.sports.activity.HRVActivity) -> d
    android.widget.TextView access$4(cmccsi.mhealth.app.sports.activity.HRVActivity) -> e
    android.widget.TextView access$5(cmccsi.mhealth.app.sports.activity.HRVActivity) -> f
    java.lang.String[] access$6(cmccsi.mhealth.app.sports.activity.HRVActivity) -> g
    android.widget.LinearLayout access$7(cmccsi.mhealth.app.sports.activity.HRVActivity) -> h
    android.widget.TextView access$8(cmccsi.mhealth.app.sports.activity.HRVActivity) -> i
    void access$9(cmccsi.mhealth.app.sports.activity.HRVActivity,int) -> a
    android.widget.PopupWindow access$10(cmccsi.mhealth.app.sports.activity.HRVActivity) -> j
    int access$11(cmccsi.mhealth.app.sports.activity.HRVActivity,android.content.Context,int) -> a
cmccsi.mhealth.app.sports.activity.HRVActivity$1 -> cmccsi.mhealth.app.sports.activity.v:
    cmccsi.mhealth.app.sports.activity.HRVActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cmccsi.mhealth.app.sports.activity.HRVActivity$2 -> cmccsi.mhealth.app.sports.activity.w:
    cmccsi.mhealth.app.sports.activity.HRVActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.HRVActivity$3 -> cmccsi.mhealth.app.sports.activity.x:
    cmccsi.mhealth.app.sports.activity.HRVActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.HandAddContactActivity -> cmccsi.mhealth.app.sports.activity.HandAddContactActivity:
    cmccsi.mhealth.app.sports.view.CustomProgressDialog progressDialog -> a
    android.widget.LinearLayout mLlAdd -> b
    android.widget.RelativeLayout mRlItem -> c
    android.widget.ImageView mIvPhoto -> d
    android.widget.TextView mTvName -> e
    android.widget.TextView mTvNubmer -> f
    android.widget.EditText mEtNumber -> g
    java.lang.String mNumber -> h
    java.lang.String mNumber_temp -> i
    cmccsi.mhealth.app.sports.bean.FriendSearchItem mFriendSearchItem -> j
    boolean isSendMsg -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void initViews() -> a
    void searchSuccess(boolean,cmccsi.mhealth.app.sports.bean.FriendSearchItem) -> a
    void searchFriend(java.lang.String) -> a
    void addFriendsByPhonenumber(java.lang.String) -> b
    void showProgress(java.lang.String) -> c
    void close() -> b
    void access$0(cmccsi.mhealth.app.sports.activity.HandAddContactActivity,java.lang.String) -> a
    void access$1(cmccsi.mhealth.app.sports.activity.HandAddContactActivity,cmccsi.mhealth.app.sports.bean.FriendSearchItem) -> a
    void access$2(cmccsi.mhealth.app.sports.activity.HandAddContactActivity) -> a
    cmccsi.mhealth.app.sports.bean.FriendSearchItem access$3(cmccsi.mhealth.app.sports.activity.HandAddContactActivity) -> b
    void access$4(cmccsi.mhealth.app.sports.activity.HandAddContactActivity,boolean,cmccsi.mhealth.app.sports.bean.FriendSearchItem) -> a
    void access$5(cmccsi.mhealth.app.sports.activity.HandAddContactActivity,boolean) -> a
    void access$6(cmccsi.mhealth.app.sports.activity.HandAddContactActivity,java.lang.String) -> b
cmccsi.mhealth.app.sports.activity.HandAddContactActivity$1 -> cmccsi.mhealth.app.sports.activity.y:
    cmccsi.mhealth.app.sports.activity.HandAddContactActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
cmccsi.mhealth.app.sports.activity.HandAddContactActivity$AddPhoneNumbersTask -> cmccsi.mhealth.app.sports.activity.z:
    java.lang.String errorMsg -> b
    cmccsi.mhealth.app.sports.activity.HandAddContactActivity this$0 -> a
    java.lang.Integer doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.activity.HandAddContactActivity$CheckPhoneNumbersTask -> cmccsi.mhealth.app.sports.activity.aa:
    cmccsi.mhealth.app.sports.activity.HandAddContactActivity this$0 -> a
    java.lang.Integer doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.activity.MainFragmentActivity -> cmccsi.mhealth.app.sports.activity.MainFragmentActivity:
    int WHAT_ENSURE_EXIT -> c
    long DELAY_EXIT_MILLS -> d
    android.support.v4.view.ViewPager viewPager -> e
    android.widget.RadioButton main_tab_health -> f
    android.widget.RadioButton main_tab_corporation -> g
    android.widget.RadioButton main_tab_play -> h
    android.widget.ImageButton settingimg -> i
    android.widget.TextView tv_showGoal -> j
    android.widget.ImageView iv_showGoal -> k
    android.content.Intent intent -> l
    boolean isExiting -> m
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity$ExitRunnable exitRunnable -> n
    boolean hasShowAlert -> a
    android.os.Handler handler -> b
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity$FragmentAdapter adapter -> o
    cmccsi.mhealth.app.sports.bean.RequestListInfo mFriendReqData -> p
    cmccsi.mhealth.app.sports.bean.RequestListInfo mRaceReqData -> q
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void addListener() -> b
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    boolean isClubInfoAvailable() -> c
    void access$0(cmccsi.mhealth.app.sports.activity.MainFragmentActivity,cmccsi.mhealth.app.sports.bean.RequestListInfo) -> a
    void access$1(cmccsi.mhealth.app.sports.activity.MainFragmentActivity,cmccsi.mhealth.app.sports.bean.RequestListInfo) -> b
    cmccsi.mhealth.app.sports.bean.RequestListInfo access$2(cmccsi.mhealth.app.sports.activity.MainFragmentActivity) -> a
    cmccsi.mhealth.app.sports.bean.RequestListInfo access$3(cmccsi.mhealth.app.sports.activity.MainFragmentActivity) -> b
    android.widget.ImageView access$4(cmccsi.mhealth.app.sports.activity.MainFragmentActivity) -> c
    android.widget.TextView access$5(cmccsi.mhealth.app.sports.activity.MainFragmentActivity) -> d
    void access$6(cmccsi.mhealth.app.sports.activity.MainFragmentActivity) -> e
    void access$7(cmccsi.mhealth.app.sports.activity.MainFragmentActivity,boolean) -> a
    android.widget.RadioButton access$8(cmccsi.mhealth.app.sports.activity.MainFragmentActivity) -> f
    android.widget.RadioButton access$9(cmccsi.mhealth.app.sports.activity.MainFragmentActivity) -> g
    android.widget.RadioButton access$10(cmccsi.mhealth.app.sports.activity.MainFragmentActivity) -> h
cmccsi.mhealth.app.sports.activity.MainFragmentActivity$1 -> cmccsi.mhealth.app.sports.activity.ab:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity access$0(cmccsi.mhealth.app.sports.activity.MainFragmentActivity$1) -> a
cmccsi.mhealth.app.sports.activity.MainFragmentActivity$1$1 -> cmccsi.mhealth.app.sports.activity.ac:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity$1 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MainFragmentActivity$2 -> cmccsi.mhealth.app.sports.activity.ad:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
cmccsi.mhealth.app.sports.activity.MainFragmentActivity$3 -> cmccsi.mhealth.app.sports.activity.ae:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MainFragmentActivity$4 -> cmccsi.mhealth.app.sports.activity.af:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MainFragmentActivity$ExitRunnable -> cmccsi.mhealth.app.sports.activity.ag:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MainFragmentActivity$FragmentAdapter -> cmccsi.mhealth.app.sports.activity.MainFragmentActivity$FragmentAdapter:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getItemPosition(java.lang.Object) -> getItemPosition
    int getCount() -> getCount
cmccsi.mhealth.app.sports.activity.MainFragmentActivity$LoadAchievementTask -> cmccsi.mhealth.app.sports.activity.ah:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity this$0 -> a
    cmccsi.mhealth.app.sports.bean.GoalInfo doInBackground(java.lang.String[]) -> a
    void restoreGoalInfo2SP(cmccsi.mhealth.app.sports.bean.GoalNetInfo) -> a
    void onPostExecute(cmccsi.mhealth.app.sports.bean.GoalInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.activity.MainFragmentActivity$LoadFriendListRunnable -> cmccsi.mhealth.app.sports.activity.ai:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MainFragmentActivity2 -> cmccsi.mhealth.app.sports.activity.MainFragmentActivity2:
    int WHAT_ENSURE_EXIT -> c
    long DELAY_EXIT_MILLS -> d
    android.support.v4.view.ViewPager viewPager -> e
    android.widget.RadioButton main_tab_health -> f
    android.widget.RadioButton main_tab_corporation -> g
    android.widget.RadioButton main_tab_play -> h
    android.widget.ImageButton settingimg -> i
    android.widget.TextView tv_showGoal -> j
    android.widget.ImageView iv_showGoal -> k
    android.content.Intent intent -> l
    boolean isExiting -> m
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity2$ExitRunnable exitRunnable -> n
    boolean hasShowAlert -> a
    android.os.Handler handler -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void addListener() -> b
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    boolean isClubInfoAvailable() -> c
    android.widget.ImageView access$0(cmccsi.mhealth.app.sports.activity.MainFragmentActivity2) -> a
    android.widget.TextView access$1(cmccsi.mhealth.app.sports.activity.MainFragmentActivity2) -> b
    void access$2(cmccsi.mhealth.app.sports.activity.MainFragmentActivity2) -> c
    void access$3(cmccsi.mhealth.app.sports.activity.MainFragmentActivity2,boolean) -> a
    android.widget.RadioButton access$4(cmccsi.mhealth.app.sports.activity.MainFragmentActivity2) -> d
    android.widget.RadioButton access$5(cmccsi.mhealth.app.sports.activity.MainFragmentActivity2) -> e
    android.widget.RadioButton access$6(cmccsi.mhealth.app.sports.activity.MainFragmentActivity2) -> f
cmccsi.mhealth.app.sports.activity.MainFragmentActivity2$1 -> cmccsi.mhealth.app.sports.activity.aj:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity2 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.MainFragmentActivity2$2 -> cmccsi.mhealth.app.sports.activity.ak:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity2 this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
cmccsi.mhealth.app.sports.activity.MainFragmentActivity2$3 -> cmccsi.mhealth.app.sports.activity.al:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity2 this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MainFragmentActivity2$4 -> cmccsi.mhealth.app.sports.activity.am:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity2 this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MainFragmentActivity2$ExitRunnable -> cmccsi.mhealth.app.sports.activity.an:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity2 this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MainFragmentActivity2$FragmentAdapter -> cmccsi.mhealth.app.sports.activity.MainFragmentActivity2$FragmentAdapter:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity2 this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
cmccsi.mhealth.app.sports.activity.MainFragmentActivity2$LoadAchievementTask -> cmccsi.mhealth.app.sports.activity.ao:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity2 this$0 -> a
    cmccsi.mhealth.app.sports.bean.GoalInfo doInBackground(java.lang.String[]) -> a
    void restoreGoalInfo2SP(cmccsi.mhealth.app.sports.bean.GoalNetInfo) -> a
    void onPostExecute(cmccsi.mhealth.app.sports.bean.GoalInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.activity.MainFragmentActivity2$LoadFriendListRunnable -> cmccsi.mhealth.app.sports.activity.ap:
    cmccsi.mhealth.app.sports.activity.MainFragmentActivity2 this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MapListGPSFragment -> cmccsi.mhealth.app.sports.activity.MapListGPSFragment:
    int page -> b
    cmccsi.mhealth.app.sports.view.XListView xListView -> c
    cmccsi.mhealth.app.sports.adapter.GPSXListViewAdapter myAdapter -> d
    java.util.List mListGPSInfo -> e
    int unUploadSize -> n
    android.view.View mBack -> o
    android.widget.RelativeLayout mRLayoutGetHistoryData -> p
    android.os.Handler handler -> a
    java.util.List buildData -> q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void findViews() -> a
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List getStarttimeList() -> f
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onDestroy() -> onDestroy
    void clickListner() -> b
    void loadLogic() -> c
    void builderData() -> g
    void fitData(java.util.List) -> a
    void downLoadData(int) -> a
    void onRefresh() -> d
    void onLoadMore() -> e
    void access$0(cmccsi.mhealth.app.sports.activity.MapListGPSFragment,java.lang.String) -> a
    cmccsi.mhealth.app.sports.view.XListView access$1(cmccsi.mhealth.app.sports.activity.MapListGPSFragment) -> a
    void access$2(cmccsi.mhealth.app.sports.activity.MapListGPSFragment) -> b
    void access$4(cmccsi.mhealth.app.sports.activity.MapListGPSFragment,int) -> a
    java.util.List access$5(cmccsi.mhealth.app.sports.activity.MapListGPSFragment) -> c
cmccsi.mhealth.app.sports.activity.MapListGPSFragment$1 -> cmccsi.mhealth.app.sports.activity.aq:
    cmccsi.mhealth.app.sports.activity.MapListGPSFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.MapListGPSFragment$DownLoadData -> cmccsi.mhealth.app.sports.activity.ar:
    int mpage -> a
    cmccsi.mhealth.app.sports.activity.MapListGPSFragment this$0 -> b
    void run() -> run
cmccsi.mhealth.app.sports.activity.MapListGPSFragment$backClick -> cmccsi.mhealth.app.sports.activity.as:
    cmccsi.mhealth.app.sports.basic.BaseFragment to -> a
    cmccsi.mhealth.app.sports.activity.MapListGPSFragment this$0 -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.MapSelectTRunType -> cmccsi.mhealth.app.sports.activity.MapSelectTRunType:
    int[] drawableRes -> a
    cmccsi.mhealth.app.sports.bean.RunType mType -> b
    android.widget.ListView lv_types -> c
    java.util.List mMapTypes -> d
    int mTypeId -> e
    void onCreate(android.os.Bundle) -> onCreate
    void addTypeItem(int,java.lang.String) -> a
    void initializerRunType() -> a
    void initAdapterDataSet() -> b
    void initView() -> c
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void navBack() -> d
    java.util.List access$0(cmccsi.mhealth.app.sports.activity.MapSelectTRunType) -> a
    int access$1(cmccsi.mhealth.app.sports.activity.MapSelectTRunType) -> b
    void access$2(cmccsi.mhealth.app.sports.activity.MapSelectTRunType,int) -> a
    void access$3(cmccsi.mhealth.app.sports.activity.MapSelectTRunType) -> c
cmccsi.mhealth.app.sports.activity.MapSelectTRunType$1 -> cmccsi.mhealth.app.sports.activity.at:
    cmccsi.mhealth.app.sports.activity.MapSelectTRunType this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.activity.MapSelectTRunType$MapTypeAdapter -> cmccsi.mhealth.app.sports.activity.au:
    android.view.LayoutInflater mInflater -> b
    cmccsi.mhealth.app.sports.activity.MapSelectTRunType this$0 -> a
    int getCount() -> getCount
    java.util.Map getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
cmccsi.mhealth.app.sports.activity.MapSelectTRunType$MapTypeAdapter$ViewHolder -> cmccsi.mhealth.app.sports.activity.av:
    android.widget.ImageView iv_type -> a
    android.widget.TextView tv_type -> b
    android.view.View flag -> c
    cmccsi.mhealth.app.sports.activity.MapSelectTRunType$MapTypeAdapter this$1 -> d
cmccsi.mhealth.app.sports.activity.MapStartRunningFragment -> cmccsi.mhealth.app.sports.activity.MapStartRunningFragment:
    com.baidu.mapapi.map.MapView mMapView -> r
    android.widget.TextView mTextViewTimer -> s
    com.baidu.mapapi.model.LatLng[] mLinePoints -> a
    com.baidu.mapapi.map.PolylineOptions lineGeometry -> b
    cmccsi.mhealth.app.sports.service.StepService_GPS mService -> t
    com.baidu.mapapi.map.MyLocationData mLocData -> u
    java.util.List mListGpsDetails -> v
    java.util.List mGeoPoints -> w
    android.widget.TextView mTextViewAltitede -> x
    com.baidu.mapapi.map.BitmapDescriptor mOverlayEndItem -> y
    com.baidu.mapapi.map.BitmapDescriptor mOverlayStartItem -> z
    java.lang.String mTextviewTime -> A
    android.view.View view -> c
    java.lang.String tag -> B
    com.baidu.mapapi.map.BaiduMap mBaiduMap -> C
    com.baidu.mapapi.map.UiSettings mUiSettings -> D
    com.baidu.mapapi.map.Marker mMarkerStart -> E
    com.baidu.mapapi.map.Marker mMarkerEnd -> F
    cmccsi.mhealth.app.sports.basic.MapApplication mApplication -> G
    android.app.NotificationManager nm -> H
    cmccsi.mhealth.app.sports.view.CommonAskDialog mAskDialog -> I
    double mCenterLatitude -> J
    double mCenterLongitude -> K
    cmccsi.mhealth.app.sports.service.StepService_GPS$OnMyLocationChangeListener changeListener -> d
    android.content.ServiceConnection mConnection -> L
    android.widget.Button mFinishRunnnig -> M
    android.widget.Button mStopRunnnig -> N
    int lineColor -> O
    android.widget.TextView mTextViewkilometre -> P
    android.widget.Button mButtonOpenMap -> Q
    android.widget.ImageView mIvMapGps -> R
    boolean mOpenMap -> S
    android.widget.LinearLayout mLlayoutMap -> T
    android.widget.Button mButtonMoveToLocation -> U
    boolean mStart_Stop -> V
    java.lang.String mStart_cal1 -> W
    android.widget.TextView mTextViewSpeed -> X
    com.baidu.mapapi.model.LatLng mNowPoint -> Y
    com.baidu.mapapi.model.LatLng mFristPoint -> Z
    android.os.Handler handler -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void clickListner() -> b
    void findViews() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void getprefence() -> g
    void onStart() -> onStart
    void loadLogic() -> c
    void startservice() -> d
    void drawLine(cmccsi.mhealth.app.sports.bean.GpsInfoDetail,cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> a
    void changeText(java.util.List) -> a
    void UIchange(cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> a
    void setMyLocation(cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> b
    void refresh(cmccsi.mhealth.app.sports.bean.GpsInfoDetail,cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> b
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onClick(android.view.View) -> onClick
    void finishRunning() -> e
    void saveData() -> j
    void removeSp() -> k
    void openOrCloseMap(int,int,int,int) -> a
    void locToCenter(int,int) -> a
    void stopService() -> l
    void showNotification() -> f
    android.widget.TextView access$0(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> a
    android.widget.ImageView access$1(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> b
    void access$2(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment,cmccsi.mhealth.app.sports.service.StepService_GPS) -> a
    cmccsi.mhealth.app.sports.service.StepService_GPS access$3(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> c
    com.baidu.mapapi.map.BaiduMap access$4(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> d
    void access$5(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment,java.lang.String) -> a
    void access$6(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> e
    android.widget.TextView access$7(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> f
    android.widget.Button access$8(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> g
    android.support.v4.app.FragmentActivity access$9(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> h
    boolean access$10(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> i
    android.widget.LinearLayout access$11(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> j
    void access$17(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment,java.lang.String) -> b
    java.util.List access$18(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment) -> k
cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$1 -> cmccsi.mhealth.app.sports.activity.aw:
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment this$0 -> a
    void timer(java.lang.String) -> a
    void change(cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> a
    void changeAltitude(double) -> a
    void gpsIntensity(int) -> a
cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$2 -> cmccsi.mhealth.app.sports.activity.ax:
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$3 -> cmccsi.mhealth.app.sports.activity.ay:
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void updateDataBase(android.os.Message,int) -> a
cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$4 -> cmccsi.mhealth.app.sports.activity.az:
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment this$0 -> a
    com.baidu.mapapi.map.MapStatusUpdate val$u -> b
    void run() -> run
cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$6 -> cmccsi.mhealth.app.sports.activity.ba:
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$7 -> cmccsi.mhealth.app.sports.activity.bb:
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment this$0 -> a
    java.lang.String val$starttime -> b
    void onClick(int) -> a
cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$8 -> cmccsi.mhealth.app.sports.activity.bc:
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment this$0 -> a
    java.lang.String val$starttime -> b
    void onClick(int) -> a
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment access$0(cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$8) -> a
cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$8$1 -> cmccsi.mhealth.app.sports.activity.bd:
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$8 this$1 -> a
    cmccsi.mhealth.app.sports.bean.GPSListInfo val$gpsListInfo -> b
    java.util.List val$infos -> c
    void run() -> run
cmccsi.mhealth.app.sports.activity.MapStartRunningFragment$myAnimationListener -> cmccsi.mhealth.app.sports.activity.be:
    android.widget.LinearLayout view -> a
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment -> cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment:
    com.baidu.mapapi.map.MapView mMapView -> r
    java.util.List mAllPoints -> s
    android.view.View mBack -> t
    android.widget.TextView mTextViewSpeed -> u
    android.widget.TextView mTextViewCal -> v
    cmccsi.mhealth.app.sports.bean.GPSListInfo mGpsListInfo -> w
    android.widget.LinearLayout mLayoutAll -> x
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mCustomDialog -> y
    com.baidu.mapapi.map.BitmapDescriptor mOverlayEndItem -> z
    com.baidu.mapapi.map.BitmapDescriptor mOverlayStartItem -> A
    com.baidu.mapapi.map.PolylineOptions lineGeometry -> a
    int lineColor -> b
    android.os.Handler handler -> c
    java.util.List mGpsInfoArr -> B
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback callback -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onCreate(android.os.Bundle) -> onCreate
    void loadLogic() -> c
    void drawGpsDetail(java.util.List) -> a
    void showDetailData(cmccsi.mhealth.app.sports.bean.GPSListInfo) -> a
    void drawLine(cmccsi.mhealth.app.sports.bean.GpsInfoDetail,cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> a
    void findViews() -> a
    void initMap() -> e
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void showAskDialog() -> f
    void access$0(cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment,java.lang.String) -> a
    java.util.List access$1(cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment) -> a
    void access$2(cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment,java.util.List) -> a
    cmccsi.mhealth.app.sports.bean.GPSListInfo access$3(cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment) -> b
    void access$4(cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment,cmccsi.mhealth.app.sports.bean.GPSListInfo) -> a
    cmccsi.mhealth.app.sports.view.CustomProgressDialog access$5(cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment) -> c
    android.widget.LinearLayout access$6(cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment) -> d
    android.support.v4.app.FragmentActivity access$7(cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment) -> e
    void access$8(cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment,cmccsi.mhealth.app.sports.view.CustomProgressDialog) -> a
cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment$1 -> cmccsi.mhealth.app.sports.activity.bf:
    cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment$2 -> cmccsi.mhealth.app.sports.activity.bg:
    cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment this$0 -> a
    void onSnapshotReady(android.graphics.Bitmap) -> onSnapshotReady
cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment$3 -> cmccsi.mhealth.app.sports.activity.bh:
    cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment$4 -> cmccsi.mhealth.app.sports.activity.bi:
    cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment$5 -> cmccsi.mhealth.app.sports.activity.bj:
    cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment this$0 -> a
    void onClick(int) -> a
    cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment access$0(cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment$5) -> a
cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment$5$1 -> cmccsi.mhealth.app.sports.activity.bk:
    cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment$5 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment$DownloadDetailRunable -> cmccsi.mhealth.app.sports.activity.bl:
    cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment$backClick -> cmccsi.mhealth.app.sports.activity.bm:
    cmccsi.mhealth.app.sports.basic.BaseFragment to -> a
    cmccsi.mhealth.app.sports.activity.MapViewOrbitFragment this$0 -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.MatchContactActivity -> cmccsi.mhealth.app.sports.activity.MatchContactActivity:
    android.widget.ListView mLvContacts -> a
    java.util.List mContactList -> b
    cmccsi.mhealth.app.sports.adapter.ContactAdapter mContactAdapter -> c
    java.util.List mMobileContactList -> d
    cmccsi.mhealth.app.sports.view.CustomProgressDialog progressDialog -> e
    java.lang.String mPhonenumbers -> f
    java.util.List mIndexs -> g
    android.app.Activity mActivity -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void initViews() -> a
    void initList() -> b
    void checkPhonenumbers(java.lang.String) -> a
    java.lang.String getContactsFromMobile() -> c
    void combineList(java.util.List,java.util.List) -> a
    void addFriendsByPhonenumbers(java.lang.String,java.lang.String) -> a
    java.lang.String getUserId() -> d
    void noAddAllSuccess(java.lang.String,java.lang.String) -> b
    void showProgress(java.lang.String) -> b
    void close() -> e
    void access$0(cmccsi.mhealth.app.sports.activity.MatchContactActivity,java.lang.String) -> a
    java.lang.String access$1(cmccsi.mhealth.app.sports.activity.MatchContactActivity) -> a
    java.lang.String access$2(cmccsi.mhealth.app.sports.activity.MatchContactActivity) -> b
    void access$3(cmccsi.mhealth.app.sports.activity.MatchContactActivity,java.lang.String) -> b
    void access$4(cmccsi.mhealth.app.sports.activity.MatchContactActivity,java.util.List) -> a
    void access$5(cmccsi.mhealth.app.sports.activity.MatchContactActivity) -> c
    java.util.List access$6(cmccsi.mhealth.app.sports.activity.MatchContactActivity) -> d
    java.util.List access$7(cmccsi.mhealth.app.sports.activity.MatchContactActivity) -> e
    void access$8(cmccsi.mhealth.app.sports.activity.MatchContactActivity,java.util.List,java.util.List) -> a
    void access$9(cmccsi.mhealth.app.sports.activity.MatchContactActivity) -> f
    android.app.Activity access$10(cmccsi.mhealth.app.sports.activity.MatchContactActivity) -> g
    void access$11(cmccsi.mhealth.app.sports.activity.MatchContactActivity,java.lang.String,java.lang.String) -> a
cmccsi.mhealth.app.sports.activity.MatchContactActivity$AddFriendsByPhonenumbersTask -> cmccsi.mhealth.app.sports.activity.bn:
    cmccsi.mhealth.app.sports.activity.MatchContactActivity this$0 -> a
    cmccsi.mhealth.app.sports.bean.MultAddFriendsBackInfo doInBackground(java.lang.String[]) -> a
    void onPostExecute(cmccsi.mhealth.app.sports.bean.MultAddFriendsBackInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.activity.MatchContactActivity$CheckPhoneNumbersTask -> cmccsi.mhealth.app.sports.activity.bo:
    cmccsi.mhealth.app.sports.activity.MatchContactActivity this$0 -> a
    java.lang.Integer doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.activity.MoodActivity -> cmccsi.mhealth.app.sports.activity.MoodActivity:
    android.widget.ImageView mood_imageView -> b
    android.widget.TextView mood_time -> c
    android.widget.LinearLayout mood_graph -> d
    android.widget.RadioButton multiple_1 -> e
    android.widget.RadioButton multiple_2 -> f
    android.widget.RadioButton multiple_3 -> g
    android.widget.TextView title -> h
    android.widget.ImageButton button_back -> i
    android.widget.PopupWindow popup -> j
    android.widget.ImageView arrow_img -> k
    android.app.Dialog dialog -> l
    android.widget.LinearLayout layout_dialog -> m
    android.widget.TextView textview_mood_dialog -> n
    android.widget.TextView textView_datatime_dialog -> o
    android.widget.TextView textView_comment_dialog -> p
    android.content.Intent intent -> q
    android.os.Bundle bundle -> r
    org.achartengine.renderer.XYMultipleSeriesRenderer moodRenderer -> s
    org.achartengine.model.XYMultipleSeriesDataset mEcgStressData -> t
    java.lang.String[] types -> u
    int dataLength -> v
    int mThre -> w
    double maxMood -> x
    double minMood -> y
    java.lang.String[] mDataTime -> z
    java.lang.String upTime -> A
    org.achartengine.chart.XYChart xyChartMood -> B
    org.achartengine.GraphicalView mMoodChartView -> C
    int multiple -> D
    android.widget.LinearLayout$LayoutParams lp -> E
    java.util.List ecgDataList -> a
    int count -> F
    void onCreate(android.os.Bundle) -> onCreate
    void loadView() -> a
    void initDialog() -> b
    void getPopupInstance(int) -> a
    void PopupDismiss() -> c
    void initWindow(int) -> b
    int DiptoPx(android.content.Context,int) -> a
    void initialView() -> d
    void requestData() -> e
    double[] calStatics(double[],int) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void access$0(cmccsi.mhealth.app.sports.activity.MoodActivity) -> a
    org.achartengine.GraphicalView access$1(cmccsi.mhealth.app.sports.activity.MoodActivity) -> b
    android.app.Dialog access$2(cmccsi.mhealth.app.sports.activity.MoodActivity) -> c
    org.achartengine.chart.XYChart access$3(cmccsi.mhealth.app.sports.activity.MoodActivity) -> d
    android.widget.TextView access$4(cmccsi.mhealth.app.sports.activity.MoodActivity) -> e
    android.widget.TextView access$5(cmccsi.mhealth.app.sports.activity.MoodActivity) -> f
    java.lang.String[] access$6(cmccsi.mhealth.app.sports.activity.MoodActivity) -> g
    android.widget.LinearLayout access$7(cmccsi.mhealth.app.sports.activity.MoodActivity) -> h
    android.widget.TextView access$8(cmccsi.mhealth.app.sports.activity.MoodActivity) -> i
    void access$9(cmccsi.mhealth.app.sports.activity.MoodActivity,int) -> a
    android.widget.PopupWindow access$10(cmccsi.mhealth.app.sports.activity.MoodActivity) -> j
    int access$11(cmccsi.mhealth.app.sports.activity.MoodActivity,android.content.Context,int) -> a
cmccsi.mhealth.app.sports.activity.MoodActivity$1 -> cmccsi.mhealth.app.sports.activity.bp:
    cmccsi.mhealth.app.sports.activity.MoodActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cmccsi.mhealth.app.sports.activity.MoodActivity$2 -> cmccsi.mhealth.app.sports.activity.bq:
    cmccsi.mhealth.app.sports.activity.MoodActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.MoodActivity$3 -> cmccsi.mhealth.app.sports.activity.br:
    cmccsi.mhealth.app.sports.activity.MoodActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.OpinionListActivity -> cmccsi.mhealth.app.sports.activity.OpinionListActivity:
    android.widget.Button newOpinion -> b
    android.widget.LinearLayout noOpinion -> c
    cmccsi.mhealth.app.sports.view.XListView opinions -> d
    int OPINIONLISTACTIVITYRESOUTNUM -> e
    cmccsi.mhealth.app.sports.activity.OpinionListActivity$GetNetMsgThread getNetMsgThread -> f
    int page -> g
    java.lang.String USERUID -> h
    java.util.ArrayList opinionList -> i
    cmccsi.mhealth.app.sports.adapter.OpinionListAdapter opioionAdapter -> j
    java.lang.String OPINIONLISTITEM -> a
    android.os.Handler opinionHandle -> k
    void onCreate(android.os.Bundle) -> onCreate
    void getOpinionListFromNet() -> a
    void initView() -> b
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void access$0(cmccsi.mhealth.app.sports.activity.OpinionListActivity) -> a
    cmccsi.mhealth.app.sports.view.XListView access$1(cmccsi.mhealth.app.sports.activity.OpinionListActivity) -> b
    cmccsi.mhealth.app.sports.activity.OpinionListActivity$GetNetMsgThread access$2(cmccsi.mhealth.app.sports.activity.OpinionListActivity) -> c
    void access$3(cmccsi.mhealth.app.sports.activity.OpinionListActivity,cmccsi.mhealth.app.sports.activity.OpinionListActivity$GetNetMsgThread) -> a
    java.util.ArrayList access$4(cmccsi.mhealth.app.sports.activity.OpinionListActivity) -> d
    android.widget.LinearLayout access$5(cmccsi.mhealth.app.sports.activity.OpinionListActivity) -> e
    cmccsi.mhealth.app.sports.adapter.OpinionListAdapter access$6(cmccsi.mhealth.app.sports.activity.OpinionListActivity) -> f
    java.lang.String access$7(cmccsi.mhealth.app.sports.activity.OpinionListActivity) -> g
    int access$8(cmccsi.mhealth.app.sports.activity.OpinionListActivity) -> h
    android.os.Handler access$9(cmccsi.mhealth.app.sports.activity.OpinionListActivity) -> i
    int access$10(cmccsi.mhealth.app.sports.activity.OpinionListActivity) -> j
    void access$11(cmccsi.mhealth.app.sports.activity.OpinionListActivity,int) -> a
    void access$12(cmccsi.mhealth.app.sports.activity.OpinionListActivity,java.lang.String) -> a
cmccsi.mhealth.app.sports.activity.OpinionListActivity$1 -> cmccsi.mhealth.app.sports.activity.bs:
    cmccsi.mhealth.app.sports.activity.OpinionListActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.OpinionListActivity$2 -> cmccsi.mhealth.app.sports.activity.bt:
    cmccsi.mhealth.app.sports.activity.OpinionListActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.OpinionListActivity$3 -> cmccsi.mhealth.app.sports.activity.bu:
    cmccsi.mhealth.app.sports.activity.OpinionListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.OpinionListActivity$4 -> cmccsi.mhealth.app.sports.activity.bv:
    cmccsi.mhealth.app.sports.activity.OpinionListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.activity.OpinionListActivity$5 -> cmccsi.mhealth.app.sports.activity.bw:
    cmccsi.mhealth.app.sports.activity.OpinionListActivity this$0 -> a
    void onRefresh() -> d
    void onLoadMore() -> e
    cmccsi.mhealth.app.sports.activity.OpinionListActivity access$0(cmccsi.mhealth.app.sports.activity.OpinionListActivity$5) -> a
cmccsi.mhealth.app.sports.activity.OpinionListActivity$5$1 -> cmccsi.mhealth.app.sports.activity.bx:
    cmccsi.mhealth.app.sports.activity.OpinionListActivity$5 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.OpinionListActivity$GetNetMsgThread -> cmccsi.mhealth.app.sports.activity.by:
    boolean isThreadRun -> b
    cmccsi.mhealth.app.sports.activity.OpinionListActivity this$0 -> a
    void stopMyThread() -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.OpinionNewActivity -> cmccsi.mhealth.app.sports.activity.OpinionNewActivity:
    android.widget.Button submitOpinion -> a
    android.widget.Spinner mSpinner -> b
    android.widget.EditText title -> c
    android.widget.EditText content -> d
    android.widget.EditText phone -> e
    java.lang.String titleString -> f
    java.lang.String contentString -> g
    java.lang.String phoneString -> h
    int feedbackTypeDict -> i
    cmccsi.mhealth.app.sports.activity.OpinionNewActivity$PutNetMsgThread putNetMsgThread -> j
    java.lang.String USERUID -> k
    android.os.Handler opinionHandle -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void chick() -> b
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void access$0(cmccsi.mhealth.app.sports.activity.OpinionNewActivity) -> a
    cmccsi.mhealth.app.sports.activity.OpinionNewActivity$PutNetMsgThread access$1(cmccsi.mhealth.app.sports.activity.OpinionNewActivity) -> b
    void access$2(cmccsi.mhealth.app.sports.activity.OpinionNewActivity,cmccsi.mhealth.app.sports.activity.OpinionNewActivity$PutNetMsgThread) -> a
    java.lang.String access$3(cmccsi.mhealth.app.sports.activity.OpinionNewActivity) -> c
    java.lang.String access$4(cmccsi.mhealth.app.sports.activity.OpinionNewActivity) -> d
    java.lang.String access$5(cmccsi.mhealth.app.sports.activity.OpinionNewActivity) -> e
    int access$6(cmccsi.mhealth.app.sports.activity.OpinionNewActivity) -> f
    java.lang.String access$7(cmccsi.mhealth.app.sports.activity.OpinionNewActivity) -> g
    android.os.Handler access$8(cmccsi.mhealth.app.sports.activity.OpinionNewActivity) -> h
    void access$9(cmccsi.mhealth.app.sports.activity.OpinionNewActivity) -> i
    void access$10(cmccsi.mhealth.app.sports.activity.OpinionNewActivity,int) -> a
cmccsi.mhealth.app.sports.activity.OpinionNewActivity$1 -> cmccsi.mhealth.app.sports.activity.bz:
    cmccsi.mhealth.app.sports.activity.OpinionNewActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.OpinionNewActivity$2 -> cmccsi.mhealth.app.sports.activity.ca:
    cmccsi.mhealth.app.sports.activity.OpinionNewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.OpinionNewActivity$3 -> cmccsi.mhealth.app.sports.activity.cb:
    cmccsi.mhealth.app.sports.activity.OpinionNewActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
cmccsi.mhealth.app.sports.activity.OpinionNewActivity$4 -> cmccsi.mhealth.app.sports.activity.cc:
    cmccsi.mhealth.app.sports.activity.OpinionNewActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.OpinionNewActivity$PutNetMsgThread -> cmccsi.mhealth.app.sports.activity.cd:
    boolean isThreadRun -> b
    cmccsi.mhealth.app.sports.activity.OpinionNewActivity this$0 -> a
    void stopMyThread() -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.OpinionViewActivity -> cmccsi.mhealth.app.sports.activity.OpinionViewActivity:
    android.content.Intent fromFather -> a
    cmccsi.mhealth.app.sports.appversion.OpinionInstance opinionInstance -> b
    android.widget.LinearLayout replyLayout -> c
    android.widget.TextView feedbackTitle -> d
    android.widget.TextView feedbackContent -> e
    android.widget.TextView createTime -> f
    android.widget.TextView replyContent -> g
    android.widget.TextView replyTime -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void initView() -> b
    void onResume() -> onResume
    void onDestroy() -> onDestroy
cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity -> cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity:
    java.lang.Boolean update -> a
    java.lang.String mCurrentFilePath -> c
    java.lang.String mStrURL -> d
    java.lang.String mFileEx -> e
    java.lang.String mFileNa -> f
    java.lang.String mUriPath -> g
    cmccsi.mhealth.app.sports.view.DownLoadApkProgress mMyProgress -> h
    int mProgressMax -> i
    int mDownLoadFileSize -> j
    android.widget.TextView mTextViewFileName -> k
    android.widget.TextView mTextViewFilelength -> l
    java.lang.Thread mThreadDownload -> m
    boolean mIsInterruptted -> n
    android.os.Handler mHandler -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void findView() -> a
    void getFile(java.lang.String) -> a
    void getDataSource(java.lang.String) -> b
    void sendMsg(int) -> a
    void openFile(java.io.File) -> a
    cmccsi.mhealth.app.sports.view.DownLoadApkProgress access$0(cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity) -> a
    int access$1(cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity) -> b
    android.widget.TextView access$2(cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity) -> c
    int access$3(cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity) -> d
    void access$4(cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity,java.lang.String) -> a
cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity$1 -> cmccsi.mhealth.app.sports.activity.ce:
    cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity$2 -> cmccsi.mhealth.app.sports.activity.cf:
    cmccsi.mhealth.app.sports.activity.PreLoadAPKUpdateProgressActivity this$0 -> a
    java.lang.String val$strPath -> b
    void run() -> run
cmccsi.mhealth.app.sports.activity.PreLoadActivity -> cmccsi.mhealth.app.sports.activity.PreLoadActivity:
    java.lang.String userUid -> a
    int msgId -> b
    android.widget.LinearLayout loadingLinearLayout -> c
    android.widget.LinearLayout guideLinearLayout -> d
    android.os.Handler mHandler -> e
    android.support.v4.view.ViewPager mViewPager -> f
    java.util.ArrayList mPageViews -> g
    android.widget.ImageView mImageView -> h
    android.widget.ImageView[] mImageViews -> i
    android.view.ViewGroup mainViewGroup -> j
    android.view.ViewGroup indicatorViewGroup -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View mLayoutBasic5 -> m
    int[] imageRes -> n
    void onCreate(android.os.Bundle) -> onCreate
    void beginLogin() -> c
    void onResume() -> onResume
    void restoreDeviceInfo() -> d
    void onNewIntent(android.content.Intent) -> onNewIntent
    void clearServise() -> e
    void setAlert() -> f
    java.lang.String getStringDateShort() -> a
    java.util.Date strToDateLong(java.lang.String) -> a
    java.lang.String getVersion() -> b
    void setPreLoading() -> g
    void access$0(cmccsi.mhealth.app.sports.activity.PreLoadActivity) -> a
    void access$1(cmccsi.mhealth.app.sports.activity.PreLoadActivity) -> b
    int access$2(cmccsi.mhealth.app.sports.activity.PreLoadActivity) -> c
    void access$3(cmccsi.mhealth.app.sports.activity.PreLoadActivity,android.app.Activity,java.lang.Class,android.os.Bundle,boolean) -> a
    void access$4(cmccsi.mhealth.app.sports.activity.PreLoadActivity,java.lang.String) -> a
    java.lang.String access$5(cmccsi.mhealth.app.sports.activity.PreLoadActivity) -> d
    android.os.Handler access$6(cmccsi.mhealth.app.sports.activity.PreLoadActivity) -> e
    java.util.ArrayList access$7(cmccsi.mhealth.app.sports.activity.PreLoadActivity) -> f
    android.widget.LinearLayout access$9(cmccsi.mhealth.app.sports.activity.PreLoadActivity) -> g
    android.widget.LinearLayout access$10(cmccsi.mhealth.app.sports.activity.PreLoadActivity) -> h
    android.widget.ImageView[] access$11(cmccsi.mhealth.app.sports.activity.PreLoadActivity) -> i
cmccsi.mhealth.app.sports.activity.PreLoadActivity$1 -> cmccsi.mhealth.app.sports.activity.cg:
    cmccsi.mhealth.app.sports.activity.PreLoadActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.PreLoadActivity$2 -> cmccsi.mhealth.app.sports.activity.ch:
    cmccsi.mhealth.app.sports.activity.PreLoadActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.PreLoadActivity$5 -> cmccsi.mhealth.app.sports.activity.ci:
    cmccsi.mhealth.app.sports.activity.PreLoadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    cmccsi.mhealth.app.sports.activity.PreLoadActivity access$0(cmccsi.mhealth.app.sports.activity.PreLoadActivity$5) -> a
cmccsi.mhealth.app.sports.activity.PreLoadActivity$5$1 -> cmccsi.mhealth.app.sports.activity.cj:
    cmccsi.mhealth.app.sports.activity.PreLoadActivity$5 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.PreLoadActivity$6 -> cmccsi.mhealth.app.sports.activity.ck:
    cmccsi.mhealth.app.sports.activity.PreLoadActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
cmccsi.mhealth.app.sports.activity.PreLoadActivity$InitAccountRunnable -> cmccsi.mhealth.app.sports.activity.cl:
    cmccsi.mhealth.app.sports.activity.PreLoadActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.PreLoadActivity$MyPagerAdapter -> cmccsi.mhealth.app.sports.activity.cm:
    cmccsi.mhealth.app.sports.activity.PreLoadActivity this$0 -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    int getItemPosition(java.lang.Object) -> getItemPosition
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
    void startUpdate(android.view.View) -> startUpdate
    void finishUpdate(android.view.View) -> finishUpdate
cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity -> cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity:
    android.widget.EditText mEditTextPhoneNum -> a
    android.widget.EditText userNameEditText -> b
    android.widget.EditText mEditTextTempCode -> c
    android.widget.TextView mTextViewTitleBar -> d
    android.widget.Button mButtonSend -> e
    android.widget.Button mButtonOk -> f
    java.lang.String netTokenMD5 -> g
    java.lang.String mPhoneNum -> h
    java.lang.String userName -> i
    java.lang.String mTempCodeForIntent -> j
    android.os.Handler handler -> k
    int timeCount -> l
    android.os.Handler timeHandler -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    void sendPwdMessage() -> b
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void verifyCodeAndJump() -> c
    java.lang.String access$0(cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity) -> a
    java.lang.String access$1(cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity) -> b
    int access$2(cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity) -> c
    void access$3(cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity,int) -> a
    android.widget.Button access$4(cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity) -> d
    android.os.Handler access$5(cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity) -> e
    java.lang.String access$6(cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity) -> f
    void access$7(cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity,java.lang.String) -> a
    java.lang.String access$8(cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity) -> g
cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity$1 -> cmccsi.mhealth.app.sports.activity.cn:
    cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity$2 -> cmccsi.mhealth.app.sports.activity.co:
    cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity$3 -> cmccsi.mhealth.app.sports.activity.cp:
    cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity$4 -> cmccsi.mhealth.app.sports.activity.cq:
    cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity$5 -> cmccsi.mhealth.app.sports.activity.cr:
    cmccsi.mhealth.app.sports.activity.PreLoadForgetPwdActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity -> cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity:
    java.lang.String mNewPwd -> a
    android.widget.EditText mEditTextPassword -> b
    android.widget.EditText mEditTextPasswordAgain -> c
    android.widget.Button forget_UpdatePwd_btn_setting -> d
    android.widget.ImageButton button_input_bg_back -> e
    java.lang.String netTokenMD5 -> f
    java.lang.String uid -> g
    android.os.Handler timeHandler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initviews() -> a
    void onResume() -> onResume
    void PasswordResetMessage() -> b
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity) -> a
    void access$1(cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity,java.lang.String) -> a
    java.lang.String access$2(cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity) -> b
    java.lang.String access$3(cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity) -> c
    android.os.Handler access$4(cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity) -> d
cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity$1 -> cmccsi.mhealth.app.sports.activity.cs:
    cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity$2 -> cmccsi.mhealth.app.sports.activity.ct:
    cmccsi.mhealth.app.sports.activity.PreLoadResetPwdActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.RankingActivity -> cmccsi.mhealth.app.sports.activity.RankingActivity:
    android.widget.RelativeLayout rl_nav -> c
    cmccsi.mhealth.app.sports.view.SyncHorizontalScrollView mHsv -> d
    android.widget.RadioGroup rg_nav_content -> e
    android.widget.ImageView iv_nav_indicator -> f
    android.widget.ImageView iv_nav_left -> g
    android.widget.ImageView iv_nav_right -> h
    android.support.v4.view.ViewPager mViewPager -> i
    int indicatorWidth -> j
    java.util.List tabTitle -> a
    android.view.LayoutInflater mInflater -> k
    cmccsi.mhealth.app.sports.activity.RankingActivity$TabFragmentPagerAdapter mAdapter -> l
    int currentIndicatorLeft -> m
    android.widget.RadioGroup mRgTime -> n
    android.widget.RadioGroup mRgPersonalOrTeam -> o
    java.util.List mFtList -> b
    java.lang.String oneOrSeven -> p
    java.lang.String teamOrPerSon -> q
    java.util.ArrayList datavalue -> r
    int isupdate -> s
    cmccsi.mhealth.app.sports.controller.PedoRankController mPedoRankController -> t
    java.lang.String GroupOrArea -> u
    android.widget.ImageView mIvBack -> v
    android.widget.TextView mTvTitle -> w
    boolean isNotCall -> x
    int i -> y
    void onCreate(android.os.Bundle) -> onCreate
    void getRankInfo() -> a
    void findViewById() -> b
    void initView() -> c
    void initNavigationHSV() -> d
    void setListener() -> e
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    java.util.ArrayList ShowTestData() -> f
    java.util.ArrayList access$0(cmccsi.mhealth.app.sports.activity.RankingActivity) -> a
    void access$1(cmccsi.mhealth.app.sports.activity.RankingActivity,java.lang.String,android.content.Context) -> a
    java.lang.String access$2(cmccsi.mhealth.app.sports.activity.RankingActivity) -> b
    void access$3(cmccsi.mhealth.app.sports.activity.RankingActivity,java.util.ArrayList) -> a
    cmccsi.mhealth.app.sports.controller.PedoRankController access$4(cmccsi.mhealth.app.sports.activity.RankingActivity) -> c
    java.lang.String access$5(cmccsi.mhealth.app.sports.activity.RankingActivity) -> d
    java.lang.String access$6(cmccsi.mhealth.app.sports.activity.RankingActivity) -> e
    void access$7(cmccsi.mhealth.app.sports.activity.RankingActivity) -> f
    java.util.ArrayList access$8(cmccsi.mhealth.app.sports.activity.RankingActivity) -> g
    void access$9(cmccsi.mhealth.app.sports.activity.RankingActivity) -> h
    void access$10(cmccsi.mhealth.app.sports.activity.RankingActivity,java.lang.String) -> a
    void access$11(cmccsi.mhealth.app.sports.activity.RankingActivity,int) -> a
    void access$12(cmccsi.mhealth.app.sports.activity.RankingActivity,java.lang.String) -> b
    android.widget.RadioGroup access$13(cmccsi.mhealth.app.sports.activity.RankingActivity) -> i
    android.support.v4.view.ViewPager access$14(cmccsi.mhealth.app.sports.activity.RankingActivity) -> j
    int access$15(cmccsi.mhealth.app.sports.activity.RankingActivity) -> k
    cmccsi.mhealth.app.sports.activity.RankingActivity$TabFragmentPagerAdapter access$16(cmccsi.mhealth.app.sports.activity.RankingActivity) -> l
    int access$17(cmccsi.mhealth.app.sports.activity.RankingActivity) -> m
    android.widget.ImageView access$18(cmccsi.mhealth.app.sports.activity.RankingActivity) -> n
    void access$19(cmccsi.mhealth.app.sports.activity.RankingActivity,int) -> b
    cmccsi.mhealth.app.sports.view.SyncHorizontalScrollView access$20(cmccsi.mhealth.app.sports.activity.RankingActivity) -> o
cmccsi.mhealth.app.sports.activity.RankingActivity$1 -> cmccsi.mhealth.app.sports.activity.cu:
    cmccsi.mhealth.app.sports.activity.RankingActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
cmccsi.mhealth.app.sports.activity.RankingActivity$2 -> cmccsi.mhealth.app.sports.activity.cv:
    cmccsi.mhealth.app.sports.activity.RankingActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
cmccsi.mhealth.app.sports.activity.RankingActivity$3 -> cmccsi.mhealth.app.sports.activity.cw:
    cmccsi.mhealth.app.sports.activity.RankingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.RankingActivity$4 -> cmccsi.mhealth.app.sports.activity.cx:
    cmccsi.mhealth.app.sports.activity.RankingActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
cmccsi.mhealth.app.sports.activity.RankingActivity$5 -> cmccsi.mhealth.app.sports.activity.cy:
    cmccsi.mhealth.app.sports.activity.RankingActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
cmccsi.mhealth.app.sports.activity.RankingActivity$GetPedoRankListInfoTask -> cmccsi.mhealth.app.sports.activity.cz:
    cmccsi.mhealth.app.sports.activity.RankingActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Integer doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.activity.RankingActivity$TabFragmentPagerAdapter -> cmccsi.mhealth.app.sports.activity.RankingActivity$TabFragmentPagerAdapter:
    cmccsi.mhealth.app.sports.activity.RankingActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
cmccsi.mhealth.app.sports.activity.SettingAboutActivity -> cmccsi.mhealth.app.sports.activity.SettingAboutActivity:
    android.widget.ImageView mImageView -> a
    void onCreate(android.os.Bundle) -> onCreate
cmccsi.mhealth.app.sports.activity.SettingAboutActivity$1 -> cmccsi.mhealth.app.sports.activity.da:
    cmccsi.mhealth.app.sports.activity.SettingAboutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.SettingArea -> cmccsi.mhealth.app.sports.activity.SettingArea:
    android.widget.TextView mTvProvince -> a
    android.widget.TextView mTvCity -> b
    android.widget.ImageView mIvLine2 -> c
    android.widget.ListView mLvAreaList -> d
    android.widget.LinearLayout mLl_notice -> e
    cmccsi.mhealth.app.sports.bean.AreaListInfo mAreaList -> f
    android.content.Context mContext -> g
    cmccsi.mhealth.app.sports.activity.SettingArea$MyAdapter mAdapter -> h
    int mAreaType -> i
    java.lang.String mOrgId -> j
    java.util.Map mSelectedAreasMap -> k
    java.lang.String userId -> l
    java.lang.String countyId -> m
    java.lang.String oldOrgId -> n
    android.content.SharedPreferences sp -> o
    cmccsi.mhealth.app.sports.view.CommonAskDialog mAskDialog -> p
    android.os.Handler mHandler -> q
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void initViews() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void showAskDialog(java.lang.String) -> a
    int saveAreaInfo() -> b
    int getAreasByParentId() -> c
    void onClick(android.view.View) -> onClick
    void access$0(cmccsi.mhealth.app.sports.activity.SettingArea,cmccsi.mhealth.app.sports.activity.SettingArea$MyAdapter) -> a
    cmccsi.mhealth.app.sports.activity.SettingArea$MyAdapter access$1(cmccsi.mhealth.app.sports.activity.SettingArea) -> a
    cmccsi.mhealth.app.sports.bean.AreaListInfo access$2(cmccsi.mhealth.app.sports.activity.SettingArea) -> b
    android.widget.ListView access$3(cmccsi.mhealth.app.sports.activity.SettingArea) -> c
    android.widget.LinearLayout access$4(cmccsi.mhealth.app.sports.activity.SettingArea) -> d
    android.widget.TextView access$5(cmccsi.mhealth.app.sports.activity.SettingArea) -> e
    java.util.Map access$6(cmccsi.mhealth.app.sports.activity.SettingArea) -> f
    int access$7(cmccsi.mhealth.app.sports.activity.SettingArea) -> g
    android.widget.TextView access$8(cmccsi.mhealth.app.sports.activity.SettingArea) -> h
    android.widget.ImageView access$9(cmccsi.mhealth.app.sports.activity.SettingArea) -> i
    void access$10(cmccsi.mhealth.app.sports.activity.SettingArea,int) -> a
    android.content.SharedPreferences access$11(cmccsi.mhealth.app.sports.activity.SettingArea) -> j
    void access$12(cmccsi.mhealth.app.sports.activity.SettingArea) -> k
    android.content.Context access$13(cmccsi.mhealth.app.sports.activity.SettingArea) -> l
    int access$14(cmccsi.mhealth.app.sports.activity.SettingArea) -> m
    java.lang.String access$15(cmccsi.mhealth.app.sports.activity.SettingArea) -> n
    java.lang.String access$16(cmccsi.mhealth.app.sports.activity.SettingArea) -> o
    java.lang.String access$17(cmccsi.mhealth.app.sports.activity.SettingArea) -> p
    android.os.Handler access$18(cmccsi.mhealth.app.sports.activity.SettingArea) -> q
    java.lang.String access$19(cmccsi.mhealth.app.sports.activity.SettingArea) -> r
cmccsi.mhealth.app.sports.activity.SettingArea$1 -> cmccsi.mhealth.app.sports.activity.db:
    cmccsi.mhealth.app.sports.activity.SettingArea this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.SettingArea$2 -> cmccsi.mhealth.app.sports.activity.dc:
    cmccsi.mhealth.app.sports.activity.SettingArea this$0 -> a
    void onClick(int) -> a
cmccsi.mhealth.app.sports.activity.SettingArea$3 -> cmccsi.mhealth.app.sports.activity.dd:
    cmccsi.mhealth.app.sports.activity.SettingArea this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.SettingArea$4 -> cmccsi.mhealth.app.sports.activity.de:
    cmccsi.mhealth.app.sports.activity.SettingArea this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.SettingArea$MyAdapter -> cmccsi.mhealth.app.sports.activity.df:
    java.util.ArrayList areaInfoList -> b
    cmccsi.mhealth.app.sports.activity.SettingArea this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setAreaInfoList(java.util.ArrayList) -> a
    void clearAreaInfoList() -> a
cmccsi.mhealth.app.sports.activity.SettingArea$MyAdapter$ViewHolder -> cmccsi.mhealth.app.sports.activity.dg:
    android.widget.TextView mTextViewArea -> a
    cmccsi.mhealth.app.sports.activity.SettingArea$MyAdapter this$1 -> b
cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity -> cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity:
    java.lang.String TAG -> b
    android.content.Context mContext -> c
    android.widget.EditText mEditTextTargetNum -> d
    android.widget.Button mButtonOK -> e
    cmccsi.mhealth.app.sports.service.StepService mService -> f
    boolean isChanged -> g
    android.content.ServiceConnection mConnection -> h
    android.os.Handler mHandler -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void UiView() -> a
    java.lang.String access$0(cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity) -> a
    void access$1(cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity,cmccsi.mhealth.app.sports.service.StepService) -> a
    cmccsi.mhealth.app.sports.service.StepService access$2(cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity) -> b
    void access$3(cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity) -> c
    void access$4(cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity) -> d
    void access$5(cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity,java.lang.String) -> a
    android.widget.EditText access$6(cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity) -> e
    void access$7(cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity,java.lang.String,android.content.Context) -> a
cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity$1 -> cmccsi.mhealth.app.sports.activity.dh:
    cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity$2 -> cmccsi.mhealth.app.sports.activity.di:
    cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity$3 -> cmccsi.mhealth.app.sports.activity.dj:
    cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity access$0(cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity$3) -> a
cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity$3$1 -> cmccsi.mhealth.app.sports.activity.dk:
    cmccsi.mhealth.app.sports.activity.SettingTargetStepActivity$3 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity -> cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity:
    android.widget.EditText mEditText -> b
    android.content.Context mContext -> c
    android.os.Handler mHandler -> a
    void onCreate(android.os.Bundle) -> onCreate
    void UiView() -> a
    void access$0(cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity) -> a
    void access$1(cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity,java.lang.String) -> a
    void access$2(cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity,java.lang.String,int) -> a
    void access$3(cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity,java.lang.String,android.content.Context) -> a
    android.widget.EditText access$4(cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity) -> b
    android.content.Context access$5(cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity) -> c
cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity$1 -> cmccsi.mhealth.app.sports.activity.dl:
    cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity$2 -> cmccsi.mhealth.app.sports.activity.dm:
    cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity access$0(cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity$2) -> a
cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity$2$1 -> cmccsi.mhealth.app.sports.activity.dn:
    cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity$2 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity$3 -> cmccsi.mhealth.app.sports.activity.do:
    cmccsi.mhealth.app.sports.activity.SettingTargetWeightActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.WebViewActivity -> cmccsi.mhealth.app.sports.activity.WebViewActivity:
    android.widget.TextView mTextViewTitle -> b
    android.webkit.WebView mWebView -> c
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mProgressDialog -> d
    java.lang.String strURL -> e
    android.os.Handler handler -> a
    android.widget.ImageButton mBack -> f
    void onCreate(android.os.Bundle) -> onCreate
    void logic() -> a
    void onResume() -> onResume
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void initView() -> b
    void showProgressDialog(java.lang.String) -> a
    void dismiss() -> dismiss
    void onDestroy() -> onDestroy
    android.webkit.WebView access$0(cmccsi.mhealth.app.sports.activity.WebViewActivity) -> a
cmccsi.mhealth.app.sports.activity.WebViewActivity$1 -> cmccsi.mhealth.app.sports.activity.dp:
    cmccsi.mhealth.app.sports.activity.WebViewActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
cmccsi.mhealth.app.sports.activity.WebViewActivity$2 -> cmccsi.mhealth.app.sports.activity.dq:
    cmccsi.mhealth.app.sports.activity.WebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity -> cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity:
    int mAspectX -> d
    int mAspectY -> e
    android.os.Handler mHandler -> f
    int mOutputX -> g
    int mOutputY -> h
    boolean mScale -> i
    boolean mScaleUp -> j
    boolean mCircleCrop -> k
    java.lang.String mCachePath -> l
    boolean mSaving -> a
    cmccsi.mhealth.app.sports.activity.avatar.CropImageView mImageView -> m
    android.graphics.Bitmap mBitmap -> n
    cmccsi.mhealth.app.sports.activity.avatar.HighlightView mCrop -> b
    java.lang.Runnable mRunFaceDetection -> c
    void onCreate(android.os.Bundle) -> onCreate
    void startFaceDetection() -> a
    void startBackgroundJob(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity,java.lang.String,java.lang.String,java.lang.Runnable,android.os.Handler) -> a
    void onSaveClicked() -> b
    android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,boolean,boolean) -> a
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    cmccsi.mhealth.app.sports.activity.avatar.CropImageView access$0(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity) -> a
    android.graphics.Bitmap access$1(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity) -> b
    int access$2(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity) -> c
    int access$3(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity) -> d
    boolean access$4(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity) -> e
    android.os.Handler access$5(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity) -> f
    void access$6(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity) -> g
    void access$7(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity,android.graphics.Bitmap) -> a
cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$1 -> cmccsi.mhealth.app.sports.activity.avatar.a:
    float mScale -> a
    android.graphics.Matrix mImageMatrix -> b
    cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity this$0 -> c
    void makeDefault() -> a
    void run() -> run
    void access$0(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$1) -> a
    cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity access$1(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$1) -> b
cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$1$1 -> cmccsi.mhealth.app.sports.activity.avatar.b:
    cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$1 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$2 -> cmccsi.mhealth.app.sports.activity.avatar.c:
    cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$3 -> cmccsi.mhealth.app.sports.activity.avatar.d:
    cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$4 -> cmccsi.mhealth.app.sports.activity.avatar.e:
    cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity this$0 -> a
    void run() -> run
    cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity access$0(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$4) -> a
cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$4$1 -> cmccsi.mhealth.app.sports.activity.avatar.f:
    cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$4 this$1 -> a
    android.graphics.Bitmap val$b -> b
    java.util.concurrent.CountDownLatch val$latch -> c
    void run() -> run
cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$BackgroundJob -> cmccsi.mhealth.app.sports.activity.avatar.g:
    cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity mActivity -> a
    android.app.ProgressDialog mDialog -> b
    java.lang.Runnable mJob -> c
    android.os.Handler mHandler -> d
    java.lang.Runnable mCleanupRunner -> e
    void run() -> run
    void onActivityDestroyed(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> a
    void onActivityStopped(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> b
    void onActivityStarted(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> c
    cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity access$0(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$BackgroundJob) -> a
    android.app.ProgressDialog access$1(cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$BackgroundJob) -> b
cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$BackgroundJob$1 -> cmccsi.mhealth.app.sports.activity.avatar.h:
    cmccsi.mhealth.app.sports.activity.avatar.CropImageActivity$BackgroundJob this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.activity.avatar.CropImageView -> cmccsi.mhealth.app.sports.activity.avatar.CropImageView:
    java.util.ArrayList HighlightViews -> a
    cmccsi.mhealth.app.sports.activity.avatar.HighlightView mMotionHighlightView -> b
    float mLastX -> c
    float mLastY -> d
    int mMotionEdge -> e
    android.content.Context mContext -> f
    void onLayout(boolean,int,int,int,int) -> onLayout
    void zoomTo(float,float,float) -> a
    void postTranslate(float,float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void ensureVisible(cmccsi.mhealth.app.sports.activity.avatar.HighlightView) -> b
    void centerBasedOnHighlightView(cmccsi.mhealth.app.sports.activity.avatar.HighlightView) -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    void add(cmccsi.mhealth.app.sports.activity.avatar.HighlightView) -> a
    void clear() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setRecycler(cmccsi.mhealth.app.sports.activity.avatar.ImageViewTouchBase$Recycler) -> setRecycler
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setImageBitmapResetBase(android.graphics.Bitmap,boolean) -> a
    void setImageRotateBitmapResetBase(cmccsi.mhealth.app.sports.activity.avatar.RotateBitmap,boolean) -> a
cmccsi.mhealth.app.sports.activity.avatar.CropUtil -> cmccsi.mhealth.app.sports.activity.avatar.i:
    void closeIO(java.io.InputStream,java.io.OutputStream) -> a
    java.io.File makeTempFile(android.content.Context,android.net.Uri,java.lang.String,int) -> a
    byte[] compressPhotoByte(android.graphics.Bitmap,int) -> a
cmccsi.mhealth.app.sports.activity.avatar.HighlightView -> cmccsi.mhealth.app.sports.activity.avatar.j:
    android.view.View mContext -> a
    boolean mIsFocused -> b
    boolean mHidden -> c
    cmccsi.mhealth.app.sports.activity.avatar.HighlightView$ModifyMode mMode -> g
    android.graphics.Rect mDrawRect -> d
    android.graphics.RectF mImageRect -> h
    android.graphics.RectF mCropRect -> e
    android.graphics.Matrix mMatrix -> f
    boolean mMaintainAspectRatio -> i
    float mInitialAspectRatio -> j
    boolean mCircle -> k
    android.graphics.drawable.Drawable mResizeDrawableWidth -> l
    android.graphics.drawable.Drawable mResizeDrawableHeight -> m
    android.graphics.drawable.Drawable mResizeDrawableDiagonal -> n
    android.graphics.Paint mFocusPaint -> o
    android.graphics.Paint mNoFocusPaint -> p
    android.graphics.Paint mOutlinePaint -> q
    void init() -> d
    boolean hasFocus() -> a
    void setFocus(boolean) -> a
    void draw(android.graphics.Canvas) -> a
    void setMode(cmccsi.mhealth.app.sports.activity.avatar.HighlightView$ModifyMode) -> a
    int getHit(float,float) -> a
    void handleMotion(int,float,float) -> a
    void moveBy(float,float) -> b
    void growBy(float,float) -> c
    android.graphics.Rect getCropRect() -> b
    android.graphics.Rect computeLayout() -> e
    void invalidate() -> c
    void setup(android.graphics.Matrix,android.graphics.Rect,android.graphics.RectF,boolean,boolean) -> a
cmccsi.mhealth.app.sports.activity.avatar.HighlightView$ModifyMode -> cmccsi.mhealth.app.sports.activity.avatar.k:
    cmccsi.mhealth.app.sports.activity.avatar.HighlightView$ModifyMode None -> a
    cmccsi.mhealth.app.sports.activity.avatar.HighlightView$ModifyMode Move -> b
    cmccsi.mhealth.app.sports.activity.avatar.HighlightView$ModifyMode Grow -> c
    cmccsi.mhealth.app.sports.activity.avatar.HighlightView$ModifyMode[] ENUM$VALUES -> d
    cmccsi.mhealth.app.sports.activity.avatar.HighlightView$ModifyMode[] values() -> values
    cmccsi.mhealth.app.sports.activity.avatar.HighlightView$ModifyMode valueOf(java.lang.String) -> valueOf
cmccsi.mhealth.app.sports.activity.avatar.ImageViewTouchBase -> cmccsi.mhealth.app.sports.activity.avatar.l:
    android.graphics.Matrix mBaseMatrix -> g
    android.graphics.Matrix mSuppMatrix -> h
    android.graphics.Matrix mDisplayMatrix -> a
    float[] mMatrixValues -> b
    cmccsi.mhealth.app.sports.activity.avatar.RotateBitmap mBitmapDisplayed -> i
    int mThisWidth -> j
    int mThisHeight -> k
    float mMaxZoom -> l
    cmccsi.mhealth.app.sports.activity.avatar.ImageViewTouchBase$Recycler mRecycler -> c
    android.os.Handler mHandler -> m
    java.lang.Runnable mOnLayoutRunnable -> d
    void setRecycler(cmccsi.mhealth.app.sports.activity.avatar.ImageViewTouchBase$Recycler) -> setRecycler
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageBitmap(android.graphics.Bitmap,int) -> a
    void clear() -> a
    void setImageBitmapResetBase(android.graphics.Bitmap,boolean) -> a
    void setImageRotateBitmapResetBase(cmccsi.mhealth.app.sports.activity.avatar.RotateBitmap,boolean) -> a
    void center(boolean,boolean) -> a
    void init() -> c
    float getValue(android.graphics.Matrix,int) -> a
    float getScale(android.graphics.Matrix) -> a
    float getScale() -> getScale
    void getProperBaseMatrix(cmccsi.mhealth.app.sports.activity.avatar.RotateBitmap,android.graphics.Matrix) -> a
    android.graphics.Matrix getImageViewMatrix() -> getImageViewMatrix
    float maxZoom() -> b
    void zoomTo(float,float,float) -> a
    void zoomTo(float,float,float,float) -> a
    void zoomTo(float) -> a
    void postTranslate(float,float) -> a
    void panBy(float,float) -> b
cmccsi.mhealth.app.sports.activity.avatar.ImageViewTouchBase$1 -> cmccsi.mhealth.app.sports.activity.avatar.m:
    cmccsi.mhealth.app.sports.activity.avatar.ImageViewTouchBase this$0 -> a
    cmccsi.mhealth.app.sports.activity.avatar.RotateBitmap val$bitmap -> b
    boolean val$resetSupp -> c
    void run() -> run
cmccsi.mhealth.app.sports.activity.avatar.ImageViewTouchBase$2 -> cmccsi.mhealth.app.sports.activity.avatar.n:
    cmccsi.mhealth.app.sports.activity.avatar.ImageViewTouchBase this$0 -> a
    float val$durationMs -> b
    long val$startTime -> c
    float val$oldScale -> d
    float val$incrementPerMs -> e
    float val$centerX -> f
    float val$centerY -> g
    void run() -> run
cmccsi.mhealth.app.sports.activity.avatar.ImageViewTouchBase$Recycler -> cmccsi.mhealth.app.sports.activity.avatar.o:
    void recycle(android.graphics.Bitmap) -> a
cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity -> cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity:
    java.util.ArrayList mListeners -> a
    void addLifeCycleListener(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity$LifeCycleListener) -> a
    void removeLifeCycleListener(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity$LifeCycleListener) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onStop() -> onStop
cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity$LifeCycleAdapter -> cmccsi.mhealth.app.sports.activity.avatar.p:
    void onActivityCreated(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> d
    void onActivityDestroyed(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> a
    void onActivityStarted(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> c
    void onActivityStopped(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> b
cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity$LifeCycleListener -> cmccsi.mhealth.app.sports.activity.avatar.q:
    void onActivityCreated(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> d
    void onActivityDestroyed(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> a
    void onActivityStarted(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> c
    void onActivityStopped(cmccsi.mhealth.app.sports.activity.avatar.MonitoredActivity) -> b
cmccsi.mhealth.app.sports.activity.avatar.RotateBitmap -> cmccsi.mhealth.app.sports.activity.avatar.r:
    android.graphics.Bitmap mBitmap -> a
    int mRotation -> b
    void setRotation(int) -> a
    int getRotation() -> a
    android.graphics.Bitmap getBitmap() -> b
    void setBitmap(android.graphics.Bitmap) -> a
    android.graphics.Matrix getRotateMatrix() -> c
    boolean isOrientationChanged() -> d
    int getHeight() -> e
    int getWidth() -> f
cmccsi.mhealth.app.sports.adapter.ArrayListAdapter -> cmccsi.mhealth.app.sports.adapter.a:
    java.util.List mList -> a
    android.content.Context mContext -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void setList(java.util.List) -> a
    void setList(java.util.List,int) -> a
cmccsi.mhealth.app.sports.adapter.CampaignListAdapter -> cmccsi.mhealth.app.sports.adapter.b:
    java.util.List listItems -> a
    android.content.Context context -> b
    java.text.SimpleDateFormat df_yyyyMMdd -> c
    java.text.SimpleDateFormat df_M_d -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cmccsi.mhealth.app.sports.adapter.CampaignListAdapter$ViewHolder -> cmccsi.mhealth.app.sports.adapter.c:
    android.widget.TextView textview_racelist_nowTitle -> a
    android.widget.TextView textview_racelist_nowdate -> b
    android.widget.TextView textview_racelist_nowperson -> c
    cmccsi.mhealth.app.sports.adapter.CampaignListAdapter this$0 -> d
cmccsi.mhealth.app.sports.adapter.CampaignRankListAdapter -> cmccsi.mhealth.app.sports.adapter.d:
    android.view.LayoutInflater mInflater -> c
    android.content.Context mContext -> d
    cmccsi.mhealth.app.sports.adapter.CampaignRankListAdapter$ViewHolder mViewHolder -> e
    int mMaxValue -> f
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cmccsi.mhealth.app.sports.adapter.CampaignRankListAdapter$ViewHolder -> cmccsi.mhealth.app.sports.adapter.e:
    android.widget.ImageView mIvRankFirst -> a
    android.widget.TextView mTvRankSeq -> b
    android.widget.TextView mTvName -> c
    android.widget.TextView mTvOrg -> d
    android.widget.TextView mTvStepNum -> e
    cmccsi.mhealth.app.sports.view.ScoreBarView mSbvLine -> f
    cmccsi.mhealth.app.sports.adapter.CampaignRankListAdapter this$0 -> g
cmccsi.mhealth.app.sports.adapter.CommonFragmentPagerAdapter -> cmccsi.mhealth.app.sports.adapter.CommonFragmentPagerAdapter:
    java.util.ArrayList fragmentsList -> a
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getItemPosition(java.lang.Object) -> getItemPosition
cmccsi.mhealth.app.sports.adapter.ContactAdapter -> cmccsi.mhealth.app.sports.adapter.f:
    android.view.LayoutInflater inflater -> a
    android.content.Context mContext -> b
    java.util.List mContactList -> c
    void clear() -> a
    java.util.List getList() -> b
    void noAddAllSuccess(java.lang.String,java.lang.String,java.util.List) -> a
    int getCount() -> getCount
    cmccsi.mhealth.app.sports.bean.ContactInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    java.util.List access$1(cmccsi.mhealth.app.sports.adapter.ContactAdapter) -> a
cmccsi.mhealth.app.sports.adapter.ContactAdapter$1 -> cmccsi.mhealth.app.sports.adapter.g:
    cmccsi.mhealth.app.sports.adapter.ContactAdapter this$0 -> a
    int val$index -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
cmccsi.mhealth.app.sports.adapter.ContactAdapter$ViewHolder -> cmccsi.mhealth.app.sports.adapter.h:
    android.widget.TextView tv_name -> a
    android.widget.TextView tv_mobile -> b
    android.widget.TextView tv_added -> c
    android.widget.CheckBox cb_contact -> d
    cmccsi.mhealth.app.sports.adapter.ContactAdapter this$0 -> e
cmccsi.mhealth.app.sports.adapter.GPSXListViewAdapter -> cmccsi.mhealth.app.sports.adapter.i:
    java.util.List list -> a
    android.content.Context context -> b
    cmccsi.mhealth.app.sports.adapter.ViewHolder viewHolder -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void adapterFindViews(android.view.View) -> a
cmccsi.mhealth.app.sports.adapter.MessageAdapter -> cmccsi.mhealth.app.sports.adapter.j:
    android.content.Context context -> a
    cmccsi.mhealth.app.sports.bean.RequestListInfo frliReqData -> b
    cmccsi.mhealth.app.sports.adapter.MessageAdapter$ListItemClickHelp callback -> c
    void setFrliReqData(cmccsi.mhealth.app.sports.bean.RequestListInfo,cmccsi.mhealth.app.sports.adapter.MessageAdapter$ListItemClickHelp) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cmccsi.mhealth.app.sports.adapter.MessageAdapter$ListItemClickHelp access$0(cmccsi.mhealth.app.sports.adapter.MessageAdapter) -> a
cmccsi.mhealth.app.sports.adapter.MessageAdapter$1 -> cmccsi.mhealth.app.sports.adapter.k:
    cmccsi.mhealth.app.sports.adapter.MessageAdapter this$0 -> a
    cmccsi.mhealth.app.sports.bean.RequestData val$requestData -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.adapter.MessageAdapter$Holder -> cmccsi.mhealth.app.sports.adapter.l:
    android.widget.TextView title -> a
    android.widget.TextView content -> b
    android.widget.TextView acceptbt -> c
    android.widget.ImageView avatar -> d
    cmccsi.mhealth.app.sports.adapter.MessageAdapter this$0 -> e
cmccsi.mhealth.app.sports.adapter.MessageAdapter$ListItemClickHelp -> cmccsi.mhealth.app.sports.adapter.m:
    void onClick(cmccsi.mhealth.app.sports.bean.RequestData) -> a
cmccsi.mhealth.app.sports.adapter.MyFragmentAdapter -> cmccsi.mhealth.app.sports.adapter.MyFragmentAdapter:
    java.util.ArrayList list -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
cmccsi.mhealth.app.sports.adapter.OpinionListAdapter -> cmccsi.mhealth.app.sports.adapter.n:
    java.util.ArrayList opinionList -> a
    android.content.Context context -> b
    android.view.LayoutInflater mInflater -> c
    cmccsi.mhealth.app.sports.appversion.OpinionInstance itemOpinion -> d
    void setDeviceList(java.util.ArrayList) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cmccsi.mhealth.app.sports.adapter.OpinionListAdapter$HoldView -> cmccsi.mhealth.app.sports.adapter.o:
    android.widget.TextView title -> a
    android.widget.TextView time -> b
    android.widget.TextView isReply -> c
    void initView(android.view.View) -> a
cmccsi.mhealth.app.sports.adapter.RankingListAdapter -> cmccsi.mhealth.app.sports.adapter.p:
    android.view.LayoutInflater mInflater -> c
    android.content.Context mContext -> d
    cmccsi.mhealth.app.sports.adapter.RankingListAdapter$ViewHolder mViewHolder -> e
    int mMaxValue -> f
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cmccsi.mhealth.app.sports.adapter.RankingListAdapter$ViewHolder -> cmccsi.mhealth.app.sports.adapter.q:
    android.widget.ImageView mIvRankFirst -> a
    android.widget.TextView mTvRankSeq -> b
    android.widget.TextView mTvName -> c
    android.widget.TextView mTvOrg -> d
    android.widget.TextView mTvStepNum -> e
    cmccsi.mhealth.app.sports.view.ScoreBarView mSbvLine -> f
    cmccsi.mhealth.app.sports.adapter.RankingListAdapter this$0 -> g
cmccsi.mhealth.app.sports.adapter.ViewHolder -> cmccsi.mhealth.app.sports.adapter.r:
    android.widget.TextView textview_map_history_time -> a
    android.widget.TextView textview_kilometre -> b
    android.widget.TextView textview_kaluli -> c
    android.widget.TextView textview_duration -> d
    android.widget.ImageView imageViewWalkType -> e
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity -> cmccsi.mhealth.app.sports.appversion.AddDeviceActivity:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity mContext -> a
    android.widget.RelativeLayout mRlDeviceType -> b
    android.widget.LinearLayout mLlDeviceImage -> c
    android.widget.ImageView mIvDeviceImage -> d
    android.widget.EditText mEtDeviceId -> e
    android.widget.TextView mTvDeviceType -> f
    android.widget.TextView mTvDeviceName -> g
    android.widget.TextView mTvDeviceInfo -> h
    android.widget.Button mBtnSearch -> i
    android.app.Dialog mDialogDeviceType -> j
    android.app.Dialog mDialogDevice -> k
    cmccsi.mhealth.app.sports.view.CustomProgressDialog progressDialog -> l
    java.lang.String mDeviceType -> m
    java.lang.String mDeviceId -> n
    java.util.List mBleMacList -> o
    java.util.List mDeviceTypeList -> p
    android.widget.ArrayAdapter mDeviceTypeArrayAdapter -> q
    android.widget.ArrayAdapter mDeviceArrayAdapter -> r
    android.bluetooth.BluetoothAdapter mBleAdapter -> s
    java.lang.String mBleType -> t
    boolean mScanning -> u
    boolean mConnecting -> v
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager mJWDeviceManager -> w
    android.os.Handler mHandlerTemp -> x
    java.lang.Runnable _ble_scan_timeout -> y
    java.lang.Runnable _bracelet_connect_timeout -> z
    java.lang.Runnable _bracelet_get_type -> A
    android.bluetooth.BluetoothAdapter$LeScanCallback mLeScanCallback -> B
    android.widget.AdapterView$OnItemClickListener mDeviceTypeClickListener -> C
    android.widget.AdapterView$OnItemClickListener mDeviceClickListener -> D
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack mBaseCallBack -> E
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void initViews() -> a
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void initDialog(android.app.Dialog,java.lang.String) -> a
    void showDeviceTypeDialog(java.util.List) -> a
    void showDeviceDialog() -> b
    void createLeScanCallback() -> c
    void afterSelectDeviceType(cmccsi.mhealth.app.sports.bean.DeviceTypeInfo) -> a
    void showProgress(java.lang.String) -> a
    void close() -> d
    boolean access$0(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> a
    android.os.Handler access$1(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> b
    java.lang.Runnable access$2(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> c
    void access$3(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity,boolean) -> a
    android.bluetooth.BluetoothAdapter access$4(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> d
    android.bluetooth.BluetoothAdapter$LeScanCallback access$5(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> e
    boolean access$6(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> f
    java.lang.Runnable access$7(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> g
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity access$8(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> h
    android.widget.EditText access$9(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> i
    void access$10(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity,boolean) -> b
    void access$11(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> j
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager access$12(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> k
    void access$13(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity,java.lang.String) -> a
    java.lang.String access$14(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> l
    java.util.List access$15(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> m
    void access$16(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity,cmccsi.mhealth.app.sports.bean.DeviceTypeInfo) -> a
    android.app.Dialog access$17(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> n
    void access$18(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity,com.cmcc.bracelet.lsjx.libs.JWDeviceManager) -> a
    void access$19(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity,java.lang.String) -> b
    java.util.List access$20(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> o
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack access$21(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> p
    android.app.Dialog access$22(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> q
    java.lang.Runnable access$23(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> r
    void access$24(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity,java.util.List) -> a
    void access$25(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity,java.util.List) -> b
    java.lang.String access$26(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> s
    java.lang.String access$27(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> t
    android.widget.ArrayAdapter access$28(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity) -> u
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$1 -> cmccsi.mhealth.app.sports.appversion.a:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$2 -> cmccsi.mhealth.app.sports.appversion.b:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$3 -> cmccsi.mhealth.app.sports.appversion.c:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$4 -> cmccsi.mhealth.app.sports.appversion.d:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$5 -> cmccsi.mhealth.app.sports.appversion.e:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$6 -> cmccsi.mhealth.app.sports.appversion.f:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    void connected(int,java.lang.String) -> a
    void disConnected() -> a
    void pedoDataPercent(int) -> a
    void pedoDataReceived(cmccsi.mhealth.app.sports.bean.PedometorListInfo,java.util.List) -> a
    void realTimeDataReceived(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    void ekgStop(int,int) -> a
    void ekgDataReceived(int,java.lang.Object) -> a
    void exception(int,java.lang.String) -> b
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$7 -> cmccsi.mhealth.app.sports.appversion.g:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$8 -> cmccsi.mhealth.app.sports.appversion.h:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$9 -> cmccsi.mhealth.app.sports.appversion.i:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    void onLeScan(android.bluetooth.BluetoothDevice,int,byte[]) -> onLeScan
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity access$0(cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$9) -> a
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$9$1 -> cmccsi.mhealth.app.sports.appversion.j:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$9 this$1 -> a
    android.bluetooth.BluetoothDevice val$device -> b
    void run() -> run
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$AddDeviceTask -> cmccsi.mhealth.app.sports.appversion.k:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    cmccsi.mhealth.app.sports.bean.BackInfo doInBackground(org.apache.commons.lang.ObjectUtils$Null[]) -> a
    void onPostExecute(cmccsi.mhealth.app.sports.bean.BackInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.appversion.AddDeviceActivity$DownLoadDeviceTypeTask -> cmccsi.mhealth.app.sports.appversion.l:
    cmccsi.mhealth.app.sports.appversion.AddDeviceActivity this$0 -> a
    java.lang.Integer doInBackground(org.apache.commons.lang.ObjectUtils$Null[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.appversion.OpinionInstance -> cmccsi.mhealth.app.sports.appversion.m:
    long serialVersionUID -> a
    java.lang.String feedbackId -> b
    int feedbackTypeDict -> c
    java.lang.String feedbackTitle -> d
    java.lang.String feedbackContent -> e
    java.lang.String createTime -> f
    int replyMark -> g
    java.lang.String replyContent -> h
    java.lang.String replyTime -> i
    void setFeedbackId(java.lang.String) -> a
    void setFeedbackTypeDict(int) -> a
    java.lang.String getFeedbackTitle() -> a
    void setFeedbackTitle(java.lang.String) -> b
    java.lang.String getFeedbackContent() -> b
    void setFeedbackContent(java.lang.String) -> c
    java.lang.String getCreateTime() -> c
    void setCreateTime(java.lang.String) -> d
    int getReplyMark() -> d
    void setReplyMark(int) -> b
    java.lang.String getReplyContent() -> e
    void setReplyContent(java.lang.String) -> e
    java.lang.String getReplyTime() -> f
    void setReplyTime(java.lang.String) -> f
    cmccsi.mhealth.app.sports.appversion.OpinionInstance paseGetFeedbackList(org.json.JSONObject) -> a
cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity -> cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity:
    java.lang.String TAG -> a
    android.widget.LinearLayout mLinearLayoutPhone -> b
    android.widget.RelativeLayout mLinearLayoutPassword -> c
    android.widget.TextView mTextViewTitle -> d
    android.widget.EditText mEditTelphone -> e
    android.widget.EditText mEditPassword -> f
    android.widget.CheckBox eCheckBoxRemember -> g
    android.widget.CheckBox mCheckBoxAuto -> h
    android.widget.TextView mTextViewForgetPassword -> i
    java.lang.String mPhoneNum -> j
    java.lang.String mPassword -> k
    int mFlagLogin -> l
    int internet -> m
    android.widget.ImageView mBtnOk -> n
    java.lang.Boolean mCheckdRemember -> o
    java.lang.Boolean mCheckdAuto -> p
    android.widget.TextView mTextViewRegister -> q
    android.content.SharedPreferences info -> r
    java.lang.String mOldUserUid -> s
    java.lang.String userUid -> t
    android.os.Handler mHandler -> u
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    void checkNetworkState() -> c
    void getPedometorInfo(java.lang.String,java.lang.String,java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loginSuccess(java.lang.String,java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void restoreDeviceInfo() -> d
    java.lang.String getVersion() -> b
    void clearServise() -> e
    void access$0(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> a
    void access$1(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> b
    void access$2(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity,android.app.Activity,java.lang.Class,android.os.Bundle,boolean) -> a
    void access$3(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity,java.lang.String) -> a
    java.lang.String access$4(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> c
    java.lang.String access$5(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> d
    void access$6(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> e
    android.os.Handler access$7(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> f
    android.widget.LinearLayout access$8(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> g
    android.widget.RelativeLayout access$9(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> h
    java.lang.String access$10(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> i
    android.widget.EditText access$11(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> j
    java.lang.String access$13(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> k
    void access$14(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity,int) -> a
    android.widget.ImageView access$15(cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity) -> l
cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity$1 -> cmccsi.mhealth.app.sports.appversion.n:
    cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity$2 -> cmccsi.mhealth.app.sports.appversion.o:
    cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity$3 -> cmccsi.mhealth.app.sports.appversion.p:
    cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity$4 -> cmccsi.mhealth.app.sports.appversion.q:
    cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity$5 -> cmccsi.mhealth.app.sports.appversion.r:
    cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity$6 -> cmccsi.mhealth.app.sports.appversion.s:
    cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity$8 -> cmccsi.mhealth.app.sports.appversion.t:
    cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity this$0 -> a
    java.lang.String val$telephone -> b
    java.lang.String val$pwd -> c
    void run() -> run
cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity$InitAccountRunnable -> cmccsi.mhealth.app.sports.appversion.u:
    cmccsi.mhealth.app.sports.appversion.PreLoadLoginActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.appversion.RegisteActivity -> cmccsi.mhealth.app.sports.appversion.RegisteActivity:
    java.lang.String userName -> a
    java.lang.String password -> b
    java.lang.String password2 -> c
    java.lang.String telephoneNum -> d
    java.lang.String identifyingCode -> e
    android.widget.EditText userNameView -> f
    android.widget.EditText passwordView -> g
    android.widget.EditText password2View -> h
    android.widget.EditText telephoneNumView -> i
    android.widget.EditText identifyingCodeView -> j
    android.widget.TextView node1 -> k
    android.widget.TextView node2 -> l
    android.widget.CheckBox radioButton -> m
    android.widget.Button sendIdentifyingCodeView -> n
    android.widget.Button okView -> o
    int timeCount -> p
    android.os.Handler timeHandler -> q
    void onCreate(android.os.Bundle) -> onCreate
    void initeView() -> b
    void registeUser() -> a
    void sendPwdMessage() -> c
    boolean checkPassWord() -> d
    boolean checkIsNull() -> e
    boolean checkUserName() -> f
    void onResume() -> onResume
    android.text.SpannedString setHintSize(java.lang.String) -> a
    void access$0(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> a
    int access$1(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> b
    void access$2(cmccsi.mhealth.app.sports.appversion.RegisteActivity,int) -> a
    android.widget.Button access$3(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> c
    android.os.Handler access$4(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> d
    android.widget.CheckBox access$5(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> e
    boolean access$6(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> f
    boolean access$7(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> g
    boolean access$8(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> h
    void access$9(cmccsi.mhealth.app.sports.appversion.RegisteActivity,java.lang.String,android.content.Context,boolean) -> a
    android.widget.EditText access$10(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> i
    void access$11(cmccsi.mhealth.app.sports.appversion.RegisteActivity,java.lang.String) -> a
    java.lang.String access$12(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> j
    void access$13(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> k
    java.lang.String access$14(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> l
    java.lang.String access$15(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> m
    java.lang.String access$16(cmccsi.mhealth.app.sports.appversion.RegisteActivity) -> n
cmccsi.mhealth.app.sports.appversion.RegisteActivity$1 -> cmccsi.mhealth.app.sports.appversion.v:
    cmccsi.mhealth.app.sports.appversion.RegisteActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.appversion.RegisteActivity$2 -> cmccsi.mhealth.app.sports.appversion.w:
    cmccsi.mhealth.app.sports.appversion.RegisteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.appversion.RegisteActivity$3 -> cmccsi.mhealth.app.sports.appversion.x:
    cmccsi.mhealth.app.sports.appversion.RegisteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.appversion.RegisteActivity$4 -> cmccsi.mhealth.app.sports.appversion.y:
    cmccsi.mhealth.app.sports.appversion.RegisteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.appversion.RegisteActivity$5 -> cmccsi.mhealth.app.sports.appversion.z:
    cmccsi.mhealth.app.sports.appversion.RegisteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.appversion.RegisteActivity$6 -> cmccsi.mhealth.app.sports.appversion.aa:
    cmccsi.mhealth.app.sports.appversion.RegisteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.appversion.RegisteActivity$7 -> cmccsi.mhealth.app.sports.appversion.ab:
    cmccsi.mhealth.app.sports.appversion.RegisteActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.appversion.RegisteActivity$8 -> cmccsi.mhealth.app.sports.appversion.ac:
    cmccsi.mhealth.app.sports.appversion.RegisteActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp -> cmccsi.mhealth.app.sports.appversion.SettingFragmentApp:
    java.lang.String ImgUrl -> b
    int[] mRelativeLayoutIds -> c
    android.widget.TextView mTextViewSettingPhoneNum -> d
    android.widget.TextView mTextViewSettingSportTargetNum -> e
    android.widget.TextView mTextViewSettingNyGroup -> n
    android.widget.TextView mTextViewVersion -> o
    java.lang.String mPhoneNum -> p
    android.widget.RelativeLayout mRelativeLayout -> q
    android.widget.RelativeLayout mWeightBar -> r
    android.widget.RelativeLayout mHeightBar -> s
    android.widget.RelativeLayout mBindDeviceBar -> t
    android.widget.RelativeLayout mRelativeLayoutArea -> u
    android.widget.RelativeLayout mRl_step_switch -> v
    android.widget.RelativeLayout mrl_bracelet_setting -> w
    android.widget.RelativeLayout setting_problem -> x
    android.widget.TextView mTvAreaDetail -> y
    android.widget.TextView mTvArea -> z
    cmccsi.mhealth.app.sports.view.RoundAngleImageView mImageViewAvatar -> A
    int mVerCode -> B
    java.lang.String mVerName -> C
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mProgressDialog -> D
    cmccsi.mhealth.app.sports.service.StepService_GPS mService -> E
    java.lang.String requestURL -> F
    java.lang.String[] items -> G
    java.lang.String mFileImagePath -> H
    java.lang.String mFileImagePathDexed -> I
    android.widget.TextView mTextViewTitle -> J
    android.widget.ImageButton mBack -> K
    int mFlag -> L
    android.widget.TextView mTextViewBirthday -> M
    android.widget.TextView mTextViewWeight -> N
    cmccsi.mhealth.app.sports.view.WiperSwitch mSw_startStep -> O
    cmccsi.mhealth.app.sports.view.WiperSwitch mSw_bootRun -> P
    cmccsi.mhealth.app.sports.service.StepService_GPS$OnMyLocationChangeListener changeListener -> a
    android.content.ServiceConnection mConnection -> Q
    android.os.Handler handler -> R
    java.lang.String mAvatarName -> S
    java.lang.String mSex -> T
    android.widget.TextView mHeightTextView -> U
    android.widget.TextView mTargetTextView -> V
    android.widget.TextView mNicknameTextView -> W
    cmccsi.mhealth.app.sports.view.WiperSwitch$OnChangedListener stepchangeListener -> X
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void setValueFromShare() -> j
    android.graphics.drawable.Drawable getImageAsync(android.widget.ImageView,java.lang.String) -> a
    android.graphics.drawable.Drawable getImageAsync(android.widget.ImageView,java.lang.String,java.lang.String) -> a
    android.graphics.drawable.Drawable getImageAsync(android.widget.ImageView,java.lang.String,java.lang.String,int) -> a
    void getAvatar() -> k
    void initView() -> l
    void onResume() -> onResume
    void cropPhoto(android.net.Uri,java.lang.String,int) -> a
    void openDialogSetFaceImage() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void changeAreaInfoText() -> m
    void clearServise() -> n
    void onClick(android.view.View) -> onClick
    void updateVersion() -> o
    void updateAPK() -> p
    void onUploadProcess(int) -> a
    void initUpload(int) -> b
    void onUploadDone(int,java.lang.String) -> a
    void toUploadFile() -> q
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void access$0(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp,cmccsi.mhealth.app.sports.service.StepService_GPS) -> a
    cmccsi.mhealth.app.sports.service.StepService_GPS access$1(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp) -> a
    void access$2(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp) -> b
    java.lang.String access$3() -> e
    android.content.SharedPreferences access$4(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp,java.lang.String,int) -> a
    java.lang.String access$5() -> f
    cmccsi.mhealth.app.sports.view.RoundAngleImageView access$6(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp) -> c
    void access$7(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp,int) -> a
    void access$8(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp,java.lang.String) -> a
    android.support.v4.app.FragmentActivity access$9(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp) -> d
    java.lang.String access$10() -> g
    java.lang.String access$11(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp) -> e
    void access$12(java.lang.String) -> a
    void access$13(java.lang.String) -> b
    java.lang.String access$14(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp) -> f
    java.lang.String access$15(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp) -> g
    void access$16(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp) -> h
    android.widget.RelativeLayout access$17(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp) -> i
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$1 -> cmccsi.mhealth.app.sports.appversion.ad:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp this$0 -> a
    void timer(java.lang.String) -> a
    void change(cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> a
    void changeAltitude(double) -> a
    void gpsIntensity(int) -> a
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$10 -> cmccsi.mhealth.app.sports.appversion.ae:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$2 -> cmccsi.mhealth.app.sports.appversion.af:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$3 -> cmccsi.mhealth.app.sports.appversion.ag:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$4 -> cmccsi.mhealth.app.sports.appversion.ah:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp this$0 -> a
    void OnChanged(cmccsi.mhealth.app.sports.view.WiperSwitch,boolean) -> a
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$5 -> cmccsi.mhealth.app.sports.appversion.ai:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$6 -> cmccsi.mhealth.app.sports.appversion.aj:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$7 -> cmccsi.mhealth.app.sports.appversion.ak:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$8 -> cmccsi.mhealth.app.sports.appversion.al:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp this$0 -> a
    void run() -> run
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp access$0(cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$8) -> a
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$8$1 -> cmccsi.mhealth.app.sports.appversion.am:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$8 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.appversion.SettingFragmentApp$9 -> cmccsi.mhealth.app.sports.appversion.an:
    cmccsi.mhealth.app.sports.appversion.SettingFragmentApp this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.appversion.WebReader -> cmccsi.mhealth.app.sports.appversion.ao:
    org.apache.http.params.HttpParams httpParams -> a
    org.apache.http.client.HttpClient httpClient -> b
    java.lang.String doGet(java.lang.String) -> a
    java.lang.String doPost(java.lang.String,java.util.List) -> a
    org.apache.http.client.HttpClient getHttpClient() -> a
cmccsi.mhealth.app.sports.appversion.WebServiceManage -> cmccsi.mhealth.app.sports.appversion.ap:
    java.lang.String web -> c
    java.lang.String[] serviceList -> a
    java.lang.String[][] argList -> b
    java.lang.String post(java.util.Map,int) -> a
    java.lang.String get(java.util.Map,int) -> b
cmccsi.mhealth.app.sports.basic.Base64 -> cmccsi.mhealth.app.sports.basic.a:
    byte[] ALPHABET -> a
    byte[] DECODABET -> b
    java.lang.String encodeBytes(byte[],boolean) -> a
    java.lang.String encodeBytes(byte[],int,int,boolean) -> a
    byte[] encode3to4(byte[],int,int,byte[],int) -> a
cmccsi.mhealth.app.sports.basic.BaseActivity -> cmccsi.mhealth.app.sports.basic.BaseActivity:
    java.util.List allActivity -> allActivity
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mProgressDialog -> mProgressDialog
    android.app.AlertDialog mAlertDialogQuit -> mAlertDialogQuit
    java.lang.String TAG -> TAG
    android.widget.Toast mToast -> mToast
    android.os.Handler mHandler -> mHandler
    void BaseBackKey(java.lang.String,android.app.Activity) -> BaseBackKey
    void onStart() -> onStart
    void onStop() -> onStop
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View findView(int) -> findView
    void onDestroy() -> onDestroy
    org.achartengine.renderer.XYMultipleSeriesRenderer getBarRenderer() -> getBarRenderer
    void BaseToast(java.lang.String) -> BaseToast
    void BaseToast(java.lang.String,int) -> BaseToast
    void showProgressDialog(java.lang.String,android.content.Context) -> showProgressDialog
    void showProgressDialog(java.lang.String,android.content.Context,boolean) -> showProgressDialog
    void dismiss() -> dismiss
    void tipExit() -> tipExit
    android.view.Display getDisplayParems() -> getDisplayParems
    void messagesManager(int) -> messagesManager
    void intentActivity(android.app.Activity,java.lang.Class,android.os.Bundle,boolean) -> intentActivity
    void restartApplication() -> restartApplication
    void onFocusChange(boolean,android.view.View) -> onFocusChange
    void finishActivity() -> finishActivity
cmccsi.mhealth.app.sports.basic.BaseActivity$1 -> cmccsi.mhealth.app.sports.basic.b:
    cmccsi.mhealth.app.sports.basic.BaseActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.basic.BaseActivity$2 -> cmccsi.mhealth.app.sports.basic.c:
    cmccsi.mhealth.app.sports.basic.BaseActivity this$0 -> a
    android.app.Activity val$activity -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.basic.BaseActivity$3 -> cmccsi.mhealth.app.sports.basic.d:
    cmccsi.mhealth.app.sports.basic.BaseActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.basic.BaseActivity$4 -> cmccsi.mhealth.app.sports.basic.e:
    cmccsi.mhealth.app.sports.basic.BaseActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.basic.BaseActivity$5 -> cmccsi.mhealth.app.sports.basic.f:
    cmccsi.mhealth.app.sports.basic.BaseActivity this$0 -> a
    android.view.View val$view -> b
    boolean val$isFocus -> c
    void run() -> run
cmccsi.mhealth.app.sports.basic.BaseFragment -> cmccsi.mhealth.app.sports.basic.BaseFragment:
    android.support.v4.app.FragmentActivity mActivity -> f
    android.view.View mView -> g
    android.content.SharedPreferences mSharedInfo -> h
    android.content.SharedPreferences sp -> i
    cmccsi.mhealth.app.sports.basic.BaseFragment$OnFragmentDestroyListener dlistener -> j
    android.widget.Toast mToast -> a
    android.widget.TextView mTextViewTitle -> k
    android.widget.ImageView mImageButtonBack -> l
    android.os.Handler mHandler -> m
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void BaseToast(java.lang.String) -> c
    void BaseToast(java.lang.String,int) -> a
    android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> b
    android.content.SharedPreferences getSharedPreferences() -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> d
    void toast(java.lang.String) -> d
    android.app.Activity getMyActivity() -> i
    void messagesManager(int) -> c
    android.view.View findView(int) -> d
    void onResume() -> onResume
    void onDestroy() -> onDestroy
cmccsi.mhealth.app.sports.basic.BaseFragment$1 -> cmccsi.mhealth.app.sports.basic.g:
    cmccsi.mhealth.app.sports.basic.BaseFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.basic.BaseFragment$OnFragmentDestroyListener -> cmccsi.mhealth.app.sports.basic.h:
    void onDestroy() -> a
cmccsi.mhealth.app.sports.basic.BaseMapFragment -> cmccsi.mhealth.app.sports.basic.BaseMapFragment:
    com.baidu.mapapi.map.MapView mMapView -> e
    com.baidu.mapapi.map.MyLocationData mLocData -> n
    com.baidu.location.LocationClient mLocClient -> o
    com.baidu.mapapi.map.BaiduMap mBaiduMap -> p
    com.baidu.mapapi.map.UiSettings mUiSettings -> q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroy() -> onDestroy
    void initMap(com.baidu.mapapi.map.MapView) -> a
    void setLocationOption() -> d
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
cmccsi.mhealth.app.sports.basic.BaseWebViewFragment -> cmccsi.mhealth.app.sports.basic.BaseWebViewFragment:
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
cmccsi.mhealth.app.sports.basic.MapApplication -> cmccsi.mhealth.app.sports.basic.MapApplication:
    cmccsi.mhealth.app.sports.basic.MapApplication mInstance -> c
    boolean m_bKeyRight -> a
    java.util.ArrayList activities -> d
    java.lang.String LTAG -> e
    cmccsi.mhealth.app.sports.basic.MapApplication$SDKReceiver mReceiver -> f
    com.tencent.mm.sdk.openapi.IWXAPI mWeiXinAPI -> b
    void onCreate() -> onCreate
    void initEngineManager(android.content.Context) -> a
    cmccsi.mhealth.app.sports.basic.MapApplication getInstance() -> a
    void addActivity(android.app.Activity) -> a
    void finishActivity() -> b
    void finishReceive() -> c
    void onLowMemory() -> onLowMemory
    void onTerminate() -> onTerminate
    void resgisterWXAPI() -> e
    java.lang.String access$0() -> d
cmccsi.mhealth.app.sports.basic.MapApplication$SDKReceiver -> cmccsi.mhealth.app.sports.basic.i:
    cmccsi.mhealth.app.sports.basic.MapApplication this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cmccsi.mhealth.app.sports.basic.SampleActivity -> cmccsi.mhealth.app.sports.basic.SampleActivity:
    android.widget.TextView mTextViewTitle -> a
    android.widget.ImageView mBack -> b
    android.content.SharedPreferences sp -> c
    java.lang.String mPhoneNum -> d
    java.lang.String mPassword -> e
    android.widget.Toast mToast -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initSampleViews() -> b
    void initClickers() -> a
    void BaseToast(java.lang.String) -> BaseToast
    void BaseToast(java.lang.String,int) -> BaseToast
    void loadNessesaryInfo() -> c
    void onResume() -> onResume
cmccsi.mhealth.app.sports.basic.SampleActivity$1 -> cmccsi.mhealth.app.sports.basic.j:
    cmccsi.mhealth.app.sports.basic.SampleActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.basic.SampleFragment -> cmccsi.mhealth.app.sports.basic.SampleFragment:
    android.widget.TextView mTextViewTitle -> n
    android.widget.ImageView mBack -> o
    java.lang.String mPhoneNum -> p
    java.lang.String mPassword -> q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> d
    void onClick(android.view.View) -> onClick
    void findViews() -> a
    void loadNessesaryInfo() -> e
    void clickListner() -> b
    void loadLogic() -> c
cmccsi.mhealth.app.sports.basic.SendMsgBroadCast -> cmccsi.mhealth.app.sports.basic.SendMsgBroadCast:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cmccsi.mhealth.app.sports.bean.AcceptFriendRequestInfo -> cmccsi.mhealth.app.sports.bean.a:
    java.lang.String TAG -> a
    java.lang.String result -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
cmccsi.mhealth.app.sports.bean.ActivityDetailData_new -> cmccsi.mhealth.app.sports.bean.b:
    int id -> a
    java.lang.String company_code -> b
    int company_id -> c
    java.lang.String company_name -> d
    int aimstep -> e
    int topValue -> f
    java.lang.String name -> g
    java.lang.String description -> h
    java.lang.String startdate -> i
    java.lang.String enddate -> j
    java.util.List medalinfo -> k
    java.util.List levelList -> l
    java.util.List userRank -> m
    java.util.List groupRank -> n
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.ActivityInfo -> cmccsi.mhealth.app.sports.bean.c:
    java.lang.String TAG -> a
    java.lang.String dataType -> b
    java.util.List activitynow -> c
    java.util.List activityfinish -> d
    java.util.List activityfuture -> e
    int activitynownum -> f
    int activityoldnum -> g
    int activityfuturenum -> h
    void setValue(cmccsi.mhealth.app.sports.bean.ActivityInfo) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.AreaInfo -> cmccsi.mhealth.app.sports.bean.d:
    java.lang.String TAG -> a
    int orgId -> b
    java.lang.String orgName -> c
    int getOrgId() -> a
    java.lang.String getOrgName() -> b
cmccsi.mhealth.app.sports.bean.AreaListInfo -> cmccsi.mhealth.app.sports.bean.e:
    java.util.ArrayList datavalue -> a
    java.lang.String message -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
cmccsi.mhealth.app.sports.bean.AuthUser -> cmccsi.mhealth.app.sports.bean.f:
    java.lang.Integer userId -> a
    java.lang.String userUid -> b
    java.lang.Integer getUserId() -> a
    java.lang.String getUserUid() -> b
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.BackInfo -> cmccsi.mhealth.app.sports.bean.BackInfo:
    java.lang.String TAG -> a
    java.lang.String message -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.BaseNetItem -> cmccsi.mhealth.app.sports.bean.g:
    java.lang.String status -> o
    java.lang.String reason -> p
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void initialDate() -> c
cmccsi.mhealth.app.sports.bean.CampaignRankListInfo -> cmccsi.mhealth.app.sports.bean.h:
    java.util.List userRank -> a
    java.lang.String message -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
cmccsi.mhealth.app.sports.bean.CommonBottomMenuItem -> cmccsi.mhealth.app.sports.bean.i:
    int id -> a
    java.lang.String menuName -> b
    int menuIcon -> c
    java.lang.String getMenuName() -> a
    int getMenuIcon() -> b
cmccsi.mhealth.app.sports.bean.ContactInfo -> cmccsi.mhealth.app.sports.bean.j:
    java.lang.String userid -> a
    java.lang.String uid -> b
    java.lang.String phonenumber -> c
    java.lang.String phonename -> d
    java.lang.String isFriend -> e
    boolean checked -> f
    java.lang.String getUserid() -> a
    java.lang.String getPhonenumber() -> b
    void setPhonenumber(java.lang.String) -> a
    java.lang.String getPhonename() -> c
    void setPhonename(java.lang.String) -> b
    java.lang.String getIsFriend() -> d
    void setIsFriend(java.lang.String) -> c
    boolean isChecked() -> e
    void setChecked(boolean) -> a
cmccsi.mhealth.app.sports.bean.ContactListInfo -> cmccsi.mhealth.app.sports.bean.k:
    java.util.ArrayList datavalue -> a
    java.lang.String message -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
cmccsi.mhealth.app.sports.bean.DataDetailPedo -> cmccsi.mhealth.app.sports.bean.l:
    java.lang.String TAG -> a
    java.lang.String start_time -> b
    java.lang.String snp5 -> c
    java.lang.String knp5 -> d
    java.lang.String level2p5 -> e
    java.lang.String level3p5 -> f
    java.lang.String level4p5 -> g
    java.lang.String yuanp5 -> h
    java.lang.String snyxp5 -> i
    int compareStartTime(cmccsi.mhealth.app.sports.bean.DataDetailPedo) -> a
cmccsi.mhealth.app.sports.bean.DataECG -> cmccsi.mhealth.app.sports.bean.m:
    java.lang.String createtime -> a
    cmccsi.mhealth.app.sports.bean.ECGSummary data -> b
    java.lang.String toString() -> toString
cmccsi.mhealth.app.sports.bean.DetailGPSData -> cmccsi.mhealth.app.sports.bean.n:
    java.util.List datavalue -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.DeviceInfo -> cmccsi.mhealth.app.sports.bean.o:
    java.lang.String isUsed -> a
    java.lang.String productName -> b
    java.lang.String productPara -> c
    java.lang.String deviceSerial -> d
    java.lang.String deviceNumber -> e
    java.lang.String deviceVersion -> f
    java.lang.String deviceToken -> g
    java.lang.String updateMark -> h
    java.lang.String updateUrl -> i
    java.lang.String currentVersion -> j
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
cmccsi.mhealth.app.sports.bean.DeviceListInfo -> cmccsi.mhealth.app.sports.bean.p:
    java.lang.String TAG -> b
    java.util.List datavalue -> a
    cmccsi.mhealth.app.sports.bean.DeviceListInfo devicelist -> c
    cmccsi.mhealth.app.sports.bean.DeviceListInfo getInstance() -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.DeviceTypeInfo -> cmccsi.mhealth.app.sports.bean.q:
    java.lang.String productPara -> a
    java.lang.String productName -> b
    java.lang.String productPic -> c
    java.lang.String productAppTag -> d
    java.lang.String productDesc -> e
    java.lang.String isBtDevice -> f
    java.lang.String btPrefix -> g
cmccsi.mhealth.app.sports.bean.DeviceTypeListInfo -> cmccsi.mhealth.app.sports.bean.r:
    java.util.ArrayList datavalue -> a
    java.lang.String message -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
cmccsi.mhealth.app.sports.bean.ECGListinfo -> cmccsi.mhealth.app.sports.bean.s:
    java.util.List datavalue -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.ECGSummary -> cmccsi.mhealth.app.sports.bean.ECGSummary:
    java.lang.String power -> a
    java.lang.String hr -> b
    java.lang.String rawdata -> c
    java.lang.String hrv -> d
    java.lang.String rr_interval -> e
    java.lang.String mood -> f
    java.lang.String trainingzone -> g
    java.lang.String date -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
cmccsi.mhealth.app.sports.bean.ECGSummary$1 -> cmccsi.mhealth.app.sports.bean.t:
    cmccsi.mhealth.app.sports.bean.ECGSummary createFromParcel(android.os.Parcel) -> a
    cmccsi.mhealth.app.sports.bean.ECGSummary[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cmccsi.mhealth.app.sports.bean.FindFriendInfo -> cmccsi.mhealth.app.sports.bean.u:
    java.util.List dataValue -> a
    void setValue(cmccsi.mhealth.app.sports.bean.FindFriendInfo) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.FriendPedometorSummary -> cmccsi.mhealth.app.sports.bean.FriendPedometorSummary:
    java.lang.String TAG -> a
    java.util.List friendsinfo -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    void initialDate() -> c
    void sortFriendPedometorSummary() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.FriendPedometorSummary$1 -> cmccsi.mhealth.app.sports.bean.v:
    cmccsi.mhealth.app.sports.bean.FriendPedometorSummary createFromParcel(android.os.Parcel) -> a
    cmccsi.mhealth.app.sports.bean.FriendPedometorSummary[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cmccsi.mhealth.app.sports.bean.FriendSearchItem -> cmccsi.mhealth.app.sports.bean.w:
    java.lang.String name -> a
    java.lang.String avatar -> b
cmccsi.mhealth.app.sports.bean.FriendsInfo -> cmccsi.mhealth.app.sports.bean.FriendsInfo:
    java.lang.String TAG -> a
    java.util.List friendslist -> b
    void setValue(cmccsi.mhealth.app.sports.bean.FriendsInfo) -> a
    void initialDate() -> c
    void sortGroupPkInfo() -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.GPSListBean -> cmccsi.mhealth.app.sports.bean.x:
    java.lang.String time -> a
    cmccsi.mhealth.app.sports.bean.GPSListInfo listInfo -> b
cmccsi.mhealth.app.sports.bean.GPSListInfo -> cmccsi.mhealth.app.sports.bean.GPSListInfo:
    java.lang.String starttime -> a
    float speed -> b
    float distance -> c
    float cal -> d
    java.lang.String duration -> e
    java.lang.String stepNum -> f
    java.lang.String durationperkm -> g
    java.lang.String speedmax -> h
    java.lang.String speedmin -> i
    java.lang.String climbsum -> j
    int sporttype -> k
    int isUpload -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getIsUpload() -> a
    void setIsUpload(int) -> a
    float getSpeed() -> b
    void setSpeed(float) -> a
    java.lang.String getStarttime() -> d
    void setStarttime(java.lang.String) -> a
    float getDistance() -> e
    void setDistance(float) -> b
    float getCal() -> f
    void setCal(float) -> c
    java.lang.String getDuration() -> g
    void setDuration(java.lang.String) -> b
    java.lang.String getStepNum() -> h
    void setStepNum(java.lang.String) -> c
    java.lang.String getDurationperkm() -> i
    void setDurationperkm(java.lang.String) -> d
    java.lang.String getSpeedmax() -> j
    void setSpeedmax(java.lang.String) -> e
    java.lang.String getSpeedmin() -> k
    void setSpeedmin(java.lang.String) -> f
    java.lang.String getClimbsum() -> l
    void setClimbsum(java.lang.String) -> g
    int getSporttype() -> m
    void setSporttype(int) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.GPSListInfo$1 -> cmccsi.mhealth.app.sports.bean.y:
    cmccsi.mhealth.app.sports.bean.RunType createFromParcel(android.os.Parcel) -> a
    cmccsi.mhealth.app.sports.bean.RunType[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cmccsi.mhealth.app.sports.bean.GoalBaseInfo -> cmccsi.mhealth.app.sports.bean.z:
    java.lang.String distance -> a
    java.lang.String rate -> b
    java.lang.String goal -> c
cmccsi.mhealth.app.sports.bean.GoalInfo -> cmccsi.mhealth.app.sports.bean.aa:
    double latestRate -> b
    double currentDistance -> c
    cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType type -> a
    long remainDays -> d
    long circleNum -> e
    long remainHours -> f
    long percentage -> g
    cmccsi.mhealth.app.sports.bean.GoalInfo getInstanse(cmccsi.mhealth.app.sports.bean.GoalNetInfo) -> a
    cmccsi.mhealth.app.sports.bean.GoalInfo getInstance(android.content.Context) -> a
    cmccsi.mhealth.app.sports.bean.GoalInfo getInstance(android.content.Context,java.lang.String) -> a
    void calcRemainDays() -> a
    java.lang.String getGoalReportInTime(android.content.Context) -> b
    java.lang.String getGoalReportInpercentage(android.content.Context) -> c
cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType -> cmccsi.mhealth.app.sports.bean.ab:
    cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType type0 -> a
    cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType type1 -> b
    cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType type2 -> c
    cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType type3 -> d
    cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType type4 -> e
    cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType type5 -> f
    java.lang.String name -> g
    long distance -> h
    int imgRes -> i
    int iconRes -> j
    java.lang.String info -> k
    cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType[] ENUM$VALUES -> l
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    long getDistance() -> b
    java.lang.String getInfo() -> c
    void setInfo(java.lang.String) -> b
    void setDistance(long) -> a
    int getIconRes() -> d
    void setIconRes(int) -> a
    int getImgRes() -> e
    void setImgRes(int) -> b
    cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType[] values() -> values
    cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType valueOf(java.lang.String) -> valueOf
    long access$2(cmccsi.mhealth.app.sports.bean.GoalInfo$GoalType) -> a
cmccsi.mhealth.app.sports.bean.GoalNetInfo -> cmccsi.mhealth.app.sports.bean.ac:
    cmccsi.mhealth.app.sports.bean.GoalBaseInfo goalinfo -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.GpsInfoDetail -> cmccsi.mhealth.app.sports.bean.GpsInfoDetail:
    double latitude -> a
    double longtitude -> b
    java.lang.String starttime -> c
    java.lang.String detailtime -> d
    float speed -> e
    double altitude -> f
    double distance -> g
    int isPause -> h
    float cal -> i
    double getLongtitude() -> a
    void setLongtitude(double) -> a
    double getAltitude() -> b
    void setAltitude(double) -> b
    float getCal() -> d
    void setCal(float) -> a
    double getDistance() -> e
    void setDistance(double) -> c
    double getLatitude() -> f
    void setLatitude(double) -> d
    java.lang.String getStarttime() -> g
    void setStarttime(java.lang.String) -> a
    java.lang.String getDetailtime() -> h
    void setDetailtime(java.lang.String) -> b
    float getSpeed() -> i
    void setSpeed(float) -> b
    int getIsStopPoint() -> j
    void setIsStopPoint(int) -> a
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.Group1Info -> cmccsi.mhealth.app.sports.bean.ad:
cmccsi.mhealth.app.sports.bean.Group7Info -> cmccsi.mhealth.app.sports.bean.ae:
cmccsi.mhealth.app.sports.bean.JsonResult -> cmccsi.mhealth.app.sports.bean.af:
    java.lang.String resultCode -> a
    java.lang.String resultMsg -> b
    java.lang.Object data -> c
    java.util.Map dataMap -> d
    java.lang.String getResultCode() -> a
    java.lang.Object getData() -> b
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.LevelInfo -> cmccsi.mhealth.app.sports.bean.ag:
    java.lang.String level -> a
    java.lang.String orgName -> b
cmccsi.mhealth.app.sports.bean.ListActivity -> cmccsi.mhealth.app.sports.bean.ah:
    java.lang.String TAG -> a
    java.lang.String activityid -> b
    java.lang.String activityname -> c
    java.lang.String activityslogan -> d
    java.lang.String isfirstday -> e
    java.lang.String activitytype -> f
    java.lang.String activitystart -> g
    java.lang.String activityend -> h
    java.lang.String company_name -> i
    java.lang.String aimstep -> j
    java.lang.String personnum -> k
    java.lang.String personseq -> l
    java.lang.String groupnum -> m
    java.lang.String groupseq -> n
    int isJoin -> o
    int isRanked -> p
    java.text.SimpleDateFormat df_yyyyMMdd -> q
cmccsi.mhealth.app.sports.bean.ListGPSData -> cmccsi.mhealth.app.sports.bean.ai:
    int currentPage -> a
    int totalPage -> b
    java.util.List datavalue -> c
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.LocationInfo -> cmccsi.mhealth.app.sports.bean.aj:
    int countyId -> a
    int cityId -> b
    int provinceId -> c
    java.lang.String countyName -> d
    java.lang.String cityName -> e
    java.lang.String provinceName -> f
cmccsi.mhealth.app.sports.bean.LoginInfo -> cmccsi.mhealth.app.sports.bean.ak:
    java.lang.String TAG -> a
    java.lang.String dataType -> b
    java.util.ArrayList datavalue -> c
    java.lang.String date -> d
    java.lang.String phoneNum -> e
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
cmccsi.mhealth.app.sports.bean.MedalInfo_new -> cmccsi.mhealth.app.sports.bean.al:
    int medalgap -> a
    java.lang.String medalname -> b
    java.lang.String medaltype -> c
cmccsi.mhealth.app.sports.bean.Member1Info -> cmccsi.mhealth.app.sports.bean.am:
    java.lang.String step -> a
cmccsi.mhealth.app.sports.bean.Member7Info -> cmccsi.mhealth.app.sports.bean.an:
cmccsi.mhealth.app.sports.bean.MultAddFriendsBackInfo -> cmccsi.mhealth.app.sports.bean.MultAddFriendsBackInfo:
    java.lang.String TAG -> a
    java.lang.String message -> b
    java.lang.String friendNumbers -> c
    java.lang.String sendNumbers -> d
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.OrgnizeMemberInfo -> cmccsi.mhealth.app.sports.bean.ao:
    java.lang.String TAG -> a
    java.lang.String membername -> b
    java.lang.String groupname -> c
    java.lang.String memberseq -> d
    java.lang.String rankCountOfToday -> e
    java.lang.String member7avgstep -> f
    java.lang.String memberinforev1 -> g
    java.lang.String friendphone -> h
    java.lang.String avatar -> i
    int compare(cmccsi.mhealth.app.sports.bean.OrgnizeMemberInfo) -> a
cmccsi.mhealth.app.sports.bean.OrgnizeMemberPKInfo -> cmccsi.mhealth.app.sports.bean.OrgnizeMemberPKInfo:
    java.lang.String TAG -> a
    java.util.List orgnizemember -> b
    void setValue(cmccsi.mhealth.app.sports.bean.OrgnizeMemberPKInfo) -> a
    void initialDate() -> c
    void sortGroupPkInfo() -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.PedoDetailInfo -> cmccsi.mhealth.app.sports.bean.ap:
    java.lang.String TAG -> a
    java.lang.String datatype -> b
    java.util.List datavalue -> c
    java.lang.String date -> d
    java.lang.String phoneNum -> e
    void setValue(cmccsi.mhealth.app.sports.bean.PedoDetailInfo) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    void initialDate() -> c
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void sortDataPedometor() -> a
cmccsi.mhealth.app.sports.bean.PedoRankBriefInfo -> cmccsi.mhealth.app.sports.bean.aq:
    java.util.ArrayList rankList -> a
    int level -> b
    java.lang.String areaName -> c
    java.lang.String membername -> d
    int memberrank -> e
    int memberstep -> f
    java.lang.String dayCount -> g
    java.lang.String type -> h
    int _id -> i
    java.lang.String date -> j
    int rankGroup -> k
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    java.util.ArrayList getRankList() -> a
    void setRankList(java.util.ArrayList) -> a
    void setLevel(int) -> a
    java.lang.String getAreaName() -> b
    void setAreaName(java.lang.String) -> a
    java.lang.String getMembername() -> d
    void setMembername(java.lang.String) -> b
    int getMemberrank() -> e
    void setMemberrank(int) -> b
    int getMemberstep() -> f
    void setMemberstep(int) -> c
cmccsi.mhealth.app.sports.bean.PedoRankDetailInfo -> cmccsi.mhealth.app.sports.bean.ar:
    java.lang.String TAG -> a
    int rank -> b
    java.lang.String name -> c
    java.lang.String group -> d
    int step -> e
    java.lang.String dayCount -> f
    java.lang.String type -> g
    int level -> h
    int _id -> i
    java.lang.String date -> j
    int rankGroup -> k
    void setRank(int) -> a
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getGroup() -> b
    void setGroup(java.lang.String) -> b
    int getStep() -> c
    void setStep(int) -> b
cmccsi.mhealth.app.sports.bean.PedoRankListInfo -> cmccsi.mhealth.app.sports.bean.as:
    java.util.ArrayList datavalue -> a
    java.lang.String message -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
cmccsi.mhealth.app.sports.bean.PedometorDataInfo -> cmccsi.mhealth.app.sports.bean.PedometorDataInfo:
    java.lang.String power -> a
    java.lang.String weight -> b
    java.lang.String step -> c
    java.lang.String cal -> d
    java.lang.String stepNum -> e
    java.lang.String distance -> f
    java.lang.String strength1 -> g
    java.lang.String strength2 -> h
    java.lang.String strength3 -> i
    java.lang.String strength4 -> j
    java.lang.String transType -> k
    java.lang.String yxbssum -> l
    java.lang.String yxbs -> m
    java.lang.String date -> n
    java.lang.String deviceId -> o
    java.lang.String deviceType -> p
    java.lang.String createtime -> q
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int compareDate(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
cmccsi.mhealth.app.sports.bean.PedometorDataInfo$1 -> cmccsi.mhealth.app.sports.bean.at:
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo createFromParcel(android.os.Parcel) -> a
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cmccsi.mhealth.app.sports.bean.PedometorListInfo -> cmccsi.mhealth.app.sports.bean.au:
    java.lang.String TAG -> a
    java.lang.String dataType -> b
    java.util.List datavalue -> c
    java.lang.String phoneNum -> d
    java.lang.String targetstep -> e
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    void initialDate() -> c
    void sortPedometorData() -> a
cmccsi.mhealth.app.sports.bean.PedometorSummary -> cmccsi.mhealth.app.sports.bean.PedometorSummary:
    java.lang.String power -> a
    java.lang.String weight -> b
    java.lang.String step -> c
    java.lang.String cal -> d
    java.lang.String stepNum -> e
    java.lang.String distance -> f
    java.lang.String strength1 -> g
    java.lang.String strength2 -> h
    java.lang.String strength3 -> i
    java.lang.String strength4 -> j
    java.lang.String transType -> k
    java.lang.String yxbssum -> l
    java.lang.String yxbs -> m
    java.lang.String date -> n
    java.lang.String deviceId -> o
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int compareDate(cmccsi.mhealth.app.sports.bean.PedometorSummary) -> a
cmccsi.mhealth.app.sports.bean.PedometorSummary$1 -> cmccsi.mhealth.app.sports.bean.av:
    cmccsi.mhealth.app.sports.bean.PedometorSummary createFromParcel(android.os.Parcel) -> a
    cmccsi.mhealth.app.sports.bean.PedometorSummary[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cmccsi.mhealth.app.sports.bean.RaceData -> cmccsi.mhealth.app.sports.bean.RaceData:
    java.lang.String racename -> a
    java.lang.String founderphone -> b
    java.lang.String foundername -> c
    java.lang.String starttime -> d
    java.lang.String endtime -> e
    java.lang.String type -> f
    java.lang.String raceid -> g
    java.lang.String racedetail -> h
    java.lang.String membernum -> i
    java.lang.String titlepicurl -> j
    java.lang.String started -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.RaceData$1 -> cmccsi.mhealth.app.sports.bean.aw:
    cmccsi.mhealth.app.sports.bean.RaceData createFromParcel(android.os.Parcel) -> a
    cmccsi.mhealth.app.sports.bean.RaceData[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cmccsi.mhealth.app.sports.bean.RaceInfo -> cmccsi.mhealth.app.sports.bean.RaceInfo:
    java.util.List racelistinfo -> a
    java.lang.String lastid -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setValue(cmccsi.mhealth.app.sports.bean.RaceInfo) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.RaceInfo$1 -> cmccsi.mhealth.app.sports.bean.ax:
    cmccsi.mhealth.app.sports.bean.RaceInfo createFromParcel(android.os.Parcel) -> a
    cmccsi.mhealth.app.sports.bean.RaceInfo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cmccsi.mhealth.app.sports.bean.RaceMemberData -> cmccsi.mhealth.app.sports.bean.RaceMemberData:
    java.lang.String memberseq -> a
    int compare(cmccsi.mhealth.app.sports.bean.RaceMemberData) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.RaceMemberInfo -> cmccsi.mhealth.app.sports.bean.RaceMemberInfo:
    java.util.List racemember -> a
    java.lang.String alreadyin -> b
    void setValue(cmccsi.mhealth.app.sports.bean.RaceMemberInfo) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void initialDate() -> c
    void sortGroupPkInfo() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.RankInfo -> cmccsi.mhealth.app.sports.bean.ay:
    java.lang.String name -> a
    int rank -> b
    java.lang.String group -> c
    int value -> d
    java.lang.String unit -> e
    int wcl -> f
    int step -> g
    java.lang.String getName() -> a
    java.lang.String getGroup() -> b
    int getStep() -> c
cmccsi.mhealth.app.sports.bean.RankListInfo_new -> cmccsi.mhealth.app.sports.bean.az:
    java.lang.String level -> a
    java.lang.String areaName -> b
    int page -> c
    int wcl -> d
    int memberstep -> e
    int memberrank -> f
    java.lang.String membername -> g
    java.util.List rankList -> h
cmccsi.mhealth.app.sports.bean.RankingDate -> cmccsi.mhealth.app.sports.bean.ba:
    java.lang.String member7seq -> a
    cmccsi.mhealth.app.sports.bean.Member7Info member7info -> b
    java.lang.String member1seq -> c
    cmccsi.mhealth.app.sports.bean.Member1Info member1info -> d
    java.lang.String group7seq -> e
    cmccsi.mhealth.app.sports.bean.Group7Info group7info -> f
    java.lang.String group1seq -> g
    cmccsi.mhealth.app.sports.bean.Group1Info group1info -> h
    java.lang.String groupmember7seq -> i
    java.lang.String groupmember1seq -> j
    java.lang.String avatar -> k
    java.lang.String membername -> l
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
cmccsi.mhealth.app.sports.bean.RequestData -> cmccsi.mhealth.app.sports.bean.RequestData:
    java.lang.String requesttype -> a
    java.lang.String phonenum -> b
    java.lang.String name -> c
    java.lang.String msg -> d
    java.lang.String raceid -> e
    java.lang.String racetype -> f
    java.lang.String avatar -> g
    boolean isoldmsgs -> h
    boolean isIsoldmsgs() -> a
    java.lang.String getAvatar() -> b
    java.lang.String getRaceid() -> c
    java.lang.String getPhonenum() -> d
    java.lang.String getName() -> e
    java.lang.String getMsg() -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.RequestListInfo -> cmccsi.mhealth.app.sports.bean.RequestListInfo:
    java.lang.String TAG -> a
    java.util.List dataValue -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.RunType -> cmccsi.mhealth.app.sports.bean.RunType:
    int id -> a
    int image_type -> b
    java.lang.String textview_type -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int ID2Image(int,int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.RunType$1 -> cmccsi.mhealth.app.sports.bean.bb:
    cmccsi.mhealth.app.sports.bean.RunType createFromParcel(android.os.Parcel) -> a
    cmccsi.mhealth.app.sports.bean.RunType[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cmccsi.mhealth.app.sports.bean.SaveAreaInfo -> cmccsi.mhealth.app.sports.bean.bc:
    java.lang.String message -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.SaveDeviceToken -> cmccsi.mhealth.app.sports.bean.bd:
    java.lang.String message -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.SearchDate -> cmccsi.mhealth.app.sports.bean.SearchDate:
    java.lang.String groupname -> m
    java.lang.String groupid -> n
    java.lang.String sex -> q
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cmccsi.mhealth.app.sports.bean.ServersInfo -> cmccsi.mhealth.app.sports.bean.be:
cmccsi.mhealth.app.sports.bean.SimplePostInfo -> cmccsi.mhealth.app.sports.bean.bf:
    java.lang.String info -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.bean.UpdatePasswordInfo -> cmccsi.mhealth.app.sports.bean.bg:
    java.lang.String TAG -> a
    void setValue(cmccsi.mhealth.app.sports.bean.UpdatePasswordInfo) -> a
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
cmccsi.mhealth.app.sports.bean.UpdateVersionJson -> cmccsi.mhealth.app.sports.bean.bh:
    java.lang.String verCode -> a
    java.lang.String updateInfo -> b
    java.lang.String verName -> c
    java.lang.String download -> d
    java.lang.String appName -> e
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    void setValue(cmccsi.mhealth.app.sports.bean.UpdateVersionJson) -> a
cmccsi.mhealth.app.sports.bean.UserBaseInfo -> cmccsi.mhealth.app.sports.bean.bi:
    int userid -> a
    java.lang.String phonenum -> b
    java.lang.String name -> c
    java.lang.String nickname -> d
    java.lang.String weight -> e
    java.lang.String height -> f
    java.lang.String gender -> g
    java.lang.String birthday -> h
    java.lang.String score -> i
    java.lang.String avarta -> j
    java.lang.String targetweight -> k
    java.lang.String targetstep -> l
    java.util.List clubarray -> m
    cmccsi.mhealth.app.sports.bean.LocationInfo locationInfo -> n
cmccsi.mhealth.app.sports.bean.UserCompanyInfo -> cmccsi.mhealth.app.sports.bean.bj:
    java.lang.String groupname -> a
    java.lang.String corporation -> b
    int clubid -> c
    int orgid -> d
cmccsi.mhealth.app.sports.bean.UserRegInfo -> cmccsi.mhealth.app.sports.bean.bk:
    cmccsi.mhealth.app.sports.bean.UserBaseInfo personprofile -> a
    void setValue(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> b
    boolean isValueData(cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
cmccsi.mhealth.app.sports.broadcast.BootCompletedReceiver -> cmccsi.mhealth.app.sports.broadcast.BootCompletedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cmccsi.mhealth.app.sports.common.Common -> cmccsi.mhealth.app.sports.a.a:
    java.lang.String TAG -> a
    long TIME_NUMBER -> b
    boolean existSDcard() -> a
    java.lang.String getDate2Time(java.util.Date,java.lang.String) -> a
    java.lang.String GetWeekStr(int) -> a
    java.lang.String getDateAsYYYYMMDD(long) -> a
    java.lang.String getDateAsM_d(long) -> b
    long getDateFromStr(java.lang.String) -> a
    java.lang.String getCurrentDayLongTime(long) -> c
    long getCurrentDayFirstTimeMills(long) -> d
    java.lang.String FormatyyyyMMdd(java.lang.String) -> b
    java.lang.String FormatyyyyMMddHH(java.lang.String) -> c
    long getDateFromYYYYMMDDHHMMSSCreateTime(java.lang.String) -> d
    java.lang.String getDateAsYYYYMMDDHHMMSS(long) -> e
    java.lang.String getDateAsYYYYMMDDHHMMSSCreateTime(long) -> f
    int dip2px(android.content.Context,float) -> a
    float getDensity(android.content.Context) -> a
    void copyUseChannel(java.io.File,java.io.File) -> a
    cmccsi.mhealth.app.sports.view.CustomProgressDialog initProgressDialog(java.lang.String,android.content.Context) -> a
    long getFileSizes(java.io.File) -> a
    void wirteStringToSdAfterCreateDirs(java.lang.String,java.lang.String,java.lang.String) -> a
    void wirteStringToSd(java.lang.String,java.lang.String) -> a
    float calBMR(int,int,int,int) -> a
    float calRunCalorie(float,float,float,int) -> a
    int String2Int(java.lang.String) -> e
    void fitPoints(java.util.List,com.baidu.mapapi.map.BaiduMap) -> a
    boolean checkPoint(com.baidu.location.BDLocation) -> a
    java.lang.String sec2Time(int) -> b
    int getDeviceType(java.lang.String,java.lang.String) -> b
    java.lang.String getDeviceDisplayName(int) -> c
    boolean isStepServiceRunning(android.content.Context) -> b
    boolean checkBlueEnabled(android.app.Activity,int) -> a
    void clearDatabases(android.content.Context) -> c
    void clearDatabasesWithoutPedo(android.content.Context) -> d
cmccsi.mhealth.app.sports.common.Config -> cmccsi.mhealth.app.sports.a.b:
    java.lang.String DATAS_URL -> a
    java.lang.String RECORD_URL -> b
    java.lang.String ERRORLOG_URL -> c
    int getVerCode(android.content.Context) -> a
    java.lang.String getVerName(android.content.Context) -> b
cmccsi.mhealth.app.sports.common.Constants -> cmccsi.mhealth.app.sports.a.c:
    int RUNTYPE -> a
    boolean debugD -> b
    boolean debugE -> c
    boolean debugI -> d
    boolean debugV -> e
    boolean debugW -> f
cmccsi.mhealth.app.sports.common.ConstantsBitmaps -> cmccsi.mhealth.app.sports.a.d:
    android.graphics.Bitmap mLeftPic -> a
    android.graphics.Bitmap mRunPicYellow -> b
    android.graphics.Bitmap mRunPicGreen -> c
    android.graphics.Bitmap mRunPicBlue -> d
    android.graphics.Bitmap mRunPicDouble -> e
    android.graphics.Bitmap mBitmapBgCenterRound -> f
    android.graphics.Bitmap mBitmapBgCenterRoundEcg -> g
    android.graphics.Bitmap mBitmapBgCenterRoundEcgNew -> h
    android.graphics.Bitmap mBitmapPointRound -> i
    android.graphics.Bitmap mBitmapPointRoundECG -> j
    void initRunPics(android.content.Context) -> a
cmccsi.mhealth.app.sports.common.CustomHttpClient -> cmccsi.mhealth.app.sports.a.e:
    org.apache.http.client.HttpClient customerHttpClient -> a
    java.lang.String PostFromWebByHttpClient(java.lang.String,org.apache.http.NameValuePair[]) -> a
    org.apache.http.client.HttpClient getHttpClient() -> a
cmccsi.mhealth.app.sports.common.Encrypt -> cmccsi.mhealth.app.sports.a.f:
    java.lang.String getMD5Str(java.lang.String) -> a
    int getIntFromName(java.lang.String) -> b
cmccsi.mhealth.app.sports.common.GetWindowBitmap -> cmccsi.mhealth.app.sports.a.g:
    android.graphics.Bitmap takeScreenShot(android.app.Activity,android.view.View) -> a
cmccsi.mhealth.app.sports.common.HttpUtils -> cmccsi.mhealth.app.sports.a.h:
    java.lang.String postByHttpClient(java.lang.String,org.apache.http.NameValuePair[]) -> a
cmccsi.mhealth.app.sports.common.ImageUtil -> cmccsi.mhealth.app.sports.a.i:
    java.lang.String mImgUrl -> b
    java.util.HashMap mImageCache -> c
    java.util.HashMap sHardBitmapCache -> d
    cmccsi.mhealth.app.sports.common.ImageUtil mAsyncBitmapLoader -> a
    java.util.concurrent.ConcurrentHashMap sSoftBitmapCache -> e
    java.util.HashMap getSHardBitmapCache() -> a
    cmccsi.mhealth.app.sports.common.ImageUtil getInstance() -> b
    android.graphics.drawable.Drawable loadBitmap(android.widget.ImageView,java.lang.String,java.lang.String,int) -> a
    android.graphics.drawable.Drawable loadBitmap(android.widget.ImageView,java.lang.String,java.lang.String) -> a
    android.graphics.drawable.Drawable loadBitmap(android.widget.ImageView,java.lang.String) -> a
    void addBitmapToCache(java.lang.String,android.graphics.Bitmap) -> a
    boolean cancelPotentialDownload(java.lang.String,android.widget.ImageView) -> a
    cmccsi.mhealth.app.sports.common.ImageUtil$BitmapDownloaderTask getBitmapDownloaderTask(android.widget.ImageView) -> a
    android.graphics.Bitmap downloadBitmap(java.lang.String,int) -> a
    java.lang.String getSubFileName(java.lang.String) -> a
    android.graphics.Bitmap toConformBitmapWithNewType(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap scaleBitmapWithSpecialWidth(int,android.graphics.Bitmap) -> a
    android.graphics.Bitmap compressImage(android.graphics.Bitmap,int) -> a
    java.util.concurrent.ConcurrentHashMap access$0() -> c
    android.graphics.Bitmap access$1(cmccsi.mhealth.app.sports.common.ImageUtil,java.lang.String,int) -> a
    void access$2(cmccsi.mhealth.app.sports.common.ImageUtil,java.lang.String,android.graphics.Bitmap) -> a
cmccsi.mhealth.app.sports.common.ImageUtil$1 -> cmccsi.mhealth.app.sports.a.j:
    cmccsi.mhealth.app.sports.common.ImageUtil this$0 -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
cmccsi.mhealth.app.sports.common.ImageUtil$BitmapDownloaderTask -> cmccsi.mhealth.app.sports.a.k:
    java.lang.String url -> b
    java.lang.String tag -> c
    int mode -> d
    java.lang.ref.WeakReference imageViewReference -> e
    cmccsi.mhealth.app.sports.common.ImageUtil this$0 -> a
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$2(cmccsi.mhealth.app.sports.common.ImageUtil$BitmapDownloaderTask) -> a
cmccsi.mhealth.app.sports.common.ImageUtil$DownloadedDrawable -> cmccsi.mhealth.app.sports.a.l:
    java.lang.ref.WeakReference bitmapDownloaderTaskReference -> a
    cmccsi.mhealth.app.sports.common.ImageUtil$BitmapDownloaderTask getBitmapDownloaderTask() -> a
cmccsi.mhealth.app.sports.common.Logger -> cmccsi.mhealth.app.sports.a.m:
    boolean LogDisable -> a
    java.lang.String mImgUrl -> b
    void i(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
    void d(java.lang.String,java.lang.String) -> c
    void w(java.lang.String,java.lang.String) -> d
cmccsi.mhealth.app.sports.common.MathUtil -> cmccsi.mhealth.app.sports.a.n:
    int ceil(double) -> a
cmccsi.mhealth.app.sports.common.PreferencesUtils -> cmccsi.mhealth.app.sports.a.o:
    void removeSp(android.content.Context,java.lang.String) -> a
    boolean getBoolean(android.content.Context,java.lang.String,boolean) -> a
    void putBoolean(android.content.Context,java.lang.String,boolean) -> b
    int getInt(android.content.Context,java.lang.String,int) -> a
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String getPhoneNum(android.content.Context) -> a
    java.lang.String getPhonePwd(android.content.Context) -> b
    void putString(android.content.Context,java.lang.String,java.lang.String) -> b
cmccsi.mhealth.app.sports.common.ShowProgressDialog -> cmccsi.mhealth.app.sports.a.p:
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mProgressDialog -> a
    void showProgressDialog(java.lang.String,android.content.Context) -> a
    void dismiss() -> a
cmccsi.mhealth.app.sports.common.UploadUtil -> cmccsi.mhealth.app.sports.a.q:
    cmccsi.mhealth.app.sports.common.UploadUtil uploadUtil -> a
    java.lang.String BOUNDARY -> b
    int readTimeOut -> c
    int connectTimeout -> d
    int requestTime -> e
    cmccsi.mhealth.app.sports.common.UploadUtil$OnUploadProcessListener onUploadProcessListener -> f
    cmccsi.mhealth.app.sports.common.UploadUtil getInstance() -> a
    void uploadFile(java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> a
    void uploadFile(java.io.File,java.lang.String,java.lang.String,java.util.Map) -> a
    void toUploadFile(java.io.File,java.lang.String,java.lang.String,java.util.Map) -> b
    void sendMessage(int,java.lang.String) -> a
    void setOnUploadProcessListener(cmccsi.mhealth.app.sports.common.UploadUtil$OnUploadProcessListener) -> a
    int upload(android.content.Context,java.util.List) -> a
    void access$0(cmccsi.mhealth.app.sports.common.UploadUtil,java.io.File,java.lang.String,java.lang.String,java.util.Map) -> a
cmccsi.mhealth.app.sports.common.UploadUtil$1 -> cmccsi.mhealth.app.sports.a.r:
    cmccsi.mhealth.app.sports.common.UploadUtil this$0 -> a
    java.io.File val$file -> b
    java.lang.String val$fileKey -> c
    java.lang.String val$RequestURL -> d
    java.util.Map val$param -> e
    void run() -> run
cmccsi.mhealth.app.sports.common.UploadUtil$OnUploadProcessListener -> cmccsi.mhealth.app.sports.a.s:
    void onUploadDone(int,java.lang.String) -> a
    void onUploadProcess(int) -> a
    void initUpload(int) -> b
cmccsi.mhealth.app.sports.common.utils.ContactUtil -> cmccsi.mhealth.app.sports.a.a.a:
    java.util.List getContactList(android.content.Context) -> a
cmccsi.mhealth.app.sports.common.utils.DateFormatUtils -> cmccsi.mhealth.app.sports.a.a.b:
    int[] $SWITCH_TABLE$cmccsi$mhealth$app$sports$common$utils$DateFormatUtils$FormatType -> a
    java.lang.String getFormatType(cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType) -> a
    java.lang.String DateToString(java.util.Date,cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType) -> a
    java.lang.String ChangeFormat(java.lang.String,cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType,cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType) -> a
    java.lang.String AddDays(java.lang.String,int,cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType) -> a
    java.util.Date AddDays(java.util.Date,int) -> a
    java.util.Date StringToDate(java.lang.String,cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType) -> a
    int compare_date(java.lang.String,java.lang.String) -> a
    boolean isToday(java.util.Date) -> a
    int[] $SWITCH_TABLE$cmccsi$mhealth$app$sports$common$utils$DateFormatUtils$FormatType() -> a
cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType -> cmccsi.mhealth.app.sports.a.a.c:
    cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType DateLong -> a
    cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType DateShot -> b
    cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType DateWithUnderline -> c
    cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType DateWithDiagonal -> d
    cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType DateWithDiagonalNoYear -> e
    cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType[] ENUM$VALUES -> f
    cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType[] values() -> values
    cmccsi.mhealth.app.sports.common.utils.DateFormatUtils$FormatType valueOf(java.lang.String) -> valueOf
cmccsi.mhealth.app.sports.common.utils.DensityUtil -> cmccsi.mhealth.app.sports.a.a.d:
    int dip2px(android.content.Context,float) -> a
    int px2sp(android.content.Context,float) -> b
cmccsi.mhealth.app.sports.common.utils.LogUtils -> cmccsi.mhealth.app.sports.a.a.e:
    void e(java.lang.String,java.lang.String) -> a
cmccsi.mhealth.app.sports.common.utils.PedometorUtils -> cmccsi.mhealth.app.sports.a.a.f:
    int toFoodType -> a
    int toCount -> b
    boolean toHaveHalf -> c
    int getFoodType(int) -> a
    double getFoodCount(int) -> b
    int getCalpersent(int[],int) -> a
    java.lang.String calorieToFoodDescription(int) -> c
    java.lang.String calorieToFood(int) -> d
    java.lang.String calorieToFoodMain(int,int,int,boolean) -> a
    java.lang.String getMessage(int,int,boolean,int) -> a
    int getCalorieByType(int) -> e
    java.lang.String getFoodNameByType(int) -> f
    int getBaseFoodCal(int) -> g
cmccsi.mhealth.app.sports.common.utils.StringUtils -> cmccsi.mhealth.app.sports.a.a.g:
    boolean isBlank(java.lang.CharSequence) -> a
    boolean isNotBlank(java.lang.CharSequence) -> b
cmccsi.mhealth.app.sports.common.utils.ToastUtils -> cmccsi.mhealth.app.sports.a.a.h:
    android.widget.Toast toast -> a
    void showToast(android.content.Context,java.lang.String) -> a
    void showToast_L(android.content.Context,java.lang.String) -> b
    void showToast(android.content.Context,java.lang.String,int) -> a
cmccsi.mhealth.app.sports.controller.PedoRankController -> cmccsi.mhealth.app.sports.b.a:
    cmccsi.mhealth.app.sports.controller.PedoRankController mPedoRankController -> a
    cmccsi.mhealth.app.sports.db.DatabaseHelper mdbHelper -> b
    cmccsi.mhealth.app.sports.controller.PedoRankController GetPedoRankBriefController(android.content.Context) -> a
    int CheckIsUpdateDate(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.ArrayList GetAllPedoRankBriefInfo(java.lang.String,java.lang.String,java.lang.String) -> b
    void InsertPedoRankBriefList(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String) -> a
    void ClearData(java.lang.String,java.lang.String,java.lang.String) -> c
cmccsi.mhealth.app.sports.db.ActivityListDetailTableMetaData -> cmccsi.mhealth.app.sports.c.a:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
cmccsi.mhealth.app.sports.db.ActivityMyDetailTableMetaData -> cmccsi.mhealth.app.sports.c.b:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
cmccsi.mhealth.app.sports.db.DatabaseHelper -> cmccsi.mhealth.app.sports.c.c:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cmccsi.mhealth.app.sports.db.ECGTableMetaData -> cmccsi.mhealth.app.sports.c.d:
    java.lang.String CREATE_TABLE_SQL -> a
    android.database.Cursor GetAllValueCursor(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
    android.database.Cursor GetAllValueCursor(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String) -> a
    cmccsi.mhealth.app.sports.bean.DataECG GetECGFromCursor(android.database.Cursor) -> a
    void InsertValue(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void DeleteData(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> b
cmccsi.mhealth.app.sports.db.FriendMetaData -> cmccsi.mhealth.app.sports.c.e:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
    int getFriendCount(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
    void MyFriendInsertValue(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.util.List,java.lang.String) -> a
    java.util.List getMyFriends(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> b
    void DeleteMyFriendData(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> c
    void DeleteMyFriendData(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String) -> a
cmccsi.mhealth.app.sports.db.GPSListMetaData -> cmccsi.mhealth.app.sports.c.f:
    void DeleteListGPSData(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
    void AllPointInsert(cmccsi.mhealth.app.sports.db.DatabaseHelper,cmccsi.mhealth.app.sports.bean.GPSListInfo) -> a
    java.util.List getListGPSDataByIsload(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String) -> a
    boolean updateIsLoadData(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String) -> a
cmccsi.mhealth.app.sports.db.GpsInfoDetailMetaData -> cmccsi.mhealth.app.sports.c.g:
    java.lang.String deleteSql(java.lang.String) -> a
    boolean deleteData(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String) -> a
    void DeleteDetailGPSData(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
    void insertData(cmccsi.mhealth.app.sports.db.DatabaseHelper,cmccsi.mhealth.app.sports.bean.DetailGPSData,java.lang.String) -> a
    void insertDetail(cmccsi.mhealth.app.sports.db.DatabaseHelper,cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> a
    java.util.List getGpsInfoDetails(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String) -> b
    android.database.Cursor getGeoPointCursor(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
cmccsi.mhealth.app.sports.db.GroupInPKTableMetaData -> cmccsi.mhealth.app.sports.c.h:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
cmccsi.mhealth.app.sports.db.GroupMemberInfoTableMetaData -> cmccsi.mhealth.app.sports.c.i:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
cmccsi.mhealth.app.sports.db.GroupPkInfoTableMetaData -> cmccsi.mhealth.app.sports.c.j:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
cmccsi.mhealth.app.sports.db.HistroyMessageMetaData -> cmccsi.mhealth.app.sports.c.k:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
    void OldMsgsInsertValue(cmccsi.mhealth.app.sports.db.DatabaseHelper,cmccsi.mhealth.app.sports.bean.RequestData) -> a
    java.util.List getMyOldMsgs(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
cmccsi.mhealth.app.sports.db.ListActivityTableMetaData -> cmccsi.mhealth.app.sports.c.l:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
cmccsi.mhealth.app.sports.db.MHealthProviderMetaData -> cmccsi.mhealth.app.sports.c.m:
    java.lang.String SEARCH_DATABASE_PATH -> a
    cmccsi.mhealth.app.sports.db.MHealthProviderMetaData mHealthProviderMetaData -> b
    cmccsi.mhealth.app.sports.db.DatabaseHelper dbHelper -> c
    cmccsi.mhealth.app.sports.db.MHealthProviderMetaData GetMHealthProvider(android.content.Context) -> a
    void InsertECGData(java.util.List,long,boolean) -> a
    void deleteECGData() -> a
    java.util.List getAllEcgData() -> b
    java.util.List getEcgDataByTime(java.lang.String,java.lang.String) -> a
    cmccsi.mhealth.app.sports.bean.DataECG getlastEcgData() -> c
    void deletePedometerData() -> d
    void updatePedoDetailData(cmccsi.mhealth.app.sports.bean.PedoDetailInfo) -> a
    java.lang.String Cumulative(java.lang.String,java.lang.String) -> d
    java.lang.String Cumulative_minute(java.lang.String,java.lang.String) -> e
    void deletePedoDetailData() -> e
    int getFriendCount() -> f
    void FriendInsertValue(java.util.List) -> a
    java.util.List getMyFriends() -> g
    void deleteMyFriend() -> h
    void deleteMyFriend(java.lang.String) -> a
    void MyRankDeleteData() -> i
    void deleteVitalSignValue() -> j
    void OldMsgsInsertValue(cmccsi.mhealth.app.sports.bean.RequestData) -> a
    java.util.List getMyOldMsgs() -> k
    void insertAllPoints(cmccsi.mhealth.app.sports.bean.DetailGPSData,java.lang.String) -> a
    void insertDetail(cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> a
    boolean deleteDetailData(java.lang.String) -> b
    void deleteGPSData() -> l
    java.util.List getGpsInfoDetails(java.lang.String) -> c
    void insertGpsListInfo(cmccsi.mhealth.app.sports.bean.GPSListInfo) -> a
    java.util.List getUnUploadGpsData() -> m
    boolean updateIsUploadData(java.lang.String,java.lang.String) -> b
    android.database.Cursor SelectLastCursor(java.lang.String,java.lang.String) -> c
    void deletePedoRankDetailData() -> n
    void deleteRankBriefData() -> o
cmccsi.mhealth.app.sports.db.MyRankMetaData -> cmccsi.mhealth.app.sports.c.n:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
    void deleteMyRankData(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
cmccsi.mhealth.app.sports.db.OrgnizeInfoTableMetaData -> cmccsi.mhealth.app.sports.c.o:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
cmccsi.mhealth.app.sports.db.PedoDetailTableMetaData -> cmccsi.mhealth.app.sports.c.p:
    java.lang.String CREATE_TABLE_SQL -> a
    android.database.Cursor GetValueCursor(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> a
    android.database.Cursor GetValueCursor(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String) -> a
    android.database.Cursor GetValueCursor(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void InsertValue(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void InsertValue(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void UpdateValue(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void UpdateValue(android.database.sqlite.SQLiteDatabase,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void DeleteData(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
cmccsi.mhealth.app.sports.db.PedoRankBriefTableMetaData -> cmccsi.mhealth.app.sports.c.q:
    java.lang.String CREATE_TABLE_SQL -> a
    android.database.Cursor GetValueCursor(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.database.Cursor GetAllValueCursor(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.ArrayList GetAllPedoRankBriefInfo(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String,java.lang.String) -> b
    cmccsi.mhealth.app.sports.bean.PedoRankBriefInfo GetPedoRankBriefInfoFromCursor(android.database.Cursor) -> a
    void InsertValue(android.database.sqlite.SQLiteDatabase,cmccsi.mhealth.app.sports.bean.PedoRankBriefInfo,java.lang.String,java.lang.String,java.lang.String) -> a
    void InsertPedoRankBriefList(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String) -> a
    int CheckIsUpdateDate(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void ClearData(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
    void ClearData(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String,java.lang.String) -> c
cmccsi.mhealth.app.sports.db.PedoRankDetailTableMetaData -> cmccsi.mhealth.app.sports.c.r:
    java.lang.String CREATE_TABLE_SQL -> a
    android.database.Cursor GetAllValueCursor(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.ArrayList GetAllPedoRankDetailInfo(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    cmccsi.mhealth.app.sports.bean.PedoRankDetailInfo GetPedoRankDetailInfoFromCursor(android.database.Cursor) -> a
    void InsertValue(android.database.sqlite.SQLiteDatabase,cmccsi.mhealth.app.sports.bean.PedoRankDetailInfo,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void InsertPedoRankDetailList(android.database.sqlite.SQLiteDatabase,java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void ClearData(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
    void ClearData(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String,java.lang.String) -> a
cmccsi.mhealth.app.sports.db.PedometerTableMetaData -> cmccsi.mhealth.app.sports.c.s:
    java.lang.String CREATE_TABLE_SQL -> a
    android.database.Cursor GetAllValueCursor(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String) -> a
    android.database.Cursor GetAllValueCursor(cmccsi.mhealth.app.sports.db.DatabaseHelper,java.lang.String,java.lang.String,java.lang.String) -> a
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo GetPedometerDataInfoFromCursor(android.database.Cursor) -> a
    boolean UpdateValue(android.database.sqlite.SQLiteDatabase,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void InsertValue(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void DeleteData(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
cmccsi.mhealth.app.sports.db.VitalSignMetaData -> cmccsi.mhealth.app.sports.c.t:
    java.lang.String CREATE_TABLE_SQL -> a
    java.lang.String DELETE_TABLE_SQL -> b
    void deleteVitalSignData(cmccsi.mhealth.app.sports.db.DatabaseHelper) -> a
cmccsi.mhealth.app.sports.device.AbstractBeatBandDevice -> cmccsi.mhealth.app.sports.device.a:
cmccsi.mhealth.app.sports.device.AbstractJWDevice -> cmccsi.mhealth.app.sports.device.b:
    void connect(java.lang.String) -> connect
    void disConnect() -> disConnect
    void syncData(java.lang.String,java.lang.String) -> syncData
    int getDeviceStatus() -> getDeviceStatus
    void startRealTime() -> startRealTime
    void stopRealTime() -> stopRealTime
    void setCallBack(cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack) -> setCallBack
    void clearDeviceData() -> clearDeviceData
    void updateOTAData(java.lang.String) -> updateOTAData
    void startRealTimeEKG() -> startRealTimeEKG
    void updateOTAData() -> updateOTAData
    void stopRealTimeEKG() -> stopRealTimeEKG
cmccsi.mhealth.app.sports.device.AbstractMobileDevice -> cmccsi.mhealth.app.sports.device.c:
    void startRealTime() -> startRealTime
    void stopRealTime() -> stopRealTime
    void startRealTimeEKG() -> startRealTimeEKG
    void stopRealTimeEKG() -> stopRealTimeEKG
cmccsi.mhealth.app.sports.device.BaseDeviceInterface -> cmccsi.mhealth.app.sports.device.d:
    void connect(java.lang.String) -> connect
    void disConnect() -> disConnect
    void syncData(java.lang.String,java.lang.String) -> syncData
    void startRealTime() -> startRealTime
    void stopRealTime() -> stopRealTime
    void startRealTimeEKG() -> startRealTimeEKG
    void stopRealTimeEKG() -> stopRealTimeEKG
    void setCallBack(cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack) -> setCallBack
cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack -> cmccsi.mhealth.app.sports.device.e:
    void connected(int,java.lang.String) -> a
    void disConnected() -> a
    void pedoDataPercent(int) -> a
    void pedoDataReceived(cmccsi.mhealth.app.sports.bean.PedometorListInfo,java.util.List) -> a
    void realTimeDataReceived(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    void ekgStop(int,int) -> a
    void ekgDataReceived(int,java.lang.Object) -> a
    void exception(int,java.lang.String) -> b
cmccsi.mhealth.app.sports.device.BeatBandDevice -> cmccsi.mhealth.app.sports.device.f:
    java.lang.String TAG -> b
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack mBaseCallBack -> c
    android.content.Context mContext -> d
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> e
    com.neurosky.ble.TGBleManager tgBleManager -> f
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo bluetoothPedo -> g
    java.lang.String mDeviceId -> h
    boolean isRealTime -> i
    int option -> j
    int connectStatus -> k
    int mStatus -> l
    boolean islog -> m
    com.neurosky.ble.TGBleManagerCallback bleCallback -> a
    void connect(java.lang.String) -> connect
    void disConnect() -> disConnect
    void syncData(java.lang.String,java.lang.String) -> syncData
    void startRealTime() -> startRealTime
    void stopRealTime() -> stopRealTime
    void startRealTimeEKG() -> startRealTimeEKG
    void stopRealTimeEKG() -> stopRealTimeEKG
    void setCallBack(cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack) -> setCallBack
    void connectDevice(java.lang.String) -> a
    int saveDeviceTokenInfo(java.lang.String,java.lang.String,java.lang.String) -> a
    void access$0(cmccsi.mhealth.app.sports.device.BeatBandDevice,int) -> a
    int access$1(cmccsi.mhealth.app.sports.device.BeatBandDevice) -> a
    android.content.Context access$2(cmccsi.mhealth.app.sports.device.BeatBandDevice) -> b
    com.neurosky.ble.TGBleManager access$3(cmccsi.mhealth.app.sports.device.BeatBandDevice) -> c
    java.lang.String access$4(cmccsi.mhealth.app.sports.device.BeatBandDevice) -> d
    int access$5(cmccsi.mhealth.app.sports.device.BeatBandDevice,java.lang.String,java.lang.String,java.lang.String) -> a
    void access$6(cmccsi.mhealth.app.sports.device.BeatBandDevice,int) -> b
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack access$7(cmccsi.mhealth.app.sports.device.BeatBandDevice) -> e
    int access$8(cmccsi.mhealth.app.sports.device.BeatBandDevice) -> f
    void access$9(cmccsi.mhealth.app.sports.device.BeatBandDevice,int) -> c
    boolean access$10(cmccsi.mhealth.app.sports.device.BeatBandDevice) -> g
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo access$11(cmccsi.mhealth.app.sports.device.BeatBandDevice) -> h
    void access$12(cmccsi.mhealth.app.sports.device.BeatBandDevice,cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    java.lang.String access$13(cmccsi.mhealth.app.sports.device.BeatBandDevice) -> i
cmccsi.mhealth.app.sports.device.BeatBandDevice$1 -> cmccsi.mhealth.app.sports.device.g:
    cmccsi.mhealth.app.sports.device.BeatBandDevice this$0 -> a
    void batteryLevel(int) -> batteryLevel
    void bleDidAbortConnect() -> bleDidAbortConnect
    void bleDidBond(int) -> bleDidBond
    void bleDidConnect() -> bleDidConnect
    void bleDidDisconnect() -> bleDidDisconnect
    void bleDidSendAlarmGoals(int) -> bleDidSendAlarmGoals
    void bleDidSendUserConfig(int) -> bleDidSendUserConfig
    void bleLostConnect() -> bleLostConnect
    void candidateFound(android.bluetooth.BluetoothDevice,int,java.lang.String) -> candidateFound
    void currentCount(java.util.Date,int,int,int,int,int,int,int) -> currentCount
    void dataReceived(int,java.lang.Object) -> dataReceived
    void diagEventRecord(java.util.Date,int) -> diagEventRecord
    void ekgSample(int) -> ekgSample
    void ekgStarting(java.util.Date,int,boolean,java.lang.String) -> ekgStarting
    void ekgStop(int,int) -> ekgStop
    void eraseComplete(int) -> eraseComplete
    void exceptionMessage(int) -> exceptionMessage
    void fatBurnRecord(java.util.Date,int,int,int) -> fatBurnRecord
    void fwUpdateInProgress(boolean) -> fwUpdateInProgress
    void fwUpdatePercent(int) -> fwUpdatePercent
    void fwUpdateReport(int,int,int,int) -> fwUpdateReport
    void pedometryRecord(java.util.Date,int,int,int,int,int,int,int,int,int,int,int) -> pedometryRecord
    void potentialBond(java.lang.String,java.lang.String,java.lang.String) -> potentialBond
    void sleepRecord(java.util.Date,int,int) -> sleepRecord
    void sleepResults(int,java.util.Date,java.util.Date,int,int,int,int,int,int,int,int,int) -> sleepResults
    void sleepSmoothData(int,java.util.Date[],int[]) -> sleepSmoothData
    void transferInProgress(boolean) -> transferInProgress
    void transferPercent(int) -> transferPercent
    void transferReport(int,int,int,int,int,int,int,int,int) -> transferReport
cmccsi.mhealth.app.sports.device.BeatBandDevice$2 -> cmccsi.mhealth.app.sports.device.h:
    cmccsi.mhealth.app.sports.device.BeatBandDevice this$0 -> a
    java.lang.String val$deviceNumber -> b
    java.lang.String val$deviceToken -> c
    java.lang.String val$deviceVersion -> d
    void run() -> run
cmccsi.mhealth.app.sports.device.DeviceManager -> cmccsi.mhealth.app.sports.device.i:
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface dManager -> a
    cmccsi.mhealth.app.sports.device.DeviceManager mDeviceManager -> b
    android.content.Context mContext -> c
    cmccsi.mhealth.app.sports.device.DeviceManager getInstance(android.content.Context) -> a
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface getDeviceInstance(int) -> a
cmccsi.mhealth.app.sports.device.DeviceManagerService -> cmccsi.mhealth.app.sports.device.DeviceManagerService:
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface mSelectedDevice -> a
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface mOldDevice -> b
    cmccsi.mhealth.app.sports.bean.DeviceInfo mOldDeviceInfo -> c
    cmccsi.mhealth.app.sports.bean.DeviceInfo mNewDeviceInfo -> d
    android.content.Context mContext -> e
    android.os.Handler mHandlerActivity -> f
    boolean isSwicthDevice -> g
    android.os.Handler mHandlerService -> h
    android.os.Bundle mBundle -> i
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack mBaseCallBack -> j
    java.lang.Runnable _bracelet_upload_timeout -> k
    java.lang.Runnable _connect_timeout -> l
    android.os.Handler mHandlerTemp -> m
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void unbindService(android.content.ServiceConnection) -> unbindService
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void switchDevice(cmccsi.mhealth.app.sports.bean.DeviceInfo,cmccsi.mhealth.app.sports.bean.DeviceInfo) -> a
    void connect(java.lang.String) -> a
    void disConnect() -> a
    void syncData(java.lang.String,java.lang.String) -> a
    void startRealTime() -> b
    void stopRealTime() -> c
    void startRealTimeEKG() -> d
    void stopRealTimeEKG() -> e
    void access$0(cmccsi.mhealth.app.sports.device.DeviceManagerService,boolean) -> a
    android.os.Handler access$1(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> a
    android.os.Bundle access$2(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> b
    boolean access$3(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> c
    android.os.Handler access$4(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> d
    java.lang.Runnable access$5(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> e
    cmccsi.mhealth.app.sports.bean.DeviceInfo access$6(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> f
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface access$7(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> g
    void access$8(cmccsi.mhealth.app.sports.device.DeviceManagerService,cmccsi.mhealth.app.sports.device.BaseDeviceInterface) -> a
    void access$9(cmccsi.mhealth.app.sports.device.DeviceManagerService,cmccsi.mhealth.app.sports.device.BaseDeviceInterface) -> b
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack access$10(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> h
    java.lang.Runnable access$11(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> i
    android.os.Handler access$12(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> j
    void access$13(cmccsi.mhealth.app.sports.device.DeviceManagerService,android.os.Handler) -> a
    cmccsi.mhealth.app.sports.bean.DeviceInfo access$14(cmccsi.mhealth.app.sports.device.DeviceManagerService) -> k
cmccsi.mhealth.app.sports.device.DeviceManagerService$1 -> cmccsi.mhealth.app.sports.device.j:
    cmccsi.mhealth.app.sports.device.DeviceManagerService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.device.DeviceManagerService$2 -> cmccsi.mhealth.app.sports.device.k:
    cmccsi.mhealth.app.sports.device.DeviceManagerService this$0 -> a
    void connected(int,java.lang.String) -> a
    void disConnected() -> a
    void pedoDataPercent(int) -> a
    void pedoDataReceived(cmccsi.mhealth.app.sports.bean.PedometorListInfo,java.util.List) -> a
    void realTimeDataReceived(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    void ekgStop(int,int) -> a
    void ekgDataReceived(int,java.lang.Object) -> a
    void exception(int,java.lang.String) -> b
cmccsi.mhealth.app.sports.device.DeviceManagerService$3 -> cmccsi.mhealth.app.sports.device.l:
    cmccsi.mhealth.app.sports.device.DeviceManagerService this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.device.DeviceManagerService$4 -> cmccsi.mhealth.app.sports.device.m:
    cmccsi.mhealth.app.sports.device.DeviceManagerService this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.device.DeviceManagerService$DeviceBind -> cmccsi.mhealth.app.sports.device.n:
    cmccsi.mhealth.app.sports.device.DeviceManagerService this$0 -> a
    cmccsi.mhealth.app.sports.device.DeviceManagerService getService(android.os.Handler) -> a
cmccsi.mhealth.app.sports.device.DeviceManagerService$UplaodBindedDeviceTask -> cmccsi.mhealth.app.sports.device.o:
    cmccsi.mhealth.app.sports.bean.BackInfo uploadResult -> a
    cmccsi.mhealth.app.sports.device.DeviceManagerService this$0 -> b
    void onPreExecute() -> onPreExecute
    java.lang.Integer doInBackground(org.apache.commons.lang.ObjectUtils$Null[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.device.DeviceManagerService$UploadBraceletDataTask -> cmccsi.mhealth.app.sports.device.p:
    java.lang.String deviceSerial -> b
    cmccsi.mhealth.app.sports.device.DeviceManagerService this$0 -> a
    java.lang.Integer doInBackground(org.apache.commons.lang.ObjectUtils$Null[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.device.MobileDevice -> cmccsi.mhealth.app.sports.device.q:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack mBaseCallBack -> c
    void connect(java.lang.String) -> connect
    void disConnect() -> disConnect
    void syncData(java.lang.String,java.lang.String) -> syncData
    void setCallBack(cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack) -> setCallBack
    void startPhoneStep() -> a
    void stopPhoneStep() -> b
cmccsi.mhealth.app.sports.device.PedometorDevice -> cmccsi.mhealth.app.sports.device.r:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack mBaseCallBack -> c
    void connect(java.lang.String) -> connect
    void disConnect() -> disConnect
    void syncData(java.lang.String,java.lang.String) -> syncData
    void setCallBack(cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack) -> setCallBack
cmccsi.mhealth.app.sports.ecg.activity.BraceletSettingActivity -> cmccsi.mhealth.app.sports.ecg.activity.BraceletSettingActivity:
    com.ai.android.picker.TimePicker tpSport -> a
    com.ai.android.picker.TimePicker tpSleep -> b
    android.widget.LinearLayout llSleep -> c
    android.widget.ToggleButton tbSport -> d
    android.widget.ToggleButton tbSleep -> e
    android.widget.RadioButton rbLeft -> f
    android.widget.RadioButton rbRight -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void loadConfig() -> a
    void saveConfig() -> b
    int getRepeatConfig(android.widget.LinearLayout) -> a
    void loadRepeat(android.widget.LinearLayout,int) -> a
    void initViews() -> c
    void onClick(android.view.View) -> onClick
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void enableSleep(boolean) -> a
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity -> cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity:
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mDialog -> b
    java.util.List mData -> c
    cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter mAdapter -> d
    cmccsi.mhealth.app.sports.bean.DeviceListInfo deviceListInfo -> e
    cmccsi.mhealth.app.sports.bean.DeviceInfo oldDevice -> f
    cmccsi.mhealth.app.sports.bean.DeviceInfo selectedDevice -> g
    cmccsi.mhealth.app.sports.bean.BackInfo uploadResult -> h
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$StepServiceUploadReceiver receiver -> i
    android.widget.ListView listView -> j
    android.widget.TextView title -> k
    android.widget.LinearLayout mLlBracelet -> l
    android.widget.LinearLayout mLlNotice -> m
    cmccsi.mhealth.app.sports.view.CustomProgressDialog progressDialog -> n
    cmccsi.mhealth.app.sports.view.CommonAskDialog mAskDialog -> o
    android.app.Dialog dialog -> p
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager mJWDeviceManager -> q
    android.widget.ArrayAdapter mNewDevicesArrayAdapter -> r
    java.util.List mBleMacList -> s
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro tgble -> t
    int isTgbleToOther -> u
    boolean isUploaded -> v
    boolean isConnected -> w
    android.app.Activity mContext -> x
    android.os.Handler mbleAlertHandler -> y
    java.lang.Runnable _bracelet_upload_timeout -> z
    java.lang.Runnable _bracelet_connect_timeout -> A
    android.os.Handler mHandlerTemp -> B
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack mBaseCallBack -> C
    android.os.Handler handle -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void initList() -> b
    void showAskDialog(java.lang.String,int) -> a
    void showDeleteInfoDialog(java.lang.String,java.lang.String) -> a
    void showDeleteAlertDialog(int) -> a
    void deleteDevice(int) -> b
    void switchToPhone() -> c
    void switchToPedometer() -> d
    void switchToBraclet() -> e
    void switchToJWBraclet() -> f
    void switchToJW201Braclet() -> g
    boolean checkBlueEnabled() -> h
    void startPhoneStep() -> i
    void setSelectedItem() -> j
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showProgress(java.lang.String) -> a
    void close() -> k
    void showMyToast(android.content.Context,java.lang.String) -> a
    int access$0(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> a
    void access$1(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,boolean) -> a
    android.os.Handler access$2(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> b
    java.lang.Runnable access$3(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> c
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro access$4(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> d
    void access$5(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> e
    void access$6(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,android.content.Context,java.lang.String) -> a
    cmccsi.mhealth.app.sports.bean.DeviceInfo access$7(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> f
    void access$8(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> g
    void access$9(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,boolean) -> b
    java.lang.Runnable access$10(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> h
    cmccsi.mhealth.app.sports.bean.DeviceInfo access$11(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> i
    void access$12(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,java.lang.String) -> a
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager access$13(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> j
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack access$14(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> k
    boolean access$15(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> l
    boolean access$16(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> m
    android.os.Handler access$17(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> n
    void access$18(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,java.lang.String,int) -> a
    void access$19(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,cmccsi.mhealth.app.sports.bean.BackInfo) -> a
    cmccsi.mhealth.app.sports.bean.BackInfo access$20(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> o
    void access$21(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,cmccsi.mhealth.app.sports.bean.DeviceListInfo) -> a
    cmccsi.mhealth.app.sports.bean.DeviceListInfo access$22(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> p
    android.widget.ListView access$23(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> q
    android.widget.LinearLayout access$24(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> r
    java.util.List access$25(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> s
    cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter access$26(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> t
    void access$27(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> u
    android.widget.LinearLayout access$28(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> v
    android.app.Activity access$29(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> w
    void access$30(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,int) -> a
    void access$31(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,cmccsi.mhealth.app.sports.bean.DeviceInfo) -> a
    void access$32(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,java.lang.String,int) -> b
    void access$33(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,java.lang.String,java.lang.String) -> a
    void access$34(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,int) -> b
    void access$35(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> x
    void access$36(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> y
    void access$37(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> z
    void access$38(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> A
    void access$39(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> B
    android.app.Dialog access$40(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity) -> C
    void access$41(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity,int) -> c
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$1 -> cmccsi.mhealth.app.sports.ecg.activity.a:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$10 -> cmccsi.mhealth.app.sports.ecg.activity.b:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$11 -> cmccsi.mhealth.app.sports.ecg.activity.c:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$2 -> cmccsi.mhealth.app.sports.ecg.activity.d:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$3 -> cmccsi.mhealth.app.sports.ecg.activity.e:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$4 -> cmccsi.mhealth.app.sports.ecg.activity.f:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    void connected(int,java.lang.String) -> a
    void disConnected() -> a
    void pedoDataPercent(int) -> a
    void pedoDataReceived(cmccsi.mhealth.app.sports.bean.PedometorListInfo,java.util.List) -> a
    void realTimeDataReceived(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    void ekgStop(int,int) -> a
    void ekgDataReceived(int,java.lang.Object) -> a
    void exception(int,java.lang.String) -> b
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$5 -> cmccsi.mhealth.app.sports.ecg.activity.g:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    void dispatchMessage(android.os.Message) -> dispatchMessage
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$6 -> cmccsi.mhealth.app.sports.ecg.activity.h:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$7 -> cmccsi.mhealth.app.sports.ecg.activity.i:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$8 -> cmccsi.mhealth.app.sports.ecg.activity.j:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    int val$newDevice -> b
    void onClick(int) -> a
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$9 -> cmccsi.mhealth.app.sports.ecg.activity.k:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$DeleteDeviceTask -> cmccsi.mhealth.app.sports.ecg.activity.l:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    cmccsi.mhealth.app.sports.bean.BackInfo doInBackground(java.lang.String[]) -> a
    void onPostExecute(cmccsi.mhealth.app.sports.bean.BackInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$LoadDeviceListTask -> cmccsi.mhealth.app.sports.ecg.activity.m:
    boolean mReload -> b
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    java.lang.Integer doInBackground(org.apache.commons.lang.ObjectUtils$Null[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$StepServiceUploadReceiver -> cmccsi.mhealth.app.sports.ecg.activity.n:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$UplaodBindedDeviceTask -> cmccsi.mhealth.app.sports.ecg.activity.o:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Integer doInBackground(org.apache.commons.lang.ObjectUtils$Null[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$UploadBraceletDataTask -> cmccsi.mhealth.app.sports.ecg.activity.p:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    java.lang.Integer doInBackground(org.apache.commons.lang.ObjectUtils$Null[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity$UploadJWBraceletDataTask -> cmccsi.mhealth.app.sports.ecg.activity.q:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivity this$0 -> a
    java.lang.Integer doInBackground(org.apache.commons.lang.ObjectUtils$Null[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest -> cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest:
    java.util.List mData -> d
    cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter mDeviceListAdapter -> e
    android.widget.ListView mLvDeviceList -> f
    cmccsi.mhealth.app.sports.bean.DeviceListInfo mDeviceListInfo -> g
    cmccsi.mhealth.app.sports.bean.DeviceInfo mOldDevice -> h
    cmccsi.mhealth.app.sports.bean.DeviceInfo mSelectedDevice -> i
    cmccsi.mhealth.app.sports.bean.DeviceInfo mTempDevice -> j
    android.widget.TextView title -> k
    android.widget.LinearLayout mLlNotice -> l
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mProgressDialog -> m
    cmccsi.mhealth.app.sports.view.CommonAskDialog mAskDialog -> n
    android.app.Dialog mDialog -> o
    android.content.Context mContext -> p
    cmccsi.mhealth.app.sports.device.DeviceManagerService mDeviceManagerService -> q
    boolean isSwitch -> r
    boolean isUpdate -> a
    int updateCount -> b
    java.lang.String mUpdateUrl -> s
    java.lang.String mDeviceVersion -> t
    java.lang.String mDeviceId -> u
    android.os.Handler mbleAlertHandler -> v
    android.content.ServiceConnection conn -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onStop() -> onStop
    void initViews() -> a
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void initList() -> b
    void showAskDialog(java.lang.String) -> a
    void showUpdateDialog(java.lang.String) -> b
    void showDeleteInfoDialog(java.lang.String,java.lang.String) -> a
    void showDeleteAlertDialog(int) -> a
    void deleteDevice(int) -> b
    void setSelectedItem() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void downloadFirmware(java.lang.String,java.lang.String,java.lang.String) -> a
    void updateFirmware(java.lang.String) -> c
    void showProgress(java.lang.String) -> d
    void closeProgress() -> d
    void access$0(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> a
    android.content.Context access$1(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> b
    void access$2(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,boolean) -> a
    cmccsi.mhealth.app.sports.bean.DeviceInfo access$3(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> c
    cmccsi.mhealth.app.sports.device.DeviceManagerService access$4(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> d
    cmccsi.mhealth.app.sports.bean.DeviceInfo access$5(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> e
    void access$6(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,cmccsi.mhealth.app.sports.bean.DeviceInfo) -> a
    void access$7(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,cmccsi.mhealth.app.sports.bean.DeviceInfo) -> b
    void access$8(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> f
    android.os.Handler access$9(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> g
    void access$10(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,cmccsi.mhealth.app.sports.device.DeviceManagerService) -> a
    void access$11(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,java.lang.String) -> a
    void access$12(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,cmccsi.mhealth.app.sports.bean.DeviceListInfo) -> a
    cmccsi.mhealth.app.sports.bean.DeviceListInfo access$13(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> h
    java.util.List access$14(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> i
    cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter access$15(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> j
    android.widget.LinearLayout access$16(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> k
    void access$17(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,cmccsi.mhealth.app.sports.bean.DeviceInfo) -> c
    void access$18(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,java.lang.String) -> b
    void access$19(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,java.lang.String,java.lang.String) -> a
    void access$20(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,int) -> a
    java.lang.String access$21(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> l
    android.app.Dialog access$22(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest) -> m
    void access$23(cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest,int) -> b
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$1 -> cmccsi.mhealth.app.sports.ecg.activity.r:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$2 -> cmccsi.mhealth.app.sports.ecg.activity.s:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$3 -> cmccsi.mhealth.app.sports.ecg.activity.t:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$4 -> cmccsi.mhealth.app.sports.ecg.activity.u:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$5 -> cmccsi.mhealth.app.sports.ecg.activity.v:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    void onClick(int) -> a
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$6 -> cmccsi.mhealth.app.sports.ecg.activity.w:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    void onClick(int) -> a
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$7 -> cmccsi.mhealth.app.sports.ecg.activity.x:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$8 -> cmccsi.mhealth.app.sports.ecg.activity.y:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$9 -> cmccsi.mhealth.app.sports.ecg.activity.z:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$DeleteDeviceTask -> cmccsi.mhealth.app.sports.ecg.activity.aa:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    cmccsi.mhealth.app.sports.bean.BackInfo doInBackground(java.lang.String[]) -> a
    void onPostExecute(cmccsi.mhealth.app.sports.bean.BackInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest$LoadDeviceListTask -> cmccsi.mhealth.app.sports.ecg.activity.ab:
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest this$0 -> a
    java.lang.Integer doInBackground(org.apache.commons.lang.ObjectUtils$Null[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.ecg.activity.ECGDetailChartActivity -> cmccsi.mhealth.app.sports.ecg.activity.ECGDetailChartActivity:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    org.achartengine.model.XYSeries mCurrentSeries -> c
    org.achartengine.GraphicalView mChartView -> d
    int chartType -> e
    int rangeType -> f
    android.app.Dialog dialog -> g
    android.widget.LinearLayout dialogRoot -> h
    android.widget.TextView textValue -> i
    android.widget.TextView textDatatime -> j
    cmccsi.mhealth.app.sports.ecg.utils.Range range -> k
    cmccsi.mhealth.app.sports.ecg.utils.ChartDataSource datasource -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    void initDialog() -> a
    void bindData(java.util.List) -> a
    void showHr(double,java.lang.String) -> a
    void showHrv(double,java.lang.String) -> b
    void showMood(double,java.lang.String) -> c
    void itemClick(org.xclcharts.chart.PointD) -> itemClick
    void onClick(android.view.View) -> onClick
    android.app.Dialog access$0(cmccsi.mhealth.app.sports.ecg.activity.ECGDetailChartActivity) -> a
cmccsi.mhealth.app.sports.ecg.activity.ECGDetailChartActivity$1 -> cmccsi.mhealth.app.sports.ecg.activity.ac:
    cmccsi.mhealth.app.sports.ecg.activity.ECGDetailChartActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.activity.ECGDetailChartActivity$2 -> cmccsi.mhealth.app.sports.ecg.activity.ad:
    cmccsi.mhealth.app.sports.ecg.activity.ECGDetailChartActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity -> cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity:
    android.support.v4.app.FragmentStatePagerAdapter mSectionsPagerAdapter -> a
    android.support.v4.view.ViewPager mViewPager -> b
    android.widget.RadioGroup mRadioGroup -> c
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mProgressDialog -> d
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> b
    void showProgressDialog(java.lang.String) -> a
    void dismissProgressDialog() -> a
    void onClick(android.view.View) -> onClick
    android.support.v4.view.ViewPager access$0(cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity) -> a
    android.widget.RadioGroup access$1(cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity) -> b
cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity$1 -> cmccsi.mhealth.app.sports.ecg.activity.ae:
    cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity$DownloadEcgTask -> cmccsi.mhealth.app.sports.ecg.activity.af:
    java.lang.String startTime -> b
    java.lang.String endTime -> c
    cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Integer doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity$OnRadioItemClickListener -> cmccsi.mhealth.app.sports.ecg.activity.ag:
    int currentId -> b
    cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity$SectionsPagerAdapter -> cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity$SectionsPagerAdapter:
    cmccsi.mhealth.app.sports.ecg.activity.HistoryECGDetailActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter -> cmccsi.mhealth.app.sports.ecg.a.a:
    int firstSelectPosition -> b
    android.view.LayoutInflater inflater -> c
    java.util.List data -> d
    android.content.Context mContext -> e
    cmccsi.mhealth.app.sports.bean.DeviceListInfo mDeviceListInfo -> f
    cmccsi.mhealth.app.sports.ecg.activity.DeviceSettingActivityTest mDeviceSettingActivityTest -> a
    void setDeviceListInfo(cmccsi.mhealth.app.sports.bean.DeviceListInfo,java.util.List) -> a
    int getCount() -> getCount
    java.lang.String getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setFirstSelectPosition(int) -> b
    java.lang.Object getItem(int) -> getItem
    cmccsi.mhealth.app.sports.bean.DeviceListInfo access$1(cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter) -> a
cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter$1 -> cmccsi.mhealth.app.sports.ecg.a.b:
    cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter this$0 -> a
    int val$index -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter$2 -> cmccsi.mhealth.app.sports.ecg.a.c:
    cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter$ViewHolder -> cmccsi.mhealth.app.sports.ecg.a.d:
    android.widget.TextView device -> a
    android.widget.ImageView device_image -> b
    android.widget.RelativeLayout rl_update -> c
    android.widget.Button btn_update -> d
    cmccsi.mhealth.app.sports.ecg.adapter.DeviceListAdapter this$0 -> e
cmccsi.mhealth.app.sports.ecg.fragment.ECGChartFragment -> cmccsi.mhealth.app.sports.ecg.fragment.ECGChartFragment:
    org.xclcharts.views.StaticSplineChartView charHR -> a
    org.xclcharts.views.StaticSplineChartView charHRV -> b
    org.xclcharts.views.StaticSplineChartView charMOOD -> c
    cmccsi.mhealth.app.sports.ecg.fragment.ECGChartFragment newInstance(int) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void refresh() -> a
    void bindData(java.util.List) -> a
    void bindLatestAndAverage(java.util.List) -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.ecg.utils.ChartDataSource -> cmccsi.mhealth.app.sports.ecg.b.a:
    double maxX -> a
    double maxY -> b
    java.util.List points -> c
    java.util.Map dateMap -> d
    java.util.List lables -> e
    java.util.List dates -> f
    java.util.List getDateList() -> a
    double getMaxX() -> b
    void setMaxX(double) -> a
    double getMaxY() -> c
    void setMaxY(double) -> b
    java.util.List getPoints() -> d
    void setPoints(java.util.List) -> a
    java.util.Map getDateMap() -> e
    void setDateList(java.util.List) -> b
    java.util.List getLables() -> f
    void setLables(java.util.List) -> c
cmccsi.mhealth.app.sports.ecg.utils.DataSourceBuilder -> cmccsi.mhealth.app.sports.ecg.b.b:
    java.text.SimpleDateFormat SDF -> a
    java.text.SimpleDateFormat SDF_DAY -> b
    java.util.List source -> c
    int chartType -> d
    int rangeType -> e
    cmccsi.mhealth.app.sports.ecg.utils.Range range -> f
    java.util.List map -> g
    cmccsi.mhealth.app.sports.ecg.utils.ChartDataSource build() -> a
    int getLabelMax() -> b
    org.xclcharts.chart.PointD createPoint(java.lang.String,java.lang.String) -> a
    java.util.List getLabels() -> c
    org.xclcharts.chart.PointD createDayData(java.lang.String,java.lang.String) -> b
    org.xclcharts.chart.PointD createWeekData(java.lang.String,java.lang.String) -> c
    org.xclcharts.chart.PointD createMonthData(java.lang.String,java.lang.String) -> d
    org.xclcharts.chart.PointD createSemiAnnualData(java.lang.String,java.lang.String) -> e
    org.xclcharts.chart.PointD getDayDiffPoint(java.lang.String,java.lang.String) -> f
cmccsi.mhealth.app.sports.ecg.utils.ECGDataFilter -> cmccsi.mhealth.app.sports.ecg.b.c:
    java.text.SimpleDateFormat SDF_DATE -> a
    java.text.SimpleDateFormat SDF_HOUR -> b
    java.util.regex.Pattern PATTERN_DATETIME -> c
    java.util.List filter(int,java.util.List) -> a
    java.util.List filterSemiannual(java.util.List) -> a
    java.util.List filterMonth(java.util.List) -> b
    java.util.List filterWeek(java.util.List) -> c
    java.util.List filterLastDataPerDay(java.util.List) -> d
    java.util.List filterToday(java.util.List) -> e
    java.lang.String plusOneDay(java.lang.String,java.util.Calendar) -> a
cmccsi.mhealth.app.sports.ecg.utils.Range -> cmccsi.mhealth.app.sports.ecg.b.d:
    java.lang.String startTime -> a
    java.lang.String endTime -> b
    java.lang.String getStartTime() -> a
    java.lang.String getEndTime() -> b
    void setStartTime(java.lang.String) -> a
    void setEndTime(java.lang.String) -> b
    java.lang.String getStartDate() -> c
    java.lang.String getEndDate() -> d
    java.lang.String toString() -> toString
cmccsi.mhealth.app.sports.ecg.utils.RangeUtil -> cmccsi.mhealth.app.sports.ecg.b.e:
    java.text.SimpleDateFormat SDF_DATE -> a
    cmccsi.mhealth.app.sports.ecg.utils.Range getRange(int) -> a
cmccsi.mhealth.app.sports.errorhandler.CrashHandler -> cmccsi.mhealth.app.sports.d.a:
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> a
    cmccsi.mhealth.app.sports.errorhandler.CrashHandler INSTANCE -> b
    android.content.Context mContext -> c
    java.lang.StringBuilder mDeviceCrashInfo -> d
    cmccsi.mhealth.app.sports.errorhandler.CrashHandler getInstance() -> a
    void init(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    void saveCrashInfoToFile(java.lang.Throwable) -> b
    void collectCrashDeviceInfo(android.content.Context) -> b
    void sendMail(java.lang.Throwable) -> c
    java.lang.String collectDeviceInfo(java.lang.Throwable) -> d
    android.content.Context access$0(cmccsi.mhealth.app.sports.errorhandler.CrashHandler) -> a
    java.lang.String access$1(cmccsi.mhealth.app.sports.errorhandler.CrashHandler,java.lang.Throwable) -> a
cmccsi.mhealth.app.sports.errorhandler.CrashHandler$1 -> cmccsi.mhealth.app.sports.d.b:
    cmccsi.mhealth.app.sports.errorhandler.CrashHandler this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.errorhandler.CrashHandler$3 -> cmccsi.mhealth.app.sports.d.c:
    cmccsi.mhealth.app.sports.errorhandler.CrashHandler this$0 -> a
    java.lang.Throwable val$exception -> b
    void run() -> run
cmccsi.mhealth.app.sports.errorhandler.EmailSender -> cmccsi.mhealth.app.sports.d.d:
    java.util.Properties properties -> a
    javax.mail.Session session -> b
    javax.mail.Message message -> c
    javax.mail.internet.MimeMultipart multipart -> d
    void setProperties(java.lang.String,java.lang.String) -> a
    void setReceiver(java.lang.String[]) -> a
    void setMessage(java.lang.String,java.lang.String,java.lang.String) -> a
    void sendEmail(java.lang.String,java.lang.String,java.lang.String) -> b
cmccsi.mhealth.app.sports.net.DataSyn -> cmccsi.mhealth.app.sports.e.a:
    java.lang.String TAG -> a
    java.lang.String strHttpURL -> b
    java.lang.String avatarHttpURL -> c
    cmccsi.mhealth.app.sports.bean.JsonResult jsonResult -> d
    java.lang.String strAccountHttpURL -> e
    cmccsi.mhealth.app.sports.net.DataSyn instance -> g
    org.apache.http.client.HttpClient mHttpClient -> h
    java.lang.String muserid -> i
    java.lang.String muserUid -> f
    int getclubid -> j
    void setStrHttpURL(java.lang.String) -> a
    void setAvatarHttpURL(java.lang.String) -> b
    cmccsi.mhealth.app.sports.net.DataSyn getInstance() -> a
    org.apache.http.HttpEntity httpClientExecuteGet(java.lang.String) -> d
    int getDataFromNet(java.lang.String,cmccsi.mhealth.app.sports.bean.BaseNetItem) -> a
    void servernamesavetosp(android.content.Context,java.lang.Integer) -> a
    java.lang.String forSetting() -> b
    int updateVersion(cmccsi.mhealth.app.sports.bean.UpdateVersionJson) -> a
    int getDeviceTypeList(cmccsi.mhealth.app.sports.bean.DeviceTypeListInfo) -> a
    int addDevice(java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.BackInfo) -> a
    int deleteDevice(java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.BackInfo) -> b
    int getPedoInfoByTimeArea(java.lang.String,java.lang.String,java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.PedometorListInfo) -> a
    int getActivityInfo_new(int,int,int,cmccsi.mhealth.app.sports.bean.ActivityInfo) -> a
    int getAvtivityDetailInfo(java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.ActivityDetailData_new) -> a
    int deleteFriend(java.lang.String,cmccsi.mhealth.app.sports.bean.AcceptFriendRequestInfo) -> a
    int acceptRequest(java.lang.String,java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.BackInfo) -> a
    int getFriendRequestList(java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.RequestListInfo) -> a
    int getFriendsList(cmccsi.mhealth.app.sports.bean.FriendsInfo) -> a
    int findFriendById(java.lang.String,java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.FindFriendInfo) -> a
    int addFriendById(java.lang.String,cmccsi.mhealth.app.sports.bean.BackInfo) -> a
    int acceptRaceInvitingRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.BackInfo) -> a
    int getRaceInvitedRequestList(java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.RequestListInfo) -> b
    int uploadGoalType(java.lang.String,cmccsi.mhealth.app.sports.bean.BackInfo) -> b
    int getUserInfoWithUid(cmccsi.mhealth.app.sports.bean.UserRegInfo) -> a
    int UpLoadMapData(java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.GPSListInfo,java.util.List) -> a
    int getListGpsData(cmccsi.mhealth.app.sports.bean.ListGPSData,int) -> a
    int getGoalData(java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.GoalNetInfo) -> a
    int getDetailsGpsData(cmccsi.mhealth.app.sports.bean.DetailGPSData,java.lang.String,android.content.Context) -> a
    int getDeviceListData(cmccsi.mhealth.app.sports.bean.DeviceListInfo) -> a
    int getECGListData(cmccsi.mhealth.app.sports.bean.ECGListinfo,java.lang.String,java.lang.String,java.lang.String) -> a
    int uploadBindDeviceInfo(cmccsi.mhealth.app.sports.bean.DeviceInfo,cmccsi.mhealth.app.sports.bean.DeviceInfo,cmccsi.mhealth.app.sports.bean.BackInfo) -> a
    int postDataFromNet(java.lang.String,cmccsi.mhealth.app.sports.bean.BaseNetItem,java.util.List) -> a
    org.apache.http.HttpEntity httpClientExecutePost(java.lang.String,java.util.List) -> a
    void loadServerInfo(android.content.Context) -> a
    void setUserUid(java.lang.String) -> c
    void loadUserInfo(android.content.Context) -> b
    void restoreUserInfo(android.content.SharedPreferences,cmccsi.mhealth.app.sports.bean.UserRegInfo) -> a
    void restoreCorpInfo(android.content.SharedPreferences$Editor,cmccsi.mhealth.app.sports.bean.UserCompanyInfo) -> a
    void loadUserInfoNotInThread(android.content.Context) -> c
    int getPedoRankListInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cmccsi.mhealth.app.sports.bean.PedoRankListInfo,java.lang.String) -> a
    int getAreaInfo(java.lang.String,cmccsi.mhealth.app.sports.bean.AreaListInfo) -> a
    int saveAreaInfo(java.lang.String,java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.SaveAreaInfo) -> a
    int saveTargetStep(java.lang.String,cmccsi.mhealth.app.sports.bean.SaveAreaInfo) -> a
    int saveDeviceToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.SaveDeviceToken) -> a
    int checkPhonenumbers(java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.ContactListInfo) -> a
    int addFriendsByPhonenumbers(java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.MultAddFriendsBackInfo) -> a
    int loginAuth(java.lang.String,java.lang.String,android.content.Context) -> a
    void servernamesavetosp(android.content.SharedPreferences,cmccsi.mhealth.app.sports.bean.ServersInfo,java.lang.Integer) -> a
    void servernamesavetosp(android.content.SharedPreferences,java.lang.Integer) -> a
    int getActivityUserRankByLevel(java.lang.String,java.lang.String,java.lang.String,cmccsi.mhealth.app.sports.bean.CampaignRankListInfo) -> a
    int access$1(cmccsi.mhealth.app.sports.net.DataSyn,cmccsi.mhealth.app.sports.bean.UserRegInfo) -> a
cmccsi.mhealth.app.sports.net.DataSyn$2 -> cmccsi.mhealth.app.sports.e.b:
    cmccsi.mhealth.app.sports.net.DataSyn this$0 -> a
    android.content.SharedPreferences val$sp -> b
    void run() -> run
cmccsi.mhealth.app.sports.net.DataSyn$3 -> cmccsi.mhealth.app.sports.e.c:
    cmccsi.mhealth.app.sports.net.DataSyn this$0 -> a
cmccsi.mhealth.app.sports.net.EcgJsonCreat -> cmccsi.mhealth.app.sports.e.d:
    java.lang.String key_data -> a
    java.lang.String key_datas -> b
    java.lang.String key_company -> c
    java.lang.String key_password -> d
    java.lang.String mCompany -> e
    java.lang.String mPassword -> f
    java.lang.String key_apptype -> g
    java.lang.String key_deviceid -> h
    java.lang.String key_datatype -> i
    java.lang.String key_collectdate -> j
    java.lang.String key_datavalue -> k
    java.lang.String appType -> l
    java.lang.String dataType -> m
    java.lang.String key_rawdata -> n
    java.lang.String key_hr -> o
    java.lang.String key_isaf -> p
    java.lang.String key_detailedresults -> q
    java.lang.String key_simpleresult -> r
    java.lang.String key_measureTime -> s
    org.json.JSONArray mappJson -> t
    org.json.JSONObject mhttpJson -> u
    org.json.JSONObject mgwJson -> v
    java.util.List mlist -> w
    void appJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void httpJson(java.lang.String,java.lang.String) -> a
    java.util.List jsonsend() -> a
    org.json.JSONObject myJsonCreat(java.lang.String,java.lang.String) -> b
cmccsi.mhealth.app.sports.net.NetworkTool -> cmccsi.mhealth.app.sports.e.e:
    boolean isOnline(android.content.Context) -> a
    int getNetworkState(android.content.Context) -> b
    boolean isGPSOPen(android.content.Context) -> c
cmccsi.mhealth.app.sports.net.PedometerJsonCreat -> cmccsi.mhealth.app.sports.e.f:
    java.lang.String key_data -> a
    java.lang.String key_datas -> b
    java.lang.String key_company -> c
    java.lang.String key_password -> d
    java.lang.String mCompany -> e
    java.lang.String mPassword -> f
    java.lang.String key_apptype -> g
    java.lang.String key_deviceid -> h
    java.lang.String key_deviceType -> i
    java.lang.String key_datatype -> j
    java.lang.String key_collectdate -> k
    java.lang.String key_datavalue -> l
    java.lang.String appType -> m
    org.json.JSONArray mappJson -> n
    org.json.JSONArray PedmappJson -> o
    org.json.JSONObject mhttpJson -> p
    org.json.JSONObject mgwJson -> q
    java.util.List mlist -> r
    void appDetailJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void appPedJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void httpJsonWithVersin(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void httpJson(java.lang.String,java.lang.String,java.lang.String) -> a
    void httpJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    void httpJsonDetail(java.lang.String,java.lang.String,java.lang.String) -> b
    void httpJsonDetailWithVersion(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> d
    void httpJsonDetail(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> e
    java.util.List jsonsend() -> a
    org.json.JSONObject myJsonCreat(java.lang.String,java.lang.String) -> a
cmccsi.mhealth.app.sports.net.SimpleNet -> cmccsi.mhealth.app.sports.e.g:
    void simpleGet(java.lang.String,android.os.Handler,android.content.Context) -> a
cmccsi.mhealth.app.sports.net.TestBase -> cmccsi.mhealth.app.sports.e.h:
    java.lang.String salt -> a
    java.lang.String password -> b
    java.lang.String pass2 -> c
    java.lang.String getPassWord(java.lang.String) -> a
    java.lang.String calculateUserPasswordWithSalt(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String calculateUserPassword(java.lang.String,java.lang.String) -> a
    java.lang.String _Base64Hash(java.lang.String,byte[]) -> a
cmccsi.mhealth.app.sports.net.UpdateSoftWareTools -> cmccsi.mhealth.app.sports.e.i:
    java.lang.String newVerInfo -> a
    java.lang.String newVerName -> b
    int newVerCode -> c
    java.lang.String download -> d
    boolean isNewVersionAvaliable(java.lang.String) -> a
    int compareNumber(java.lang.String,java.lang.String) -> a
cmccsi.mhealth.app.sports.pedo.PedoController -> cmccsi.mhealth.app.sports.pedo.a:
    cmccsi.mhealth.app.sports.pedo.PedoController mPedoController -> a
    cmccsi.mhealth.app.sports.db.DatabaseHelper mdbHelper -> b
    cmccsi.mhealth.app.sports.pedo.PedoController GetPedoController(android.content.Context) -> a
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo getLatestPedometer(java.lang.String) -> a
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo getLatestPedometerOfAllByDay(java.util.Date) -> a
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo getPedometerByDay(java.lang.String,java.util.Date) -> a
    java.util.ArrayList getAllPeriodPedometer(java.util.Date) -> b
    void insertOrUpdatePedometer(cmccsi.mhealth.app.sports.bean.PedometorDataInfo,boolean) -> a
    void insertOrUpdatePedometer(cmccsi.mhealth.app.sports.bean.PedometorListInfo) -> a
    void insertOrUpdatePedoDetail(java.lang.String,cmccsi.mhealth.app.sports.bean.PedoDetailInfo) -> a
    android.database.Cursor SelectPedoDetailByHour(java.lang.String,java.lang.String,java.lang.String) -> a
    cmccsi.mhealth.app.sports.bean.PedoDetailInfo getPedoDetailByDay(java.util.Date,java.lang.String,int,int) -> a
    android.database.Cursor selectLastCursor(java.lang.String) -> b
    android.database.Cursor selectPeriodPedometer(java.lang.String,java.util.Date,java.util.Date) -> a
    android.database.Cursor selectPedometerByDay(java.lang.String,java.util.Date) -> b
    java.lang.String Cumulative_minute(java.lang.String,java.lang.String) -> a
    java.lang.String Cumulative(java.lang.String,java.lang.String) -> b
cmccsi.mhealth.app.sports.pedo.PedometerActivity -> cmccsi.mhealth.app.sports.pedo.PedometerActivity:
    java.lang.String UPDATERESULT -> c
    int REQUEST_OPEN_BT_CODE -> d
    android.widget.TextView mTv_Duration -> e
    android.widget.TextView mTv_distance -> f
    android.widget.TextView mTv_stepnumofday -> g
    android.widget.TextView mTv_percentstep -> h
    android.widget.TextView mTv_currentEquipment -> i
    android.widget.TextView mTv_displaydate -> j
    android.widget.TextView tv_showGoal -> k
    android.widget.ImageView mIv_leftday -> l
    android.widget.ImageView mIv_rightday -> m
    android.widget.ImageView iv_showGoal -> n
    android.widget.ImageView mIv_reset -> o
    android.widget.ImageView mIv_bloothDisconnect -> p
    android.view.GestureDetector mGestureDetector -> q
    android.widget.Button mBtn_cal_achievement -> r
    android.widget.Button mBtn_distance_achievement -> s
    android.widget.RelativeLayout mRl_distance_achievement -> t
    android.widget.RelativeLayout mRelativeLayoutProgress -> u
    android.widget.LinearLayout mLl_cal_achievement -> v
    android.widget.LinearLayout mTopLayout -> w
    cmccsi.mhealth.app.sports.view.PopMenu mPopmenu_more -> x
    cmccsi.mhealth.app.sports.view.PedoCalProcess mPedoCalProcess -> y
    cmccsi.mhealth.app.sports.view.DownFlashView mRefreshableView -> z
    java.lang.String mDeviceId -> A
    java.lang.String mDevicePara -> B
    int mDeviceType -> C
    int mTargetStep -> D
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo currentPedo -> E
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo bluetoothPedo -> F
    java.util.Date mDisplayDate -> G
    java.util.Date mToday -> H
    cmccsi.mhealth.app.sports.pedo.PedometerActivity$MHealthStepReceiver mMHStepReceiver -> I
    int mlastCal -> J
    boolean isupdate -> K
    boolean isRealTime -> L
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro tgble -> M
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager jwdManager -> N
    cmccsi.mhealth.app.sports.pedo.PedometerActivity$TimerUpdateECGPedo mTimerUpdateECGPedo -> O
    boolean hasBleException -> P
    int bluetoothState -> Q
    android.os.Handler mHandler -> R
    android.os.Handler mbleAlertHandler -> a
    android.widget.AdapterView$OnItemClickListener menuItemClick -> S
    boolean isDown -> T
    java.lang.Runnable bleDisconnectRunnable -> U
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack jwdCallBack -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onStop() -> onStop
    void initView() -> a
    void initMorePopmenu() -> b
    void initPedoCalProcess() -> c
    void updatePedoData() -> d
    void displayPedoData(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    void setNomalPedoData(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> b
    void setNomalPedoData(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void setPercentPedoData(int,int) -> a
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo queryPedometor(java.lang.String,java.util.Date) -> a
    java.lang.String formatHHMMfromSec(int) -> a
    void showCurrentEquipment(int) -> b
    void startStepService() -> e
    void setLeftAndRightDisplayStatus() -> f
    void setCalArchivement(int) -> c
    void onRefresh(cmccsi.mhealth.app.sports.view.DownFlashView) -> a
    void onClick(android.view.View) -> onClick
    void displayPedoDataAdd(int) -> d
    void setBloothDisconnectState(boolean,boolean) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void backToMain() -> g
    boolean isInLauncher() -> h
    void registerStepReceiver() -> i
    void unregisterStepReceiver() -> j
    void onDestroy() -> onDestroy
    boolean isVersionUseable() -> k
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startBle() -> l
    void startJWBle() -> m
    java.lang.String access$0(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> a
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo access$1(cmccsi.mhealth.app.sports.pedo.PedometerActivity,java.lang.String,java.util.Date) -> a
    void access$2(cmccsi.mhealth.app.sports.pedo.PedometerActivity,cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    int access$3(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> b
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo access$4(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> c
    void access$5(cmccsi.mhealth.app.sports.pedo.PedometerActivity,cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> b
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo access$6(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> d
    void access$7(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> e
    cmccsi.mhealth.app.sports.view.DownFlashView access$8(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> f
    void access$9(cmccsi.mhealth.app.sports.pedo.PedometerActivity,boolean,boolean) -> a
    void access$10(cmccsi.mhealth.app.sports.pedo.PedometerActivity,boolean) -> a
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro access$11(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> g
    void access$12(cmccsi.mhealth.app.sports.pedo.PedometerActivity,int) -> a
    android.os.Handler access$13(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> h
    java.lang.Runnable access$14(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> i
    void access$15(cmccsi.mhealth.app.sports.pedo.PedometerActivity,cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> c
    java.util.Date access$16(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> j
    android.widget.LinearLayout access$17(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> k
    cmccsi.mhealth.app.sports.view.PopMenu access$18(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> l
    boolean access$19(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> m
    java.lang.String access$20(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> n
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager access$21(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> o
    java.lang.String access$22(cmccsi.mhealth.app.sports.pedo.PedometerActivity,int) -> b
    void access$23(cmccsi.mhealth.app.sports.pedo.PedometerActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int access$24(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> p
    void access$25(cmccsi.mhealth.app.sports.pedo.PedometerActivity,int,int) -> a
    int access$26(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> q
    void access$27(cmccsi.mhealth.app.sports.pedo.PedometerActivity,int) -> c
    void access$28(cmccsi.mhealth.app.sports.pedo.PedometerActivity,int) -> d
    void access$29(cmccsi.mhealth.app.sports.pedo.PedometerActivity,int) -> e
    android.widget.ImageView access$30(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> r
    android.widget.TextView access$31(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> s
    android.view.GestureDetector access$32(cmccsi.mhealth.app.sports.pedo.PedometerActivity) -> t
cmccsi.mhealth.app.sports.pedo.PedometerActivity$1 -> cmccsi.mhealth.app.sports.pedo.b:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.pedo.PedometerActivity$2 -> cmccsi.mhealth.app.sports.pedo.c:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.pedo.PedometerActivity$3 -> cmccsi.mhealth.app.sports.pedo.d:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.pedo.PedometerActivity$4 -> cmccsi.mhealth.app.sports.pedo.e:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.pedo.PedometerActivity$5 -> cmccsi.mhealth.app.sports.pedo.f:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    void realTimeDataReceived(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    void pedoDataReceived(cmccsi.mhealth.app.sports.bean.PedometorListInfo,java.util.List) -> a
    void pedoDataPercent(int) -> a
    void exception(int,java.lang.String) -> b
    void ekgStop(int,int) -> a
    void ekgDataReceived(int,java.lang.Object) -> a
    void disConnected() -> a
    void connected(int,java.lang.String) -> a
cmccsi.mhealth.app.sports.pedo.PedometerActivity$6 -> cmccsi.mhealth.app.sports.pedo.g:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cmccsi.mhealth.app.sports.pedo.PedometerActivity$7 -> cmccsi.mhealth.app.sports.pedo.h:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.pedo.PedometerActivity$8 -> cmccsi.mhealth.app.sports.pedo.i:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.pedo.PedometerActivity$9 -> cmccsi.mhealth.app.sports.pedo.j:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.pedo.PedometerActivity$LoadAchievementTask -> cmccsi.mhealth.app.sports.pedo.k:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    cmccsi.mhealth.app.sports.bean.GoalInfo doInBackground(java.lang.String[]) -> a
    void restoreGoalInfo2SP(cmccsi.mhealth.app.sports.bean.GoalNetInfo) -> a
    void onPostExecute(cmccsi.mhealth.app.sports.bean.GoalInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.pedo.PedometerActivity$MHealthStepReceiver -> cmccsi.mhealth.app.sports.pedo.l:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cmccsi.mhealth.app.sports.pedo.PedometerActivity$PedoGestureListener -> cmccsi.mhealth.app.sports.pedo.m:
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
cmccsi.mhealth.app.sports.pedo.PedometerActivity$TimerUpdateECGPedo -> cmccsi.mhealth.app.sports.pedo.n:
    java.util.Timer timer -> a
    cmccsi.mhealth.app.sports.pedo.PedometerActivity$TimerUpdateECGPedo$TimerUpdateAskTask timerTask -> b
    cmccsi.mhealth.app.sports.pedo.PedometerActivity this$0 -> c
    void cancle() -> a
    cmccsi.mhealth.app.sports.pedo.PedometerActivity access$0(cmccsi.mhealth.app.sports.pedo.PedometerActivity$TimerUpdateECGPedo) -> a
cmccsi.mhealth.app.sports.pedo.PedometerActivity$TimerUpdateECGPedo$TimerUpdateAskTask -> cmccsi.mhealth.app.sports.pedo.o:
    int mSpace -> a
    cmccsi.mhealth.app.sports.pedo.PedometerActivity$TimerUpdateECGPedo this$1 -> b
    void run() -> run
cmccsi.mhealth.app.sports.pedo.PedometerActivityTest -> cmccsi.mhealth.app.sports.pedo.PedometerActivityTest:
    java.lang.String TAG -> b
    java.lang.String UPDATERESULT -> c
    int REQUEST_OPEN_BT_CODE -> d
    android.widget.TextView mTv_Duration -> e
    android.widget.TextView mTv_distance -> f
    android.widget.TextView mTv_stepnumofday -> g
    android.widget.TextView mTv_percentstep -> h
    android.widget.TextView mTv_currentEquipment -> i
    android.widget.TextView mTv_displaydate -> j
    android.widget.TextView tv_showGoal -> k
    android.widget.ImageView mIv_leftday -> l
    android.widget.ImageView mIv_rightday -> m
    android.widget.ImageView iv_showGoal -> n
    android.widget.ImageView mIv_reset -> o
    android.widget.ImageView mIv_bloothDisconnect -> p
    android.view.GestureDetector mGestureDetector -> q
    android.widget.Button mBtn_cal_achievement -> r
    android.widget.Button mBtn_distance_achievement -> s
    android.widget.RelativeLayout mRl_distance_achievement -> t
    android.widget.RelativeLayout mRelativeLayoutProgress -> u
    android.widget.LinearLayout mLl_cal_achievement -> v
    android.widget.LinearLayout mTopLayout -> w
    cmccsi.mhealth.app.sports.view.PopMenu mPopmenu_more -> x
    cmccsi.mhealth.app.sports.view.PedoCalProcess mPedoCalProcess -> y
    cmccsi.mhealth.app.sports.view.DownFlashView mRefreshableView -> z
    java.lang.String mDeviceId -> A
    int mDeviceType -> B
    int mTargetStep -> C
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo currentPedo -> D
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo bluetoothPedo -> E
    java.util.Date mDisplayDate -> F
    boolean isupdate -> G
    cmccsi.mhealth.app.sports.device.DeviceManagerService mDeviceManagerService -> H
    int bluetoothState -> I
    android.os.Handler mHandler -> J
    android.os.Handler mbleAlertHandler -> K
    android.widget.AdapterView$OnItemClickListener menuItemClick -> L
    android.content.ServiceConnection conn -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onStop() -> onStop
    void initView() -> a
    void initMorePopmenu() -> b
    void initPedoCalProcess() -> c
    void updatePedoData() -> d
    void displayPedoData(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    void setNomalPedoData(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> b
    void setNomalPedoData(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void setPercentPedoData(int,int) -> a
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo queryPedometor(java.lang.String,java.util.Date) -> a
    java.lang.String formatHHMMfromSec(int) -> a
    void showCurrentEquipment(int) -> b
    void startStepService() -> e
    void setLeftAndRightDisplayStatus() -> f
    void setCalArchivement(int) -> c
    void onRefresh(cmccsi.mhealth.app.sports.view.DownFlashView) -> a
    void onClick(android.view.View) -> onClick
    void displayPedoDataAdd(int) -> d
    void setBloothDisconnectState(boolean,boolean) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void backToMain() -> g
    boolean isInLauncher() -> h
    void onDestroy() -> onDestroy
    boolean isVersionUseable() -> i
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean checkBlueEnabled() -> j
    java.lang.String access$0(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> a
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo access$1(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest,java.lang.String,java.util.Date) -> a
    void access$2(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest,cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    int access$3(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> b
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo access$4(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> c
    void access$5(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest,cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> b
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo access$6(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> d
    void access$7(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> e
    cmccsi.mhealth.app.sports.view.DownFlashView access$8(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> f
    void access$9(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest,boolean,boolean) -> a
    cmccsi.mhealth.app.sports.device.DeviceManagerService access$10(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> g
    void access$11(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest,cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> c
    java.util.Date access$12(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> h
    android.widget.LinearLayout access$13(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> i
    cmccsi.mhealth.app.sports.view.PopMenu access$14(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> j
    android.os.Handler access$15(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> k
    void access$16(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest,cmccsi.mhealth.app.sports.device.DeviceManagerService) -> a
    boolean access$17(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> l
    void access$18(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest,int) -> a
    android.widget.ImageView access$19(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> m
    android.widget.TextView access$20(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> n
    android.view.GestureDetector access$21(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> o
    android.os.Handler access$22(cmccsi.mhealth.app.sports.pedo.PedometerActivityTest) -> p
cmccsi.mhealth.app.sports.pedo.PedometerActivityTest$1 -> cmccsi.mhealth.app.sports.pedo.p:
    cmccsi.mhealth.app.sports.pedo.PedometerActivityTest this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.pedo.PedometerActivityTest$2 -> cmccsi.mhealth.app.sports.pedo.q:
    cmccsi.mhealth.app.sports.pedo.PedometerActivityTest this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.pedo.PedometerActivityTest$3 -> cmccsi.mhealth.app.sports.pedo.r:
    cmccsi.mhealth.app.sports.pedo.PedometerActivityTest this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.pedo.PedometerActivityTest$4 -> cmccsi.mhealth.app.sports.pedo.s:
    cmccsi.mhealth.app.sports.pedo.PedometerActivityTest this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
cmccsi.mhealth.app.sports.pedo.PedometerActivityTest$5 -> cmccsi.mhealth.app.sports.pedo.t:
    cmccsi.mhealth.app.sports.pedo.PedometerActivityTest this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cmccsi.mhealth.app.sports.pedo.PedometerActivityTest$6 -> cmccsi.mhealth.app.sports.pedo.u:
    cmccsi.mhealth.app.sports.pedo.PedometerActivityTest this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.pedo.PedometerActivityTest$LoadAchievementTask -> cmccsi.mhealth.app.sports.pedo.v:
    cmccsi.mhealth.app.sports.pedo.PedometerActivityTest this$0 -> a
    cmccsi.mhealth.app.sports.bean.GoalInfo doInBackground(java.lang.String[]) -> a
    void restoreGoalInfo2SP(cmccsi.mhealth.app.sports.bean.GoalNetInfo) -> a
    void onPostExecute(cmccsi.mhealth.app.sports.bean.GoalInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.pedo.PedometerActivityTest$PedoGestureListener -> cmccsi.mhealth.app.sports.pedo.w:
    cmccsi.mhealth.app.sports.pedo.PedometerActivityTest this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
cmccsi.mhealth.app.sports.pedo.ShareWeiXin -> cmccsi.mhealth.app.sports.pedo.x:
    android.app.Dialog mCustomDialog -> a
    android.app.Activity mActivity -> b
    android.graphics.Bitmap mBitmapBig -> c
    android.graphics.Bitmap mBottom -> d
    android.graphics.Bitmap mTop -> e
    boolean mCheckWinXin -> f
    android.view.View mLayout -> g
    java.lang.String mStrUpdateDate -> h
    com.tencent.mm.sdk.openapi.IWXAPI mWeiXinAPI -> i
    void Shared() -> a
    void takeScreenAndShare() -> b
    void takeScreenAndShare(android.graphics.Bitmap) -> a
    void onClick(android.view.View) -> onClick
    void sendTofriends(android.graphics.Bitmap) -> b
    java.lang.String buildTransaction(java.lang.String) -> a
    android.graphics.Bitmap access$0(cmccsi.mhealth.app.sports.pedo.ShareWeiXin) -> a
    void access$1(cmccsi.mhealth.app.sports.pedo.ShareWeiXin,android.graphics.Bitmap) -> a
    android.graphics.Bitmap access$2(cmccsi.mhealth.app.sports.pedo.ShareWeiXin) -> b
    void access$3(cmccsi.mhealth.app.sports.pedo.ShareWeiXin,android.graphics.Bitmap) -> b
    android.graphics.Bitmap access$4(cmccsi.mhealth.app.sports.pedo.ShareWeiXin) -> c
    void access$5(cmccsi.mhealth.app.sports.pedo.ShareWeiXin,android.graphics.Bitmap) -> c
    void access$6(cmccsi.mhealth.app.sports.pedo.ShareWeiXin,boolean) -> a
    void access$7(cmccsi.mhealth.app.sports.pedo.ShareWeiXin,android.graphics.Bitmap) -> d
    void access$8(cmccsi.mhealth.app.sports.pedo.ShareWeiXin) -> d
    android.app.Dialog access$9(cmccsi.mhealth.app.sports.pedo.ShareWeiXin) -> e
cmccsi.mhealth.app.sports.pedo.ShareWeiXin$1 -> cmccsi.mhealth.app.sports.pedo.y:
    cmccsi.mhealth.app.sports.pedo.ShareWeiXin this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
cmccsi.mhealth.app.sports.pedo.ShareWeiXin$2 -> cmccsi.mhealth.app.sports.pedo.z:
    cmccsi.mhealth.app.sports.pedo.ShareWeiXin this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.pedo.ShareWeiXin$3 -> cmccsi.mhealth.app.sports.pedo.aa:
    cmccsi.mhealth.app.sports.pedo.ShareWeiXin this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.pedo.ShareWeiXin$4 -> cmccsi.mhealth.app.sports.pedo.ab:
    cmccsi.mhealth.app.sports.pedo.ShareWeiXin this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro -> cmccsi.mhealth.app.sports.pedo.ac:
    java.lang.String TAG -> b
    boolean islog -> c
    android.content.Context mContext -> d
    android.os.Handler mAlertHandler -> e
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> f
    com.neurosky.ble.TGBleManager tgBleManager -> g
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo bluetoothPedo -> h
    int option -> i
    int connectStatus -> j
    boolean isRealTime -> k
    boolean isRealActivitiy -> l
    android.bluetooth.BluetoothDevice bt -> m
    java.lang.String mDeviceAdress -> n
    android.os.Bundle mBundle -> o
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro$TimerUpdateECGPedo mTimerUpdateECGPedo -> p
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro SINGLEINSTANCE -> q
    com.neurosky.ble.TGBleManagerCallback bleCallback -> a
    void setOption(int) -> a
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro getSingleInstance(android.content.Context) -> a
    void setRealActivitiy(boolean) -> a
    void init() -> o
    void content(java.lang.String) -> a
    void content() -> a
    void getPedometerData() -> b
    void startRealTimeSport() -> c
    void stopRealTimeSport() -> d
    void startRealTimeEKG() -> e
    void stopRealTimeEKG() -> f
    void close() -> g
    void setHandle(android.os.Handler) -> a
    void initNeroBLE() -> h
    void startUploadTimer() -> i
    void cancleUploadTime() -> j
    int saveDeviceTokenInfo(java.lang.String,java.lang.String,java.lang.String) -> a
    void updateFirmware(java.lang.String,java.lang.String) -> a
    java.lang.String getFwVersion() -> k
    java.lang.String getBondToken() -> l
    java.lang.String getHwSerialNumber() -> m
    void access$0(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro,int) -> a
    android.os.Handler access$1(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro) -> a
    android.os.Bundle access$2(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro) -> b
    java.lang.String access$3(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro) -> c
    int access$4(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro) -> d
    com.neurosky.ble.TGBleManager access$5(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro) -> e
    void access$6(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro,int) -> b
    android.content.Context access$7(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro) -> f
    int access$8(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean access$9(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro) -> g
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo access$10(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro) -> h
    void access$11(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro,cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    java.lang.String access$12(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro) -> i
    boolean access$13(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro) -> j
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro access$14() -> n
cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro$1 -> cmccsi.mhealth.app.sports.pedo.ad:
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro this$0 -> a
    void batteryLevel(int) -> batteryLevel
    void bleDidAbortConnect() -> bleDidAbortConnect
    void bleDidBond(int) -> bleDidBond
    void bleDidConnect() -> bleDidConnect
    void bleDidDisconnect() -> bleDidDisconnect
    void bleDidSendAlarmGoals(int) -> bleDidSendAlarmGoals
    void bleDidSendUserConfig(int) -> bleDidSendUserConfig
    void bleLostConnect() -> bleLostConnect
    void candidateFound(android.bluetooth.BluetoothDevice,int,java.lang.String) -> candidateFound
    void currentCount(java.util.Date,int,int,int,int,int,int,int) -> currentCount
    void dataReceived(int,java.lang.Object) -> dataReceived
    void diagEventRecord(java.util.Date,int) -> diagEventRecord
    void ekgSample(int) -> ekgSample
    void ekgStarting(java.util.Date,int,boolean,java.lang.String) -> ekgStarting
    void ekgStop(int,int) -> ekgStop
    void eraseComplete(int) -> eraseComplete
    void exceptionMessage(int) -> exceptionMessage
    void fatBurnRecord(java.util.Date,int,int,int) -> fatBurnRecord
    void fwUpdateInProgress(boolean) -> fwUpdateInProgress
    void fwUpdatePercent(int) -> fwUpdatePercent
    void fwUpdateReport(int,int,int,int) -> fwUpdateReport
    void pedometryRecord(java.util.Date,int,int,int,int,int,int,int,int,int,int,int) -> pedometryRecord
    void potentialBond(java.lang.String,java.lang.String,java.lang.String) -> potentialBond
    void sleepRecord(java.util.Date,int,int) -> sleepRecord
    void sleepResults(int,java.util.Date,java.util.Date,int,int,int,int,int,int,int,int,int) -> sleepResults
    void sleepSmoothData(int,java.util.Date[],int[]) -> sleepSmoothData
    void transferInProgress(boolean) -> transferInProgress
    void transferPercent(int) -> transferPercent
    void transferReport(int,int,int,int,int,int,int,int,int) -> transferReport
cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro$2 -> cmccsi.mhealth.app.sports.pedo.ae:
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro this$0 -> a
    java.lang.String val$deviceNumber -> b
    java.lang.String val$deviceToken -> c
    java.lang.String val$deviceVersion -> d
    void run() -> run
cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro$TimerUpdateECGPedo -> cmccsi.mhealth.app.sports.pedo.af:
    java.util.Timer timer -> a
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro$TimerUpdateECGPedo$TimerUpdateAskTask timerTask -> b
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro this$0 -> c
    void cancle() -> a
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro access$0(cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro$TimerUpdateECGPedo) -> a
cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro$TimerUpdateECGPedo$TimerUpdateAskTask -> cmccsi.mhealth.app.sports.pedo.ag:
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro$TimerUpdateECGPedo this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro$UploadPedoAsk -> cmccsi.mhealth.app.sports.pedo.ah:
    java.util.List pedolist -> b
    cmccsi.mhealth.app.sports.bean.PedoDetailInfo pedoDetail -> c
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro this$0 -> a
    java.lang.Integer doInBackground(org.apache.commons.lang.ObjectUtils$Null[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.pedo.UploadManager -> cmccsi.mhealth.app.sports.pedo.ai:
    java.lang.String myGwUrl -> a
    boolean uploadPedo(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    boolean uploadBlePedo(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> b
    boolean uploadBlePedoDetail(cmccsi.mhealth.app.sports.bean.PedoDetailInfo,java.lang.String,java.lang.String) -> a
    boolean uploadPedoDetail(cmccsi.mhealth.app.sports.bean.PedoDetailInfo,java.lang.String) -> a
cmccsi.mhealth.app.sports.phonesteplib.SPUtils -> cmccsi.mhealth.app.sports.f.a:
    android.content.SharedPreferences sp -> a
    cmccsi.mhealth.app.sports.phonesteplib.SPUtils getInstance(android.content.Context) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> a
cmccsi.mhealth.app.sports.phonesteplib.StepController -> cmccsi.mhealth.app.sports.f.b:
    android.content.Context context -> a
    java.lang.String mAction -> b
    void setContext(android.content.Context) -> a
    void setStopAction(java.lang.String) -> a
    void startStepService(java.lang.String) -> b
    void stopStepService() -> a
cmccsi.mhealth.app.sports.phonesteplib.StepDetector -> cmccsi.mhealth.app.sports.f.c:
    cmccsi.mhealth.app.sports.phonesteplib.StepDetector stepDetector -> a
    android.hardware.SensorManager mSensorManager -> b
    float[] mAcc -> c
    boolean isStepDetectorRun -> d
    cmccsi.mhealth.app.sports.phonesteplib.StepDetector getStepDetetorInstance(android.content.Context) -> a
    void startStepDetector() -> a
    void stopStepDetector() -> b
    java.util.List getAcc() -> c
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    boolean getIsStepDetectorRun() -> d
cmccsi.mhealth.app.sports.phonesteplib.UserInstance -> cmccsi.mhealth.app.sports.f.d:
    int gender -> a
    double height -> b
    double weight -> c
    int age -> d
    int getGender() -> a
    void setGender(int) -> a
    double getHeight() -> b
    void setHeight(double) -> a
    double getWeight() -> c
    void setWeight(double) -> b
    int getAge() -> d
    void setAge(int) -> b
cmccsi.mhealth.app.sports.service.ProtectionService -> cmccsi.mhealth.app.sports.service.ProtectionService:
    boolean checkStepService -> a
    void stopService() -> a
    void onHandleIntent(android.content.Intent) -> onHandleIntent
cmccsi.mhealth.app.sports.service.StepService -> cmccsi.mhealth.app.sports.service.StepService:
    android.os.IBinder mBinder -> i
    cmccsi.mhealth.app.sports.phonesteplib.StepDetector mDetector -> j
    int[] mAcc -> a
    cmccsi.mhealth.app.sports.service.StepService$GetAccThread1 mGetAccThread -> k
    android.os.PowerManager$WakeLock wakeLock -> l
    cmccsi.mhealth.app.sports.phonesteplib.UserInstance userInstance -> m
    int last_Step -> b
    android.app.NotificationManager nm -> n
    boolean isRunning -> c
    int targetStep -> o
    int todayTime -> p
    int todayStep -> q
    int todayCal -> r
    int todayDistance -> s
    int lastUpdateStep -> d
    int todayTotalStep -> e
    int todayTotalCal -> f
    int todayTotalDistance -> g
    int todayTotalTime -> h
    int mMinuts -> t
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo todayPedoInfo -> u
    cmccsi.mhealth.app.sports.service.StepService$StopPhoneStepReceiver receiver -> v
    android.app.Notification noti -> w
    java.util.Date currentdate -> x
    int laststepdetail -> y
    int lastcaldetail -> z
    cmccsi.mhealth.app.sports.phonesteplib.SPUtils spUtils -> A
    int tempMinuts -> B
    java.util.ArrayList snp5ls -> C
    java.util.ArrayList knp5ls -> D
    cmccsi.mhealth.app.sports.bean.PedoDetailInfo runPedoDetailInfo -> E
    java.util.List mUploadlist -> F
    java.util.List mUploadDetailList -> G
    int dataFromPHP -> H
    java.lang.String deviceId -> I
    java.lang.String myGwUrl -> J
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void sendDataByBoardcast(int,float,int,int,int,int) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void showNotification(java.lang.String,java.lang.String,java.lang.String) -> a
    void notifyNotification(java.lang.String,java.lang.String,java.lang.String) -> b
    void notifyNotificationPercent() -> a
    void stopNotification() -> c
    void initRunPedoData() -> d
    void initTodayPedoData(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> b
    void AddPedoData(cmccsi.mhealth.app.sports.bean.PedometorDataInfo,int,int,int,int) -> a
    void insertSumPedoData(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> c
    void uploadPed(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> a
    void sendUpLoadIntent() -> e
    void sendIntentBroadcast(java.lang.String,java.lang.String,java.lang.String) -> c
    int getStepTimeFromPedometor(cmccsi.mhealth.app.sports.bean.PedometorDataInfo) -> d
    void clearPedoData() -> f
    void insertPedoDetail(cmccsi.mhealth.app.sports.bean.PedoDetailInfo) -> a
    void initNewPedoDetail() -> g
    void addStepPerFiveMinute(int,int) -> a
    void insertAndUploadPedo() -> h
    void uploadData() -> i
    void uploadPedDetail(cmccsi.mhealth.app.sports.bean.PedoDetailInfo,java.lang.String) -> a
    void restoreDeviceInfo() -> j
    java.lang.String getVersion() -> b
    boolean isServiceRunning(android.content.Context) -> a
    void access$0(cmccsi.mhealth.app.sports.service.StepService) -> a
    void access$1(cmccsi.mhealth.app.sports.service.StepService) -> b
    void access$2(cmccsi.mhealth.app.sports.service.StepService) -> c
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo access$3(cmccsi.mhealth.app.sports.service.StepService) -> d
    void access$4(cmccsi.mhealth.app.sports.service.StepService,cmccsi.mhealth.app.sports.bean.PedometorDataInfo,int,int,int,int) -> a
    void access$5(cmccsi.mhealth.app.sports.service.StepService) -> e
    void access$6(cmccsi.mhealth.app.sports.service.StepService) -> f
    cmccsi.mhealth.app.sports.service.StepService$GetAccThread1 access$7(cmccsi.mhealth.app.sports.service.StepService) -> g
    void access$8(cmccsi.mhealth.app.sports.service.StepService,cmccsi.mhealth.app.sports.service.StepService$GetAccThread1) -> a
    void access$9(cmccsi.mhealth.app.sports.service.StepService,int,float,int,int,int,int) -> a
    java.lang.String access$10(cmccsi.mhealth.app.sports.service.StepService) -> h
    java.util.List access$11(cmccsi.mhealth.app.sports.service.StepService) -> i
    void access$12(cmccsi.mhealth.app.sports.service.StepService,int) -> a
    int access$13(cmccsi.mhealth.app.sports.service.StepService) -> j
    java.util.List access$14(cmccsi.mhealth.app.sports.service.StepService) -> k
cmccsi.mhealth.app.sports.service.StepService$1 -> cmccsi.mhealth.app.sports.service.a:
    cmccsi.mhealth.app.sports.service.StepService this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.service.StepService$2 -> cmccsi.mhealth.app.sports.service.b:
    cmccsi.mhealth.app.sports.service.StepService this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.service.StepService$GetAccThread1 -> cmccsi.mhealth.app.sports.service.c:
    cmccsi.mhealth.app.sports.phonesteplib.StepDetector mDetector -> b
    cmccsi.mhealth.app.sports.phonesteplib.UserInstance userInstance -> c
    int[] mAcc -> d
    int[] ft -> e
    int[] ltemp -> f
    int cnt -> g
    int samp -> h
    int ltemp_index -> i
    int startflag -> j
    int max_in20 -> k
    int min_in20 -> l
    int max -> m
    int min -> n
    int thres -> o
    int oldthres -> p
    int threchangeflag -> q
    int timecount -> r
    int vppchangecount -> s
    int vpp -> t
    int delta_vpp -> u
    int new_fixed -> v
    int old_fixed -> w
    int mode -> x
    int lastmode -> y
    int lastsearch -> z
    int searchcount -> A
    int samp1 -> B
    int search_count -> C
    int last_step -> D
    int step -> E
    double calory -> F
    double distance -> G
    double time -> H
    int exercise_intensity_normally -> I
    int exercise_intensity_fairly -> J
    int exercise_intensity_very -> K
    int EXERCISE_INTENSITY_MIN -> L
    int EXERCISE_INTENSITY_MAX -> M
    cmccsi.mhealth.app.sports.service.StepService this$0 -> a
    void stopMyThread() -> a
    void run() -> run
    void step_process(int,int,double,double,int) -> a
    double steplen(int,int,double,double) -> a
    double calCaculate(int,double,int,int[]) -> a
    double balCaculate(int,int,double,double) -> b
    cmccsi.mhealth.app.sports.phonesteplib.StepDetector access$0(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1) -> a
    int access$1(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1) -> b
    double access$2(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1) -> c
    double access$3(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1) -> d
    double access$4(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1) -> e
    int access$5(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1) -> f
    int access$6(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1) -> g
    int access$7(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1) -> h
    void access$8(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1,int) -> a
    void access$9(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1,double) -> a
    void access$10(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1,double) -> b
    void access$11(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1,int) -> b
    void access$12(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1,int) -> c
    void access$13(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1,int) -> d
    void access$14(cmccsi.mhealth.app.sports.service.StepService$GetAccThread1,double) -> c
cmccsi.mhealth.app.sports.service.StepService$GetAccThread1$1 -> cmccsi.mhealth.app.sports.service.d:
    cmccsi.mhealth.app.sports.service.StepService$GetAccThread1 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.service.StepService$InitAccountRunnable -> cmccsi.mhealth.app.sports.service.e:
    android.content.Context context -> b
    java.lang.String userUid -> c
    cmccsi.mhealth.app.sports.service.StepService this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.service.StepService$StepBinder -> cmccsi.mhealth.app.sports.service.f:
    cmccsi.mhealth.app.sports.service.StepService this$0 -> a
    cmccsi.mhealth.app.sports.service.StepService getService() -> a
cmccsi.mhealth.app.sports.service.StepService$StopPhoneStepReceiver -> cmccsi.mhealth.app.sports.service.g:
    cmccsi.mhealth.app.sports.service.StepService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cmccsi.mhealth.app.sports.service.StepService_GPS -> cmccsi.mhealth.app.sports.service.StepService_GPS:
    android.os.Binder mbinder -> m
    com.baidu.location.LocationClient mLocClient -> n
    java.util.Timer mTimer -> o
    java.util.TimerTask mTask -> p
    cmccsi.mhealth.app.sports.bean.GpsInfoDetail mGpsInfoDetail -> q
    int mCount -> a
    int nDeltaCount -> b
    java.lang.Boolean bNoise -> r
    java.lang.String mStartTime -> s
    float BMR -> t
    boolean mStart_Stop -> c
    boolean isPointStop -> u
    boolean isRunning -> d
    cmccsi.mhealth.app.sports.service.StepService_GPS$OnMyLocationChangeListener ICallback -> e
    android.location.LocationManager manager -> v
    double mAlitude -> w
    boolean bFirstChange -> x
    com.baidu.location.BDLocation mLocation -> f
    com.baidu.location.BDLocation mLocationOK -> g
    com.baidu.location.BDLocation mLocationTmp -> h
    double speedTmp -> i
    int nDeltaCountTmp -> j
    com.baidu.mapapi.model.LatLng mOldGeoPoint -> k
    double mDistances -> l
    int twoCountPoint -> y
    void onCreate() -> onCreate
    void onLowMemory() -> onLowMemory
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void setBMR() -> d
    void registerCallback(cmccsi.mhealth.app.sports.service.StepService_GPS$OnMyLocationChangeListener) -> a
    void unRegisterCallback(cmccsi.mhealth.app.sports.service.StepService_GPS$OnMyLocationChangeListener) -> b
    void location() -> e
    void getaltitude() -> f
    void setLocationOption() -> g
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onRebind(android.content.Intent) -> onRebind
    void onDestroy() -> onDestroy
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void requeatNotify() -> a
    void stopTimer() -> b
    void startTimer() -> c
    void access$0(cmccsi.mhealth.app.sports.service.StepService_GPS,double) -> a
    double access$1(cmccsi.mhealth.app.sports.service.StepService_GPS) -> a
cmccsi.mhealth.app.sports.service.StepService_GPS$1 -> cmccsi.mhealth.app.sports.service.h:
    cmccsi.mhealth.app.sports.service.StepService_GPS this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.service.StepService_GPS$MyGPSLinster -> cmccsi.mhealth.app.sports.service.i:
    cmccsi.mhealth.app.sports.service.StepService_GPS this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
cmccsi.mhealth.app.sports.service.StepService_GPS$OnMyLocationChangeListener -> cmccsi.mhealth.app.sports.service.j:
    void change(cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> a
    void timer(java.lang.String) -> a
    void changeAltitude(double) -> a
    void gpsIntensity(int) -> a
cmccsi.mhealth.app.sports.service.StepService_GPS$myBind -> cmccsi.mhealth.app.sports.service.k:
    cmccsi.mhealth.app.sports.service.StepService_GPS this$0 -> a
    cmccsi.mhealth.app.sports.service.StepService_GPS getService() -> a
cmccsi.mhealth.app.sports.service.UpdateVersionService -> cmccsi.mhealth.app.sports.service.UpdateVersionService:
    java.lang.String mVerName -> a
    android.os.Handler mHandler -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void updateVersion() -> a
    void updateAPK() -> b
    void access$0(cmccsi.mhealth.app.sports.service.UpdateVersionService) -> a
    java.lang.String access$1(cmccsi.mhealth.app.sports.service.UpdateVersionService) -> b
    android.os.Handler access$2(cmccsi.mhealth.app.sports.service.UpdateVersionService) -> c
cmccsi.mhealth.app.sports.service.UpdateVersionService$1 -> cmccsi.mhealth.app.sports.service.l:
    cmccsi.mhealth.app.sports.service.UpdateVersionService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.service.UpdateVersionService$2 -> cmccsi.mhealth.app.sports.service.m:
    cmccsi.mhealth.app.sports.service.UpdateVersionService this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.service.UpdateVersionService$3 -> cmccsi.mhealth.app.sports.service.n:
    cmccsi.mhealth.app.sports.service.UpdateVersionService this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.service.UpdateVersionService$4 -> cmccsi.mhealth.app.sports.service.o:
    cmccsi.mhealth.app.sports.service.UpdateVersionService this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.BackHandledFragment -> cmccsi.mhealth.app.sports.tabhost.BackHandledFragment:
    cmccsi.mhealth.app.sports.tabhost.BackHandledInterface mBackHandledInterface -> a
    boolean onBackPressed() -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
cmccsi.mhealth.app.sports.tabhost.BackHandledInterface -> cmccsi.mhealth.app.sports.tabhost.a:
    void setSelectedFragment(cmccsi.mhealth.app.sports.tabhost.BackHandledFragment) -> a
cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new -> cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new:
    java.lang.String TAG -> a
    android.support.v4.view.ViewPager mPager -> o
    java.util.ArrayList listViews -> p
    android.widget.TextView tx_race_now -> q
    android.widget.TextView tx_race_soon -> r
    android.widget.TextView tx_race_finish -> s
    cmccsi.mhealth.app.sports.bean.ActivityInfo mActivityInfo -> t
    java.lang.String mCurrentTime -> u
    java.lang.String mPhonenum -> v
    java.lang.String mPassword -> w
    boolean isFromDatabase -> b
    int mActivitynownum -> x
    int mActivityOldNum -> y
    int mActivityFutureNum -> z
    int ClubId -> c
    java.lang.String userNm -> d
    android.widget.ImageButton mBack -> A
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mProgressDialog -> B
    cmccsi.mhealth.app.sports.adapter.MyFragmentAdapter myFragmentAd -> e
    android.content.SharedPreferences info -> n
    android.os.Handler mHandler -> C
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> d
    void loadData() -> e
    void autoUpdate() -> f
    void addActivityInfo(cmccsi.mhealth.app.sports.bean.ActivityInfo,boolean) -> a
    void onClick(android.view.View) -> onClick
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void access$0(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new,int) -> a
    void access$1(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new,int) -> b
    void access$2(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new,int) -> c
    cmccsi.mhealth.app.sports.bean.ActivityInfo access$3(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new) -> a
    void access$4(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new,cmccsi.mhealth.app.sports.bean.ActivityInfo,boolean) -> a
    cmccsi.mhealth.app.sports.view.CustomProgressDialog access$5(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new) -> b
    android.support.v4.view.ViewPager access$6(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new) -> c
    android.widget.TextView access$7(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new) -> d
    android.widget.TextView access$8(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new) -> e
    android.widget.TextView access$9(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new) -> f
    android.os.Handler access$10(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new) -> g
    android.content.SharedPreferences access$11(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new,java.lang.String,int) -> a
    int access$12(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new) -> h
    int access$13(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new) -> i
    int access$14(cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new) -> j
cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new$1 -> cmccsi.mhealth.app.sports.tabhost.b:
    cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new$2 -> cmccsi.mhealth.app.sports.tabhost.c:
    cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new$3 -> cmccsi.mhealth.app.sports.tabhost.d:
    cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new$txListener -> cmccsi.mhealth.app.sports.tabhost.e:
    int index -> b
    cmccsi.mhealth.app.sports.tabhost.CampaignFragment_new this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment -> cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment:
    cmccsi.mhealth.app.sports.view.XListView mLvRankList -> a
    cmccsi.mhealth.app.sports.adapter.CampaignRankListAdapter mRanklistAdapter -> b
    cmccsi.mhealth.app.sports.bean.RankListInfo_new mRankListInfo_new -> c
    android.widget.TextView mTvRankEmpty -> d
    java.util.List mDetailInfos -> e
    java.lang.String teamOrPerSon -> f
    int level -> g
    java.lang.String activityId -> h
    int page -> i
    cmccsi.mhealth.app.sports.bean.RankListInfo_new datavalue -> j
    cmccsi.mhealth.app.sports.bean.RankListInfo_new tempDatavalue -> k
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void showdata(cmccsi.mhealth.app.sports.bean.RankListInfo_new) -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onRefresh() -> d
    void onLoadMore() -> e
    java.lang.String access$0(cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment) -> a
    int access$1(cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment) -> b
    int access$2(cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment) -> c
    void access$3(cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment,cmccsi.mhealth.app.sports.bean.RankListInfo_new) -> a
    cmccsi.mhealth.app.sports.bean.RankListInfo_new access$4(cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment) -> d
    cmccsi.mhealth.app.sports.bean.RankListInfo_new access$5(cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment) -> e
    void access$6(cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment,int) -> a
    cmccsi.mhealth.app.sports.view.XListView access$7(cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment) -> f
    cmccsi.mhealth.app.sports.adapter.CampaignRankListAdapter access$8(cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment) -> g
cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment$1 -> cmccsi.mhealth.app.sports.tabhost.f:
    cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment this$0 -> a
    void run() -> run
    cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment access$0(cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment$1) -> a
cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment$1$1 -> cmccsi.mhealth.app.sports.tabhost.g:
    cmccsi.mhealth.app.sports.tabhost.CampaignRankFragment$1 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.ECGFragment -> cmccsi.mhealth.app.sports.tabhost.ECGFragment:
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> C
    android.widget.TextView tv_HR -> D
    android.widget.TextView tv_HRV -> E
    android.widget.TextView tv_TraningZone -> F
    android.widget.TextView tv_RR_length -> G
    android.widget.TextView tv_RR_length2 -> H
    android.widget.TextView tv_TraningZone2 -> I
    android.widget.RelativeLayout rlStartEcg -> J
    android.widget.Button btnAdd -> K
    boolean readyToSync -> a
    int option -> b
    java.util.List mUploadlist -> L
    android.widget.TextView mTextViewTitle -> M
    android.support.v4.app.FragmentActivity mActivity -> c
    android.widget.ImageButton mImageButtonBack -> N
    android.widget.TextView buttonText -> O
    android.widget.ImageView img_heart -> P
    android.view.animation.Animation big_animation -> Q
    int MAX_HR -> R
    int MIN_HR -> S
    java.io.PrintWriter mCurrentFile -> T
    java.lang.StringBuffer buff -> U
    com.jjoe64.graphview.GraphView mGraph1 -> V
    com.jjoe64.graphview.GraphViewSeries gvSeries1 -> W
    android.widget.ImageView ecg_level -> X
    int graph2LastXValue -> Y
    int threadFlag -> Z
    int ECGlength -> aa
    int PowerPercent -> ab
    int REQUEST_ENABLE_BT -> ac
    java.lang.String deviceAddress -> ad
    android.os.Bundle mBundle -> d
    int[] ECGdata -> e
    int index -> n
    java.util.List ecgDataList -> o
    java.util.Calendar calendar -> p
    java.util.Calendar today -> q
    cmccsi.mhealth.app.sports.bean.DataECG ecgData -> r
    com.cmcc.ecg.net.AFDetectionAndroid AFcode -> ae
    int Rnum -> s
    boolean isAF -> t
    boolean ecgWaveFlag -> af
    android.os.Handler mHandlerTemp -> ag
    java.lang.Runnable mTimer2 -> ah
    android.widget.RelativeLayout mHRProgress -> ai
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro tgble -> aj
    android.os.PowerManager powerManager -> u
    android.os.PowerManager$WakeLock wakeLock -> v
    android.widget.RelativeLayout layout -> ak
    android.widget.RelativeLayout mHRProgressResult -> al
    android.widget.RelativeLayout mProgress_heartlevel -> am
    android.widget.RelativeLayout mProgress_rr -> an
    java.lang.String simpleresult -> ao
    java.lang.String[] dialogHead -> ap
    java.lang.String[] dialogText -> aq
    java.lang.String noBracleteToast -> ar
    boolean hasBleException -> as
    boolean isConnect -> at
    android.os.Handler mbleAlertHandler -> w
    android.os.Handler mHandler -> x
    android.widget.RelativeLayout mHRbadresult -> au
    android.os.Handler handler -> y
    android.app.Dialog dialog -> av
    java.lang.String FinalHR -> z
    java.lang.String recordname -> A
    cmccsi.mhealth.app.sports.view.CenterRollingBallECG mCenterRollingBall -> aw
    android.widget.RelativeLayout mRelativeLayoutProgress -> ax
    android.widget.TextView mTextViewStepPercent -> ay
    int dataFromPHP -> az
    java.lang.String myGwUrl -> aA
    java.lang.Runnable _l_b_fail_scan -> aB
    cmccsi.mhealth.app.sports.view.CustomProgressDialog progressDialog -> aC
    boolean buttonClick -> aD
    java.lang.Runnable myStopProgressRunnable -> B
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void initDialog(java.lang.String,java.lang.String) -> a
    void showDeviceDialog() -> f
    void initialView() -> d
    void startTesting() -> g
    void onDestroyView() -> onDestroyView
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void dataReceived(int,java.lang.Object) -> a
    void ekgStop(int,int) -> a
    void showWave() -> e
    void addProgressView(int,int) -> b
    void saveProcess(int[]) -> a
    void dataProcess(int[]) -> b
    void graphInit() -> j
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void uploadInit(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void showWaveWithoutECG() -> k
    void closeProgress() -> l
    void setBleConnectStartState() -> m
    void setBleConnectSucessState() -> n
    void setBleConnectFailState() -> o
    void startBleConnect() -> p
    void access$0(cmccsi.mhealth.app.sports.tabhost.ECGFragment,boolean) -> a
    cmccsi.mhealth.app.sports.pedo.TgbleManagerNeuro access$1(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> a
    void access$2(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> b
    void access$3(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> c
    void access$4(cmccsi.mhealth.app.sports.tabhost.ECGFragment,boolean) -> b
    boolean access$5(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> d
    void access$6(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> e
    java.lang.Runnable access$7(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> f
    void access$8(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> g
    void access$9(cmccsi.mhealth.app.sports.tabhost.ECGFragment,int,int) -> a
    void access$10(cmccsi.mhealth.app.sports.tabhost.ECGFragment,int,java.lang.Object) -> a
    android.widget.TextView access$11(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> h
    android.widget.RelativeLayout access$12(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> i
    android.widget.TextView access$13(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> j
    android.widget.ImageView access$14(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> k
    android.view.animation.Animation access$15(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> l
    android.widget.TextView access$16(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> m
    android.widget.TextView access$17(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> n
    android.widget.TextView access$18(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> o
    android.widget.TextView access$19(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> p
    android.widget.ImageView access$20(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> q
    void access$21(cmccsi.mhealth.app.sports.tabhost.ECGFragment,boolean) -> c
    void access$22(cmccsi.mhealth.app.sports.tabhost.ECGFragment,int[]) -> a
    void access$23(cmccsi.mhealth.app.sports.tabhost.ECGFragment,int[]) -> b
    android.widget.RelativeLayout access$24(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> r
    android.widget.TextView access$25(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> s
    void access$26(cmccsi.mhealth.app.sports.tabhost.ECGFragment,java.lang.String) -> a
    void access$27(cmccsi.mhealth.app.sports.tabhost.ECGFragment,int) -> a
    int access$28(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> t
    void access$29(cmccsi.mhealth.app.sports.tabhost.ECGFragment,int,int) -> b
    android.widget.TextView access$30(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> u
    boolean access$31(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> v
    android.app.Dialog access$32(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> w
    java.lang.String[] access$33(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> x
    java.lang.String[] access$34(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> y
    void access$35(cmccsi.mhealth.app.sports.tabhost.ECGFragment,java.lang.String,java.lang.String) -> a
    void access$36(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> z
    boolean access$37(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> A
    void access$38(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> B
    void access$39(cmccsi.mhealth.app.sports.tabhost.ECGFragment,boolean) -> d
    java.lang.String access$40(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> C
    void access$41(cmccsi.mhealth.app.sports.tabhost.ECGFragment,java.lang.String) -> b
    java.lang.String access$42(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> D
    java.util.List access$43(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> E
    void access$44(cmccsi.mhealth.app.sports.tabhost.ECGFragment,int) -> b
    int access$45(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> F
    boolean access$46(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> G
    com.jjoe64.graphview.GraphViewSeries access$47(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> H
    int access$48(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> I
    int access$49(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> J
    void access$50(cmccsi.mhealth.app.sports.tabhost.ECGFragment,int) -> c
    android.os.Handler access$51(cmccsi.mhealth.app.sports.tabhost.ECGFragment) -> K
cmccsi.mhealth.app.sports.tabhost.ECGFragment$1 -> cmccsi.mhealth.app.sports.tabhost.h:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.tabhost.ECGFragment$10 -> cmccsi.mhealth.app.sports.tabhost.i:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragment$11 -> cmccsi.mhealth.app.sports.tabhost.j:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragment$12 -> cmccsi.mhealth.app.sports.tabhost.k:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragment$13 -> cmccsi.mhealth.app.sports.tabhost.l:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cmccsi.mhealth.app.sports.tabhost.ECGFragment$14 -> cmccsi.mhealth.app.sports.tabhost.m:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragment$15 -> cmccsi.mhealth.app.sports.tabhost.n:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragment$16 -> cmccsi.mhealth.app.sports.tabhost.o:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.ECGFragment$17 -> cmccsi.mhealth.app.sports.tabhost.p:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.ECGFragment$2 -> cmccsi.mhealth.app.sports.tabhost.q:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.tabhost.ECGFragment$3 -> cmccsi.mhealth.app.sports.tabhost.r:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.ECGFragment$4 -> cmccsi.mhealth.app.sports.tabhost.s:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.ECGFragment$5 -> cmccsi.mhealth.app.sports.tabhost.t:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragment$6 -> cmccsi.mhealth.app.sports.tabhost.u:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragment$7 -> cmccsi.mhealth.app.sports.tabhost.v:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragment$8 -> cmccsi.mhealth.app.sports.tabhost.w:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragment$9 -> cmccsi.mhealth.app.sports.tabhost.x:
    cmccsi.mhealth.app.sports.tabhost.ECGFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest -> cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest:
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> D
    android.widget.TextView tv_HR -> E
    android.widget.TextView tv_HRV -> F
    android.widget.TextView tv_TraningZone -> G
    android.widget.TextView tv_RR_length -> H
    android.widget.TextView tv_RR_length2 -> I
    android.widget.TextView tv_TraningZone2 -> J
    android.widget.RelativeLayout rlStartEcg -> K
    android.widget.Button btnAdd -> L
    boolean readyToSync -> a
    int option -> b
    java.util.List mUploadlist -> M
    android.widget.TextView mTextViewTitle -> N
    android.support.v4.app.FragmentActivity mActivity -> c
    android.widget.ImageButton mImageButtonBack -> O
    android.widget.TextView buttonText -> P
    android.widget.ImageView img_heart -> Q
    android.view.animation.Animation big_animation -> R
    int MAX_HR -> S
    int MIN_HR -> T
    java.io.PrintWriter mCurrentFile -> U
    java.lang.StringBuffer buff -> V
    com.jjoe64.graphview.GraphView mGraph1 -> W
    com.jjoe64.graphview.GraphViewSeries gvSeries1 -> X
    android.widget.ImageView ecg_level -> Y
    int graph2LastXValue -> Z
    int threadFlag -> aa
    int ECGlength -> ab
    int PowerPercent -> ac
    int REQUEST_ENABLE_BT -> ad
    java.lang.String deviceAddress -> ae
    android.os.Bundle mBundle -> d
    int[] ECGdata -> e
    int index -> n
    java.util.List ecgDataList -> o
    java.util.Calendar calendar -> p
    java.util.Calendar today -> q
    cmccsi.mhealth.app.sports.bean.DataECG ecgData -> r
    com.cmcc.ecg.net.AFDetectionAndroid AFcode -> af
    int Rnum -> s
    boolean isAF -> t
    boolean ecgWaveFlag -> ag
    android.os.Handler mHandlerTemp -> ah
    java.lang.Runnable mTimer2 -> ai
    android.widget.RelativeLayout mHRProgress -> aj
    android.os.PowerManager powerManager -> u
    android.os.PowerManager$WakeLock wakeLock -> v
    android.widget.RelativeLayout layout -> ak
    android.widget.RelativeLayout mHRProgressResult -> al
    android.widget.RelativeLayout mProgress_heartlevel -> am
    android.widget.RelativeLayout mProgress_rr -> an
    java.lang.String simpleresult -> ao
    java.lang.String[] dialogHead -> ap
    java.lang.String[] dialogText -> aq
    java.lang.String noBracleteToast -> ar
    boolean hasBleException -> as
    boolean isConnect -> at
    android.os.Handler mbleAlertHandler -> w
    android.app.Activity mContext -> au
    cmccsi.mhealth.app.sports.device.DeviceManagerService mDeviceManagerService -> av
    android.content.ServiceConnection conn -> x
    android.os.Handler mHandler -> y
    android.widget.RelativeLayout mHRbadresult -> aw
    android.os.Handler handler -> z
    android.app.Dialog dialog -> ax
    java.lang.String FinalHR -> A
    java.lang.String recordname -> B
    cmccsi.mhealth.app.sports.view.CenterRollingBallECG mCenterRollingBall -> ay
    android.widget.RelativeLayout mRelativeLayoutProgress -> az
    android.widget.TextView mTextViewStepPercent -> aA
    int dataFromPHP -> aB
    java.lang.String myGwUrl -> aC
    java.lang.Runnable _l_b_fail_scan -> aD
    cmccsi.mhealth.app.sports.view.CustomProgressDialog progressDialog -> aE
    boolean buttonClick -> aF
    java.lang.Runnable myStopProgressRunnable -> C
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void initDialog(java.lang.String,java.lang.String) -> a
    void showDeviceDialog() -> f
    void initialView() -> d
    void startTesting() -> g
    void onDestroyView() -> onDestroyView
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void dataReceived(int,java.lang.Object) -> a
    void ekgStop(int,int) -> a
    void showWave() -> e
    void addProgressView(int,int) -> b
    void saveProcess(int[]) -> a
    void dataProcess(int[]) -> b
    void graphInit() -> j
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void uploadInit(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void showWaveWithoutECG() -> k
    void showProgress(java.lang.String) -> a
    void closeProgress() -> l
    void access$0(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,boolean) -> a
    cmccsi.mhealth.app.sports.device.DeviceManagerService access$1(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> a
    void access$2(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> b
    void access$3(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,boolean) -> b
    boolean access$4(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> c
    void access$5(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> d
    java.lang.Runnable access$6(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> e
    void access$7(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,int,int) -> a
    void access$8(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,int,java.lang.Object) -> a
    void access$9(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,cmccsi.mhealth.app.sports.device.DeviceManagerService) -> a
    android.app.Activity access$10(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> f
    android.widget.TextView access$11(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> g
    android.widget.RelativeLayout access$12(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> h
    android.widget.TextView access$13(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> i
    android.widget.ImageView access$14(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> j
    android.view.animation.Animation access$15(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> k
    android.widget.TextView access$16(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> l
    android.widget.TextView access$17(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> m
    android.widget.TextView access$18(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> n
    android.widget.TextView access$19(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> o
    android.widget.ImageView access$20(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> p
    void access$21(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,boolean) -> c
    void access$22(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,int[]) -> a
    void access$23(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,int[]) -> b
    android.widget.RelativeLayout access$24(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> q
    android.widget.TextView access$25(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> r
    void access$26(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,java.lang.String) -> a
    void access$27(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,int) -> a
    int access$28(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> s
    void access$29(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,int,int) -> b
    android.widget.TextView access$30(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> t
    boolean access$31(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> u
    android.app.Dialog access$32(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> v
    java.lang.String[] access$33(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> w
    java.lang.String[] access$34(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> x
    void access$35(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,java.lang.String,java.lang.String) -> a
    void access$36(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> y
    boolean access$37(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> z
    void access$38(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,java.lang.String) -> b
    void access$39(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,boolean) -> d
    java.lang.String access$40(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> A
    void access$41(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,java.lang.String) -> c
    java.lang.String access$42(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> B
    java.util.List access$43(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> C
    void access$44(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,int) -> b
    int access$45(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> D
    boolean access$46(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> E
    com.jjoe64.graphview.GraphViewSeries access$47(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> F
    int access$48(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> G
    int access$49(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> H
    void access$50(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest,int) -> c
    android.os.Handler access$51(cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest) -> I
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$1 -> cmccsi.mhealth.app.sports.tabhost.y:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$10 -> cmccsi.mhealth.app.sports.tabhost.z:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$11 -> cmccsi.mhealth.app.sports.tabhost.aa:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$12 -> cmccsi.mhealth.app.sports.tabhost.ab:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$13 -> cmccsi.mhealth.app.sports.tabhost.ac:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$14 -> cmccsi.mhealth.app.sports.tabhost.ad:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$15 -> cmccsi.mhealth.app.sports.tabhost.ae:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$16 -> cmccsi.mhealth.app.sports.tabhost.af:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$17 -> cmccsi.mhealth.app.sports.tabhost.ag:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$18 -> cmccsi.mhealth.app.sports.tabhost.ah:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$2 -> cmccsi.mhealth.app.sports.tabhost.ai:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$3 -> cmccsi.mhealth.app.sports.tabhost.aj:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$4 -> cmccsi.mhealth.app.sports.tabhost.ak:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$5 -> cmccsi.mhealth.app.sports.tabhost.al:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$6 -> cmccsi.mhealth.app.sports.tabhost.am:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$7 -> cmccsi.mhealth.app.sports.tabhost.an:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$8 -> cmccsi.mhealth.app.sports.tabhost.ao:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest$9 -> cmccsi.mhealth.app.sports.tabhost.ap:
    cmccsi.mhealth.app.sports.tabhost.ECGFragmentTest this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.FriendFragment -> cmccsi.mhealth.app.sports.tabhost.FriendFragment:
    android.widget.ImageView mBack -> c
    android.widget.TextView mTextViewTitle -> d
    cmccsi.mhealth.app.sports.view.CommonAskDialog mAskDialog -> e
    boolean mRefresh -> n
    android.content.SharedPreferences mSharedInfo -> o
    java.lang.String mPhoneNum -> p
    cmccsi.mhealth.app.sports.bean.FriendsInfo mOrgnizeMemberPKInfo -> q
    cmccsi.mhealth.app.sports.db.MHealthProviderMetaData mMHealthProvider -> r
    cmccsi.mhealth.app.sports.view.XListView mMainListView -> s
    cmccsi.mhealth.app.sports.tabhost.FriendFragment$MySimpleAdapter adapter -> t
    android.widget.TextView mTextViewTimeShowing -> u
    cmccsi.mhealth.app.sports.bean.RankingDate mRankingDate -> v
    java.lang.String mAvaterName -> w
    java.lang.String mMembername -> x
    java.lang.String mSex -> y
    java.util.List myFriends -> z
    boolean hasnoFriend -> A
    android.widget.RelativeLayout mAddFriend -> B
    int mPosition -> C
    cmccsi.mhealth.app.sports.view.PopMenu mPopmenu_more -> D
    android.widget.RelativeLayout mFaceRL -> E
    boolean isFaceShowing -> a
    android.widget.LinearLayout mFaceLL -> F
    cmccsi.mhealth.app.sports.view.RoundAngleImageView mFaceIV -> G
    android.os.Handler handle -> b
    android.widget.AdapterView$OnItemClickListener menuItemClick -> H
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> j
    void onResume() -> onResume
    void autoUpdate() -> k
    void updateGroupData() -> f
    void getFriendInfos() -> l
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void onClick(android.view.View) -> onClick
    void showDatas() -> m
    int getFriendFromDB() -> n
    void getMySharedInfo() -> o
    void showDeleteAlertDialog(int) -> a
    void deleteFirend() -> p
    void onRefresh() -> d
    void resetXListView() -> q
    void onLoadMore() -> e
    android.content.SharedPreferences access$0(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> a
    android.widget.TextView access$1(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> b
    void access$2(cmccsi.mhealth.app.sports.tabhost.FriendFragment,java.lang.String,int) -> a
    void access$3(cmccsi.mhealth.app.sports.tabhost.FriendFragment,java.lang.String) -> a
    void access$4(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> c
    cmccsi.mhealth.app.sports.tabhost.FriendFragment$MySimpleAdapter access$5(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> d
    void access$6(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> e
    java.util.List access$7(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> f
    android.support.v4.app.FragmentActivity access$8(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> g
    cmccsi.mhealth.app.sports.view.PopMenu access$9(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> h
    android.widget.RelativeLayout access$10() -> g
    void access$11(cmccsi.mhealth.app.sports.tabhost.FriendFragment,boolean) -> a
    int access$12(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> i
    void access$13(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> j
    boolean access$14(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> k
    void access$15(cmccsi.mhealth.app.sports.tabhost.FriendFragment,int) -> a
    void access$27(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> l
    cmccsi.mhealth.app.sports.view.CommonAskDialog access$28(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> m
    cmccsi.mhealth.app.sports.db.MHealthProviderMetaData access$29(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> n
    void access$30(cmccsi.mhealth.app.sports.tabhost.FriendFragment,java.util.List) -> a
    int access$31(cmccsi.mhealth.app.sports.tabhost.FriendFragment) -> o
cmccsi.mhealth.app.sports.tabhost.FriendFragment$1 -> cmccsi.mhealth.app.sports.tabhost.aq:
    cmccsi.mhealth.app.sports.tabhost.FriendFragment this$0 -> a
    void dispatchMessage(android.os.Message) -> dispatchMessage
cmccsi.mhealth.app.sports.tabhost.FriendFragment$10 -> cmccsi.mhealth.app.sports.tabhost.ar:
    cmccsi.mhealth.app.sports.tabhost.FriendFragment this$0 -> a
    void onClick(int) -> a
cmccsi.mhealth.app.sports.tabhost.FriendFragment$11 -> cmccsi.mhealth.app.sports.tabhost.as:
    cmccsi.mhealth.app.sports.tabhost.FriendFragment this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.FriendFragment$2 -> cmccsi.mhealth.app.sports.tabhost.at:
    cmccsi.mhealth.app.sports.tabhost.FriendFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.tabhost.FriendFragment$3 -> cmccsi.mhealth.app.sports.tabhost.au:
    cmccsi.mhealth.app.sports.tabhost.FriendFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.FriendFragment$4 -> cmccsi.mhealth.app.sports.tabhost.av:
    cmccsi.mhealth.app.sports.tabhost.FriendFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cmccsi.mhealth.app.sports.tabhost.FriendFragment$5 -> cmccsi.mhealth.app.sports.tabhost.aw:
    cmccsi.mhealth.app.sports.tabhost.FriendFragment this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.tabhost.FriendFragment$6 -> cmccsi.mhealth.app.sports.tabhost.ax:
    cmccsi.mhealth.app.sports.tabhost.FriendFragment this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
cmccsi.mhealth.app.sports.tabhost.FriendFragment$MySimpleAdapter -> cmccsi.mhealth.app.sports.tabhost.ay:
    java.util.List friends -> b
    int maxStep -> c
    java.lang.String by -> d
    cmccsi.mhealth.app.sports.tabhost.FriendFragment this$0 -> a
    void setFriends(java.util.List) -> a
    java.lang.String fomat(java.lang.String) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cmccsi.mhealth.app.sports.tabhost.FriendFragment$ViewHolder -> cmccsi.mhealth.app.sports.tabhost.az:
    android.widget.TextView mTextViewRankId -> a
    android.widget.TextView mTextViewMemberName -> b
    android.widget.TextView mTextViewGroupName -> c
    android.widget.TextView tv_stepNum -> d
    android.widget.ImageView mImageViewRankFirst -> e
    cmccsi.mhealth.app.sports.view.ScoreBarView mScorebar -> f
    cmccsi.mhealth.app.sports.tabhost.FriendFragment this$0 -> g
cmccsi.mhealth.app.sports.tabhost.GoalFragment -> cmccsi.mhealth.app.sports.tabhost.GoalFragment:
    android.widget.ListView lv_archievementTypes -> a
    cmccsi.mhealth.app.sports.tabhost.GoalFragment$AchievementTypeAdapter mAdapter -> b
    java.util.List mAchievementTypes -> c
    java.lang.String mType -> d
    android.app.Activity mActivity -> e
    android.widget.TextView tv_showGoal -> n
    void onAttach(android.app.Activity) -> onAttach
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void findViews() -> a
    void initTitle() -> d
    void clickListner() -> b
    void onPause() -> onPause
    void uploadSelectType() -> e
    void loadLogic() -> c
    void addItem(java.lang.String,java.lang.String,int) -> a
    java.util.List access$0(cmccsi.mhealth.app.sports.tabhost.GoalFragment) -> a
    java.lang.String access$1(cmccsi.mhealth.app.sports.tabhost.GoalFragment) -> b
    android.app.Activity access$2(cmccsi.mhealth.app.sports.tabhost.GoalFragment) -> c
    void access$3(cmccsi.mhealth.app.sports.tabhost.GoalFragment,java.lang.String) -> a
    android.widget.TextView access$4(cmccsi.mhealth.app.sports.tabhost.GoalFragment) -> d
cmccsi.mhealth.app.sports.tabhost.GoalFragment$1 -> cmccsi.mhealth.app.sports.tabhost.ba:
    cmccsi.mhealth.app.sports.tabhost.GoalFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.GoalFragment$2 -> cmccsi.mhealth.app.sports.tabhost.bb:
    cmccsi.mhealth.app.sports.tabhost.GoalFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cmccsi.mhealth.app.sports.tabhost.GoalFragment$AchievementTypeAdapter -> cmccsi.mhealth.app.sports.tabhost.bc:
    android.view.LayoutInflater mInflater -> b
    cmccsi.mhealth.app.sports.tabhost.GoalFragment this$0 -> a
    int getCount() -> getCount
    java.util.Map getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
cmccsi.mhealth.app.sports.tabhost.GoalFragment$AchievementTypeAdapter$ViewHolder -> cmccsi.mhealth.app.sports.tabhost.bd:
    android.widget.ImageView iv_type -> a
    android.widget.TextView tv_type -> b
    android.view.View flag -> c
    cmccsi.mhealth.app.sports.tabhost.GoalFragment$AchievementTypeAdapter this$1 -> d
cmccsi.mhealth.app.sports.tabhost.GoalFragment$UploadGoalTypeTask -> cmccsi.mhealth.app.sports.tabhost.be:
    cmccsi.mhealth.app.sports.tabhost.GoalFragment this$0 -> a
    java.lang.Integer doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.tabhost.HistoryListFragment -> cmccsi.mhealth.app.sports.tabhost.HistoryListFragment:
    java.lang.String TAG -> a
    cmccsi.mhealth.app.sports.tabhost.HistoryListFragment$MySimpleAdapter mAdapter -> b
    java.util.ArrayList mArrayListRecords -> c
    cmccsi.mhealth.app.sports.view.XListView mListViewRecord -> d
    android.widget.TextView mTextViewTitle -> e
    boolean flagUpdateStatus -> n
    android.widget.ImageButton mBack -> o
    java.lang.String mDeviceId -> p
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void initViews() -> f
    void onRefresh() -> d
    void onLoadMore() -> e
    void resetXListView() -> j
    void updateData() -> k
    java.util.ArrayList getPedometerData() -> l
    void onClick(android.view.View) -> onClick
    java.util.ArrayList access$0(cmccsi.mhealth.app.sports.tabhost.HistoryListFragment) -> a
    java.lang.String access$1() -> g
    void access$2(cmccsi.mhealth.app.sports.tabhost.HistoryListFragment) -> b
    java.util.ArrayList access$3(cmccsi.mhealth.app.sports.tabhost.HistoryListFragment) -> c
    boolean access$4(cmccsi.mhealth.app.sports.tabhost.HistoryListFragment) -> d
    void access$5(cmccsi.mhealth.app.sports.tabhost.HistoryListFragment,java.lang.String) -> a
    void access$6(cmccsi.mhealth.app.sports.tabhost.HistoryListFragment) -> e
    void access$7(cmccsi.mhealth.app.sports.tabhost.HistoryListFragment,java.util.ArrayList) -> a
    cmccsi.mhealth.app.sports.tabhost.HistoryListFragment$MySimpleAdapter access$8(cmccsi.mhealth.app.sports.tabhost.HistoryListFragment) -> f
cmccsi.mhealth.app.sports.tabhost.HistoryListFragment$1 -> cmccsi.mhealth.app.sports.tabhost.bf:
    cmccsi.mhealth.app.sports.tabhost.HistoryListFragment this$0 -> a
    java.util.ArrayList doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cmccsi.mhealth.app.sports.tabhost.HistoryListFragment$MySimpleAdapter -> cmccsi.mhealth.app.sports.tabhost.bg:
    android.view.LayoutInflater mInflater -> c
    cmccsi.mhealth.app.sports.tabhost.HistoryListFragment$ViewHolder holder -> a
    cmccsi.mhealth.app.sports.tabhost.HistoryListFragment this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cmccsi.mhealth.app.sports.tabhost.HistoryListFragment$ViewHolder -> cmccsi.mhealth.app.sports.tabhost.bh:
    android.widget.TextView item_date -> a
    android.widget.TextView item_cal -> b
    android.widget.TextView item_stepnum -> c
    android.widget.TextView mItemDayDivide -> d
cmccsi.mhealth.app.sports.tabhost.MainGridFragment -> cmccsi.mhealth.app.sports.tabhost.MainGridFragment:
    int tabId -> b
    android.view.View view -> a
    android.widget.GridView gd_main -> c
    android.widget.SimpleAdapter gridViewAdapter -> d
    java.util.List gridItemView -> e
    android.content.Intent intent -> f
    android.widget.ImageView selectedIcon -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void initView() -> a
    void initGridView() -> b
    void addItem(int,java.lang.String,int) -> a
    void initAdapter() -> c
    void loadGridViewData(int) -> a
    void loadDataPage3() -> d
    void laodDataPage2() -> e
    void loadDataPage1() -> f
    boolean isClubInfoAvailable() -> g
    boolean isCityInfoAvailable() -> h
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void isShowAreaInfo() -> i
    boolean handleItemClick(int) -> b
cmccsi.mhealth.app.sports.tabhost.MainGridFragment$1 -> cmccsi.mhealth.app.sports.tabhost.bi:
    cmccsi.mhealth.app.sports.tabhost.MainGridFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.tabhost.MainGridFragment$2 -> cmccsi.mhealth.app.sports.tabhost.bj:
    cmccsi.mhealth.app.sports.tabhost.MainGridFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.tabhost.MainGridFragment2 -> cmccsi.mhealth.app.sports.tabhost.MainGridFragment2:
    int tabId -> b
    android.view.View view -> a
    android.widget.GridView gd_main -> c
    android.widget.SimpleAdapter gridViewAdapter -> d
    java.util.List gridItemView -> e
    android.content.Intent intent -> f
    android.widget.ImageView selectedIcon -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void initView() -> a
    void initGridView() -> b
    void addItem(int,java.lang.String,int) -> a
    void initAdapter() -> c
    void loadGridViewData(int) -> a
    void loadDataPage3() -> d
    void laodDataPage2() -> e
    void loadDataPage1() -> f
    boolean isClubInfoAvailable() -> g
    boolean isCityInfoAvailable() -> h
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void isShowAreaInfo() -> i
    boolean handleItemClick(int) -> b
cmccsi.mhealth.app.sports.tabhost.MainGridFragment2$1 -> cmccsi.mhealth.app.sports.tabhost.bk:
    cmccsi.mhealth.app.sports.tabhost.MainGridFragment2 this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.tabhost.MainGridFragment2$2 -> cmccsi.mhealth.app.sports.tabhost.bl:
    cmccsi.mhealth.app.sports.tabhost.MainGridFragment2 this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.tabhost.MapFragment -> cmccsi.mhealth.app.sports.tabhost.MapFragment:
    android.widget.RelativeLayout mRLayoutGetHistoryData -> b
    android.view.View mBack -> c
    int mTypeID -> d
    android.app.Dialog gpsDialog -> r
    com.baidu.location.BDLocation mCenterLocation -> s
    android.widget.ImageView mIvGps -> t
    android.location.LocationManager locationManager -> a
    boolean bIsGPS -> u
    void onCreate(android.os.Bundle) -> onCreate
    void showGPSDialog() -> e
    void unSaveData() -> f
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void location() -> g
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void initLocationData(com.baidu.location.BDLocation) -> a
    void access$0(cmccsi.mhealth.app.sports.tabhost.MapFragment,boolean) -> a
    void access$1(cmccsi.mhealth.app.sports.tabhost.MapFragment,java.lang.String) -> a
    android.app.Dialog access$2(cmccsi.mhealth.app.sports.tabhost.MapFragment) -> a
cmccsi.mhealth.app.sports.tabhost.MapFragment$1 -> cmccsi.mhealth.app.sports.tabhost.bm:
    cmccsi.mhealth.app.sports.tabhost.MapFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.MapFragment$2 -> cmccsi.mhealth.app.sports.tabhost.bn:
    cmccsi.mhealth.app.sports.tabhost.MapFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.MapFragment$MyGPSLinster -> cmccsi.mhealth.app.sports.tabhost.bo:
    java.lang.StringBuilder builder -> a
    cmccsi.mhealth.app.sports.tabhost.MapFragment this$0 -> b
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
cmccsi.mhealth.app.sports.tabhost.MapFragment$backClick -> cmccsi.mhealth.app.sports.tabhost.bp:
    cmccsi.mhealth.app.sports.basic.BaseFragment to -> a
    cmccsi.mhealth.app.sports.tabhost.MapFragment this$0 -> b
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.MessageFragment -> cmccsi.mhealth.app.sports.tabhost.MessageFragment:
    android.widget.TextView mTextViewTitle -> b
    android.widget.ImageView mBack -> c
    cmccsi.mhealth.app.sports.view.XListView mMainListView -> d
    cmccsi.mhealth.app.sports.adapter.MessageAdapter mMyAMAdapter -> e
    cmccsi.mhealth.app.sports.bean.RequestListInfo mFriendReqData -> n
    cmccsi.mhealth.app.sports.bean.RequestListInfo mRaceReqData -> o
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mProgressDialog -> p
    android.os.Handler handler -> q
    boolean hadIntercept -> r
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> g
    void backToMain() -> j
    boolean isInLauncher() -> k
    void onClick(android.view.View) -> onClick
    void findViews() -> a
    void getMessages() -> l
    void setMessages() -> m
    void setMessages(java.util.List) -> a
    void clickListner() -> b
    void loadLogic() -> c
    void acceptFriendRequest(cmccsi.mhealth.app.sports.bean.RequestData) -> b
    void acceptRaceRequest(cmccsi.mhealth.app.sports.bean.RequestData) -> c
    void onLoadMore() -> e
    void onRefresh() -> d
    void resetXListView() -> n
    void onClick(cmccsi.mhealth.app.sports.bean.RequestData) -> a
    boolean onBackPressed() -> f
    cmccsi.mhealth.app.sports.view.CustomProgressDialog access$0(cmccsi.mhealth.app.sports.tabhost.MessageFragment) -> a
    void access$1(cmccsi.mhealth.app.sports.tabhost.MessageFragment) -> b
    void access$2(cmccsi.mhealth.app.sports.tabhost.MessageFragment,java.lang.String,int) -> a
    void access$3(cmccsi.mhealth.app.sports.tabhost.MessageFragment) -> c
    android.content.SharedPreferences access$4(cmccsi.mhealth.app.sports.tabhost.MessageFragment) -> d
    android.support.v4.app.FragmentActivity access$5(cmccsi.mhealth.app.sports.tabhost.MessageFragment) -> e
    void access$6(cmccsi.mhealth.app.sports.tabhost.MessageFragment) -> f
    void access$7(cmccsi.mhealth.app.sports.tabhost.MessageFragment) -> g
    void access$8(cmccsi.mhealth.app.sports.tabhost.MessageFragment,cmccsi.mhealth.app.sports.bean.RequestListInfo) -> a
    void access$9(cmccsi.mhealth.app.sports.tabhost.MessageFragment,cmccsi.mhealth.app.sports.bean.RequestListInfo) -> b
    cmccsi.mhealth.app.sports.bean.RequestListInfo access$10(cmccsi.mhealth.app.sports.tabhost.MessageFragment) -> h
    cmccsi.mhealth.app.sports.bean.RequestListInfo access$11(cmccsi.mhealth.app.sports.tabhost.MessageFragment) -> i
    android.os.Handler access$12(cmccsi.mhealth.app.sports.tabhost.MessageFragment) -> j
cmccsi.mhealth.app.sports.tabhost.MessageFragment$1 -> cmccsi.mhealth.app.sports.tabhost.bq:
    cmccsi.mhealth.app.sports.tabhost.MessageFragment this$0 -> a
    void dispatchMessage(android.os.Message) -> dispatchMessage
cmccsi.mhealth.app.sports.tabhost.MessageFragment$2 -> cmccsi.mhealth.app.sports.tabhost.br:
    cmccsi.mhealth.app.sports.tabhost.MessageFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.MessageFragment$3 -> cmccsi.mhealth.app.sports.tabhost.bs:
    cmccsi.mhealth.app.sports.tabhost.MessageFragment this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.MessageFragment$4 -> cmccsi.mhealth.app.sports.tabhost.bt:
    cmccsi.mhealth.app.sports.tabhost.MessageFragment this$0 -> a
    cmccsi.mhealth.app.sports.bean.RequestData val$requestData -> b
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.MessageFragment$5 -> cmccsi.mhealth.app.sports.tabhost.bu:
    cmccsi.mhealth.app.sports.tabhost.MessageFragment this$0 -> a
    cmccsi.mhealth.app.sports.bean.RequestData val$requestData -> b
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.RankAreaMenuFragment -> cmccsi.mhealth.app.sports.tabhost.RankAreaMenuFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.RankCompanyMenuFragment -> cmccsi.mhealth.app.sports.tabhost.RankCompanyMenuFragment:
    android.widget.LinearLayout mll_company_rank -> a
    android.widget.LinearLayout mll_rank_activite -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.RankinglistFragment -> cmccsi.mhealth.app.sports.tabhost.RankinglistFragment:
    android.widget.TextView mTvUserOrg -> a
    android.widget.TextView mTvStepNum -> b
    android.widget.TextView mTvRankNo -> c
    cmccsi.mhealth.app.sports.view.XListView mLvRankList -> d
    cmccsi.mhealth.app.sports.adapter.RankingListAdapter mRanklistAdapter -> e
    cmccsi.mhealth.app.sports.bean.PedoRankBriefInfo mPedoRankBriefInfo -> f
    android.widget.TextView mTvRanknull -> g
    java.util.List mDetailInfos -> h
    android.widget.ImageView mIvUserPhoto -> i
    java.lang.String oneOrSeven -> j
    java.lang.String teamOrPerSon -> k
    java.lang.String groupOrArea -> l
    java.lang.String userId -> m
    int OrgId -> n
    int index -> o
    int pageForOne -> p
    int pageForSeven -> q
    java.util.ArrayList datavalue -> r
    cmccsi.mhealth.app.sports.controller.PedoRankController mPedoRankController -> s
    android.widget.LinearLayout ll_self -> t
    java.util.ArrayList tempDatavalue -> u
    android.os.Handler handler -> v
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setParams(java.lang.String,java.lang.String,java.lang.String,int,int) -> a
    void transportData(java.util.ArrayList) -> a
    void showdata(cmccsi.mhealth.app.sports.bean.PedoRankBriefInfo) -> a
    void getAvatar() -> a
    android.graphics.drawable.Drawable getImageAsync(android.widget.ImageView,java.lang.String) -> a
    android.graphics.drawable.Drawable getImageAsync(android.widget.ImageView,java.lang.String,java.lang.String,int) -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onRefresh() -> d
    void onLoadMore() -> e
    java.util.ArrayList access$0(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> a
    int access$1(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> b
    java.lang.String access$2(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> c
    void access$3(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment,int) -> a
    void access$4(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment,int) -> b
    cmccsi.mhealth.app.sports.view.XListView access$5(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> d
    cmccsi.mhealth.app.sports.adapter.RankingListAdapter access$6(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> e
    void access$7(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment,java.lang.String) -> a
    java.lang.String access$8(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> f
    void access$9(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment,int) -> c
    java.lang.String access$10(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> g
    int access$11(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> h
    java.lang.String access$12(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> i
    int access$13(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> j
    int access$14(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> k
    void access$15(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment,java.util.ArrayList) -> a
    java.util.ArrayList access$16(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment) -> l
cmccsi.mhealth.app.sports.tabhost.RankinglistFragment$1 -> cmccsi.mhealth.app.sports.tabhost.bv:
    cmccsi.mhealth.app.sports.tabhost.RankinglistFragment this$0 -> a
    void dispatchMessage(android.os.Message) -> dispatchMessage
cmccsi.mhealth.app.sports.tabhost.RankinglistFragment$2 -> cmccsi.mhealth.app.sports.tabhost.bw:
    cmccsi.mhealth.app.sports.tabhost.RankinglistFragment this$0 -> a
    void run() -> run
    cmccsi.mhealth.app.sports.tabhost.RankinglistFragment access$0(cmccsi.mhealth.app.sports.tabhost.RankinglistFragment$2) -> a
cmccsi.mhealth.app.sports.tabhost.RankinglistFragment$2$1 -> cmccsi.mhealth.app.sports.tabhost.bx:
    cmccsi.mhealth.app.sports.tabhost.RankinglistFragment$2 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.SettingFragment -> cmccsi.mhealth.app.sports.tabhost.SettingFragment:
    java.lang.String ImgUrl -> b
    int[] mRelativeLayoutIds -> c
    android.widget.TextView mTextViewSettingPhoneNum -> d
    android.widget.TextView mTextViewSettingSportTargetNum -> e
    android.widget.TextView mTextViewSettingNyGroup -> n
    android.widget.TextView mTextViewVersion -> o
    java.lang.String mPhoneNum -> p
    android.widget.RelativeLayout mRelativeLayout -> q
    android.widget.RelativeLayout mWeightBar -> r
    android.widget.RelativeLayout mHeightBar -> s
    android.widget.RelativeLayout mBindDeviceBar -> t
    android.widget.RelativeLayout mRelativeLayoutArea -> u
    android.widget.RelativeLayout mRl_step_switch -> v
    android.widget.RelativeLayout mrl_bracelet_setting -> w
    android.widget.RelativeLayout setting_problem -> x
    android.widget.TextView mTvAreaDetail -> y
    android.widget.TextView mTvArea -> z
    cmccsi.mhealth.app.sports.view.RoundAngleImageView mImageViewAvatar -> A
    int mVerCode -> B
    java.lang.String mVerName -> C
    cmccsi.mhealth.app.sports.view.CustomProgressDialog mProgressDialog -> D
    cmccsi.mhealth.app.sports.service.StepService_GPS mService -> E
    java.lang.String requestURL -> F
    java.lang.String[] items -> G
    java.lang.String mFileImagePath -> H
    java.lang.String mFileImagePathDexed -> I
    android.widget.TextView mTextViewTitle -> J
    android.widget.ImageButton mBack -> K
    int mFlag -> L
    android.widget.TextView mTextViewBirthday -> M
    android.widget.TextView mTextViewWeight -> N
    cmccsi.mhealth.app.sports.view.WiperSwitch mSw_startStep -> O
    cmccsi.mhealth.app.sports.view.WiperSwitch mSw_bootRun -> P
    cmccsi.mhealth.app.sports.service.StepService_GPS$OnMyLocationChangeListener changeListener -> a
    android.content.ServiceConnection mConnection -> Q
    android.os.Handler handler -> R
    java.lang.String mAvatarName -> S
    java.lang.String mSex -> T
    android.widget.TextView mHeightTextView -> U
    android.widget.TextView mTargetTextView -> V
    android.widget.TextView mNicknameTextView -> W
    cmccsi.mhealth.app.sports.view.WiperSwitch$OnChangedListener stepchangeListener -> X
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void setValueFromShare() -> j
    android.graphics.drawable.Drawable getImageAsync(android.widget.ImageView,java.lang.String) -> a
    android.graphics.drawable.Drawable getImageAsync(android.widget.ImageView,java.lang.String,java.lang.String) -> a
    android.graphics.drawable.Drawable getImageAsync(android.widget.ImageView,java.lang.String,java.lang.String,int) -> a
    void getAvatar() -> k
    void initView() -> l
    void onResume() -> onResume
    void cropPhoto(android.net.Uri,java.lang.String,int) -> a
    void openDialogSetFaceImage() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void changeAreaInfoText() -> m
    void clearServise() -> n
    void onClick(android.view.View) -> onClick
    void updateVersion() -> o
    void updateAPK() -> p
    void onUploadProcess(int) -> a
    void initUpload(int) -> b
    void onUploadDone(int,java.lang.String) -> a
    void toUploadFile() -> q
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void access$0(cmccsi.mhealth.app.sports.tabhost.SettingFragment,cmccsi.mhealth.app.sports.service.StepService_GPS) -> a
    cmccsi.mhealth.app.sports.service.StepService_GPS access$1(cmccsi.mhealth.app.sports.tabhost.SettingFragment) -> a
    void access$2(cmccsi.mhealth.app.sports.tabhost.SettingFragment) -> b
    java.lang.String access$3() -> e
    android.content.SharedPreferences access$4(cmccsi.mhealth.app.sports.tabhost.SettingFragment,java.lang.String,int) -> a
    java.lang.String access$5() -> f
    cmccsi.mhealth.app.sports.view.RoundAngleImageView access$6(cmccsi.mhealth.app.sports.tabhost.SettingFragment) -> c
    void access$7(cmccsi.mhealth.app.sports.tabhost.SettingFragment,int) -> a
    void access$8(cmccsi.mhealth.app.sports.tabhost.SettingFragment,java.lang.String) -> a
    android.support.v4.app.FragmentActivity access$9(cmccsi.mhealth.app.sports.tabhost.SettingFragment) -> d
    java.lang.String access$10() -> g
    java.lang.String access$11(cmccsi.mhealth.app.sports.tabhost.SettingFragment) -> e
    void access$12(java.lang.String) -> a
    void access$13(java.lang.String) -> b
    java.lang.String access$14(cmccsi.mhealth.app.sports.tabhost.SettingFragment) -> f
    void access$15(cmccsi.mhealth.app.sports.tabhost.SettingFragment,java.lang.String) -> b
    java.lang.String access$16(cmccsi.mhealth.app.sports.tabhost.SettingFragment) -> g
    void access$17(cmccsi.mhealth.app.sports.tabhost.SettingFragment) -> h
    android.widget.RelativeLayout access$18(cmccsi.mhealth.app.sports.tabhost.SettingFragment) -> i
cmccsi.mhealth.app.sports.tabhost.SettingFragment$1 -> cmccsi.mhealth.app.sports.tabhost.by:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void timer(java.lang.String) -> a
    void change(cmccsi.mhealth.app.sports.bean.GpsInfoDetail) -> a
    void changeAltitude(double) -> a
    void gpsIntensity(int) -> a
cmccsi.mhealth.app.sports.tabhost.SettingFragment$10 -> cmccsi.mhealth.app.sports.tabhost.bz:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.tabhost.SettingFragment$11 -> cmccsi.mhealth.app.sports.tabhost.ca:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.tabhost.SettingFragment$2 -> cmccsi.mhealth.app.sports.tabhost.cb:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
cmccsi.mhealth.app.sports.tabhost.SettingFragment$3 -> cmccsi.mhealth.app.sports.tabhost.cc:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cmccsi.mhealth.app.sports.tabhost.SettingFragment$4 -> cmccsi.mhealth.app.sports.tabhost.cd:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void OnChanged(cmccsi.mhealth.app.sports.view.WiperSwitch,boolean) -> a
cmccsi.mhealth.app.sports.tabhost.SettingFragment$5 -> cmccsi.mhealth.app.sports.tabhost.ce:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.tabhost.SettingFragment$6 -> cmccsi.mhealth.app.sports.tabhost.cf:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cmccsi.mhealth.app.sports.tabhost.SettingFragment$7 -> cmccsi.mhealth.app.sports.tabhost.cg:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.SettingFragment$8 -> cmccsi.mhealth.app.sports.tabhost.ch:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void run() -> run
    cmccsi.mhealth.app.sports.tabhost.SettingFragment access$0(cmccsi.mhealth.app.sports.tabhost.SettingFragment$8) -> a
cmccsi.mhealth.app.sports.tabhost.SettingFragment$8$1 -> cmccsi.mhealth.app.sports.tabhost.ci:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment$8 this$1 -> a
    void run() -> run
cmccsi.mhealth.app.sports.tabhost.SettingFragment$9 -> cmccsi.mhealth.app.sports.tabhost.cj:
    cmccsi.mhealth.app.sports.tabhost.SettingFragment this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
cmccsi.mhealth.app.sports.tabhost.TabBaseFragment -> cmccsi.mhealth.app.sports.tabhost.TabBaseFragment:
    android.support.v4.app.Fragment fragment -> a
    android.content.SharedPreferences mSharedInfo -> b
    int clubId -> c
    android.content.SharedPreferences info -> d
    cmccsi.mhealth.app.sports.activity.MapStartRunningFragment mfragment -> e
    cmccsi.mhealth.app.sports.tabhost.BackHandledFragment mBackHandedFragment -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void intentActivity(int) -> a
    void switchContent(cmccsi.mhealth.app.sports.basic.BaseFragment) -> a
    void setSelectedFragment(cmccsi.mhealth.app.sports.tabhost.BackHandledFragment) -> a
    void onBackPressed() -> onBackPressed
cmccsi.mhealth.app.sports.tabhost.WebViewFragment -> cmccsi.mhealth.app.sports.tabhost.WebViewFragment:
    java.lang.String[] TYPENAME -> b
    java.lang.String[] ADD_TYPE_NAME -> a
    android.webkit.WebView mWebView -> c
    java.lang.String URL -> d
    android.widget.TextView mTextView -> e
    java.util.Date currentDatePoint -> n
    boolean bIsSubPage -> o
    android.widget.TextView mTextViewTimeShowing -> p
    android.view.View vTimeView -> q
    java.lang.Boolean isNeedCalender -> r
    android.widget.ImageView iv_loaderror -> s
    cmccsi.mhealth.app.sports.view.CustomProgressDialog dialog -> t
    android.os.Handler handler -> u
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void findViews() -> a
    void clickListner() -> b
    void loadLogic() -> c
    void onDestroyView() -> onDestroyView
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    android.webkit.WebView access$0(cmccsi.mhealth.app.sports.tabhost.WebViewFragment) -> a
    android.widget.ImageView access$1(cmccsi.mhealth.app.sports.tabhost.WebViewFragment) -> b
    void access$2(cmccsi.mhealth.app.sports.tabhost.WebViewFragment,boolean) -> a
    cmccsi.mhealth.app.sports.view.CustomProgressDialog access$3(cmccsi.mhealth.app.sports.tabhost.WebViewFragment) -> c
cmccsi.mhealth.app.sports.tabhost.WebViewFragment$1 -> cmccsi.mhealth.app.sports.tabhost.ck:
    cmccsi.mhealth.app.sports.tabhost.WebViewFragment this$0 -> a
cmccsi.mhealth.app.sports.tabhost.WebViewFragment$2 -> cmccsi.mhealth.app.sports.tabhost.cl:
    cmccsi.mhealth.app.sports.tabhost.WebViewFragment this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
cmccsi.mhealth.app.sports.tabhost.WebViewFragment$3 -> cmccsi.mhealth.app.sports.tabhost.cm:
    cmccsi.mhealth.app.sports.tabhost.WebViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.tabhost.WebViewFragment$4 -> cmccsi.mhealth.app.sports.tabhost.cn:
    cmccsi.mhealth.app.sports.tabhost.WebViewFragment this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
cmccsi.mhealth.app.sports.view.CenterRollingBall -> cmccsi.mhealth.app.sports.view.a:
    int[] colorArray -> a
    int colorIndex -> b
    android.graphics.Bitmap mBallPic -> c
    android.graphics.Bitmap mYelPoint -> d
    int score -> e
    int maxScore -> f
    float scorePercent -> g
    android.graphics.Paint paint -> h
    android.graphics.RectF arcRectF -> i
    float centerOffest -> j
    float angleOffest -> k
    boolean showFrontArc -> l
    boolean showEndBall -> m
    void showEndBall(java.lang.Boolean) -> a
    void showFrontArc(boolean) -> a
    void setScore(int) -> setScore
    void setMaxScore(int) -> setMaxScore
    void setCenterOffest(float) -> setCenterOffest
    void setPics(android.graphics.Bitmap,android.graphics.Bitmap) -> a
    void setAngelOffest(float) -> setAngelOffest
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void initArcRectF(float,float,float,float) -> a
    void drawEndBall(android.graphics.Canvas) -> a
    void drawCenterCircle(android.graphics.Canvas) -> b
    void drawArcs(android.graphics.Canvas) -> c
    void init() -> a
    void initRatio() -> b
    float dip2px(float) -> a
cmccsi.mhealth.app.sports.view.CenterRollingBallECG -> cmccsi.mhealth.app.sports.view.b:
    android.graphics.Bitmap mBallPic -> a
    android.graphics.Bitmap mYelPoint -> b
    int score -> c
    int maxScore -> d
    int angle -> e
    int Alpha -> f
    int firstLayer -> g
    int secondLayer -> h
    int thirdLayer -> i
    float Radius -> j
    float LocationX -> k
    float LocationY -> l
    boolean ringEnable -> m
    int[] colorArray -> n
    void setAlpha(int) -> setAlpha
    void setRing(boolean) -> setRing
    void setLocationX(float) -> setLocationX
    void setLocationY(float) -> setLocationY
    void setRadius(float) -> setRadius
    void setAngle(int) -> setAngle
    void setFirstLayer(int) -> setFirstLayer
    void setSecondLayer(int) -> setSecondLayer
    void setScore(int) -> setScore
    void setMaxScore(int) -> setMaxScore
    void setPics(android.graphics.Bitmap,android.graphics.Bitmap) -> a
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
cmccsi.mhealth.app.sports.view.CommonAskDialog -> cmccsi.mhealth.app.sports.view.CommonAskDialog:
    cmccsi.mhealth.app.sports.view.CommonAskDialog$OnButtonClickListener onButtonClickListener -> a
    cmccsi.mhealth.app.sports.view.CommonAskDialog$OnDialogCloseListener onDialogCloseListener -> b
    android.widget.Button buttonOK -> c
    android.widget.Button buttonCancel -> d
    android.widget.Button buttonNeutral -> e
    java.lang.String[] defaultButtonText -> f
    android.widget.ImageView mIvAlert -> g
    int IvAlertResource -> h
    cmccsi.mhealth.app.sports.view.CommonAskDialog create(java.lang.String,java.lang.String[],boolean,boolean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void setAlertIconVisible(int) -> a
    void onClick(android.view.View) -> onClick
    void setOnDialogCloseListener(cmccsi.mhealth.app.sports.view.CommonAskDialog$OnDialogCloseListener) -> a
cmccsi.mhealth.app.sports.view.CommonAskDialog$OnButtonClickListener -> cmccsi.mhealth.app.sports.view.c:
    void onClick(boolean) -> a
cmccsi.mhealth.app.sports.view.CommonAskDialog$OnDialogCloseListener -> cmccsi.mhealth.app.sports.view.d:
    void onClick(int) -> a
cmccsi.mhealth.app.sports.view.CustomDialog -> cmccsi.mhealth.app.sports.view.e:
    android.content.Context context -> a
    android.widget.TextView mTvTitle -> b
    android.widget.LinearLayout mLlContent -> c
    android.widget.TextView mTvMessage -> d
    android.widget.LinearLayout mLlBtns -> e
    android.widget.Button mBtnLeft -> f
    android.widget.Button mBtnRight -> g
    android.widget.ImageView iv_icon -> h
    java.lang.String title -> i
    java.lang.String message -> j
    java.lang.String leftMessage -> k
    java.lang.String rightMessage -> l
    android.content.DialogInterface$OnClickListener onLeftListener -> m
    android.content.DialogInterface$OnClickListener onRightListener -> n
    int mResId -> o
    android.view.View contentView -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initData() -> b
    void setDialogTitle(int) -> a
    void setDialogMessage(int) -> b
    void setLeftButtonText(java.lang.String) -> a
    void setLeftButtonListener(android.content.DialogInterface$OnClickListener) -> a
    void setRightButtonText(java.lang.String) -> b
    void setRightButtonListener(android.content.DialogInterface$OnClickListener) -> b
    void setTitleIcon(int) -> c
    cmccsi.mhealth.app.sports.view.CustomDialog showDialog(android.content.Context,int,int,boolean,int,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.String,android.content.DialogInterface$OnClickListener) -> a
    android.content.DialogInterface$OnClickListener access$0(cmccsi.mhealth.app.sports.view.CustomDialog) -> a
    android.widget.Button access$1(cmccsi.mhealth.app.sports.view.CustomDialog) -> b
    android.content.DialogInterface$OnClickListener access$2(cmccsi.mhealth.app.sports.view.CustomDialog) -> c
cmccsi.mhealth.app.sports.view.CustomDialog$1 -> cmccsi.mhealth.app.sports.view.f:
    cmccsi.mhealth.app.sports.view.CustomDialog this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.view.CustomDialog$2 -> cmccsi.mhealth.app.sports.view.g:
    cmccsi.mhealth.app.sports.view.CustomDialog this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.view.CustomDialogOK -> cmccsi.mhealth.app.sports.view.h:
    int layoutRes -> a
    android.content.Context context -> b
    java.lang.String title -> c
    java.lang.String content -> d
    void onCreate(android.os.Bundle) -> onCreate
cmccsi.mhealth.app.sports.view.CustomDialogOK$1 -> cmccsi.mhealth.app.sports.view.i:
    cmccsi.mhealth.app.sports.view.CustomDialogOK this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.view.CustomListDialog -> cmccsi.mhealth.app.sports.view.j:
    android.content.Context mContext -> a
    java.lang.String mTitle -> b
    java.util.List mContents -> c
    void onCreate(android.os.Bundle) -> onCreate
cmccsi.mhealth.app.sports.view.CustomListDialog$1 -> cmccsi.mhealth.app.sports.view.k:
    cmccsi.mhealth.app.sports.view.CustomListDialog this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.view.CustomProgressDialog -> cmccsi.mhealth.app.sports.view.l:
    android.content.Context context -> a
    cmccsi.mhealth.app.sports.view.CustomProgressDialog customProgressDialog -> b
    cmccsi.mhealth.app.sports.view.CustomProgressDialog createDialog(android.content.Context,boolean) -> a
    cmccsi.mhealth.app.sports.view.CustomProgressDialog createDialog(android.content.Context) -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    cmccsi.mhealth.app.sports.view.CustomProgressDialog setMessage(java.lang.String) -> a
cmccsi.mhealth.app.sports.view.DownFlashView -> cmccsi.mhealth.app.sports.view.DownFlashView:
    android.widget.Scroller scroller -> c
    android.view.View refreshView -> d
    android.widget.ImageView refreshIndicatorView -> e
    int refreshTargetTop -> f
    android.widget.ProgressBar bar -> g
    android.widget.TextView downTextView -> h
    android.widget.TextView timeTextView -> i
    cmccsi.mhealth.app.sports.view.DownFlashView$RefreshListener refreshListener -> j
    int mState -> a
    int lastY -> k
    boolean isRefreshing -> b
    android.content.Context mContext -> l
    android.view.animation.RotateAnimation mAnimation -> m
    android.view.animation.RotateAnimation mReverseAnimation -> n
    void init() -> f
    void setLastRefreshTimeText() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void fling(int) -> a
    void returnInitState() -> b
    void refresh() -> c
    void computeScroll() -> computeScroll
    void doMovement(int) -> b
    void setRefreshEnabled(boolean) -> setRefreshEnabled
    void setRefreshListener(cmccsi.mhealth.app.sports.view.DownFlashView$RefreshListener) -> setRefreshListener
    void finishRefresh() -> d
    void startRefreshDirectly() -> e
    void setState(int) -> setState
    void setText(java.lang.String) -> setText
cmccsi.mhealth.app.sports.view.DownFlashView$RefreshListener -> cmccsi.mhealth.app.sports.view.m:
    void onRefresh(cmccsi.mhealth.app.sports.view.DownFlashView) -> a
cmccsi.mhealth.app.sports.view.DownLoadApkProgress -> cmccsi.mhealth.app.sports.view.DownLoadApkProgress:
    java.lang.String text -> a
    android.graphics.Paint mPaint -> b
    void setProgress(int) -> setProgress
    void onDraw(android.graphics.Canvas) -> onDraw
    void initText() -> a
    void setText(int) -> setText
cmccsi.mhealth.app.sports.view.EditTextWithDel -> cmccsi.mhealth.app.sports.view.EditTextWithDel:
    android.graphics.drawable.Drawable mClearDrawable -> a
    void init(android.content.Context) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void setClearIconVisible(boolean) -> setClearIconVisible
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
cmccsi.mhealth.app.sports.view.HorizontalMarqueeTextView -> cmccsi.mhealth.app.sports.view.HorizontalMarqueeTextView:
    boolean isFocused() -> isFocused
cmccsi.mhealth.app.sports.view.PedoCalProcess -> cmccsi.mhealth.app.sports.view.PedoCalProcess:
    int mOverColor -> a
    int mNormalColor -> b
    android.graphics.Paint mPaint -> c
    int mUnderLineHeight -> d
    int mLineMargin -> e
    int mExplainTextMergin -> f
    int mPictureWeight -> g
    int mProcessPictureWeight -> h
    int mProcessPictureHeight -> i
    int mExplainPictureHeight -> j
    int mExplainTextSize -> k
    java.util.List mNormalMilePictures -> l
    java.util.List mOverMilePictures -> m
    android.graphics.Bitmap mProcessPictures -> n
    android.graphics.Bitmap mExplainPictures -> o
    int mProcess -> p
    int[] mCoordinateX -> q
    java.lang.String mExplainText -> r
    void setExplainText(java.lang.String) -> setExplainText
    void setNormalMilePictures(int[]) -> setNormalMilePictures
    void setOverMilePictures(int[]) -> setOverMilePictures
    void setProcessPicture(int) -> setProcessPicture
    void setExplainPictures(int) -> setExplainPictures
    void setProcess(int) -> setProcess
    void setCoordinateX(int[]) -> setCoordinateX
    int[] getCoordinateX() -> getCoordinateX
    void init(android.content.Context,android.util.AttributeSet) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void DrawUnderLine(android.graphics.Canvas,double) -> a
    void DrawMilepost(android.graphics.Canvas,int[],double) -> a
    void DrawMilePicture(android.graphics.Canvas,int[],double) -> b
    void DrawProcessPicture(android.graphics.Canvas,int[],double) -> c
    void SetMilePost(boolean) -> a
    int CheckCollision(double,double) -> a
    android.graphics.Bitmap convertBmp(android.graphics.Bitmap) -> a
cmccsi.mhealth.app.sports.view.PopMenu -> cmccsi.mhealth.app.sports.view.n:
    java.util.List itemList -> a
    android.content.Context context -> b
    android.widget.PopupWindow popupWindow -> c
    android.widget.ListView listView -> d
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void showAsDropDown(android.view.View) -> a
    void dismiss() -> a
    android.content.Context access$0(cmccsi.mhealth.app.sports.view.PopMenu) -> a
cmccsi.mhealth.app.sports.view.PopMenu$PopAdapter -> cmccsi.mhealth.app.sports.view.o:
    android.view.LayoutInflater inflater -> b
    java.util.List items -> c
    cmccsi.mhealth.app.sports.view.PopMenu this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cmccsi.mhealth.app.sports.view.PopMenu$PopAdapter$ViewHolder -> cmccsi.mhealth.app.sports.view.p:
    android.widget.TextView groupItem -> a
    android.widget.ImageView groupImage -> b
    cmccsi.mhealth.app.sports.view.PopMenu$PopAdapter this$1 -> c
cmccsi.mhealth.app.sports.view.RoundAngleImageView -> cmccsi.mhealth.app.sports.view.RoundAngleImageView:
    float xRadius -> a
    float yRadius -> b
    float getxRadius() -> getxRadius
    void setxRadius(float) -> setxRadius
    float getyRadius() -> getyRadius
    void setyRadius(float) -> setyRadius
    void onDraw(android.graphics.Canvas) -> onDraw
cmccsi.mhealth.app.sports.view.ScoreBarView -> cmccsi.mhealth.app.sports.view.ScoreBarView:
    android.graphics.Bitmap mLeftPic -> a
    android.graphics.Bitmap mRunPic -> b
    int maxValue -> c
    int score -> d
    int acturallyscore -> e
    android.graphics.Typeface typeface -> f
    int[] colors -> g
    java.util.Random mRandom -> h
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setMaxValue(int) -> setMaxValue
    void setScore(int) -> setScore
    void setPics(android.graphics.Bitmap,android.graphics.Bitmap) -> a
    void setPics(android.graphics.Bitmap) -> setPics
    void reDraw() -> a
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
cmccsi.mhealth.app.sports.view.ScrollForeverTextView -> cmccsi.mhealth.app.sports.view.ScrollForeverTextView:
    boolean isFocused() -> isFocused
cmccsi.mhealth.app.sports.view.SyncHorizontalScrollView -> cmccsi.mhealth.app.sports.view.SyncHorizontalScrollView:
    android.view.View view -> a
    android.widget.ImageView leftImage -> b
    android.widget.ImageView rightImage -> c
    int windowWitdh -> d
    android.app.Activity mContext -> e
    void setSomeParam(android.view.View,android.widget.ImageView,android.widget.ImageView,android.app.Activity) -> a
    void onScrollChanged(int,int,int,int) -> onScrollChanged
cmccsi.mhealth.app.sports.view.UnScrollViewPager -> cmccsi.mhealth.app.sports.view.UnScrollViewPager:
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
cmccsi.mhealth.app.sports.view.WiperSwitch -> cmccsi.mhealth.app.sports.view.WiperSwitch:
    android.graphics.Bitmap bg_on -> a
    android.graphics.Bitmap bg_off -> b
    android.graphics.Bitmap slipper_btn -> c
    float nowX -> d
    boolean onSlip -> e
    boolean nowStatus -> f
    cmccsi.mhealth.app.sports.view.WiperSwitch$OnChangedListener listener -> g
    int weight -> h
    int height -> i
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setOnChangedListener(cmccsi.mhealth.app.sports.view.WiperSwitch$OnChangedListener) -> setOnChangedListener
    void setChecked(boolean) -> setChecked
    void setcheckstatus(boolean) -> setcheckstatus
cmccsi.mhealth.app.sports.view.WiperSwitch$OnChangedListener -> cmccsi.mhealth.app.sports.view.q:
    void OnChanged(cmccsi.mhealth.app.sports.view.WiperSwitch,boolean) -> a
cmccsi.mhealth.app.sports.view.XListView -> cmccsi.mhealth.app.sports.view.XListView:
    float mLastY -> a
    android.widget.Scroller mScroller -> b
    android.widget.AbsListView$OnScrollListener mScrollListener -> c
    cmccsi.mhealth.app.sports.view.XListView$IXListViewListener mListViewListener -> d
    cmccsi.mhealth.app.sports.view.XListViewHeader mHeaderView -> e
    android.widget.RelativeLayout mHeaderViewContent -> f
    android.widget.TextView mHeaderTimeView -> g
    int mHeaderViewHeight -> h
    boolean mEnablePullRefresh -> i
    boolean mPullRefreshing -> j
    int mVisiableHeight -> k
    cmccsi.mhealth.app.sports.view.XListViewFooter mFooterView -> l
    boolean mEnablePullLoad -> m
    boolean mPullLoading -> n
    boolean mIsFooterReady -> o
    int mTotalItemCount -> p
    int mScrollBack -> q
    void initWithContext(android.content.Context) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void stopRefresh() -> a
    void stopLoadMore() -> b
    void setRefreshTime(java.lang.String) -> setRefreshTime
    void invokeOnScrolling() -> c
    void updateHeaderHeight(float) -> b
    void resetHeaderHeight() -> d
    void updateFooterHeight(float) -> c
    void resetFooterHeight() -> e
    void startLoadMore() -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startLoading(float) -> a
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setXListViewListener(cmccsi.mhealth.app.sports.view.XListView$IXListViewListener) -> setXListViewListener
    android.widget.RelativeLayout access$0(cmccsi.mhealth.app.sports.view.XListView) -> a
    void access$1(cmccsi.mhealth.app.sports.view.XListView,int) -> a
    void access$2(cmccsi.mhealth.app.sports.view.XListView) -> b
cmccsi.mhealth.app.sports.view.XListView$1 -> cmccsi.mhealth.app.sports.view.r:
    cmccsi.mhealth.app.sports.view.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
cmccsi.mhealth.app.sports.view.XListView$2 -> cmccsi.mhealth.app.sports.view.s:
    cmccsi.mhealth.app.sports.view.XListView this$0 -> a
    void onClick(android.view.View) -> onClick
cmccsi.mhealth.app.sports.view.XListView$IXListViewListener -> cmccsi.mhealth.app.sports.view.t:
    void onRefresh() -> d
    void onLoadMore() -> e
cmccsi.mhealth.app.sports.view.XListView$OnXScrollListener -> cmccsi.mhealth.app.sports.view.u:
    void onXScrolling(android.view.View) -> a
cmccsi.mhealth.app.sports.view.XListViewFooter -> cmccsi.mhealth.app.sports.view.v:
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.view.View mProgressBar -> c
    android.widget.TextView mHintView -> d
    void setState(int) -> setState
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void hide() -> a
    void show() -> b
    void initView(android.content.Context) -> a
cmccsi.mhealth.app.sports.view.XListViewHeader -> cmccsi.mhealth.app.sports.view.w:
    android.widget.LinearLayout mContainer -> a
    android.widget.ImageView mArrowImageView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mHintTextView -> d
    int mState -> e
    android.view.animation.Animation mRotateUpAnim -> f
    android.view.animation.Animation mRotateDownAnim -> g
    int ROTATE_ANIM_DURATION -> h
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
com.ai.android.picker.DatePicker -> com.ai.android.picker.DatePicker:
    android.content.Context mContext -> mContext
    com.ai.android.picker.NumberPicker mDayPicker -> mDayPicker
    com.ai.android.picker.NumberPicker mMonthPicker -> mMonthPicker
    com.ai.android.picker.NumberPicker mYearPicker -> mYearPicker
    java.util.Calendar mCalendar -> mCalendar
    java.lang.String[] mMonthDisplay -> mMonthDisplay
    void initMonthDisplay() -> initMonthDisplay
    void updateDate() -> updateDate
    java.lang.String getDate() -> getDate
    int getDay() -> getDay
    int getMonth() -> getMonth
    int getYear() -> getYear
    void setCalendar(java.util.Calendar) -> setCalendar
    java.util.Calendar access$0(com.ai.android.picker.DatePicker) -> access$0
    void access$1(com.ai.android.picker.DatePicker) -> access$1
com.ai.android.picker.DatePicker$1 -> com.ai.android.picker.DatePicker$1:
    com.ai.android.picker.DatePicker this$0 -> this$0
    void onValueChange(com.ai.android.picker.NumberPicker,int,int) -> onValueChange
com.ai.android.picker.DatePicker$2 -> com.ai.android.picker.DatePicker$2:
    com.ai.android.picker.DatePicker this$0 -> this$0
    void onValueChange(com.ai.android.picker.NumberPicker,int,int) -> onValueChange
com.ai.android.picker.DatePicker$3 -> com.ai.android.picker.DatePicker$3:
    com.ai.android.picker.DatePicker this$0 -> this$0
    void onValueChange(com.ai.android.picker.NumberPicker,int,int) -> onValueChange
com.ai.android.picker.NumberPicker -> com.ai.android.picker.NumberPicker:
    int SELECTOR_WHEEL_ITEM_COUNT -> SELECTOR_WHEEL_ITEM_COUNT
    long DEFAULT_LONG_PRESS_UPDATE_INTERVAL -> DEFAULT_LONG_PRESS_UPDATE_INTERVAL
    int SELECTOR_MIDDLE_ITEM_INDEX -> SELECTOR_MIDDLE_ITEM_INDEX
    int SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT -> SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT
    int SELECTOR_ADJUSTMENT_DURATION_MILLIS -> SELECTOR_ADJUSTMENT_DURATION_MILLIS
    int SNAP_SCROLL_DURATION -> SNAP_SCROLL_DURATION
    float TOP_AND_BOTTOM_FADING_EDGE_STRENGTH -> TOP_AND_BOTTOM_FADING_EDGE_STRENGTH
    int UNSCALED_DEFAULT_SELECTION_DIVIDER_HEIGHT -> UNSCALED_DEFAULT_SELECTION_DIVIDER_HEIGHT
    int UNSCALED_DEFAULT_SELECTION_DIVIDERS_DISTANCE -> UNSCALED_DEFAULT_SELECTION_DIVIDERS_DISTANCE
    int DEFAULT_LAYOUT_RESOURCE_ID -> DEFAULT_LAYOUT_RESOURCE_ID
    char[] DIGIT_CHARACTERS -> DIGIT_CHARACTERS
    int SIZE_UNSPECIFIED -> SIZE_UNSPECIFIED
    com.ai.android.picker.NumberPicker$Formatter TWO_DIGIT_FORMATTER -> TWO_DIGIT_FORMATTER
    android.widget.ImageButton mIncrementButton -> mIncrementButton
    android.widget.ImageButton mDecrementButton -> mDecrementButton
    android.widget.EditText mInputText -> mInputText
    int mSelectionDividersDistance -> mSelectionDividersDistance
    int mMinHeight -> mMinHeight
    int mMaxHeight -> mMaxHeight
    int mMinWidth -> mMinWidth
    int mMaxWidth -> mMaxWidth
    boolean mComputeMaxWidth -> mComputeMaxWidth
    int mTextSize -> mTextSize
    int mSelectorTextGapHeight -> mSelectorTextGapHeight
    java.lang.String[] mDisplayedValues -> mDisplayedValues
    int mMinValue -> mMinValue
    int mMaxValue -> mMaxValue
    int mValue -> mValue
    com.ai.android.picker.NumberPicker$OnValueChangeListener mOnValueChangeListener -> mOnValueChangeListener
    com.ai.android.picker.NumberPicker$OnScrollListener mOnScrollListener -> mOnScrollListener
    com.ai.android.picker.NumberPicker$Formatter mFormatter -> mFormatter
    long mLongPressUpdateInterval -> mLongPressUpdateInterval
    android.util.SparseArray mSelectorIndexToStringCache -> mSelectorIndexToStringCache
    int[] mSelectorIndices -> mSelectorIndices
    android.graphics.Paint mSelectorWheelPaint -> mSelectorWheelPaint
    int mSelectorElementHeight -> mSelectorElementHeight
    int mInitialScrollOffset -> mInitialScrollOffset
    int mCurrentScrollOffset -> mCurrentScrollOffset
    com.ai.android.picker.Scroller mFlingScroller -> mFlingScroller
    com.ai.android.picker.Scroller mAdjustScroller -> mAdjustScroller
    int mPreviousScrollerY -> mPreviousScrollerY
    com.ai.android.picker.NumberPicker$SetSelectionCommand mSetSelectionCommand -> mSetSelectionCommand
    com.ai.android.picker.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand -> mChangeCurrentByOneFromLongPressCommand
    com.ai.android.picker.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand -> mBeginSoftInputOnLongPressCommand
    float mLastDownEventY -> mLastDownEventY
    long mLastDownEventTime -> mLastDownEventTime
    float mLastDownOrMoveEventY -> mLastDownOrMoveEventY
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mTouchSlop -> mTouchSlop
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    boolean mWrapSelectorWheel -> mWrapSelectorWheel
    int mSolidColor -> mSolidColor
    boolean mHasSelectorWheel -> mHasSelectorWheel
    android.graphics.drawable.Drawable mSelectionDivider -> mSelectionDivider
    int mSelectionDividerHeight -> mSelectionDividerHeight
    int mScrollState -> mScrollState
    boolean mIngonreMoveEvents -> mIngonreMoveEvents
    boolean mShowSoftInputOnTap -> mShowSoftInputOnTap
    int mTopSelectionDividerTop -> mTopSelectionDividerTop
    int mBottomSelectionDividerBottom -> mBottomSelectionDividerBottom
    boolean mIncrementVirtualButtonPressed -> mIncrementVirtualButtonPressed
    boolean mDecrementVirtualButtonPressed -> mDecrementVirtualButtonPressed
    com.ai.android.picker.NumberPicker$PressedStateHelper mPressedStateHelper -> mPressedStateHelper
    com.ai.android.picker.NumberPicker$OnInputTextValueChangedListener onInputTextValueChangedListener -> onInputTextValueChangedListener
    void setOnInputTextValueChangedListener(com.ai.android.picker.NumberPicker$OnInputTextValueChangedListener) -> setOnInputTextValueChangedListener
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean moveToFinalScrollerPosition(com.ai.android.picker.Scroller) -> moveToFinalScrollerPosition
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    void computeScroll() -> computeScroll
    void setEnabled(boolean) -> setEnabled
    void scrollBy(int,int) -> scrollBy
    int getSolidColor() -> getSolidColor
    void setOnValueChangedListener(com.ai.android.picker.NumberPicker$OnValueChangeListener) -> setOnValueChangedListener
    void setOnScrollListener(com.ai.android.picker.NumberPicker$OnScrollListener) -> setOnScrollListener
    void setFormatter(com.ai.android.picker.NumberPicker$Formatter) -> setFormatter
    void setValue(int) -> setValue
    void showSoftInput() -> showSoftInput
    void hideSoftInput() -> hideSoftInput
    void tryComputeMaxWidth() -> tryComputeMaxWidth
    boolean getWrapSelectorWheel() -> getWrapSelectorWheel
    void setWrapSelectorWheel(boolean) -> setWrapSelectorWheel
    void setOnLongPressUpdateInterval(long) -> setOnLongPressUpdateInterval
    int getValue() -> getValue
    int getMinValue() -> getMinValue
    void setMinValue(int) -> setMinValue
    int getMaxValue() -> getMaxValue
    void setMaxValue(int) -> setMaxValue
    java.lang.String[] getDisplayedValues() -> getDisplayedValues
    void setDisplayedValues(java.lang.String[]) -> setDisplayedValues
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    int makeMeasureSpec(int,int) -> makeMeasureSpec
    int resolveSizeAndStateRespectingMinSize(int,int,int) -> resolveSizeAndStateRespectingMinSize
    void initializeSelectorWheelIndices() -> initializeSelectorWheelIndices
    void setValueInternal(int,boolean) -> setValueInternal
    void changeValueByOne(boolean) -> changeValueByOne
    void initializeSelectorWheel() -> initializeSelectorWheel
    void initializeFadingEdges() -> initializeFadingEdges
    void onScrollerFinished(com.ai.android.picker.Scroller) -> onScrollerFinished
    void onScrollStateChange(int) -> onScrollStateChange
    void fling(int) -> fling
    int getWrappedSelectorIndex(int) -> getWrappedSelectorIndex
    void incrementSelectorIndices(int[]) -> incrementSelectorIndices
    void decrementSelectorIndices(int[]) -> decrementSelectorIndices
    void ensureCachedScrollSelectorValue(int) -> ensureCachedScrollSelectorValue
    java.lang.String formatNumber(int) -> formatNumber
    void validateInputTextView(android.view.View) -> validateInputTextView
    boolean updateInputTextView() -> updateInputTextView
    void notifyChange(int,int) -> notifyChange
    void postChangeCurrentByOneFromLongPress(boolean,long) -> postChangeCurrentByOneFromLongPress
    void removeChangeCurrentByOneFromLongPress() -> removeChangeCurrentByOneFromLongPress
    void postBeginSoftInputOnLongPressCommand() -> postBeginSoftInputOnLongPressCommand
    void removeBeginSoftInputCommand() -> removeBeginSoftInputCommand
    void removeAllCallbacks() -> removeAllCallbacks
    int getSelectedPos(java.lang.String) -> getSelectedPos
    void postSetSelectionCommand(int,int) -> postSetSelectionCommand
    boolean ensureScrollWheelAdjusted() -> ensureScrollWheelAdjusted
    char[] access$0() -> access$0
    java.lang.String[] access$1(com.ai.android.picker.NumberPicker) -> access$1
    int access$2(com.ai.android.picker.NumberPicker,java.lang.String) -> access$2
    int access$3(com.ai.android.picker.NumberPicker) -> access$3
    void access$4(com.ai.android.picker.NumberPicker,int,int) -> access$4
    boolean access$5(com.ai.android.picker.NumberPicker) -> access$5
    void access$6(com.ai.android.picker.NumberPicker,boolean) -> access$6
    int access$7(com.ai.android.picker.NumberPicker) -> access$7
    void access$8(com.ai.android.picker.NumberPicker,boolean) -> access$8
    boolean access$9(com.ai.android.picker.NumberPicker) -> access$9
    int access$10(com.ai.android.picker.NumberPicker) -> access$10
    android.widget.EditText access$11(com.ai.android.picker.NumberPicker) -> access$11
    void access$12(com.ai.android.picker.NumberPicker,boolean) -> access$12
    long access$13(com.ai.android.picker.NumberPicker) -> access$13
    void access$14(com.ai.android.picker.NumberPicker) -> access$14
    void access$15(com.ai.android.picker.NumberPicker,boolean) -> access$15
    void access$16(com.ai.android.picker.NumberPicker) -> access$16
    void access$17(com.ai.android.picker.NumberPicker,boolean,long) -> access$17
    void access$18(com.ai.android.picker.NumberPicker,android.view.View) -> access$18
com.ai.android.picker.NumberPicker$1 -> com.ai.android.picker.NumberPicker$1:
    java.lang.StringBuilder mBuilder -> mBuilder
    java.util.Formatter mFmt -> mFmt
    java.lang.Object[] mArgs -> mArgs
    java.lang.String format(int) -> format
com.ai.android.picker.NumberPicker$2 -> com.ai.android.picker.NumberPicker$2:
    com.ai.android.picker.NumberPicker this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.ai.android.picker.NumberPicker$3 -> com.ai.android.picker.NumberPicker$3:
    com.ai.android.picker.NumberPicker this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
com.ai.android.picker.NumberPicker$4 -> com.ai.android.picker.NumberPicker$4:
    com.ai.android.picker.NumberPicker this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.ai.android.picker.NumberPicker$BeginSoftInputOnLongPressCommand -> com.ai.android.picker.NumberPicker$BeginSoftInputOnLongPressCommand:
    com.ai.android.picker.NumberPicker this$0 -> this$0
    void run() -> run
com.ai.android.picker.NumberPicker$ChangeCurrentByOneFromLongPressCommand -> com.ai.android.picker.NumberPicker$ChangeCurrentByOneFromLongPressCommand:
    boolean mIncrement -> mIncrement
    com.ai.android.picker.NumberPicker this$0 -> this$0
    void setStep(boolean) -> setStep
    void run() -> run
    void access$0(com.ai.android.picker.NumberPicker$ChangeCurrentByOneFromLongPressCommand,boolean) -> access$0
com.ai.android.picker.NumberPicker$CustomEditText -> com.ai.android.picker.NumberPicker$CustomEditText:
    void onEditorAction(int) -> onEditorAction
com.ai.android.picker.NumberPicker$Formatter -> com.ai.android.picker.NumberPicker$Formatter:
    java.lang.String format(int) -> format
com.ai.android.picker.NumberPicker$InputTextFilter -> com.ai.android.picker.NumberPicker$InputTextFilter:
    com.ai.android.picker.NumberPicker this$0 -> this$0
    int getInputType() -> getInputType
    char[] getAcceptedChars() -> getAcceptedChars
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.ai.android.picker.NumberPicker$OnInputTextValueChangedListener -> com.ai.android.picker.NumberPicker$OnInputTextValueChangedListener:
    void onValueChanged() -> onValueChanged
com.ai.android.picker.NumberPicker$OnScrollListener -> com.ai.android.picker.NumberPicker$OnScrollListener:
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_TOUCH_SCROLL -> SCROLL_STATE_TOUCH_SCROLL
    int SCROLL_STATE_FLING -> SCROLL_STATE_FLING
    void onScrollStateChange(com.ai.android.picker.NumberPicker,int) -> onScrollStateChange
com.ai.android.picker.NumberPicker$OnValueChangeListener -> com.ai.android.picker.NumberPicker$OnValueChangeListener:
    void onValueChange(com.ai.android.picker.NumberPicker,int,int) -> onValueChange
com.ai.android.picker.NumberPicker$PressedStateHelper -> com.ai.android.picker.NumberPicker$PressedStateHelper:
    int BUTTON_INCREMENT -> BUTTON_INCREMENT
    int BUTTON_DECREMENT -> BUTTON_DECREMENT
    int MODE_PRESS -> MODE_PRESS
    int MODE_TAPPED -> MODE_TAPPED
    int mManagedButton -> mManagedButton
    int mMode -> mMode
    com.ai.android.picker.NumberPicker this$0 -> this$0
    void cancel() -> cancel
    void buttonPressDelayed(int) -> buttonPressDelayed
    void buttonTapped(int) -> buttonTapped
    void run() -> run
com.ai.android.picker.NumberPicker$SetSelectionCommand -> com.ai.android.picker.NumberPicker$SetSelectionCommand:
    int mSelectionStart -> mSelectionStart
    int mSelectionEnd -> mSelectionEnd
    com.ai.android.picker.NumberPicker this$0 -> this$0
    void run() -> run
    void access$0(com.ai.android.picker.NumberPicker$SetSelectionCommand,int) -> access$0
    void access$1(com.ai.android.picker.NumberPicker$SetSelectionCommand,int) -> access$1
com.ai.android.picker.R -> com.ai.android.picker.R:
com.ai.android.picker.R$anim -> com.ai.android.picker.R$anim:
    int slide_from_right_slow -> slide_from_right_slow
    int slide_to_left_slow -> slide_to_left_slow
com.ai.android.picker.R$attr -> com.ai.android.picker.R$attr:
    int flingable -> flingable
    int numberPickerDownButtonStyle -> numberPickerDownButtonStyle
    int numberPickerInputTextStyle -> numberPickerInputTextStyle
    int numberPickerStyle -> numberPickerStyle
    int numberPickerUpButtonStyle -> numberPickerUpButtonStyle
    int selectionDivider -> selectionDivider
    int selectionDividerHeight -> selectionDividerHeight
    int selectionDividersDistance -> selectionDividersDistance
    int solidColor -> solidColor
com.ai.android.picker.R$drawable -> com.ai.android.picker.R$drawable:
    int dialog_set_time_divider -> dialog_set_time_divider
    int ic_launcher -> ic_launcher
    int np_numberpicker_down_btn_holo_dark -> np_numberpicker_down_btn_holo_dark
    int np_numberpicker_down_btn_holo_light -> np_numberpicker_down_btn_holo_light
    int np_numberpicker_down_disabled_focused_holo_dark -> np_numberpicker_down_disabled_focused_holo_dark
    int np_numberpicker_down_disabled_focused_holo_light -> np_numberpicker_down_disabled_focused_holo_light
    int np_numberpicker_down_disabled_holo_dark -> np_numberpicker_down_disabled_holo_dark
    int np_numberpicker_down_disabled_holo_light -> np_numberpicker_down_disabled_holo_light
    int np_numberpicker_down_focused_holo_dark -> np_numberpicker_down_focused_holo_dark
    int np_numberpicker_down_focused_holo_light -> np_numberpicker_down_focused_holo_light
    int np_numberpicker_down_longpressed_holo_dark -> np_numberpicker_down_longpressed_holo_dark
    int np_numberpicker_down_longpressed_holo_light -> np_numberpicker_down_longpressed_holo_light
    int np_numberpicker_down_normal_holo_dark -> np_numberpicker_down_normal_holo_dark
    int np_numberpicker_down_normal_holo_light -> np_numberpicker_down_normal_holo_light
    int np_numberpicker_down_pressed_holo_dark -> np_numberpicker_down_pressed_holo_dark
    int np_numberpicker_down_pressed_holo_light -> np_numberpicker_down_pressed_holo_light
    int np_numberpicker_up_btn_holo_dark -> np_numberpicker_up_btn_holo_dark
    int np_numberpicker_up_btn_holo_light -> np_numberpicker_up_btn_holo_light
    int np_numberpicker_up_disabled_focused_holo_dark -> np_numberpicker_up_disabled_focused_holo_dark
    int np_numberpicker_up_disabled_focused_holo_light -> np_numberpicker_up_disabled_focused_holo_light
    int np_numberpicker_up_disabled_holo_dark -> np_numberpicker_up_disabled_holo_dark
    int np_numberpicker_up_disabled_holo_light -> np_numberpicker_up_disabled_holo_light
    int np_numberpicker_up_focused_holo_dark -> np_numberpicker_up_focused_holo_dark
    int np_numberpicker_up_focused_holo_light -> np_numberpicker_up_focused_holo_light
    int np_numberpicker_up_longpressed_holo_dark -> np_numberpicker_up_longpressed_holo_dark
    int np_numberpicker_up_longpressed_holo_light -> np_numberpicker_up_longpressed_holo_light
    int np_numberpicker_up_normal_holo_dark -> np_numberpicker_up_normal_holo_dark
    int np_numberpicker_up_normal_holo_light -> np_numberpicker_up_normal_holo_light
    int np_numberpicker_up_pressed_holo_dark -> np_numberpicker_up_pressed_holo_dark
    int np_numberpicker_up_pressed_holo_light -> np_numberpicker_up_pressed_holo_light
com.ai.android.picker.R$id -> com.ai.android.picker.R$id:
    int date_day -> date_day
    int date_month -> date_month
    int date_year -> date_year
    int decrement -> decrement
    int increment -> increment
    int numberpicker_input -> numberpicker_input
    int time_am -> time_am
    int time_hours -> time_hours
    int time_minutes -> time_minutes
    int time_pm -> time_pm
    int time_switcher -> time_switcher
com.ai.android.picker.R$integer -> com.ai.android.picker.R$integer:
    int np_config_longAnimTime -> np_config_longAnimTime
com.ai.android.picker.R$layout -> com.ai.android.picker.R$layout:
    int date_picker -> date_picker
    int number_picker -> number_picker
    int time_picker -> time_picker
com.ai.android.picker.R$string -> com.ai.android.picker.R$string:
    int app_name -> app_name
    int np_number_picker_decrement_button -> np_number_picker_decrement_button
    int np_number_picker_increment_button -> np_number_picker_increment_button
    int np_number_picker_increment_scroll_action -> np_number_picker_increment_scroll_action
    int np_number_picker_increment_scroll_mode -> np_number_picker_increment_scroll_mode
com.ai.android.picker.R$style -> com.ai.android.picker.R$style:
    int AiTheme -> AiTheme
    int AiThemeSample -> AiThemeSample
    int AiThemeSample_Light -> AiThemeSample_Light
    int AiTheme_Light -> AiTheme_Light
    int AiWidget -> AiWidget
    int AiWidget_EditText -> AiWidget_EditText
    int AiWidget_EditText_NumberPickerInputText -> AiWidget_EditText_NumberPickerInputText
    int AiWidget_EditText_NumberPickerInputText_Light -> AiWidget_EditText_NumberPickerInputText_Light
    int AiWidget_ImageButton -> AiWidget_ImageButton
    int AiWidget_ImageButton_NumberPickerDownButton -> AiWidget_ImageButton_NumberPickerDownButton
    int AiWidget_ImageButton_NumberPickerDownButton_Light -> AiWidget_ImageButton_NumberPickerDownButton_Light
    int AiWidget_ImageButton_NumberPickerUpButton -> AiWidget_ImageButton_NumberPickerUpButton
    int AiWidget_ImageButton_NumberPickerUpButton_Light -> AiWidget_ImageButton_NumberPickerUpButton_Light
    int AiWidget_Light_NumberPicker -> AiWidget_Light_NumberPicker
    int AiWidget_NumberPicker -> AiWidget_NumberPicker
    int AppTheme -> AppTheme
com.ai.android.picker.R$styleable -> com.ai.android.picker.R$styleable:
    int[] NumberPicker -> NumberPicker
    int NumberPicker_android_fadingEdgeLength -> NumberPicker_android_fadingEdgeLength
    int NumberPicker_android_maxHeight -> NumberPicker_android_maxHeight
    int NumberPicker_android_maxWidth -> NumberPicker_android_maxWidth
    int NumberPicker_android_minHeight -> NumberPicker_android_minHeight
    int NumberPicker_android_minWidth -> NumberPicker_android_minWidth
    int NumberPicker_android_orientation -> NumberPicker_android_orientation
    int NumberPicker_flingable -> NumberPicker_flingable
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
com.ai.android.picker.Scroller -> com.ai.android.picker.Scroller:
    int mMode -> mMode
    int mStartX -> mStartX
    int mStartY -> mStartY
    int mFinalX -> mFinalX
    int mFinalY -> mFinalY
    int mMinX -> mMinX
    int mMaxX -> mMaxX
    int mMinY -> mMinY
    int mMaxY -> mMaxY
    int mCurrX -> mCurrX
    int mCurrY -> mCurrY
    long mStartTime -> mStartTime
    int mDuration -> mDuration
    float mDurationReciprocal -> mDurationReciprocal
    float mDeltaX -> mDeltaX
    float mDeltaY -> mDeltaY
    boolean mFinished -> mFinished
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mFlywheel -> mFlywheel
    float mVelocity -> mVelocity
    int DEFAULT_DURATION -> DEFAULT_DURATION
    int SCROLL_MODE -> SCROLL_MODE
    int FLING_MODE -> FLING_MODE
    float DECELERATION_RATE -> DECELERATION_RATE
    float ALPHA -> ALPHA
    float START_TENSION -> START_TENSION
    float END_TENSION -> END_TENSION
    int NB_SAMPLES -> NB_SAMPLES
    float[] SPLINE -> SPLINE
    float mDeceleration -> mDeceleration
    float mPpi -> mPpi
    float sViscousFluidScale -> sViscousFluidScale
    float sViscousFluidNormalize -> sViscousFluidNormalize
    void setFriction(float) -> setFriction
    float computeDeceleration(float) -> computeDeceleration
    boolean isFinished() -> isFinished
    void forceFinished(boolean) -> forceFinished
    int getDuration() -> getDuration
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    float getCurrVelocity() -> getCurrVelocity
    int getStartX() -> getStartX
    int getStartY() -> getStartY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    float viscousFluid(float) -> viscousFluid
    void abortAnimation() -> abortAnimation
    void extendDuration(int) -> extendDuration
    int timePassed() -> timePassed
    void setFinalX(int) -> setFinalX
    void setFinalY(int) -> setFinalY
    boolean isScrollingInDirection(float,float) -> isScrollingInDirection
com.ai.android.picker.TimePicker -> com.ai.android.picker.TimePicker:
    android.content.Context mContext -> mContext
    com.ai.android.picker.NumberPicker hourPicker -> hourPicker
    com.ai.android.picker.NumberPicker minPicker -> minPicker
    android.widget.TextSwitcher timeSwitcher -> timeSwitcher
    java.util.Calendar mCalendar -> mCalendar
    boolean is24Hour -> is24Hour
    boolean isAm -> isAm
    void updateTime() -> updateTime
    boolean isIs24Hour() -> isIs24Hour
    void setIs24Hour(boolean) -> setIs24Hour
    java.lang.String getTime() -> getTime
    int getHourOfDay() -> getHourOfDay
    int getHour() -> getHour
    int getMinute() -> getMinute
    void setCalendar(java.util.Calendar) -> setCalendar
    void onClick(android.view.View) -> onClick
    void setEnabled(boolean) -> setEnabled
    java.util.Calendar access$0(com.ai.android.picker.TimePicker) -> access$0
com.ai.android.picker.TimePicker$1 -> com.ai.android.picker.TimePicker$1:
    com.ai.android.picker.TimePicker this$0 -> this$0
    void onValueChange(com.ai.android.picker.NumberPicker,int,int) -> onValueChange
com.ai.android.picker.TimePicker$2 -> com.ai.android.picker.TimePicker$2:
    com.ai.android.picker.TimePicker this$0 -> this$0
    void onValueChange(com.ai.android.picker.NumberPicker,int,int) -> onValueChange
com.alibaba.fastjson.JSON -> com.alibaba.fastjson.JSON:
    java.lang.String DEFAULT_TYPE_KEY -> DEFAULT_TYPE_KEY
    int DEFAULT_PARSER_FEATURE -> DEFAULT_PARSER_FEATURE
    java.lang.String DEFFAULT_DATE_FORMAT -> DEFFAULT_DATE_FORMAT
    int DEFAULT_GENERATE_FEATURE -> DEFAULT_GENERATE_FEATURE
    java.lang.String VERSION -> VERSION
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(java.lang.String,int) -> parse
    java.lang.Object parse(byte[],com.alibaba.fastjson.parser.Feature[]) -> parse
    java.lang.Object parse(byte[],int,int,java.nio.charset.CharsetDecoder,com.alibaba.fastjson.parser.Feature[]) -> parse
    java.lang.Object parse(byte[],int,int,java.nio.charset.CharsetDecoder,int) -> parse
    java.lang.Object parse(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parse
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String) -> parseObject
    java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    int handleResovleTask(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object) -> handleResovleTask
    java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(byte[],int,int,java.nio.charset.CharsetDecoder,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(char[],int,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class) -> parseObject
    com.alibaba.fastjson.JSONArray parseArray(java.lang.String) -> parseArray
    java.util.List parseArray(java.lang.String,java.lang.Class) -> parseArray
    java.util.List parseArray(java.lang.String,java.lang.reflect.Type[]) -> parseArray
    java.lang.String toJSONString(java.lang.Object) -> toJSONString
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    java.lang.String toJSONStringWithDateFormat(java.lang.Object,java.lang.String,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringWithDateFormat
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    java.lang.String toJSONStringZ(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringZ
    byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    java.lang.String toJSONString(java.lang.Object,boolean) -> toJSONString
    void writeJSONStringTo(java.lang.Object,java.io.Writer,com.alibaba.fastjson.serializer.SerializerFeature[]) -> writeJSONStringTo
    java.lang.String toString() -> toString
    java.lang.String toJSONString() -> toJSONString
    void writeJSONString(java.lang.Appendable) -> writeJSONString
    java.lang.Object toJSON(java.lang.Object) -> toJSON
    java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.parser.ParserConfig) -> toJSON
    java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class) -> toJavaObject
com.alibaba.fastjson.JSONArray -> com.alibaba.fastjson.JSONArray:
    long serialVersionUID -> serialVersionUID
    java.util.List list -> list
    java.lang.Object relatedArray -> relatedArray
    java.lang.reflect.Type componentType -> componentType
    java.lang.Object getRelatedArray() -> getRelatedArray
    void setRelatedArray(java.lang.Object) -> setRelatedArray
    java.lang.reflect.Type getComponentType() -> getComponentType
    void setComponentType(java.lang.reflect.Type) -> setComponentType
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
    java.lang.Object get(int) -> get
    com.alibaba.fastjson.JSONObject getJSONObject(int) -> getJSONObject
    com.alibaba.fastjson.JSONArray getJSONArray(int) -> getJSONArray
    java.lang.Object getObject(int,java.lang.Class) -> getObject
    java.lang.Boolean getBoolean(int) -> getBoolean
    boolean getBooleanValue(int) -> getBooleanValue
    java.lang.Byte getByte(int) -> getByte
    byte getByteValue(int) -> getByteValue
    java.lang.Short getShort(int) -> getShort
    short getShortValue(int) -> getShortValue
    java.lang.Integer getInteger(int) -> getInteger
    int getIntValue(int) -> getIntValue
    java.lang.Long getLong(int) -> getLong
    long getLongValue(int) -> getLongValue
    java.lang.Float getFloat(int) -> getFloat
    float getFloatValue(int) -> getFloatValue
    java.lang.Double getDouble(int) -> getDouble
    double getDoubleValue(int) -> getDoubleValue
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    java.math.BigInteger getBigInteger(int) -> getBigInteger
    java.lang.String getString(int) -> getString
    java.util.Date getDate(int) -> getDate
    java.sql.Date getSqlDate(int) -> getSqlDate
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.alibaba.fastjson.JSONAware -> com.alibaba.fastjson.JSONAware:
    java.lang.String toJSONString() -> toJSONString
com.alibaba.fastjson.JSONException -> com.alibaba.fastjson.JSONException:
    long serialVersionUID -> serialVersionUID
com.alibaba.fastjson.JSONObject -> com.alibaba.fastjson.JSONObject:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    java.util.Map map -> map
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    java.lang.Object getObject(java.lang.String,java.lang.Class) -> getObject
    java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    byte[] getBytes(java.lang.String) -> getBytes
    boolean getBooleanValue(java.lang.String) -> getBooleanValue
    java.lang.Byte getByte(java.lang.String) -> getByte
    byte getByteValue(java.lang.String) -> getByteValue
    java.lang.Short getShort(java.lang.String) -> getShort
    short getShortValue(java.lang.String) -> getShortValue
    java.lang.Integer getInteger(java.lang.String) -> getInteger
    int getIntValue(java.lang.String) -> getIntValue
    java.lang.Long getLong(java.lang.String) -> getLong
    long getLongValue(java.lang.String) -> getLongValue
    java.lang.Float getFloat(java.lang.String) -> getFloat
    float getFloatValue(java.lang.String) -> getFloatValue
    java.lang.Double getDouble(java.lang.String) -> getDouble
    double getDoubleValue(java.lang.String) -> getDoubleValue
    java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    java.math.BigInteger getBigInteger(java.lang.String) -> getBigInteger
    java.lang.String getString(java.lang.String) -> getString
    java.util.Date getDate(java.lang.String) -> getDate
    java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    java.sql.Timestamp getTimestamp(java.lang.String) -> getTimestamp
    java.lang.Object put(java.lang.String,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.alibaba.fastjson.JSONReader -> com.alibaba.fastjson.JSONReader:
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> parser
    com.alibaba.fastjson.JSONStreamContext context -> context
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    void startObject() -> startObject
    void endObject() -> endObject
    void startArray() -> startArray
    void endArray() -> endArray
    void startStructure() -> startStructure
    void endStructure() -> endStructure
    boolean hasNext() -> hasNext
    void close() -> close
    java.lang.Integer readInteger() -> readInteger
    java.lang.Long readLong() -> readLong
    java.lang.String readString() -> readString
    java.lang.Object readObject(java.lang.reflect.Type) -> readObject
    java.lang.Object readObject(java.lang.Class) -> readObject
    void readObject(java.lang.Object) -> readObject
    java.lang.Object readObject() -> readObject
    java.lang.Object readObject(java.util.Map) -> readObject
    void readBefore() -> readBefore
    void readAfter() -> readAfter
com.alibaba.fastjson.JSONStreamAware -> com.alibaba.fastjson.JSONStreamAware:
    void writeJSONString(java.lang.Appendable) -> writeJSONString
com.alibaba.fastjson.JSONStreamContext -> com.alibaba.fastjson.JSONStreamContext:
    int StartObject -> StartObject
    int PropertyKey -> PropertyKey
    int PropertyValue -> PropertyValue
    int StartArray -> StartArray
    int ArrayValue -> ArrayValue
    com.alibaba.fastjson.JSONStreamContext parent -> parent
    int state -> state
    com.alibaba.fastjson.JSONStreamContext getParent() -> getParent
    int getState() -> getState
    void setState(int) -> setState
com.alibaba.fastjson.JSONWriter -> com.alibaba.fastjson.JSONWriter:
    com.alibaba.fastjson.serializer.SerializeWriter writer -> writer
    com.alibaba.fastjson.serializer.JSONSerializer serializer -> serializer
    com.alibaba.fastjson.JSONStreamContext context -> context
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    void startObject() -> startObject
    void endObject() -> endObject
    void writeKey(java.lang.String) -> writeKey
    void writeValue(java.lang.Object) -> writeValue
    void writeObject(java.lang.String) -> writeObject
    void writeObject(java.lang.Object) -> writeObject
    void startArray() -> startArray
    void beginStructure() -> beginStructure
    void endArray() -> endArray
    void endStructure() -> endStructure
    void beforeWrite() -> beforeWrite
    void afterWriter() -> afterWriter
    void flush() -> flush
    void close() -> close
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
com.alibaba.fastjson.TypeReference -> com.alibaba.fastjson.TypeReference:
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type LIST_STRING -> LIST_STRING
    java.lang.reflect.Type getType() -> getType
com.alibaba.fastjson.TypeReference$1 -> com.alibaba.fastjson.TypeReference$1:
com.alibaba.fastjson.annotation.JSONCreator -> com.alibaba.fastjson.annotation.JSONCreator:
com.alibaba.fastjson.annotation.JSONField -> com.alibaba.fastjson.annotation.JSONField:
    java.lang.String name() -> name
    java.lang.String format() -> format
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> serialzeFeatures
    com.alibaba.fastjson.parser.Feature[] parseFeatures() -> parseFeatures
com.alibaba.fastjson.annotation.JSONType -> com.alibaba.fastjson.annotation.JSONType:
    boolean asm() -> asm
    java.lang.String[] orders() -> orders
    java.lang.String[] ignores() -> ignores
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> serialzeFeatures
    boolean alphabetic() -> alphabetic
    java.lang.Class mappingTo() -> mappingTo
com.alibaba.fastjson.asm.ASMException -> com.alibaba.fastjson.asm.ASMException:
    long serialVersionUID -> serialVersionUID
com.alibaba.fastjson.asm.ByteVector -> com.alibaba.fastjson.asm.ByteVector:
    byte[] data -> data
    int length -> length
    com.alibaba.fastjson.asm.ByteVector putByte(int) -> putByte
    com.alibaba.fastjson.asm.ByteVector put11(int,int) -> put11
    com.alibaba.fastjson.asm.ByteVector putShort(int) -> putShort
    com.alibaba.fastjson.asm.ByteVector put12(int,int) -> put12
    com.alibaba.fastjson.asm.ByteVector putInt(int) -> putInt
    com.alibaba.fastjson.asm.ByteVector putUTF8(java.lang.String) -> putUTF8
    com.alibaba.fastjson.asm.ByteVector putByteArray(byte[],int,int) -> putByteArray
    void enlarge(int) -> enlarge
com.alibaba.fastjson.asm.ClassWriter -> com.alibaba.fastjson.asm.ClassWriter:
    int COMPUTE_MAXS -> COMPUTE_MAXS
    int COMPUTE_FRAMES -> COMPUTE_FRAMES
    int ACC_SYNTHETIC_ATTRIBUTE -> ACC_SYNTHETIC_ATTRIBUTE
    int NOARG_INSN -> NOARG_INSN
    int SBYTE_INSN -> SBYTE_INSN
    int SHORT_INSN -> SHORT_INSN
    int VAR_INSN -> VAR_INSN
    int IMPLVAR_INSN -> IMPLVAR_INSN
    int TYPE_INSN -> TYPE_INSN
    int FIELDORMETH_INSN -> FIELDORMETH_INSN
    int ITFDYNMETH_INSN -> ITFDYNMETH_INSN
    int LABEL_INSN -> LABEL_INSN
    int LABELW_INSN -> LABELW_INSN
    int LDC_INSN -> LDC_INSN
    int LDCW_INSN -> LDCW_INSN
    int IINC_INSN -> IINC_INSN
    int TABL_INSN -> TABL_INSN
    int LOOK_INSN -> LOOK_INSN
    int MANA_INSN -> MANA_INSN
    int WIDE_INSN -> WIDE_INSN
    byte[] TYPE -> TYPE
    int CLASS -> CLASS
    int FIELD -> FIELD
    int METH -> METH
    int IMETH -> IMETH
    int STR -> STR
    int INT -> INT
    int FLOAT -> FLOAT
    int LONG -> LONG
    int DOUBLE -> DOUBLE
    int NAME_TYPE -> NAME_TYPE
    int UTF8 -> UTF8
    int TYPE_NORMAL -> TYPE_NORMAL
    int TYPE_UNINIT -> TYPE_UNINIT
    int TYPE_MERGED -> TYPE_MERGED
    int version -> version
    int index -> index
    com.alibaba.fastjson.asm.ByteVector pool -> pool
    com.alibaba.fastjson.asm.Item[] items -> items
    int threshold -> threshold
    com.alibaba.fastjson.asm.Item key -> key
    com.alibaba.fastjson.asm.Item key2 -> key2
    com.alibaba.fastjson.asm.Item key3 -> key3
    com.alibaba.fastjson.asm.Item[] typeTable -> typeTable
    int access -> access
    int name -> name
    java.lang.String thisName -> thisName
    int superName -> superName
    int interfaceCount -> interfaceCount
    int[] interfaces -> interfaces
    com.alibaba.fastjson.asm.FieldWriter firstField -> firstField
    com.alibaba.fastjson.asm.FieldWriter lastField -> lastField
    com.alibaba.fastjson.asm.MethodWriter firstMethod -> firstMethod
    com.alibaba.fastjson.asm.MethodWriter lastMethod -> lastMethod
    void visit(int,int,java.lang.String,java.lang.String,java.lang.String[]) -> visit
    com.alibaba.fastjson.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String) -> visitField
    com.alibaba.fastjson.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) -> visitMethod
    byte[] toByteArray() -> toByteArray
    com.alibaba.fastjson.asm.Item newConstItem(java.lang.Object) -> newConstItem
    com.alibaba.fastjson.asm.Item newInteger(int) -> newInteger
    int newUTF8(java.lang.String) -> newUTF8
    com.alibaba.fastjson.asm.Item newClassItem(java.lang.String) -> newClassItem
    int newClass(java.lang.String) -> newClass
    com.alibaba.fastjson.asm.Item newFieldItem(java.lang.String,java.lang.String,java.lang.String) -> newFieldItem
    com.alibaba.fastjson.asm.Item newMethodItem(java.lang.String,java.lang.String,java.lang.String,boolean) -> newMethodItem
    com.alibaba.fastjson.asm.Item newString(java.lang.String) -> newString
    int newNameType(java.lang.String,java.lang.String) -> newNameType
    com.alibaba.fastjson.asm.Item newNameTypeItem(java.lang.String,java.lang.String) -> newNameTypeItem
    com.alibaba.fastjson.asm.Item get(com.alibaba.fastjson.asm.Item) -> get
    void put(com.alibaba.fastjson.asm.Item) -> put
    void put122(int,int,int) -> put122
com.alibaba.fastjson.asm.FieldVisitor -> com.alibaba.fastjson.asm.FieldVisitor:
    void visitEnd() -> visitEnd
com.alibaba.fastjson.asm.FieldWriter -> com.alibaba.fastjson.asm.FieldWriter:
    com.alibaba.fastjson.asm.FieldWriter next -> next
    int access -> access
    int name -> name
    int desc -> desc
    void visitEnd() -> visitEnd
    int getSize() -> getSize
    void put(com.alibaba.fastjson.asm.ByteVector) -> put
com.alibaba.fastjson.asm.Item -> com.alibaba.fastjson.asm.Item:
    int index -> index
    int type -> type
    int intVal -> intVal
    long longVal -> longVal
    java.lang.String strVal1 -> strVal1
    java.lang.String strVal2 -> strVal2
    java.lang.String strVal3 -> strVal3
    int hashCode -> hashCode
    com.alibaba.fastjson.asm.Item next -> next
    void set(int,java.lang.String,java.lang.String,java.lang.String) -> set
    void set(int) -> set
    boolean isEqualTo(com.alibaba.fastjson.asm.Item) -> isEqualTo
com.alibaba.fastjson.asm.Label -> com.alibaba.fastjson.asm.Label:
    int RESOLVED -> RESOLVED
    java.lang.Object info -> info
    int status -> status
    int line -> line
    int position -> position
    int referenceCount -> referenceCount
    int[] srcAndRefPositions -> srcAndRefPositions
    int inputStackTop -> inputStackTop
    int outputStackMax -> outputStackMax
    com.alibaba.fastjson.asm.Label successor -> successor
    com.alibaba.fastjson.asm.Label next -> next
    void put(com.alibaba.fastjson.asm.MethodWriter,com.alibaba.fastjson.asm.ByteVector,int) -> put
    void addReference(int,int) -> addReference
    void resolve(com.alibaba.fastjson.asm.MethodWriter,int,byte[]) -> resolve
com.alibaba.fastjson.asm.MethodVisitor -> com.alibaba.fastjson.asm.MethodVisitor:
    void visitInsn(int) -> visitInsn
    void visitIntInsn(int,int) -> visitIntInsn
    void visitVarInsn(int,int) -> visitVarInsn
    void visitTypeInsn(int,java.lang.String) -> visitTypeInsn
    void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String) -> visitFieldInsn
    void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String) -> visitMethodInsn
    void visitJumpInsn(int,com.alibaba.fastjson.asm.Label) -> visitJumpInsn
    void visitLabel(com.alibaba.fastjson.asm.Label) -> visitLabel
    void visitLdcInsn(java.lang.Object) -> visitLdcInsn
    void visitIincInsn(int,int) -> visitIincInsn
    void visitMaxs(int,int) -> visitMaxs
    void visitEnd() -> visitEnd
com.alibaba.fastjson.asm.MethodWriter -> com.alibaba.fastjson.asm.MethodWriter:
    int ACC_CONSTRUCTOR -> ACC_CONSTRUCTOR
    int SAME_FRAME -> SAME_FRAME
    int SAME_LOCALS_1_STACK_ITEM_FRAME -> SAME_LOCALS_1_STACK_ITEM_FRAME
    int RESERVED -> RESERVED
    int SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED -> SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED
    int CHOP_FRAME -> CHOP_FRAME
    int SAME_FRAME_EXTENDED -> SAME_FRAME_EXTENDED
    int APPEND_FRAME -> APPEND_FRAME
    int FULL_FRAME -> FULL_FRAME
    com.alibaba.fastjson.asm.MethodWriter next -> next
    com.alibaba.fastjson.asm.ClassWriter cw -> cw
    int access -> access
    int name -> name
    int desc -> desc
    int classReaderLength -> classReaderLength
    int exceptionCount -> exceptionCount
    int[] exceptions -> exceptions
    com.alibaba.fastjson.asm.ByteVector code -> code
    int maxStack -> maxStack
    int maxLocals -> maxLocals
    void visitInsn(int) -> visitInsn
    void visitIntInsn(int,int) -> visitIntInsn
    void visitVarInsn(int,int) -> visitVarInsn
    void visitTypeInsn(int,java.lang.String) -> visitTypeInsn
    void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String) -> visitFieldInsn
    void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String) -> visitMethodInsn
    void visitJumpInsn(int,com.alibaba.fastjson.asm.Label) -> visitJumpInsn
    void visitLabel(com.alibaba.fastjson.asm.Label) -> visitLabel
    void visitLdcInsn(java.lang.Object) -> visitLdcInsn
    void visitIincInsn(int,int) -> visitIincInsn
    void visitMaxs(int,int) -> visitMaxs
    void visitEnd() -> visitEnd
    int getSize() -> getSize
    void put(com.alibaba.fastjson.asm.ByteVector) -> put
com.alibaba.fastjson.asm.Opcodes -> com.alibaba.fastjson.asm.Opcodes:
    int V1_5 -> V1_5
    int ACC_PUBLIC -> ACC_PUBLIC
    int ACC_PRIVATE -> ACC_PRIVATE
    int ACC_STATIC -> ACC_STATIC
    int ACC_FINAL -> ACC_FINAL
    int ACC_SUPER -> ACC_SUPER
    int ACC_SYNTHETIC -> ACC_SYNTHETIC
    int ACC_DEPRECATED -> ACC_DEPRECATED
    int T_BOOLEAN -> T_BOOLEAN
    int T_CHAR -> T_CHAR
    int T_FLOAT -> T_FLOAT
    int T_DOUBLE -> T_DOUBLE
    int T_BYTE -> T_BYTE
    int T_SHORT -> T_SHORT
    int T_INT -> T_INT
    int T_LONG -> T_LONG
    java.lang.String INVOKEDYNAMIC_OWNER -> INVOKEDYNAMIC_OWNER
    int NOP -> NOP
    int ACONST_NULL -> ACONST_NULL
    int ICONST_M1 -> ICONST_M1
    int ICONST_0 -> ICONST_0
    int ICONST_1 -> ICONST_1
    int ICONST_2 -> ICONST_2
    int ICONST_3 -> ICONST_3
    int ICONST_4 -> ICONST_4
    int ICONST_5 -> ICONST_5
    int LCONST_0 -> LCONST_0
    int LCONST_1 -> LCONST_1
    int FCONST_0 -> FCONST_0
    int FCONST_1 -> FCONST_1
    int FCONST_2 -> FCONST_2
    int DCONST_0 -> DCONST_0
    int DCONST_1 -> DCONST_1
    int BIPUSH -> BIPUSH
    int LDC -> LDC
    int ILOAD -> ILOAD
    int LLOAD -> LLOAD
    int FLOAD -> FLOAD
    int DLOAD -> DLOAD
    int ALOAD -> ALOAD
    int IALOAD -> IALOAD
    int LALOAD -> LALOAD
    int FALOAD -> FALOAD
    int DALOAD -> DALOAD
    int AALOAD -> AALOAD
    int BALOAD -> BALOAD
    int CALOAD -> CALOAD
    int SALOAD -> SALOAD
    int ISTORE -> ISTORE
    int LSTORE -> LSTORE
    int FSTORE -> FSTORE
    int DSTORE -> DSTORE
    int ASTORE -> ASTORE
    int POP -> POP
    int POP2 -> POP2
    int DUP -> DUP
    int IADD -> IADD
    int LADD -> LADD
    int ISUB -> ISUB
    int IAND -> IAND
    int IOR -> IOR
    int IINC -> IINC
    int I2B -> I2B
    int I2C -> I2C
    int I2S -> I2S
    int LCMP -> LCMP
    int FCMPL -> FCMPL
    int FCMPG -> FCMPG
    int DCMPL -> DCMPL
    int DCMPG -> DCMPG
    int IFEQ -> IFEQ
    int IFNE -> IFNE
    int IFLT -> IFLT
    int IFGE -> IFGE
    int IFGT -> IFGT
    int IFLE -> IFLE
    int IF_ICMPEQ -> IF_ICMPEQ
    int IF_ICMPNE -> IF_ICMPNE
    int IF_ICMPLT -> IF_ICMPLT
    int IF_ICMPGE -> IF_ICMPGE
    int IF_ICMPGT -> IF_ICMPGT
    int IF_ICMPLE -> IF_ICMPLE
    int IF_ACMPEQ -> IF_ACMPEQ
    int IF_ACMPNE -> IF_ACMPNE
    int GOTO -> GOTO
    int JSR -> JSR
    int RET -> RET
    int IRETURN -> IRETURN
    int ARETURN -> ARETURN
    int RETURN -> RETURN
    int GETSTATIC -> GETSTATIC
    int PUTSTATIC -> PUTSTATIC
    int GETFIELD -> GETFIELD
    int PUTFIELD -> PUTFIELD
    int INVOKEVIRTUAL -> INVOKEVIRTUAL
    int INVOKESPECIAL -> INVOKESPECIAL
    int INVOKESTATIC -> INVOKESTATIC
    int INVOKEINTERFACE -> INVOKEINTERFACE
    int NEW -> NEW
    int CHECKCAST -> CHECKCAST
    int INSTANCEOF -> INSTANCEOF
    int IFNULL -> IFNULL
    int IFNONNULL -> IFNONNULL
com.alibaba.fastjson.asm.Type -> com.alibaba.fastjson.asm.Type:
    int VOID -> VOID
    int BOOLEAN -> BOOLEAN
    int CHAR -> CHAR
    int BYTE -> BYTE
    int SHORT -> SHORT
    int INT -> INT
    int FLOAT -> FLOAT
    int LONG -> LONG
    int DOUBLE -> DOUBLE
    int ARRAY -> ARRAY
    int OBJECT -> OBJECT
    com.alibaba.fastjson.asm.Type VOID_TYPE -> VOID_TYPE
    com.alibaba.fastjson.asm.Type BOOLEAN_TYPE -> BOOLEAN_TYPE
    com.alibaba.fastjson.asm.Type CHAR_TYPE -> CHAR_TYPE
    com.alibaba.fastjson.asm.Type BYTE_TYPE -> BYTE_TYPE
    com.alibaba.fastjson.asm.Type SHORT_TYPE -> SHORT_TYPE
    com.alibaba.fastjson.asm.Type INT_TYPE -> INT_TYPE
    com.alibaba.fastjson.asm.Type FLOAT_TYPE -> FLOAT_TYPE
    com.alibaba.fastjson.asm.Type LONG_TYPE -> LONG_TYPE
    com.alibaba.fastjson.asm.Type DOUBLE_TYPE -> DOUBLE_TYPE
    int sort -> sort
    char[] buf -> buf
    int off -> off
    int len -> len
    com.alibaba.fastjson.asm.Type getType(java.lang.String) -> getType
    int getArgumentsAndReturnSizes(java.lang.String) -> getArgumentsAndReturnSizes
    com.alibaba.fastjson.asm.Type getType(char[],int) -> getType
    int getSort() -> getSort
    java.lang.String getInternalName() -> getInternalName
    java.lang.String getDescriptor() -> getDescriptor
com.alibaba.fastjson.parser.AbstractJSONParser -> com.alibaba.fastjson.parser.AbstractJSONParser:
com.alibaba.fastjson.parser.CharTypes -> com.alibaba.fastjson.parser.CharTypes:
    char[] digits -> digits
    boolean[] firstIdentifierFlags -> firstIdentifierFlags
    boolean[] identifierFlags -> identifierFlags
    boolean[] specicalFlags_doubleQuotes -> specicalFlags_doubleQuotes
    boolean[] specicalFlags_singleQuotes -> specicalFlags_singleQuotes
    char[] replaceChars -> replaceChars
    char[] ASCII_CHARS -> ASCII_CHARS
    boolean isSpecial_doubleQuotes(char) -> isSpecial_doubleQuotes
com.alibaba.fastjson.parser.DefaultExtJSONParser -> com.alibaba.fastjson.parser.DefaultExtJSONParser:
com.alibaba.fastjson.parser.DefaultJSONParser -> com.alibaba.fastjson.parser.DefaultJSONParser:
    java.lang.Object input -> input
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> symbolTable
    com.alibaba.fastjson.parser.ParserConfig config -> config
    java.util.Set primitiveClasses -> primitiveClasses
    java.lang.String dateFormatPattern -> dateFormatPattern
    java.text.DateFormat dateFormat -> dateFormat
    com.alibaba.fastjson.parser.JSONLexer lexer -> lexer
    com.alibaba.fastjson.parser.ParseContext context -> context
    com.alibaba.fastjson.parser.ParseContext[] contextArray -> contextArray
    int contextArrayIndex -> contextArrayIndex
    java.util.List resolveTaskList -> resolveTaskList
    int NONE -> NONE
    int NeedToResolve -> NeedToResolve
    int TypeNameRedirect -> TypeNameRedirect
    int resolveStatus -> resolveStatus
    java.lang.String getDateFomartPattern() -> getDateFomartPattern
    java.text.DateFormat getDateFormat() -> getDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    void setDateFomrat(java.text.DateFormat) -> setDateFomrat
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    java.lang.String getInput() -> getInput
    java.lang.Object parseObject(java.util.Map,java.lang.Object) -> parseObject
    com.alibaba.fastjson.parser.ParserConfig getConfig() -> getConfig
    void setConfig(com.alibaba.fastjson.parser.ParserConfig) -> setConfig
    java.lang.Object parseObject(java.lang.Class) -> parseObject
    java.lang.Object parseObject(java.lang.reflect.Type) -> parseObject
    java.util.List parseArray(java.lang.Class) -> parseArray
    void parseArray(java.lang.Class,java.util.Collection) -> parseArray
    void parseArray(java.lang.reflect.Type,java.util.Collection) -> parseArray
    void parseArray(java.lang.reflect.Type,java.util.Collection,java.lang.Object) -> parseArray
    java.lang.Object[] parseArray(java.lang.reflect.Type[]) -> parseArray
    void parseObject(java.lang.Object) -> parseObject
    java.lang.Object parseArrayWithType(java.lang.reflect.Type) -> parseArrayWithType
    void acceptType(java.lang.String) -> acceptType
    int getResolveStatus() -> getResolveStatus
    void setResolveStatus(int) -> setResolveStatus
    java.lang.Object getObject(java.lang.String) -> getObject
    void checkListResolve(java.util.Collection) -> checkListResolve
    void checkMapResolve(java.util.Map,java.lang.String) -> checkMapResolve
    java.lang.Object parseObject(java.util.Map) -> parseObject
    com.alibaba.fastjson.JSONObject parseObject() -> parseObject
    void parseArray(java.util.Collection) -> parseArray
    void parseArray(java.util.Collection,java.lang.Object) -> parseArray
    com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    java.util.List getResolveTaskList() -> getResolveTaskList
    void addResolveTask(com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask) -> addResolveTask
    com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask getLastResolveTask() -> getLastResolveTask
    void setContext(com.alibaba.fastjson.parser.ParseContext) -> setContext
    void popContext() -> popContext
    com.alibaba.fastjson.parser.ParseContext setContext(java.lang.Object,java.lang.Object) -> setContext
    com.alibaba.fastjson.parser.ParseContext setContext(com.alibaba.fastjson.parser.ParseContext,java.lang.Object,java.lang.Object) -> setContext
    void addContext(com.alibaba.fastjson.parser.ParseContext) -> addContext
    java.lang.Object parse() -> parse
    java.lang.Object parseKey() -> parseKey
    java.lang.Object parse(java.lang.Object) -> parse
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    com.alibaba.fastjson.parser.JSONLexer getLexer() -> getLexer
    void accept(int) -> accept
    void accept(int,int) -> accept
    void close() -> close
com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask -> com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask:
    com.alibaba.fastjson.parser.ParseContext context -> context
    java.lang.String referenceValue -> referenceValue
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer fieldDeserializer -> fieldDeserializer
    com.alibaba.fastjson.parser.ParseContext ownerContext -> ownerContext
    com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    java.lang.String getReferenceValue() -> getReferenceValue
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer getFieldDeserializer() -> getFieldDeserializer
    void setFieldDeserializer(com.alibaba.fastjson.parser.deserializer.FieldDeserializer) -> setFieldDeserializer
    com.alibaba.fastjson.parser.ParseContext getOwnerContext() -> getOwnerContext
    void setOwnerContext(com.alibaba.fastjson.parser.ParseContext) -> setOwnerContext
com.alibaba.fastjson.parser.Feature -> com.alibaba.fastjson.parser.Feature:
    com.alibaba.fastjson.parser.Feature AutoCloseSource -> AutoCloseSource
    com.alibaba.fastjson.parser.Feature AllowComment -> AllowComment
    com.alibaba.fastjson.parser.Feature AllowUnQuotedFieldNames -> AllowUnQuotedFieldNames
    com.alibaba.fastjson.parser.Feature AllowSingleQuotes -> AllowSingleQuotes
    com.alibaba.fastjson.parser.Feature InternFieldNames -> InternFieldNames
    com.alibaba.fastjson.parser.Feature AllowISO8601DateFormat -> AllowISO8601DateFormat
    com.alibaba.fastjson.parser.Feature AllowArbitraryCommas -> AllowArbitraryCommas
    com.alibaba.fastjson.parser.Feature UseBigDecimal -> UseBigDecimal
    com.alibaba.fastjson.parser.Feature IgnoreNotMatch -> IgnoreNotMatch
    com.alibaba.fastjson.parser.Feature SortFeidFastMatch -> SortFeidFastMatch
    com.alibaba.fastjson.parser.Feature DisableASM -> DisableASM
    com.alibaba.fastjson.parser.Feature DisableCircularReferenceDetect -> DisableCircularReferenceDetect
    com.alibaba.fastjson.parser.Feature InitStringFieldAsEmpty -> InitStringFieldAsEmpty
    int mask -> mask
    com.alibaba.fastjson.parser.Feature[] $VALUES -> $VALUES
    com.alibaba.fastjson.parser.Feature[] values() -> values
    com.alibaba.fastjson.parser.Feature valueOf(java.lang.String) -> valueOf
    int getMask() -> getMask
    boolean isEnabled(int,com.alibaba.fastjson.parser.Feature) -> isEnabled
    int config(int,com.alibaba.fastjson.parser.Feature,boolean) -> config
com.alibaba.fastjson.parser.JSONLexer -> com.alibaba.fastjson.parser.JSONLexer:
    byte EOI -> EOI
    int NOT_MATCH -> NOT_MATCH
    int NOT_MATCH_NAME -> NOT_MATCH_NAME
    int UNKOWN -> UNKOWN
    int OBJECT -> OBJECT
    int ARRAY -> ARRAY
    int VALUE -> VALUE
    int END -> END
    int token -> token
    int pos -> pos
    int features -> features
    char ch -> ch
    int bp -> bp
    int eofPos -> eofPos
    char[] sbuf -> sbuf
    int sp -> sp
    int np -> np
    boolean hasSpecial -> hasSpecial
    java.util.Calendar calendar -> calendar
    int matchStat -> matchStat
    java.lang.ThreadLocal SBUF_REF_LOCAL -> SBUF_REF_LOCAL
    com.alibaba.fastjson.parser.Keywords keywods -> keywods
    char[] typeFieldName -> typeFieldName
    boolean[] whitespaceFlags -> whitespaceFlags
    long MULTMIN_RADIX_TEN -> MULTMIN_RADIX_TEN
    long N_MULTMAX_RADIX_TEN -> N_MULTMAX_RADIX_TEN
    int INT_MULTMIN_RADIX_TEN -> INT_MULTMIN_RADIX_TEN
    int INT_N_MULTMAX_RADIX_TEN -> INT_N_MULTMAX_RADIX_TEN
    int[] digits -> digits
    void lexError(java.lang.String,java.lang.Object[]) -> lexError
    int matchStat() -> matchStat
    void nextToken() -> nextToken
    void nextToken(int) -> nextToken
    void nextIdent() -> nextIdent
    void nextTokenWithColon() -> nextTokenWithColon
    int token() -> token
    java.lang.String tokenName() -> tokenName
    int pos() -> pos
    int getBufferPosition() -> getBufferPosition
    java.lang.String stringDefaultValue() -> stringDefaultValue
    java.lang.Number integerValue() -> integerValue
    void nextTokenWithColon(int) -> nextTokenWithColon
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    java.lang.String numberString() -> numberString
    boolean isEOF() -> isEOF
    char getCurrent() -> getCurrent
    char charAt(int) -> charAt
    char next() -> next
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbol
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable,char) -> scanSymbol
    void resetStringPosition() -> resetStringPosition
    java.lang.String scanSymbolUnQuoted(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbolUnQuoted
    void copyTo(int,int,char[]) -> copyTo
    void scanString() -> scanString
    java.util.Calendar getCalendar() -> getCalendar
    int intValue() -> intValue
    byte[] bytesValue() -> bytesValue
    void close() -> close
    boolean isRef() -> isRef
    int scanType(java.lang.String) -> scanType
    boolean matchField(char[]) -> matchField
    int indexOf(char,int) -> indexOf
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    java.lang.String scanFieldString(char[]) -> scanFieldString
    java.lang.String scanFieldSymbol(char[],com.alibaba.fastjson.parser.SymbolTable) -> scanFieldSymbol
    java.util.Collection scanFieldStringArray(char[],java.lang.Class) -> scanFieldStringArray
    int scanFieldInt(char[]) -> scanFieldInt
    boolean scanFieldBoolean(char[]) -> scanFieldBoolean
    long scanFieldLong(char[]) -> scanFieldLong
    float scanFieldFloat(char[]) -> scanFieldFloat
    double scanFieldDouble(char[]) -> scanFieldDouble
    void scanTrue() -> scanTrue
    void scanTreeSet() -> scanTreeSet
    void scanNullOrNew() -> scanNullOrNew
    void scanFalse() -> scanFalse
    void scanIdent() -> scanIdent
    java.lang.String stringVal() -> stringVal
    java.lang.String subString(int,int) -> subString
    boolean charArrayCompare(char[]) -> charArrayCompare
    boolean isBlankInput() -> isBlankInput
    void skipWhitespace() -> skipWhitespace
    void scanStringSingleQuote() -> scanStringSingleQuote
    void scanSet() -> scanSet
    void putChar(char) -> putChar
    void scanNumber() -> scanNumber
    long longValue() -> longValue
    java.lang.Number decimalValue(boolean) -> decimalValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.lang.Number numberValue() -> numberValue
    boolean isWhitespace(char) -> isWhitespace
com.alibaba.fastjson.parser.JSONReaderScanner -> com.alibaba.fastjson.parser.JSONReaderScanner:
    int BUF_INIT_LEN -> BUF_INIT_LEN
    java.lang.ThreadLocal BUF_REF_LOCAL -> BUF_REF_LOCAL
    java.io.Reader reader -> reader
    char[] buf -> buf
    int bufLength -> bufLength
    char charAt(int) -> charAt
    int indexOf(char,int) -> indexOf
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    char next() -> next
    void copyTo(int,int,char[]) -> copyTo
    boolean charArrayCompare(char[]) -> charArrayCompare
    byte[] bytesValue() -> bytesValue
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String stringVal() -> stringVal
    java.lang.String subString(int,int) -> subString
    java.lang.String numberString() -> numberString
    void close() -> close
    boolean isEOF() -> isEOF
com.alibaba.fastjson.parser.JSONScanner -> com.alibaba.fastjson.parser.JSONScanner:
    java.lang.String text -> text
    int ISO8601_LEN_0 -> ISO8601_LEN_0
    int ISO8601_LEN_1 -> ISO8601_LEN_1
    int ISO8601_LEN_2 -> ISO8601_LEN_2
    char charAt(int) -> charAt
    char next() -> next
    void copyTo(int,int,char[]) -> copyTo
    boolean charArrayCompare(java.lang.String,int,char[]) -> charArrayCompare
    boolean charArrayCompare(char[]) -> charArrayCompare
    int indexOf(char,int) -> indexOf
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    byte[] bytesValue() -> bytesValue
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String stringVal() -> stringVal
    java.lang.String subString(int,int) -> subString
    java.lang.String numberString() -> numberString
    boolean scanISO8601DateIfMatch() -> scanISO8601DateIfMatch
    boolean scanISO8601DateIfMatch(boolean) -> scanISO8601DateIfMatch
    boolean checkTime(char,char,char,char,char,char) -> checkTime
    void setCalendar(char,char,char,char,char,char,char,char) -> setCalendar
    boolean checkDate(char,char,char,char,char,char,int,int) -> checkDate
    boolean isEOF() -> isEOF
com.alibaba.fastjson.parser.JSONToken -> com.alibaba.fastjson.parser.JSONToken:
    int ERROR -> ERROR
    int LITERAL_INT -> LITERAL_INT
    int LITERAL_FLOAT -> LITERAL_FLOAT
    int LITERAL_STRING -> LITERAL_STRING
    int LITERAL_ISO8601_DATE -> LITERAL_ISO8601_DATE
    int TRUE -> TRUE
    int FALSE -> FALSE
    int NULL -> NULL
    int NEW -> NEW
    int LPAREN -> LPAREN
    int RPAREN -> RPAREN
    int LBRACE -> LBRACE
    int RBRACE -> RBRACE
    int LBRACKET -> LBRACKET
    int RBRACKET -> RBRACKET
    int COMMA -> COMMA
    int COLON -> COLON
    int IDENTIFIER -> IDENTIFIER
    int FIELD_NAME -> FIELD_NAME
    int EOF -> EOF
    int SET -> SET
    int TREE_SET -> TREE_SET
    java.lang.String name(int) -> name
com.alibaba.fastjson.parser.JavaBeanMapping -> com.alibaba.fastjson.parser.JavaBeanMapping:
    com.alibaba.fastjson.parser.JavaBeanMapping instance -> instance
    com.alibaba.fastjson.parser.JavaBeanMapping getGlobalInstance() -> getGlobalInstance
com.alibaba.fastjson.parser.Keywords -> com.alibaba.fastjson.parser.Keywords:
    java.util.Map keywords -> keywords
    com.alibaba.fastjson.parser.Keywords DEFAULT_KEYWORDS -> DEFAULT_KEYWORDS
    java.lang.Integer getKeyword(java.lang.String) -> getKeyword
com.alibaba.fastjson.parser.ParseContext -> com.alibaba.fastjson.parser.ParseContext:
    java.lang.Object object -> object
    com.alibaba.fastjson.parser.ParseContext parent -> parent
    java.lang.Object fieldName -> fieldName
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type getType() -> getType
    void setType(java.lang.reflect.Type) -> setType
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
    com.alibaba.fastjson.parser.ParseContext getParentContext() -> getParentContext
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
com.alibaba.fastjson.parser.ParserConfig -> com.alibaba.fastjson.parser.ParserConfig:
    java.util.Set primitiveClasses -> primitiveClasses
    com.alibaba.fastjson.parser.ParserConfig global -> global
    com.alibaba.fastjson.util.IdentityHashMap derializers -> derializers
    boolean asmEnable -> asmEnable
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> symbolTable
    com.alibaba.fastjson.parser.ParserConfig getGlobalInstance() -> getGlobalInstance
    boolean isAsmEnable() -> isAsmEnable
    void setAsmEnable(boolean) -> setAsmEnable
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    com.alibaba.fastjson.util.IdentityHashMap getDerializers() -> getDerializers
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.reflect.Type) -> getDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.Class,java.lang.reflect.Type) -> getDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer createJavaBeanDeserializer(java.lang.Class,java.lang.reflect.Type) -> createJavaBeanDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializerWithoutASM(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializerWithoutASM
    void putDeserializer(java.lang.reflect.Type,com.alibaba.fastjson.parser.deserializer.ObjectDeserializer) -> putDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(com.alibaba.fastjson.util.FieldInfo) -> getDeserializer
    boolean isPrimitive(java.lang.Class) -> isPrimitive
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getField0(java.lang.Class,java.lang.String) -> getField0
    java.util.Map getFieldDeserializers(java.lang.Class) -> getFieldDeserializers
com.alibaba.fastjson.parser.SymbolTable -> com.alibaba.fastjson.parser.SymbolTable:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_BUCKET_LENTH -> MAX_BUCKET_LENTH
    int MAX_SIZE -> MAX_SIZE
    com.alibaba.fastjson.parser.SymbolTable$Entry[] buckets -> buckets
    java.lang.String[] symbols -> symbols
    char[][] symbols_char -> symbols_char
    int indexMask -> indexMask
    int size -> size
    java.lang.String addSymbol(char[],int,int) -> addSymbol
    java.lang.String addSymbol(char[],int,int,int) -> addSymbol
    java.lang.String addSymbol(java.lang.String,int,int,int) -> addSymbol
    int size() -> size
    int hash(char[],int,int) -> hash
com.alibaba.fastjson.parser.SymbolTable$Entry -> com.alibaba.fastjson.parser.SymbolTable$Entry:
    java.lang.String symbol -> symbol
    int hashCode -> hashCode
    char[] characters -> characters
    byte[] bytes -> bytes
    com.alibaba.fastjson.parser.SymbolTable$Entry next -> next
com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory -> com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory:
    com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory instance -> instance
    com.alibaba.fastjson.util.ASMClassLoader classLoader -> classLoader
    java.util.concurrent.atomic.AtomicLong seed -> seed
    java.lang.String getGenClassName(java.lang.Class) -> getGenClassName
    java.lang.String getGenFieldDeserializer(java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> getGenFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory getInstance() -> getInstance
    boolean isExternalClass(java.lang.Class) -> isExternalClass
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer createJavaBeanDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,java.lang.reflect.Type) -> createJavaBeanDeserializer
    void _setFlag(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,int) -> _setFlag
    void _isFlag(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,int,com.alibaba.fastjson.asm.Label) -> _isFlag
    void _deserialze(com.alibaba.fastjson.asm.ClassWriter,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context) -> _deserialze
    void _batchSet(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor) -> _batchSet
    void _batchSetInvoke(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo) -> _batchSetInvoke
    void _setContext(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor) -> _setContext
    void _deserialize_endCheck(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.asm.Label) -> _deserialize_endCheck
    void _deserialze_list_obj(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.asm.Label,com.alibaba.fastjson.util.FieldInfo,java.lang.Class,java.lang.Class,int) -> _deserialze_list_obj
    void _deserialze_obj(com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.asm.Label,com.alibaba.fastjson.util.FieldInfo,java.lang.Class,int) -> _deserialze_obj
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createStringFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createStringFieldDeserializer
    void _init(com.alibaba.fastjson.asm.ClassWriter,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context) -> _init
    void _createInstance(com.alibaba.fastjson.asm.ClassWriter,com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context) -> _createInstance
com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context -> com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory$Context:
    int variantIndex -> variantIndex
    java.util.Map variants -> variants
    java.lang.Class clazz -> clazz
    com.alibaba.fastjson.util.DeserializeBeanInfo beanInfo -> beanInfo
    java.lang.String className -> className
    java.util.List fieldInfoList -> fieldInfoList
    java.lang.String getClassName() -> getClassName
    java.util.List getFieldInfoList() -> getFieldInfoList
    com.alibaba.fastjson.util.DeserializeBeanInfo getBeanInfo() -> getBeanInfo
    java.lang.Class getClazz() -> getClazz
    int getVariantCount() -> getVariantCount
    int var(java.lang.String,int) -> var
    int var(java.lang.String) -> var
com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer -> com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer:
    com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$InnerJavaBeanDeserializer serializer -> serializer
    java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type) -> createInstance
    com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$InnerJavaBeanDeserializer getInnterSerializer() -> getInnterSerializer
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
    java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser) -> createInstance
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer getFieldDeserializer(java.lang.String) -> getFieldDeserializer
    java.lang.reflect.Type getFieldType(java.lang.String) -> getFieldType
    boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    java.lang.Object parseRest(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> parseRest
com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$1 -> com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$1:
com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$InnerJavaBeanDeserializer -> com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer$InnerJavaBeanDeserializer:
    com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer this$0 -> this$0
    boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer -> com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
com.alibaba.fastjson.parser.deserializer.ArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.ArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object toObjectArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Class,com.alibaba.fastjson.JSONArray) -> toObjectArray
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer:
    java.lang.reflect.Type itemType -> itemType
    int itemFastMatchToken -> itemFastMatchToken
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer deserializer -> deserializer
    int getFastMatchToken() -> getFastMatchToken
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    void parseArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.util.Collection) -> parseArray
com.alibaba.fastjson.parser.deserializer.AtomicIntegerArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.AtomicIntegerArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.AtomicIntegerArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.AtomicLongArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.AtomicLongArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.AtomicLongArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.AutowiredObjectDeserializer:
    java.util.Set getAutowiredFor() -> getAutowiredFor
com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer -> com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer:
    com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer -> com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer:
    com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BooleanDeserializer -> com.alibaba.fastjson.parser.deserializer.BooleanDeserializer:
    com.alibaba.fastjson.parser.deserializer.BooleanDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CalendarDeserializer -> com.alibaba.fastjson.parser.deserializer.CalendarDeserializer:
    com.alibaba.fastjson.parser.deserializer.CalendarDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharacterDeserializer -> com.alibaba.fastjson.parser.deserializer.CharacterDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharacterDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharsetDeserializer -> com.alibaba.fastjson.parser.deserializer.CharsetDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharsetDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ClassDerializer -> com.alibaba.fastjson.parser.deserializer.ClassDerializer:
    com.alibaba.fastjson.parser.deserializer.ClassDerializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CollectionDeserializer -> com.alibaba.fastjson.parser.deserializer.CollectionDeserializer:
    com.alibaba.fastjson.parser.deserializer.CollectionDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Class getRawClass(java.lang.reflect.Type) -> getRawClass
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ColorDeserializer -> com.alibaba.fastjson.parser.deserializer.ColorDeserializer:
    com.alibaba.fastjson.parser.deserializer.ColorDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DateDeserializer -> com.alibaba.fastjson.parser.deserializer.DateDeserializer:
    com.alibaba.fastjson.parser.deserializer.DateDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer -> com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer:
    com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.EnumDeserializer -> com.alibaba.fastjson.parser.deserializer.EnumDeserializer:
    java.lang.Class enumClass -> enumClass
    java.util.Map ordinalMap -> ordinalMap
    java.util.Map nameMap -> nameMap
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.FieldDeserializer -> com.alibaba.fastjson.parser.deserializer.FieldDeserializer:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> fieldInfo
    java.lang.Class clazz -> clazz
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.reflect.Field getField() -> getField
    java.lang.Class getFieldClass() -> getFieldClass
    java.lang.reflect.Type getFieldType() -> getFieldType
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
    void setValue(java.lang.Object,boolean) -> setValue
    void setValue(java.lang.Object,int) -> setValue
    void setValue(java.lang.Object,long) -> setValue
    void setValue(java.lang.Object,java.lang.String) -> setValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
com.alibaba.fastjson.parser.deserializer.FileDeserializer -> com.alibaba.fastjson.parser.deserializer.FileDeserializer:
    com.alibaba.fastjson.parser.deserializer.FileDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.FloatDeserializer -> com.alibaba.fastjson.parser.deserializer.FloatDeserializer:
    com.alibaba.fastjson.parser.deserializer.FloatDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.FontDeserializer -> com.alibaba.fastjson.parser.deserializer.FontDeserializer:
    com.alibaba.fastjson.parser.deserializer.FontDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer -> com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer:
    com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer -> com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer:
    com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.IntegerDeserializer -> com.alibaba.fastjson.parser.deserializer.IntegerDeserializer:
    com.alibaba.fastjson.parser.deserializer.IntegerDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer:
    com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer:
    java.util.Map feildDeserializerMap -> feildDeserializerMap
    java.util.List fieldDeserializers -> fieldDeserializers
    java.lang.Class clazz -> clazz
    com.alibaba.fastjson.util.DeserializeBeanInfo beanInfo -> beanInfo
    java.util.Map getFieldDeserializerMap() -> getFieldDeserializerMap
    java.lang.Class getClazz() -> getClazz
    void addFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> addFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type) -> createInstance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> deserialze
    boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer:
    com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer:
    int index -> index
    java.util.List list -> list
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> parser
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.LocaleDeserializer -> com.alibaba.fastjson.parser.deserializer.LocaleDeserializer:
    com.alibaba.fastjson.parser.deserializer.LocaleDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.LongDeserializer -> com.alibaba.fastjson.parser.deserializer.LongDeserializer:
    com.alibaba.fastjson.parser.deserializer.LongDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.MapDeserializer -> com.alibaba.fastjson.parser.deserializer.MapDeserializer:
    com.alibaba.fastjson.parser.deserializer.MapDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.util.Map) -> deserialze
    java.util.Map parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.Object) -> parseMap
    java.lang.Object parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Object) -> parseMap
    java.util.Map createMap(java.lang.reflect.Type) -> createMap
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer:
    java.lang.String key -> key
    java.util.Map map -> map
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.NumberDeserializer -> com.alibaba.fastjson.parser.deserializer.NumberDeserializer:
    com.alibaba.fastjson.parser.deserializer.NumberDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.ObjectDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.PatternDeserializer -> com.alibaba.fastjson.parser.deserializer.PatternDeserializer:
    com.alibaba.fastjson.parser.deserializer.PatternDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.PointDeserializer -> com.alibaba.fastjson.parser.deserializer.PointDeserializer:
    com.alibaba.fastjson.parser.deserializer.PointDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.RectangleDeserializer -> com.alibaba.fastjson.parser.deserializer.RectangleDeserializer:
    com.alibaba.fastjson.parser.deserializer.RectangleDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer -> com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer:
    com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer -> com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer:
    com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer -> com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer:
    com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StringDeserializer -> com.alibaba.fastjson.parser.deserializer.StringDeserializer:
    com.alibaba.fastjson.parser.deserializer.StringDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer -> com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Throwable createException(java.lang.String,java.lang.Throwable,java.lang.Class) -> createException
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimeDeserializer -> com.alibaba.fastjson.parser.deserializer.TimeDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimeDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer -> com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimestampDeserializer -> com.alibaba.fastjson.parser.deserializer.TimestampDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimestampDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.URIDeserializer -> com.alibaba.fastjson.parser.deserializer.URIDeserializer:
    com.alibaba.fastjson.parser.deserializer.URIDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.URLDeserializer -> com.alibaba.fastjson.parser.deserializer.URLDeserializer:
    com.alibaba.fastjson.parser.deserializer.URLDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.UUIDDeserializer -> com.alibaba.fastjson.parser.deserializer.UUIDDeserializer:
    com.alibaba.fastjson.parser.deserializer.UUIDDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.ASMSerializerFactory -> com.alibaba.fastjson.serializer.ASMSerializerFactory:
    com.alibaba.fastjson.util.ASMClassLoader classLoader -> classLoader
    java.util.concurrent.atomic.AtomicLong seed -> seed
    com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class) -> createJavaBeanSerializer
    java.lang.String getGenClassName(java.lang.Class) -> getGenClassName
    boolean isExternalClass(java.lang.Class) -> isExternalClass
    com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class,java.util.Map) -> createJavaBeanSerializer
    void generateWriteMethod(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,java.util.List,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> generateWriteMethod
    void initNature(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> initNature
    void _object(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _object
    void _enum(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _enum
    void _long(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _long
    void _float(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _float
    void _double(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _double
    void _char(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _char
    void _boolean(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _boolean
    void _get(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context,com.alibaba.fastjson.util.FieldInfo) -> _get
    void _byte(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _byte
    void _short(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _short
    void _int(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _int
    void _decimal(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _decimal
    void _string(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _string
    void _list(java.lang.Class,com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _list
    void _filters(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context,com.alibaba.fastjson.asm.Label) -> _filters
    void _nameApply(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context,com.alibaba.fastjson.asm.Label) -> _nameApply
    void _writeObject(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context,com.alibaba.fastjson.asm.Label) -> _writeObject
    void _apply(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _apply
    void _processValue(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _processValue
    void _processKey(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _processKey
    void _if_write_null(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.util.FieldInfo,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _if_write_null
    void _seperator(com.alibaba.fastjson.asm.MethodVisitor,com.alibaba.fastjson.serializer.ASMSerializerFactory$Context) -> _seperator
com.alibaba.fastjson.serializer.ASMSerializerFactory$Context -> com.alibaba.fastjson.serializer.ASMSerializerFactory$Context:
    java.lang.String className -> className
    int variantIndex -> variantIndex
    java.util.Map variants -> variants
    int serializer() -> serializer
    java.lang.String getClassName() -> getClassName
    int obj() -> obj
    int paramFieldName() -> paramFieldName
    int paramFieldType() -> paramFieldType
    int fieldName() -> fieldName
    int original() -> original
    int processValue() -> processValue
    int getVariantCount() -> getVariantCount
    int var(java.lang.String) -> var
    int var(java.lang.String,int) -> var
com.alibaba.fastjson.serializer.AppendableSerializer -> com.alibaba.fastjson.serializer.AppendableSerializer:
    com.alibaba.fastjson.serializer.AppendableSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ArraySerializer -> com.alibaba.fastjson.serializer.ArraySerializer:
    java.lang.Class componentType -> componentType
    com.alibaba.fastjson.serializer.ObjectSerializer compObjectSerializer -> compObjectSerializer
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicBooleanSerializer -> com.alibaba.fastjson.serializer.AtomicBooleanSerializer:
    com.alibaba.fastjson.serializer.AtomicBooleanSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer -> com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer:
    com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicIntegerSerializer -> com.alibaba.fastjson.serializer.AtomicIntegerSerializer:
    com.alibaba.fastjson.serializer.AtomicIntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicLongArraySerializer -> com.alibaba.fastjson.serializer.AtomicLongArraySerializer:
    com.alibaba.fastjson.serializer.AtomicLongArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicLongSerializer -> com.alibaba.fastjson.serializer.AtomicLongSerializer:
    com.alibaba.fastjson.serializer.AtomicLongSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AutowiredObjectSerializer -> com.alibaba.fastjson.serializer.AutowiredObjectSerializer:
    java.util.Set getAutowiredFor() -> getAutowiredFor
com.alibaba.fastjson.serializer.BigDecimalSerializer -> com.alibaba.fastjson.serializer.BigDecimalSerializer:
    com.alibaba.fastjson.serializer.BigDecimalSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BigIntegerSerializer -> com.alibaba.fastjson.serializer.BigIntegerSerializer:
    com.alibaba.fastjson.serializer.BigIntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanArraySerializer -> com.alibaba.fastjson.serializer.BooleanArraySerializer:
    com.alibaba.fastjson.serializer.BooleanArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanSerializer -> com.alibaba.fastjson.serializer.BooleanSerializer:
    com.alibaba.fastjson.serializer.BooleanSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ByteArraySerializer -> com.alibaba.fastjson.serializer.ByteArraySerializer:
    com.alibaba.fastjson.serializer.ByteArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ByteSerializer -> com.alibaba.fastjson.serializer.ByteSerializer:
    com.alibaba.fastjson.serializer.ByteSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CalendarSerializer -> com.alibaba.fastjson.serializer.CalendarSerializer:
    com.alibaba.fastjson.serializer.CalendarSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharArraySerializer -> com.alibaba.fastjson.serializer.CharArraySerializer:
    com.alibaba.fastjson.serializer.CharArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharacterSerializer -> com.alibaba.fastjson.serializer.CharacterSerializer:
    com.alibaba.fastjson.serializer.CharacterSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharsetSerializer -> com.alibaba.fastjson.serializer.CharsetSerializer:
    com.alibaba.fastjson.serializer.CharsetSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ClassSerializer -> com.alibaba.fastjson.serializer.ClassSerializer:
    com.alibaba.fastjson.serializer.ClassSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ClobSeriliazer -> com.alibaba.fastjson.serializer.ClobSeriliazer:
    com.alibaba.fastjson.serializer.ClobSeriliazer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CollectionSerializer -> com.alibaba.fastjson.serializer.CollectionSerializer:
    com.alibaba.fastjson.serializer.CollectionSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ColorSerializer -> com.alibaba.fastjson.serializer.ColorSerializer:
    com.alibaba.fastjson.serializer.ColorSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateFormatSerializer -> com.alibaba.fastjson.serializer.DateFormatSerializer:
    com.alibaba.fastjson.serializer.DateFormatSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateSerializer -> com.alibaba.fastjson.serializer.DateSerializer:
    com.alibaba.fastjson.serializer.DateSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleArraySerializer -> com.alibaba.fastjson.serializer.DoubleArraySerializer:
    com.alibaba.fastjson.serializer.DoubleArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleSerializer -> com.alibaba.fastjson.serializer.DoubleSerializer:
    com.alibaba.fastjson.serializer.DoubleSerializer instance -> instance
    java.text.DecimalFormat decimalFormat -> decimalFormat
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumSerializer -> com.alibaba.fastjson.serializer.EnumSerializer:
    com.alibaba.fastjson.serializer.EnumSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumerationSeriliazer -> com.alibaba.fastjson.serializer.EnumerationSeriliazer:
    com.alibaba.fastjson.serializer.EnumerationSeriliazer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ExceptionSerializer -> com.alibaba.fastjson.serializer.ExceptionSerializer:
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
com.alibaba.fastjson.serializer.FieldSerializer -> com.alibaba.fastjson.serializer.FieldSerializer:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> fieldInfo
    java.lang.String double_quoted_fieldPrefix -> double_quoted_fieldPrefix
    java.lang.String single_quoted_fieldPrefix -> single_quoted_fieldPrefix
    java.lang.String un_quoted_fieldPrefix -> un_quoted_fieldPrefix
    boolean writeNull -> writeNull
    boolean isWriteNull() -> isWriteNull
    java.lang.reflect.Field getField() -> getField
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
    void writePrefix(com.alibaba.fastjson.serializer.JSONSerializer) -> writePrefix
    java.lang.Object getPropertyValue(java.lang.Object) -> getPropertyValue
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.FileSerializer -> com.alibaba.fastjson.serializer.FileSerializer:
    com.alibaba.fastjson.serializer.FileSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FilterUtils -> com.alibaba.fastjson.serializer.FilterUtils:
    java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processValue
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,byte) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,short) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,int) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,long) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,float) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,double) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,boolean) -> processKey
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,char) -> processKey
    boolean applyName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> applyName
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,byte) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,short) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,int) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,char) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,long) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,float) -> apply
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,double) -> apply
com.alibaba.fastjson.serializer.FloatArraySerializer -> com.alibaba.fastjson.serializer.FloatArraySerializer:
    com.alibaba.fastjson.serializer.FloatArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FloatSerializer -> com.alibaba.fastjson.serializer.FloatSerializer:
    com.alibaba.fastjson.serializer.FloatSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FontSerializer -> com.alibaba.fastjson.serializer.FontSerializer:
    com.alibaba.fastjson.serializer.FontSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.InetAddressSerializer -> com.alibaba.fastjson.serializer.InetAddressSerializer:
    com.alibaba.fastjson.serializer.InetAddressSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.InetSocketAddressSerializer -> com.alibaba.fastjson.serializer.InetSocketAddressSerializer:
    com.alibaba.fastjson.serializer.InetSocketAddressSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntArraySerializer -> com.alibaba.fastjson.serializer.IntArraySerializer:
    com.alibaba.fastjson.serializer.IntArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntegerSerializer -> com.alibaba.fastjson.serializer.IntegerSerializer:
    com.alibaba.fastjson.serializer.IntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONAwareSerializer -> com.alibaba.fastjson.serializer.JSONAwareSerializer:
    com.alibaba.fastjson.serializer.JSONAwareSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer -> com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONSerializer -> com.alibaba.fastjson.serializer.JSONSerializer:
    com.alibaba.fastjson.serializer.SerializeConfig config -> config
    com.alibaba.fastjson.serializer.SerializeWriter out -> out
    java.util.List propertyFilters -> propertyFilters
    java.util.List valueFilters -> valueFilters
    java.util.List nameFilters -> nameFilters
    java.util.List propertyPreFilters -> propertyPreFilters
    int indentCount -> indentCount
    java.lang.String indent -> indent
    java.lang.String dateFormatPattern -> dateFormatPattern
    java.text.DateFormat dateFormat -> dateFormat
    java.util.IdentityHashMap references -> references
    com.alibaba.fastjson.serializer.SerialContext context -> context
    java.lang.String getDateFormatPattern() -> getDateFormatPattern
    java.text.DateFormat getDateFormat() -> getDateFormat
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    com.alibaba.fastjson.serializer.SerialContext getContext() -> getContext
    void setContext(com.alibaba.fastjson.serializer.SerialContext) -> setContext
    void setContext(com.alibaba.fastjson.serializer.SerialContext,java.lang.Object,java.lang.Object) -> setContext
    void setContext(java.lang.Object,java.lang.Object) -> setContext
    void popContext() -> popContext
    boolean isWriteClassName(java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    com.alibaba.fastjson.serializer.SerialContext getSerialContext(java.lang.Object) -> getSerialContext
    boolean containsReference(java.lang.Object) -> containsReference
    void writeReference(java.lang.Object) -> writeReference
    java.util.List getValueFilters() -> getValueFilters
    java.util.List getValueFiltersDirect() -> getValueFiltersDirect
    int getIndentCount() -> getIndentCount
    void incrementIndent() -> incrementIndent
    void decrementIdent() -> decrementIdent
    void println() -> println
    java.util.List getNameFilters() -> getNameFilters
    java.util.List getNameFiltersDirect() -> getNameFiltersDirect
    java.util.List getPropertyPreFilters() -> getPropertyPreFilters
    java.util.List getPropertyPreFiltersDirect() -> getPropertyPreFiltersDirect
    java.util.List getPropertyFilters() -> getPropertyFilters
    java.util.List getPropertyFiltersDirect() -> getPropertyFiltersDirect
    com.alibaba.fastjson.serializer.SerializeWriter getWriter() -> getWriter
    java.lang.String toString() -> toString
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    void writeNull() -> writeNull
    com.alibaba.fastjson.serializer.SerializeConfig getMapping() -> getMapping
    void write(java.io.Writer,java.lang.Object) -> write
    void write(com.alibaba.fastjson.serializer.SerializeWriter,java.lang.Object) -> write
    void write(java.lang.Object) -> write
    void writeWithFieldName(java.lang.Object,java.lang.Object) -> writeWithFieldName
    void writeWithFieldName(java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> writeWithFieldName
    void writeWithFormat(java.lang.Object,java.lang.String) -> writeWithFormat
    void write(java.lang.String) -> write
    com.alibaba.fastjson.serializer.ObjectSerializer getObjectWriter(java.lang.Class) -> getObjectWriter
    void close() -> close
com.alibaba.fastjson.serializer.JSONSerializerContext -> com.alibaba.fastjson.serializer.JSONSerializerContext:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    com.alibaba.fastjson.serializer.JSONSerializerContext$Entry[] buckets -> buckets
    int indexMask -> indexMask
    boolean put(java.lang.Object) -> put
com.alibaba.fastjson.serializer.JSONSerializerContext$Entry -> com.alibaba.fastjson.serializer.JSONSerializerContext$Entry:
    int hashCode -> hashCode
    java.lang.Object object -> object
    com.alibaba.fastjson.serializer.JSONSerializerContext$Entry next -> next
com.alibaba.fastjson.serializer.JSONSerializerMap -> com.alibaba.fastjson.serializer.JSONSerializerMap:
    boolean put(java.lang.Class,com.alibaba.fastjson.serializer.ObjectSerializer) -> put
com.alibaba.fastjson.serializer.JSONStreamAwareSerializer -> com.alibaba.fastjson.serializer.JSONStreamAwareSerializer:
    com.alibaba.fastjson.serializer.JSONStreamAwareSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JavaBeanSerializer -> com.alibaba.fastjson.serializer.JavaBeanSerializer:
    com.alibaba.fastjson.serializer.FieldSerializer[] getters -> getters
    com.alibaba.fastjson.serializer.FieldSerializer[] sortedGetters -> sortedGetters
    com.alibaba.fastjson.serializer.FieldSerializer[] getGetters() -> getGetters
    java.util.Map createAliasMap(java.lang.String[]) -> createAliasMap
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    void writeReference(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeReference
    com.alibaba.fastjson.serializer.FieldSerializer createFieldSerializer(com.alibaba.fastjson.util.FieldInfo) -> createFieldSerializer
com.alibaba.fastjson.serializer.ListSerializer -> com.alibaba.fastjson.serializer.ListSerializer:
    com.alibaba.fastjson.serializer.ListSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LocaleSerializer -> com.alibaba.fastjson.serializer.LocaleSerializer:
    com.alibaba.fastjson.serializer.LocaleSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongArraySerializer -> com.alibaba.fastjson.serializer.LongArraySerializer:
    com.alibaba.fastjson.serializer.LongArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongSerializer -> com.alibaba.fastjson.serializer.LongSerializer:
    com.alibaba.fastjson.serializer.LongSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.MapSerializer -> com.alibaba.fastjson.serializer.MapSerializer:
    com.alibaba.fastjson.serializer.MapSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.NameFilter -> com.alibaba.fastjson.serializer.NameFilter:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.NumberFieldSerializer -> com.alibaba.fastjson.serializer.NumberFieldSerializer:
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.ObjectArraySerializer -> com.alibaba.fastjson.serializer.ObjectArraySerializer:
    com.alibaba.fastjson.serializer.ObjectArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ObjectFieldSerializer -> com.alibaba.fastjson.serializer.ObjectFieldSerializer:
    com.alibaba.fastjson.serializer.ObjectSerializer fieldSerializer -> fieldSerializer
    java.lang.Class runtimeFieldClass -> runtimeFieldClass
    java.lang.String format -> format
    boolean writeNumberAsZero -> writeNumberAsZero
    boolean writeNullStringAsEmpty -> writeNullStringAsEmpty
    boolean writeNullBooleanAsFalse -> writeNullBooleanAsFalse
    boolean writeNullListAsEmpty -> writeNullListAsEmpty
    boolean writeEnumUsingToString -> writeEnumUsingToString
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.ObjectSerializer -> com.alibaba.fastjson.serializer.ObjectSerializer:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.PascalNameFilter -> com.alibaba.fastjson.serializer.PascalNameFilter:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.PatternSerializer -> com.alibaba.fastjson.serializer.PatternSerializer:
    com.alibaba.fastjson.serializer.PatternSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.PointSerializer -> com.alibaba.fastjson.serializer.PointSerializer:
    com.alibaba.fastjson.serializer.PointSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.PropertyFilter -> com.alibaba.fastjson.serializer.PropertyFilter:
    boolean apply(java.lang.Object,java.lang.String,java.lang.Object) -> apply
com.alibaba.fastjson.serializer.PropertyPreFilter -> com.alibaba.fastjson.serializer.PropertyPreFilter:
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
com.alibaba.fastjson.serializer.RectangleSerializer -> com.alibaba.fastjson.serializer.RectangleSerializer:
    com.alibaba.fastjson.serializer.RectangleSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ReferenceSerializer -> com.alibaba.fastjson.serializer.ReferenceSerializer:
    com.alibaba.fastjson.serializer.ReferenceSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SerialContext -> com.alibaba.fastjson.serializer.SerialContext:
    com.alibaba.fastjson.serializer.SerialContext parent -> parent
    java.lang.Object object -> object
    java.lang.Object fieldName -> fieldName
    com.alibaba.fastjson.serializer.SerialContext getParent() -> getParent
    java.lang.Object getObject() -> getObject
    java.lang.Object getFieldName() -> getFieldName
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
com.alibaba.fastjson.serializer.SerialWriterStringEncoder -> com.alibaba.fastjson.serializer.SerialWriterStringEncoder:
    java.nio.charset.CharsetEncoder encoder -> encoder
    byte[] encode(char[],int,int) -> encode
    java.nio.charset.CharsetEncoder getEncoder() -> getEncoder
    byte[] encode(char[],int,int,byte[]) -> encode
    int scale(int,float) -> scale
com.alibaba.fastjson.serializer.SerializeConfig -> com.alibaba.fastjson.serializer.SerializeConfig:
    com.alibaba.fastjson.serializer.SerializeConfig globalInstance -> globalInstance
    boolean asm -> asm
    com.alibaba.fastjson.serializer.ASMSerializerFactory asmFactory -> asmFactory
    java.lang.String typeKey -> typeKey
    java.lang.String getTypeKey() -> getTypeKey
    void setTypeKey(java.lang.String) -> setTypeKey
    com.alibaba.fastjson.serializer.ObjectSerializer createASMSerializer(java.lang.Class) -> createASMSerializer
    com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class) -> createJavaBeanSerializer
    boolean isAsmEnable() -> isAsmEnable
    void setAsmEnable(boolean) -> setAsmEnable
    com.alibaba.fastjson.serializer.SerializeConfig getGlobalInstance() -> getGlobalInstance
com.alibaba.fastjson.serializer.SerializeFilter -> com.alibaba.fastjson.serializer.SerializeFilter:
com.alibaba.fastjson.serializer.SerializeWriter -> com.alibaba.fastjson.serializer.SerializeWriter:
    char[] buf -> buf
    int count -> count
    java.lang.ThreadLocal bufLocal -> bufLocal
    int features -> features
    java.io.Writer writer -> writer
    int getBufferLength() -> getBufferLength
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    void write(int) -> write
    void write(char) -> write
    void write(char[],int,int) -> write
    void expandCapacity(int) -> expandCapacity
    void write(java.lang.String,int,int) -> write
    void writeTo(java.io.Writer) -> writeTo
    void writeTo(java.io.OutputStream,java.lang.String) -> writeTo
    void writeTo(java.io.OutputStream,java.nio.charset.Charset) -> writeTo
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence) -> append
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence,int,int) -> append
    com.alibaba.fastjson.serializer.SerializeWriter append(char) -> append
    void reset() -> reset
    char[] toCharArray() -> toCharArray
    byte[] toBytes(java.lang.String) -> toBytes
    int size() -> size
    java.lang.String toString() -> toString
    void close() -> close
    void write(java.lang.String) -> write
    void writeInt(int) -> writeInt
    void writeByteArray(byte[]) -> writeByteArray
    void writeIntAndChar(int,char) -> writeIntAndChar
    void writeLongAndChar(long,char) -> writeLongAndChar
    void writeLong(long) -> writeLong
    void writeNull() -> writeNull
    void writeStringWithDoubleQuote(java.lang.String,char) -> writeStringWithDoubleQuote
    void writeStringWithDoubleQuote(java.lang.String,char,boolean) -> writeStringWithDoubleQuote
    void writeFieldNull(char,java.lang.String) -> writeFieldNull
    void writeFieldEmptyList(char,java.lang.String) -> writeFieldEmptyList
    void writeFieldNullString(char,java.lang.String) -> writeFieldNullString
    void writeFieldNullBoolean(char,java.lang.String) -> writeFieldNullBoolean
    void writeFieldNullList(char,java.lang.String) -> writeFieldNullList
    void writeFieldNullNumber(char,java.lang.String) -> writeFieldNullNumber
    void writeFieldValue(char,java.lang.String,char) -> writeFieldValue
    void writeFieldValue(char,java.lang.String,boolean) -> writeFieldValue
    void write(boolean) -> write
    void writeFieldValue(char,java.lang.String,int) -> writeFieldValue
    void writeFieldValue1(char,java.lang.String,int) -> writeFieldValue1
    void writeFieldValue(char,java.lang.String,long) -> writeFieldValue
    void writeFieldValue1(char,java.lang.String,long) -> writeFieldValue1
    void writeFieldValue(char,java.lang.String,float) -> writeFieldValue
    void writeFieldValue(char,java.lang.String,double) -> writeFieldValue
    void writeFieldValue(char,java.lang.String,java.lang.String) -> writeFieldValue
    void writeFieldValueStringWithDoubleQuote(char,java.lang.String,java.lang.String,boolean) -> writeFieldValueStringWithDoubleQuote
    boolean isSpecial(char,int) -> isSpecial
    void writeFieldValue(char,java.lang.String,java.lang.Enum) -> writeFieldValue
    void writeFieldValue(char,java.lang.String,java.math.BigDecimal) -> writeFieldValue
    void writeString(java.lang.String,char) -> writeString
    void writeString(java.lang.String) -> writeString
    void writeStringWithSingleQuote(java.lang.String) -> writeStringWithSingleQuote
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(java.lang.String,boolean) -> writeFieldName
    void writeKeyWithDoubleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithDoubleQuoteIfHasSpecial
    void writeKeyWithSingleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithSingleQuoteIfHasSpecial
    void flush() -> flush
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.alibaba.fastjson.serializer.SerializerFeature -> com.alibaba.fastjson.serializer.SerializerFeature:
    com.alibaba.fastjson.serializer.SerializerFeature QuoteFieldNames -> QuoteFieldNames
    com.alibaba.fastjson.serializer.SerializerFeature UseSingleQuotes -> UseSingleQuotes
    com.alibaba.fastjson.serializer.SerializerFeature WriteMapNullValue -> WriteMapNullValue
    com.alibaba.fastjson.serializer.SerializerFeature WriteEnumUsingToString -> WriteEnumUsingToString
    com.alibaba.fastjson.serializer.SerializerFeature UseISO8601DateFormat -> UseISO8601DateFormat
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullListAsEmpty -> WriteNullListAsEmpty
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullStringAsEmpty -> WriteNullStringAsEmpty
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullNumberAsZero -> WriteNullNumberAsZero
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullBooleanAsFalse -> WriteNullBooleanAsFalse
    com.alibaba.fastjson.serializer.SerializerFeature SkipTransientField -> SkipTransientField
    com.alibaba.fastjson.serializer.SerializerFeature SortField -> SortField
    com.alibaba.fastjson.serializer.SerializerFeature WriteTabAsSpecial -> WriteTabAsSpecial
    com.alibaba.fastjson.serializer.SerializerFeature PrettyFormat -> PrettyFormat
    com.alibaba.fastjson.serializer.SerializerFeature WriteClassName -> WriteClassName
    com.alibaba.fastjson.serializer.SerializerFeature DisableCircularReferenceDetect -> DisableCircularReferenceDetect
    com.alibaba.fastjson.serializer.SerializerFeature WriteSlashAsSpecial -> WriteSlashAsSpecial
    com.alibaba.fastjson.serializer.SerializerFeature BrowserCompatible -> BrowserCompatible
    com.alibaba.fastjson.serializer.SerializerFeature WriteDateUseDateFormat -> WriteDateUseDateFormat
    com.alibaba.fastjson.serializer.SerializerFeature NotWriteRootClassName -> NotWriteRootClassName
    com.alibaba.fastjson.serializer.SerializerFeature DisableCheckSpecialChar -> DisableCheckSpecialChar
    int mask -> mask
    com.alibaba.fastjson.serializer.SerializerFeature[] $VALUES -> $VALUES
    com.alibaba.fastjson.serializer.SerializerFeature[] values() -> values
    com.alibaba.fastjson.serializer.SerializerFeature valueOf(java.lang.String) -> valueOf
    int getMask() -> getMask
    boolean isEnabled(int,com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    int config(int,com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
com.alibaba.fastjson.serializer.ShortArraySerializer -> com.alibaba.fastjson.serializer.ShortArraySerializer:
    com.alibaba.fastjson.serializer.ShortArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ShortSerializer -> com.alibaba.fastjson.serializer.ShortSerializer:
    com.alibaba.fastjson.serializer.ShortSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimpleDateFormatSerializer -> com.alibaba.fastjson.serializer.SimpleDateFormatSerializer:
    java.lang.String pattern -> pattern
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimplePropertyPreFilter -> com.alibaba.fastjson.serializer.SimplePropertyPreFilter:
    java.lang.Class clazz -> clazz
    java.util.Set includes -> includes
    java.util.Set excludes -> excludes
    java.lang.Class getClazz() -> getClazz
    java.util.Set getIncludes() -> getIncludes
    java.util.Set getExcludes() -> getExcludes
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
com.alibaba.fastjson.serializer.StringSerializer -> com.alibaba.fastjson.serializer.StringSerializer:
    com.alibaba.fastjson.serializer.StringSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.String) -> write
com.alibaba.fastjson.serializer.TimeZoneSerializer -> com.alibaba.fastjson.serializer.TimeZoneSerializer:
    com.alibaba.fastjson.serializer.TimeZoneSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.URISerializer -> com.alibaba.fastjson.serializer.URISerializer:
    com.alibaba.fastjson.serializer.URISerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.URLSerializer -> com.alibaba.fastjson.serializer.URLSerializer:
    com.alibaba.fastjson.serializer.URLSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.UUIDSerializer -> com.alibaba.fastjson.serializer.UUIDSerializer:
    com.alibaba.fastjson.serializer.UUIDSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ValueFilter -> com.alibaba.fastjson.serializer.ValueFilter:
    java.lang.Object process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter -> com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter:
    java.nio.charset.Charset UTF8 -> UTF8
    java.nio.charset.Charset charset -> charset
    com.alibaba.fastjson.serializer.SerializerFeature[] features -> features
    boolean supports(java.lang.Class) -> supports
    java.nio.charset.Charset getCharset() -> getCharset
    void setCharset(java.nio.charset.Charset) -> setCharset
    com.alibaba.fastjson.serializer.SerializerFeature[] getFeatures() -> getFeatures
    void setFeatures(com.alibaba.fastjson.serializer.SerializerFeature[]) -> setFeatures
    java.lang.Object readInternal(java.lang.Class,org.springframework.http.HttpInputMessage) -> readInternal
    void writeInternal(java.lang.Object,org.springframework.http.HttpOutputMessage) -> writeInternal
com.alibaba.fastjson.support.spring.FastJsonJsonView -> com.alibaba.fastjson.support.spring.FastJsonJsonView:
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.nio.charset.Charset UTF8 -> UTF8
    java.nio.charset.Charset charset -> charset
    com.alibaba.fastjson.serializer.SerializerFeature[] serializerFeatures -> serializerFeatures
    java.util.Set renderedAttributes -> renderedAttributes
    boolean disableCaching -> disableCaching
    boolean updateContentLength -> updateContentLength
    void setRenderedAttributes(java.util.Set) -> setRenderedAttributes
    void setSerializerFeature(com.alibaba.fastjson.serializer.SerializerFeature[]) -> setSerializerFeature
    java.nio.charset.Charset getCharset() -> getCharset
    void setCharset(java.nio.charset.Charset) -> setCharset
    com.alibaba.fastjson.serializer.SerializerFeature[] getFeatures() -> getFeatures
    void setFeatures(com.alibaba.fastjson.serializer.SerializerFeature[]) -> setFeatures
    void renderMergedOutputModel(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> renderMergedOutputModel
    void prepareResponse(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> prepareResponse
    void setDisableCaching(boolean) -> setDisableCaching
    void setUpdateContentLength(boolean) -> setUpdateContentLength
    java.lang.Object filterModel(java.util.Map) -> filterModel
com.alibaba.fastjson.util.ASMClassLoader -> com.alibaba.fastjson.util.ASMClassLoader:
    java.security.ProtectionDomain DOMAIN -> DOMAIN
    java.lang.ClassLoader getParentClassLoader() -> getParentClassLoader
    java.lang.Class defineClassPublic(java.lang.String,byte[],int,int) -> defineClassPublic
    boolean isExternalClass(java.lang.Class) -> isExternalClass
com.alibaba.fastjson.util.ASMClassLoader$1 -> com.alibaba.fastjson.util.ASMClassLoader$1:
    java.lang.Object run() -> run
com.alibaba.fastjson.util.ASMUtils -> com.alibaba.fastjson.util.ASMUtils:
    boolean isAndroid(java.lang.String) -> isAndroid
    boolean isAndroid() -> isAndroid
    java.lang.String getDesc(java.lang.reflect.Method) -> getDesc
    java.lang.String getDesc(java.lang.Class) -> getDesc
    java.lang.String getType(java.lang.Class) -> getType
    java.lang.String getPrimitiveLetter(java.lang.Class) -> getPrimitiveLetter
    java.lang.reflect.Type getMethodType(java.lang.Class,java.lang.String) -> getMethodType
    java.lang.reflect.Type getFieldType(java.lang.Class,java.lang.String) -> getFieldType
com.alibaba.fastjson.util.Base64 -> com.alibaba.fastjson.util.Base64:
    char[] CA -> CA
    int[] IA -> IA
    byte[] decodeFast(char[],int,int) -> decodeFast
    byte[] decodeFast(java.lang.String,int,int) -> decodeFast
    byte[] decodeFast(java.lang.String) -> decodeFast
com.alibaba.fastjson.util.DeserializeBeanInfo -> com.alibaba.fastjson.util.DeserializeBeanInfo:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Constructor defaultConstructor -> defaultConstructor
    java.lang.reflect.Constructor creatorConstructor -> creatorConstructor
    java.lang.reflect.Method factoryMethod -> factoryMethod
    java.util.List fieldList -> fieldList
    java.lang.reflect.Constructor getDefaultConstructor() -> getDefaultConstructor
    void setDefaultConstructor(java.lang.reflect.Constructor) -> setDefaultConstructor
    java.lang.reflect.Constructor getCreatorConstructor() -> getCreatorConstructor
    void setCreatorConstructor(java.lang.reflect.Constructor) -> setCreatorConstructor
    java.lang.reflect.Method getFactoryMethod() -> getFactoryMethod
    void setFactoryMethod(java.lang.reflect.Method) -> setFactoryMethod
    java.lang.Class getClazz() -> getClazz
    java.util.List getFieldList() -> getFieldList
    com.alibaba.fastjson.util.FieldInfo getField(java.lang.String) -> getField
    boolean add(com.alibaba.fastjson.util.FieldInfo) -> add
    com.alibaba.fastjson.util.DeserializeBeanInfo computeSetters(java.lang.Class,java.lang.reflect.Type) -> computeSetters
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Constructor getDefaultConstructor(java.lang.Class) -> getDefaultConstructor
    java.lang.reflect.Constructor getCreatorConstructor(java.lang.Class) -> getCreatorConstructor
    java.lang.reflect.Method getFactoryMethod(java.lang.Class) -> getFactoryMethod
com.alibaba.fastjson.util.FieldInfo -> com.alibaba.fastjson.util.FieldInfo:
    java.lang.String name -> name
    java.lang.reflect.Method method -> method
    java.lang.reflect.Field field -> field
    java.lang.Class fieldClass -> fieldClass
    java.lang.reflect.Type fieldType -> fieldType
    java.lang.Class declaringClass -> declaringClass
    boolean getOnly -> getOnly
    java.lang.reflect.Type getFieldType(java.lang.Class,java.lang.reflect.Type,java.lang.reflect.Type) -> getFieldType
    java.lang.reflect.Type getInheritGenericType(java.lang.Class,java.lang.reflect.TypeVariable) -> getInheritGenericType
    java.lang.String toString() -> toString
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.Class getFieldClass() -> getFieldClass
    java.lang.reflect.Type getFieldType() -> getFieldType
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.reflect.Field getField() -> getField
    int compareTo(com.alibaba.fastjson.util.FieldInfo) -> compareTo
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
    void setAccessible(boolean) -> setAccessible
    boolean isGetOnly() -> isGetOnly
    int compareTo(java.lang.Object) -> compareTo
com.alibaba.fastjson.util.IOUtils -> com.alibaba.fastjson.util.IOUtils:
    char[] digits -> digits
    char[] DigitTens -> DigitTens
    char[] DigitOnes -> DigitOnes
    int[] sizeTable -> sizeTable
    void close(java.io.Closeable) -> close
    int stringSize(long) -> stringSize
    void getChars(long,int,char[]) -> getChars
    void getChars(int,int,char[]) -> getChars
    void getChars(byte,int,char[]) -> getChars
    int stringSize(int) -> stringSize
    void decode(java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,java.nio.CharBuffer) -> decode
com.alibaba.fastjson.util.IdentityHashMap -> com.alibaba.fastjson.util.IdentityHashMap:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    com.alibaba.fastjson.util.IdentityHashMap$Entry[] buckets -> buckets
    int indexMask -> indexMask
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    int size() -> size
com.alibaba.fastjson.util.IdentityHashMap$Entry -> com.alibaba.fastjson.util.IdentityHashMap$Entry:
    int hashCode -> hashCode
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.alibaba.fastjson.util.IdentityHashMap$Entry next -> next
com.alibaba.fastjson.util.ParameterizedTypeImpl -> com.alibaba.fastjson.util.ParameterizedTypeImpl:
    java.lang.reflect.Type[] actualTypeArguments -> actualTypeArguments
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type getRawType() -> getRawType
com.alibaba.fastjson.util.ServiceLoader -> com.alibaba.fastjson.util.ServiceLoader:
    java.lang.String PREFIX -> PREFIX
    java.util.Set loadedUrls -> loadedUrls
    java.util.Set load(java.lang.Class,java.lang.ClassLoader) -> load
    void load(java.net.URL,java.util.Set) -> load
com.alibaba.fastjson.util.ThreadLocalCache -> com.alibaba.fastjson.util.ThreadLocalCache:
    int CHARS_CACH_INIT_SIZE -> CHARS_CACH_INIT_SIZE
    int CHARS_CACH_MAX_SIZE -> CHARS_CACH_MAX_SIZE
    java.lang.ThreadLocal charsBufLocal -> charsBufLocal
    java.lang.ThreadLocal decoderLocal -> decoderLocal
    int BYTES_CACH_INIT_SIZE -> BYTES_CACH_INIT_SIZE
    int BYTeS_CACH_MAX_SIZE -> BYTeS_CACH_MAX_SIZE
    java.lang.ThreadLocal bytesBufLocal -> bytesBufLocal
    java.nio.charset.CharsetDecoder getUTF8Decoder() -> getUTF8Decoder
    void clearChars() -> clearChars
    char[] getChars(int) -> getChars
    char[] allocate(int) -> allocate
    int getAllocateLength(int,int,int) -> getAllocateLength
    void clearBytes() -> clearBytes
    byte[] getBytes(int) -> getBytes
    byte[] allocateBytes(int) -> allocateBytes
com.alibaba.fastjson.util.TypeUtils -> com.alibaba.fastjson.util.TypeUtils:
    java.util.concurrent.ConcurrentMap mappings -> mappings
    java.lang.String castToString(java.lang.Object) -> castToString
    java.lang.Byte castToByte(java.lang.Object) -> castToByte
    java.lang.Character castToChar(java.lang.Object) -> castToChar
    java.lang.Short castToShort(java.lang.Object) -> castToShort
    java.math.BigDecimal castToBigDecimal(java.lang.Object) -> castToBigDecimal
    java.math.BigInteger castToBigInteger(java.lang.Object) -> castToBigInteger
    java.lang.Float castToFloat(java.lang.Object) -> castToFloat
    java.lang.Double castToDouble(java.lang.Object) -> castToDouble
    java.util.Date castToDate(java.lang.Object) -> castToDate
    java.sql.Date castToSqlDate(java.lang.Object) -> castToSqlDate
    java.sql.Timestamp castToTimestamp(java.lang.Object) -> castToTimestamp
    java.lang.Long castToLong(java.lang.Object) -> castToLong
    java.lang.Integer castToInt(java.lang.Object) -> castToInt
    byte[] castToBytes(java.lang.Object) -> castToBytes
    java.lang.Boolean castToBoolean(java.lang.Object) -> castToBoolean
    java.lang.Object castToJavaBean(java.lang.Object,java.lang.Class) -> castToJavaBean
    java.lang.Object cast(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object castToEnum(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToEnum
    java.lang.Object cast(java.lang.Object,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object cast(java.lang.Object,java.lang.reflect.ParameterizedType,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object castToJavaBean(java.util.Map,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToJavaBean
    void addClassMapping(java.lang.String,java.lang.Class) -> addClassMapping
    void addBaseClassMappings() -> addBaseClassMappings
    void clearClassMapping() -> clearClassMapping
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.util.List computeGetters(java.lang.Class,java.util.Map) -> computeGetters
    java.util.List computeGetters(java.lang.Class,java.util.Map,boolean) -> computeGetters
    com.alibaba.fastjson.annotation.JSONField getSupperMethodAnnotation(java.lang.Class,java.lang.reflect.Method) -> getSupperMethodAnnotation
    boolean isJSONTypeIgnore(java.lang.Class,java.lang.String) -> isJSONTypeIgnore
    java.lang.Class getClass(java.lang.reflect.Type) -> getClass
com.alibaba.fastjson.util.UTF8Decoder -> com.alibaba.fastjson.util.UTF8Decoder:
    java.nio.charset.Charset charset -> charset
    boolean isNotContinuation(int) -> isNotContinuation
    boolean isMalformed2(int,int) -> isMalformed2
    boolean isMalformed3(int,int,int) -> isMalformed3
    boolean isMalformed4(int,int,int) -> isMalformed4
    java.nio.charset.CoderResult lookupN(java.nio.ByteBuffer,int) -> lookupN
    java.nio.charset.CoderResult malformedN(java.nio.ByteBuffer,int) -> malformedN
    java.nio.charset.CoderResult malformed(java.nio.ByteBuffer,int,java.nio.CharBuffer,int,int) -> malformed
    java.nio.charset.CoderResult xflow(java.nio.Buffer,int,int,java.nio.Buffer,int,int) -> xflow
    java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer,java.nio.CharBuffer) -> decodeArrayLoop
    java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer) -> decodeLoop
    void updatePositions(java.nio.Buffer,int,java.nio.Buffer,int) -> updatePositions
com.alibaba.fastjson.util.UTF8Decoder$Surrogate -> com.alibaba.fastjson.util.UTF8Decoder$Surrogate:
    int UCS4_MIN -> UCS4_MIN
    int UCS4_MAX -> UCS4_MAX
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean neededFor(int) -> neededFor
    char high(int) -> high
    char low(int) -> low
com.baidu.a.a.a.a -> com.baidu.a.a.a.a:
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,android.os.Bundle) -> a
com.baidu.a.a.a.a$a -> com.baidu.a.a.a.a$a:
    com.baidu.a.a.a.a a(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.a.a.a.a$a$a -> com.baidu.a.a.a.a$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,android.os.Bundle) -> a
com.baidu.a.a.a.b -> com.baidu.a.a.a.b:
    void a(com.baidu.a.a.a.c) -> a
com.baidu.a.a.a.b$a -> com.baidu.a.a.a.b$a:
    com.baidu.a.a.a.b a(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.a.a.a.b$a$a -> com.baidu.a.a.a.b$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.baidu.a.a.a.c) -> a
com.baidu.a.a.a.c -> com.baidu.a.a.a.c:
    void a(android.os.IBinder) -> a
com.baidu.a.a.a.c$a -> com.baidu.a.a.a.c$a:
    com.baidu.a.a.a.c b(android.os.IBinder) -> b
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.a.a.a.c$a$a -> com.baidu.a.a.a.c$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(android.os.IBinder) -> a
com.baidu.android.bbalbs.common.a.a -> com.baidu.android.bbalbs.common.a.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.android.bbalbs.common.a.b -> com.baidu.android.bbalbs.common.a.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.bbalbs.common.a.c -> com.baidu.android.bbalbs.common.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.android.bbalbs.common.util.CommonParam -> com.baidu.android.bbalbs.common.util.CommonParam:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.baidu.android.bbalbs.common.util.a -> com.baidu.android.bbalbs.common.util.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.android.bbalbs.common.util.a$a -> com.baidu.android.bbalbs.common.util.a$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.android.bbalbs.common.util.a$a a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.ErrorMessage -> com.baidu.lbsapi.auth.ErrorMessage:
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.a -> com.baidu.lbsapi.auth.a:
    boolean a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
com.baidu.lbsapi.auth.b -> com.baidu.lbsapi.auth.b:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String[] b(android.content.Context) -> b
    java.lang.String[] b(android.content.Context,java.lang.String) -> b
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean c(android.content.Context,java.lang.String) -> c
    java.lang.String a() -> a
com.baidu.lbsapi.auth.b$a -> com.baidu.lbsapi.auth.b$a:
    java.lang.String a(byte[]) -> a
com.baidu.lbsapi.auth.c -> com.baidu.lbsapi.auth.c:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.HashMap e -> e
    com.baidu.lbsapi.auth.c$a f -> f
    void a(java.util.HashMap,com.baidu.lbsapi.auth.c$a) -> a
    void a(java.lang.String) -> a
    boolean a(org.apache.http.client.HttpClient) -> a
    void b(org.apache.http.client.HttpClient) -> b
    void a(org.apache.http.client.HttpClient,java.lang.String,java.util.HashMap) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String a(android.content.Context) -> a
    java.util.HashMap a(java.util.HashMap) -> a
    org.apache.http.client.HttpClient a() -> a
    java.lang.String a(com.baidu.lbsapi.auth.c) -> a
    java.util.HashMap b(com.baidu.lbsapi.auth.c) -> b
    void a(com.baidu.lbsapi.auth.c,java.lang.String,java.util.HashMap) -> a
com.baidu.lbsapi.auth.c$a -> com.baidu.lbsapi.auth.c$a:
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.c$b -> com.baidu.lbsapi.auth.c$b:
    javax.net.ssl.SSLContext a -> a
    com.baidu.lbsapi.auth.c b -> b
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.baidu.lbsapi.auth.d -> com.baidu.lbsapi.auth.d:
    com.baidu.lbsapi.auth.c a -> a
    void run() -> run
com.baidu.lbsapi.auth.e -> com.baidu.lbsapi.auth.e:
    com.baidu.lbsapi.auth.c a -> a
    com.baidu.lbsapi.auth.c$b b -> b
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.baidu.lbsapi.auth.f -> com.baidu.lbsapi.auth.f:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.List e -> e
    com.baidu.lbsapi.auth.f$a f -> f
    void a(java.util.HashMap,java.lang.String[],com.baidu.lbsapi.auth.f$a) -> a
    void a(java.lang.String) -> a
    boolean a(org.apache.http.client.HttpClient) -> a
    void b(org.apache.http.client.HttpClient) -> b
    java.lang.String a(org.apache.http.client.HttpClient,java.lang.String,java.util.HashMap) -> a
    void a(java.util.List) -> a
    java.lang.String a(android.content.Context) -> a
    java.util.List a(java.util.HashMap,java.lang.String[]) -> a
    org.apache.http.client.HttpClient a() -> a
    java.util.List a(com.baidu.lbsapi.auth.f) -> a
    void a(com.baidu.lbsapi.auth.f,java.util.List) -> a
com.baidu.lbsapi.auth.f$a -> com.baidu.lbsapi.auth.f$a:
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.f$b -> com.baidu.lbsapi.auth.f$b:
    javax.net.ssl.SSLContext a -> a
    com.baidu.lbsapi.auth.f b -> b
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.baidu.lbsapi.auth.g -> com.baidu.lbsapi.auth.g:
    com.baidu.lbsapi.auth.f a -> a
    void run() -> run
com.baidu.lbsapi.auth.h -> com.baidu.lbsapi.auth.h:
    com.baidu.lbsapi.auth.f a -> a
    com.baidu.lbsapi.auth.f$b b -> b
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.baidu.lbsapi.auth.i -> com.baidu.lbsapi.auth.i:
    boolean a -> a
    android.content.Context b -> b
    com.baidu.lbsapi.auth.c c -> c
    com.baidu.lbsapi.auth.f d -> d
    com.baidu.lbsapi.auth.o e -> e
    int f -> f
    java.util.Hashtable g -> g
    android.os.Handler h -> h
    void d() -> d
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    int a(java.lang.String) -> a
    int a(boolean,java.lang.String,java.util.Hashtable,com.baidu.lbsapi.auth.n) -> a
    boolean b(java.lang.String) -> b
    void a(boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> a
    void a(boolean,java.lang.String,java.util.Hashtable,java.lang.String[],java.lang.String) -> a
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    java.lang.String a(android.content.Context) -> a
    java.util.Hashtable a() -> a
    boolean a(com.baidu.lbsapi.auth.i,java.lang.String) -> a
    android.content.Context b() -> b
    void a(com.baidu.lbsapi.auth.i,boolean,java.lang.String,java.util.Hashtable,java.lang.String[],java.lang.String) -> a
    void a(com.baidu.lbsapi.auth.i,boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> a
    com.baidu.lbsapi.auth.o c() -> c
    void a(com.baidu.lbsapi.auth.i,java.lang.String,java.lang.String) -> a
com.baidu.lbsapi.auth.j -> com.baidu.lbsapi.auth.j:
    com.baidu.lbsapi.auth.i a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.lbsapi.auth.k -> com.baidu.lbsapi.auth.k:
    int a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.Hashtable e -> e
    com.baidu.lbsapi.auth.i f -> f
    void run() -> run
com.baidu.lbsapi.auth.l -> com.baidu.lbsapi.auth.l:
    java.lang.String a -> a
    com.baidu.lbsapi.auth.i b -> b
    void a(java.lang.String) -> a
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.m -> com.baidu.lbsapi.auth.m:
    java.lang.String a -> a
    com.baidu.lbsapi.auth.i b -> b
    void a(java.lang.String) -> a
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.n -> com.baidu.lbsapi.auth.n:
    void a(int,java.lang.String) -> a
com.baidu.lbsapi.auth.o -> com.baidu.lbsapi.auth.o:
    android.os.Handler a -> a
    java.lang.Object b -> b
    boolean c -> c
    boolean d -> d
    void run() -> run
    void a() -> a
    void b() -> b
    void c() -> c
com.baidu.location.Address -> com.baidu.location.Address:
    java.lang.String country -> country
    java.lang.String countryCode -> countryCode
    java.lang.String province -> province
    java.lang.String city -> city
    java.lang.String cityCode -> cityCode
    java.lang.String district -> district
    java.lang.String street -> street
    java.lang.String streetNumber -> streetNumber
    java.lang.String address -> address
com.baidu.location.Address$1 -> com.baidu.location.Address$1:
com.baidu.location.Address$Builder -> com.baidu.location.Address$Builder:
    java.lang.String new -> new
    java.lang.String try -> try
    java.lang.String if -> if
    java.lang.String byte -> byte
    java.lang.String char -> char
    java.lang.String goto -> goto
    java.lang.String else -> else
    java.lang.String for -> for
    java.lang.String long -> long
    java.lang.String do -> do
    java.lang.String int -> int
    java.lang.String case -> case
    java.lang.String a -> a
    com.baidu.location.Address$Builder country(java.lang.String) -> country
    com.baidu.location.Address$Builder countryCode(java.lang.String) -> countryCode
    com.baidu.location.Address$Builder province(java.lang.String) -> province
    com.baidu.location.Address$Builder city(java.lang.String) -> city
    com.baidu.location.Address$Builder cityCode(java.lang.String) -> cityCode
    com.baidu.location.Address$Builder district(java.lang.String) -> district
    com.baidu.location.Address$Builder street(java.lang.String) -> street
    com.baidu.location.Address$Builder streetNumber(java.lang.String) -> streetNumber
    com.baidu.location.Address build() -> build
    java.lang.String int(com.baidu.location.Address$Builder) -> int
    java.lang.String do(com.baidu.location.Address$Builder) -> do
    java.lang.String case(com.baidu.location.Address$Builder) -> case
    java.lang.String if(com.baidu.location.Address$Builder) -> if
    java.lang.String byte(com.baidu.location.Address$Builder) -> byte
    java.lang.String new(com.baidu.location.Address$Builder) -> new
    java.lang.String for(com.baidu.location.Address$Builder) -> for
    java.lang.String a(com.baidu.location.Address$Builder) -> a
    java.lang.String try(com.baidu.location.Address$Builder) -> try
com.baidu.location.BDLocation -> com.baidu.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int LOCATION_WHERE_UNKNOW -> LOCATION_WHERE_UNKNOW
    int LOCATION_WHERE_IN_CN -> LOCATION_WHERE_IN_CN
    int LOCATION_WHERE_OUT_CN -> LOCATION_WHERE_OUT_CN
    int OPERATORS_TYPE_UNKONW -> OPERATORS_TYPE_UNKONW
    int OPERATORS_TYPE_MOBILE -> OPERATORS_TYPE_MOBILE
    int OPERATORS_TYPE_UNICOM -> OPERATORS_TYPE_UNICOM
    int OPERATORS_TYPE_TELECOMU -> OPERATORS_TYPE_TELECOMU
    java.lang.String BDLOCATION_GCJ02_TO_BD09 -> BDLOCATION_GCJ02_TO_BD09
    java.lang.String BDLOCATION_GCJ02_TO_BD09LL -> BDLOCATION_GCJ02_TO_BD09LL
    java.lang.String BDLOCATION_BD09_TO_GCJ02 -> BDLOCATION_BD09_TO_GCJ02
    java.lang.String BDLOCATION_BD09LL_TO_GCJ02 -> BDLOCATION_BD09LL_TO_GCJ02
    int kX -> kX
    java.lang.String k2 -> k2
    double kC -> kC
    double kY -> kY
    boolean kE -> kE
    double kL -> kL
    boolean kF -> kF
    float k1 -> k1
    boolean kO -> kO
    float kT -> kT
    boolean k0 -> k0
    int kB -> kB
    float kJ -> kJ
    java.lang.String k3 -> k3
    boolean kU -> kU
    java.lang.String kA -> kA
    java.lang.String kH -> kH
    java.lang.String kK -> kK
    java.lang.String kZ -> kZ
    boolean kM -> kM
    com.baidu.location.Address kN -> kN
    java.lang.String kD -> kD
    java.lang.String kP -> kP
    java.lang.String kW -> kW
    boolean kG -> kG
    int kS -> kS
    int kR -> kR
    java.lang.String kQ -> kQ
    int k4 -> k4
    java.lang.String kI -> kI
    java.util.List kV -> kV
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getPoiList() -> getPoiList
    void setPoiList(java.util.List) -> setPoiList
    void if(java.lang.Boolean) -> if
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    float getDerect() -> getDerect
    float getDirection() -> getDirection
    void setDirection(float) -> setDirection
    boolean hasSateNumber() -> hasSateNumber
    boolean hasAddr() -> hasAddr
    com.baidu.location.Address getAddress() -> getAddress
    void setAddr(com.baidu.location.Address) -> setAddr
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getCountry() -> getCountry
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
    java.lang.String getLocationDescribe() -> getLocationDescribe
    void setLocationDescribe(java.lang.String) -> setLocationDescribe
    java.lang.String getFloor() -> getFloor
    void setFloor(java.lang.String) -> setFloor
    java.lang.String getBuildingID() -> getBuildingID
    void setBuildingID(java.lang.String) -> setBuildingID
    java.lang.String getBuildingName() -> getBuildingName
    void setBuildingName(java.lang.String) -> setBuildingName
    int isParkAvailable() -> isParkAvailable
    void setParkAvailable(int) -> setParkAvailable
    boolean isIndoorLocMode() -> isIndoorLocMode
    void setIndoorLocMode(boolean) -> setIndoorLocMode
    int getLocationWhere() -> getLocationWhere
    void setLocationWhere(int) -> setLocationWhere
    java.lang.String getSemaAptag() -> getSemaAptag
    java.lang.String dC() -> dC
    java.lang.String dE() -> dE
    java.lang.String getNetworkLocationType() -> getNetworkLocationType
    void setNetworkLocationType(java.lang.String) -> setNetworkLocationType
    int getOperators() -> getOperators
    void setOperators(int) -> setOperators
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String dD() -> dD
    java.lang.String getAdUrl(java.lang.String) -> getAdUrl
    java.lang.String dF() -> dF
    void internalSet(int,java.lang.String) -> internalSet
com.baidu.location.BDLocation$1 -> com.baidu.location.BDLocation$1:
    com.baidu.location.BDLocation a(android.os.Parcel) -> a
    com.baidu.location.BDLocation[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.BDLocationListener -> com.baidu.location.BDLocationListener:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.BDNotifyListener -> com.baidu.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.location.d.a mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.baidu.location.Jni -> com.baidu.location.Jni:
    int le -> le
    int lc -> lc
    int ld -> ld
    int k8 -> k8
    int la -> la
    int k6 -> k6
    int k5 -> k5
    int k9 -> k9
    int k7 -> k7
    boolean lb -> lb
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String c(byte[],int) -> c
    java.lang.String ib(byte[],byte[]) -> ib
    java.lang.String sky() -> sky
    java.lang.String ee(java.lang.String,int) -> ee
    byte[] encrypt(byte[]) -> encrypt
    java.lang.String g(byte[]) -> g
    void f(byte[],byte[]) -> f
    java.lang.String H(java.lang.String) -> H
    java.lang.String if(byte[],byte[]) -> if
    java.lang.String F(java.lang.String) -> F
    java.lang.String J(java.lang.String) -> J
    long murmur(java.lang.String) -> murmur
    java.lang.Long I(java.lang.String) -> I
    java.lang.String dG() -> dG
    java.lang.String G(java.lang.String) -> G
    java.lang.String K(java.lang.String) -> K
    java.lang.String encodeNotLimit(java.lang.String,int) -> encodeNotLimit
    double[] if(double,double,java.lang.String) -> if
    void int(java.lang.String,java.lang.String) -> int
    java.lang.String L(java.lang.String) -> L
    java.lang.String E(java.lang.String) -> E
    java.lang.String if(byte[]) -> if
com.baidu.location.LLSInterface -> com.baidu.location.LLSInterface:
    void onCreate(android.content.Context) -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnBind(android.content.Intent) -> onUnBind
    void onDestroy() -> onDestroy
    double getVersion() -> getVersion
com.baidu.location.LocationClient -> com.baidu.location.LocationClient:
    java.lang.String li -> li
    int ll -> ll
    int lK -> lK
    int ls -> ls
    int lV -> lV
    int lG -> lG
    int lJ -> lJ
    int ly -> ly
    int lt -> lt
    int lw -> lw
    int lg -> lg
    int lR -> lR
    int lH -> lH
    int lp -> lp
    long lM -> lM
    java.lang.String lU -> lU
    com.baidu.location.LocationClientOption lF -> lF
    boolean lL -> lL
    android.content.Context lB -> lB
    android.os.Messenger lD -> lD
    com.baidu.location.LocationClient$a lh -> lh
    android.os.Messenger lA -> lA
    java.util.ArrayList lY -> lY
    com.baidu.location.BDLocation lQ -> lQ
    boolean lv -> lv
    boolean lT -> lT
    boolean lx -> lx
    com.baidu.location.LocationClient$b lm -> lm
    boolean lf -> lf
    java.lang.Object lk -> lk
    long lE -> lE
    long lN -> lN
    com.baidu.location.d.a lo -> lo
    com.baidu.location.BDLocationListener lu -> lu
    java.lang.String lS -> lS
    java.lang.String lP -> lP
    boolean lr -> lr
    boolean lW -> lW
    java.lang.Boolean lq -> lq
    java.lang.Boolean ln -> ln
    java.lang.Boolean lI -> lI
    boolean lz -> lz
    com.baidu.location.e.p lX -> lX
    boolean lC -> lC
    boolean lj -> lj
    android.content.ServiceConnection lO -> lO
    com.baidu.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void dL() -> dL
    int requestLocation() -> requestLocation
    boolean isStarted() -> isStarted
    com.baidu.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void dI() -> dI
    void stop() -> stop
    void dJ() -> dJ
    void registerNotify(com.baidu.location.BDNotifyListener) -> registerNotify
    void void(android.os.Message) -> void
    void removeNotifyEvent(com.baidu.location.BDNotifyListener) -> removeNotifyEvent
    void i(android.os.Message) -> i
    void e(android.os.Message) -> e
    android.os.Bundle dH() -> dH
    void registerNotifyLocationListener(com.baidu.location.BDLocationListener) -> registerNotifyLocationListener
    void k(android.os.Message) -> k
    void registerLocationListener(com.baidu.location.BDLocationListener) -> registerLocationListener
    void j(android.os.Message) -> j
    void unRegisterLocationListener(com.baidu.location.BDLocationListener) -> unRegisterLocationListener
    void d(android.os.Message) -> d
    void dK() -> dK
    void dM() -> dM
    void if(android.os.Message,int) -> if
    void h(android.os.Message) -> h
    void k(int) -> k
    java.lang.String getAccessKey() -> getAccessKey
    com.baidu.location.BDLocation getBDLocationInCoorType(com.baidu.location.BDLocation,java.lang.String) -> getBDLocationInCoorType
    void byte(com.baidu.location.BDLocation) -> byte
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    android.os.Messenger if(com.baidu.location.LocationClient,android.os.Messenger) -> if
    android.os.Messenger h(com.baidu.location.LocationClient) -> h
    boolean for(com.baidu.location.LocationClient,boolean) -> for
    boolean case(com.baidu.location.LocationClient) -> case
    com.baidu.location.LocationClient$a new(com.baidu.location.LocationClient) -> new
    android.os.Messenger try(com.baidu.location.LocationClient) -> try
    android.os.Bundle do(com.baidu.location.LocationClient) -> do
    com.baidu.location.LocationClientOption char(com.baidu.location.LocationClient) -> char
    java.lang.Boolean int(com.baidu.location.LocationClient) -> int
    java.lang.Boolean if(com.baidu.location.LocationClient,java.lang.Boolean) -> if
    java.lang.Object long(com.baidu.location.LocationClient) -> long
    boolean int(com.baidu.location.LocationClient,boolean) -> int
    java.util.ArrayList d(com.baidu.location.LocationClient) -> d
    boolean if(com.baidu.location.LocationClient) -> if
    com.baidu.location.LocationClient$b void(com.baidu.location.LocationClient) -> void
    com.baidu.location.LocationClient$b if(com.baidu.location.LocationClient,com.baidu.location.LocationClient$b) -> if
    void byte(com.baidu.location.LocationClient,android.os.Message) -> byte
    void try(com.baidu.location.LocationClient,android.os.Message) -> try
    void new(com.baidu.location.LocationClient,android.os.Message) -> new
    void int(com.baidu.location.LocationClient,android.os.Message) -> int
    void do(com.baidu.location.LocationClient,android.os.Message) -> do
    void for(com.baidu.location.LocationClient,android.os.Message) -> for
    void for(com.baidu.location.LocationClient) -> for
    void else(com.baidu.location.LocationClient) -> else
    void i(com.baidu.location.LocationClient) -> i
    void byte(com.baidu.location.LocationClient) -> byte
    void e(com.baidu.location.LocationClient) -> e
    boolean do(com.baidu.location.LocationClient,boolean) -> do
    boolean goto(com.baidu.location.LocationClient) -> goto
    boolean j(com.baidu.location.LocationClient) -> j
    boolean if(com.baidu.location.LocationClient,boolean) -> if
    void if(com.baidu.location.LocationClient,android.os.Message,int) -> if
    void if(com.baidu.location.LocationClient,android.os.Message) -> if
    void if(com.baidu.location.LocationClient,com.baidu.location.BDLocation) -> if
com.baidu.location.LocationClient$1 -> com.baidu.location.LocationClient$1:
    com.baidu.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.LocationClient$a -> com.baidu.location.LocationClient$a:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.LocationClient$b:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int GpsFirst -> GpsFirst
    int NetWorkFirst -> NetWorkFirst
    int GpsOnly -> GpsOnly
    java.lang.String coorType -> coorType
    java.lang.String addrType -> addrType
    boolean openGps -> openGps
    int scanSpan -> scanSpan
    int timeOut -> timeOut
    java.lang.String prodName -> prodName
    int priority -> priority
    boolean location_change_notify -> location_change_notify
    boolean disableLocCache -> disableLocCache
    boolean enableSimulateGps -> enableSimulateGps
    java.lang.String serviceName -> serviceName
    boolean isIgnoreCacheException -> isIgnoreCacheException
    boolean isIgnoreKillProcess -> isIgnoreKillProcess
    boolean mIsNeedDeviceDirect -> mIsNeedDeviceDirect
    boolean isNeedAptag -> isNeedAptag
    boolean isNeedAptagd -> isNeedAptagd
    boolean isNeedPoiRegion -> isNeedPoiRegion
    boolean isNeedRegular -> isNeedRegular
    com.baidu.location.LocationClientOption$LocationMode a -> a
    boolean equals(com.baidu.location.LocationClientOption) -> equals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setAddrType(java.lang.String) -> setAddrType
    void setIsNeedAddress(boolean) -> setIsNeedAddress
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    void setLocationMode(com.baidu.location.LocationClientOption$LocationMode) -> setLocationMode
    com.baidu.location.LocationClientOption$LocationMode getLocationMode() -> getLocationMode
    void setNeedDeviceDirect(boolean) -> setNeedDeviceDirect
    java.lang.String getServiceName() -> getServiceName
    void setServiceName(java.lang.String) -> setServiceName
    void setIsNeedLocationDescribe(boolean) -> setIsNeedLocationDescribe
    void setIsNeedLocationPoiList(boolean) -> setIsNeedLocationPoiList
    void setSema(boolean,boolean,boolean) -> setSema
    void disableCache(boolean) -> disableCache
    boolean isDisableCache() -> isDisableCache
    void SetIgnoreCacheException(boolean) -> SetIgnoreCacheException
    void setIgnoreKillProcess(boolean) -> setIgnoreKillProcess
    void setEnableSimulateGps(boolean) -> setEnableSimulateGps
com.baidu.location.LocationClientOption$1 -> com.baidu.location.LocationClientOption$1:
    int[] a -> a
com.baidu.location.LocationClientOption$LocationMode -> com.baidu.location.LocationClientOption$LocationMode:
    com.baidu.location.LocationClientOption$LocationMode Hight_Accuracy -> Hight_Accuracy
    com.baidu.location.LocationClientOption$LocationMode Battery_Saving -> Battery_Saving
    com.baidu.location.LocationClientOption$LocationMode Device_Sensors -> Device_Sensors
    com.baidu.location.LocationClientOption$LocationMode[] a -> a
    com.baidu.location.LocationClientOption$LocationMode[] values() -> values
    com.baidu.location.LocationClientOption$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.location.Poi -> com.baidu.location.Poi:
    double a -> a
    java.lang.String do -> do
    java.lang.String if -> if
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> getId
    double getRank() -> getRank
    java.lang.String getName() -> getName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.location.Poi$1 -> com.baidu.location.Poi$1:
    com.baidu.location.Poi a(android.os.Parcel) -> a
    com.baidu.location.Poi[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.a.a -> com.baidu.location.a.a:
    com.baidu.location.a.a$a l4 -> l4
    android.os.Messenger l6 -> l6
    android.os.Looper l7 -> l7
    android.os.HandlerThread l3 -> l3
    boolean l5 -> l5
    long l8 -> l8
    void onCreate(android.content.Context) -> onCreate
    void dQ() -> dQ
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void dP() -> dP
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.Handler dO() -> dO
    long dN() -> dN
    void m(android.os.Message) -> m
    void l(android.os.Message) -> l
    void n(android.os.Message) -> n
    boolean onUnBind(android.content.Intent) -> onUnBind
    double getVersion() -> getVersion
    void do(com.baidu.location.a.a,android.os.Message) -> do
    void for(com.baidu.location.a.a,android.os.Message) -> for
    void if(com.baidu.location.a.a,android.os.Message) -> if
    void if(com.baidu.location.a.a) -> if
    void do(com.baidu.location.a.a) -> do
com.baidu.location.a.a$a -> com.baidu.location.a.a$a:
    com.baidu.location.a.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.b.a -> com.baidu.location.b.a:
    java.lang.String a -> a
    java.lang.String do -> do
    boolean if -> if
    java.lang.String if() -> if
    void a(java.lang.String) -> a
    java.lang.String do() -> do
    void if(java.lang.String) -> if
    boolean a() -> a
    void a(boolean) -> a
    java.lang.String toString() -> toString
com.baidu.location.b.b -> com.baidu.location.b.b:
    boolean a -> a
com.baidu.location.b.c -> com.baidu.location.b.c:
    com.baidu.location.b.c bu -> bu
    java.lang.String bo -> bo
    java.lang.String bs -> bs
    java.lang.String bq -> bq
    android.hardware.SensorManager bl -> bl
    int bm -> bm
    int bk -> bk
    android.hardware.Sensor br -> br
    java.lang.String bj -> bj
    java.lang.String bp -> bp
    java.lang.String bt -> bt
    java.lang.String bn -> bn
    com.baidu.location.b.c N() -> N
    void if(java.lang.String,java.lang.String) -> if
    java.lang.String L() -> L
    java.lang.String P() -> P
    java.lang.String M() -> M
    java.lang.String K() -> K
    java.lang.String do(boolean) -> do
    java.lang.String if(boolean,java.lang.String) -> if
    java.lang.String O() -> O
com.baidu.location.b.d -> com.baidu.location.b.d:
    com.baidu.location.b.d bA -> bA
    long bw -> bw
    long by -> by
    long bC -> bC
    java.lang.String bz -> bz
    java.lang.String bv -> bv
    java.lang.String bE -> bE
    java.lang.String bD -> bD
    int bB -> bB
    com.baidu.location.b.d$a bx -> bx
    com.baidu.location.b.d U() -> U
    java.lang.String S() -> S
    java.lang.String V() -> V
    java.lang.String R() -> R
    void Q() -> Q
    void T() -> T
    void case(java.lang.String) -> case
    java.lang.String for(com.baidu.location.b.d) -> for
    long do(com.baidu.location.b.d) -> do
    java.lang.String int(com.baidu.location.b.d,java.lang.String) -> int
    java.lang.String for(com.baidu.location.b.d,java.lang.String) -> for
    int if(com.baidu.location.b.d,int) -> if
    long if(com.baidu.location.b.d,long) -> if
    long if(com.baidu.location.b.d) -> if
    void int(com.baidu.location.b.d) -> int
    java.lang.String do(com.baidu.location.b.d,java.lang.String) -> do
    java.lang.String if(com.baidu.location.b.d,java.lang.String) -> if
    long do(com.baidu.location.b.d,long) -> do
com.baidu.location.b.d$a -> com.baidu.location.b.d$a:
    boolean dm -> dm
    com.baidu.location.b.d dl -> dl
    void au() -> au
    void int(boolean) -> int
    void aw() -> aw
    void ax() -> ax
com.baidu.location.b.e -> com.baidu.location.b.e:
    java.lang.String do -> do
    java.util.List for -> for
    com.baidu.location.b.e a -> a
    android.content.Context if -> if
    java.lang.String int -> int
    com.baidu.location.b.e do() -> do
    java.lang.String for() -> for
    java.util.List if() -> if
    java.util.List int() -> int
    java.util.List a() -> a
    boolean a(java.lang.String) -> a
com.baidu.location.b.f -> com.baidu.location.b.f:
    float bi -> bi
    java.lang.String bh -> bh
    int bg -> bg
com.baidu.location.b.g -> com.baidu.location.b.g:
    java.lang.String m -> m
    int P -> P
    int d -> d
    int byte -> byte
    int for -> for
    int o -> o
    int v -> v
    int X -> X
    int g -> g
    int U -> U
    int aa -> aa
    int goto -> goto
    int O -> O
    int long -> long
    int u -> u
    int T -> T
    int Q -> Q
    int s -> s
    int b -> b
    int do -> do
    int else -> else
    int t -> t
    int r -> r
    int l -> l
    int D -> D
    int h -> h
    int case -> case
    int M -> M
    int i -> i
    int N -> N
    int G -> G
    int L -> L
    int F -> F
    int q -> q
    int V -> V
    int z -> z
    int x -> x
    int W -> W
    int R -> R
    int C -> C
    int E -> E
    int B -> B
    int try -> try
    int p -> p
    int k -> k
    int int -> int
    int if -> if
    int K -> K
    int char -> char
    int J -> J
    int y -> y
    int void -> void
    int a -> a
    int c -> c
    int Z -> Z
    int n -> n
    int S -> S
    int new -> new
    int f -> f
    int j -> j
    int e -> e
    int A -> A
    int I -> I
    int w -> w
    int H -> H
    int Y -> Y
com.baidu.location.b.h -> com.baidu.location.b.h:
    com.baidu.location.b.h bH -> bH
    double[][] bG -> bG
    java.util.LinkedList bF -> bF
    com.baidu.location.b.h W() -> W
    boolean for(double,double) -> for
    int if(double) -> if
com.baidu.location.b.h$a -> com.baidu.location.b.h$a:
    double do -> do
    double if -> if
    com.baidu.location.b.h a -> a
com.baidu.location.b.h$b -> com.baidu.location.b.h$b:
    com.baidu.location.b.h$a do -> do
    com.baidu.location.b.h$a if -> if
    com.baidu.location.b.h a -> a
    double if(com.baidu.location.b.h$a) -> if
    boolean a(com.baidu.location.b.h$a) -> a
com.baidu.location.b.i -> com.baidu.location.b.i:
    boolean if -> if
    boolean for -> for
    boolean int -> int
    boolean do -> do
    boolean a -> a
com.baidu.location.b.j -> com.baidu.location.b.j:
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.location.b.j$a -> com.baidu.location.b.j$a:
    java.lang.String a(byte[]) -> a
com.baidu.location.b.k -> com.baidu.location.b.k:
    boolean cq -> cq
    boolean cK -> cK
    boolean b2 -> b2
    int b5 -> b5
    java.lang.String bR -> bR
    java.lang.String cz -> cz
    java.lang.String ca -> ca
    java.lang.String bY -> bY
    java.lang.String b9 -> b9
    java.lang.String bI -> bI
    java.lang.String b3 -> b3
    java.lang.String bZ -> bZ
    boolean ci -> ci
    java.lang.String cj -> cj
    boolean b1 -> b1
    boolean bT -> bT
    boolean cm -> cm
    boolean bW -> bW
    boolean cn -> cn
    java.lang.String cR -> cR
    boolean cp -> cp
    int b7 -> b7
    double ct -> ct
    double cI -> cI
    double bK -> bK
    double b8 -> b8
    int cs -> cs
    byte[] b6 -> b6
    boolean cQ -> cQ
    int b4 -> b4
    float cU -> cU
    float b0 -> b0
    float co -> co
    float cE -> cE
    int cb -> cb
    int cu -> cu
    int cG -> cG
    int bN -> bN
    int bL -> bL
    int cM -> cM
    int bU -> bU
    float cl -> cl
    float ck -> ck
    float cS -> cS
    float cB -> cB
    int cH -> cH
    float bP -> bP
    int cC -> cC
    float bJ -> bJ
    float cf -> cf
    float ce -> ce
    int cd -> cd
    int cc -> cc
    int cA -> cA
    boolean bV -> bV
    boolean bO -> bO
    int cF -> cF
    int cJ -> cJ
    int cv -> cv
    long cw -> cw
    long cN -> cN
    long cy -> cy
    long cx -> cx
    long cL -> cL
    long cT -> cT
    int bX -> bX
    int cP -> cP
    int bM -> bM
    int bQ -> bQ
    float cr -> cr
    float ch -> ch
    float cD -> cD
    int cg -> cg
    int cO -> cO
    int bS -> bS
    int for(java.lang.String,java.lang.String,java.lang.String) -> for
    float do(java.lang.String,java.lang.String,java.lang.String) -> do
    double int(java.lang.String,java.lang.String,java.lang.String) -> int
    java.lang.String if(java.lang.String,java.lang.String,java.lang.String,double) -> if
    java.lang.String ad() -> ad
    java.lang.String X() -> X
    java.lang.String if(com.baidu.location.h.h,com.baidu.location.h.f,android.location.Location,java.lang.String,int) -> if
    boolean do(android.content.Context) -> do
    java.lang.String if(com.baidu.location.h.h,com.baidu.location.h.f,android.location.Location,java.lang.String) -> if
    boolean do(com.baidu.location.BDLocation) -> do
    java.lang.String Z() -> Z
    java.lang.String ab() -> ab
    java.lang.String aa() -> aa
    java.lang.String ae() -> ae
    java.lang.String ac() -> ac
    java.lang.String ag() -> ag
    java.lang.String Y() -> Y
    java.lang.String af() -> af
    java.lang.String ah() -> ah
    java.lang.String ai() -> ai
    java.lang.String if(java.io.File) -> if
com.baidu.location.b.l -> com.baidu.location.b.l:
    long cX -> cX
    long c7 -> c7
    long cV -> cV
    long c2 -> c2
    int c8 -> c8
    java.lang.String c5 -> c5
    java.lang.String cY -> cY
    java.lang.String cW -> cW
    java.lang.String c6 -> c6
    java.lang.String cZ -> cZ
    java.lang.String c3 -> c3
    java.lang.String c0 -> c0
    java.lang.String c4 -> c4
    java.lang.String c1 -> c1
    void aj() -> aj
    void do(long) -> do
    void if(long) -> if
    void for(long) -> for
    void int(long) -> int
    void for(boolean) -> for
    void char(java.lang.String) -> char
    void else(java.lang.String) -> else
    java.lang.String ak() -> ak
com.baidu.location.b.m -> com.baidu.location.b.m:
    boolean dd -> dd
    int dc -> dc
    java.lang.String dh -> dh
    int dj -> dj
    java.lang.String c9 -> c9
    int dk -> dk
    org.apache.http.HttpEntity da -> da
    java.util.List db -> db
    java.lang.String dg -> dg
    byte[] df -> df
    java.lang.String de -> de
    int di -> di
    void au() -> au
    void int(boolean) -> int
    void as() -> as
    void ap() -> ap
    void ao() -> ao
    void at() -> at
    void an() -> an
    void av() -> av
    org.apache.http.client.HttpClient if(org.apache.http.params.HttpParams) -> if
    void am() -> am
    int aq() -> aq
    int if(android.content.Context,android.net.NetworkInfo) -> if
    boolean for(android.content.Context) -> for
    void if(com.baidu.location.b.m) -> if
    java.lang.String al() -> al
    int ar() -> ar
    boolean if(com.baidu.location.b.m,boolean) -> if
com.baidu.location.b.m$1 -> com.baidu.location.b.m$1:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.m$2 -> com.baidu.location.b.m$2:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.m$3 -> com.baidu.location.b.m$3:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.m$4 -> com.baidu.location.b.m$4:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.m$5 -> com.baidu.location.b.m$5:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.m$6 -> com.baidu.location.b.m$6:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.m$a -> com.baidu.location.b.m$a:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.baidu.location.b.m$a$1 -> com.baidu.location.b.m$a$1:
    com.baidu.location.b.m$a a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.baidu.location.b.n -> com.baidu.location.b.n:
    java.lang.String try -> try
    int for -> for
    com.baidu.location.b.n if -> if
    int do -> do
    int a -> a
    int new -> new
    int int -> int
    com.baidu.location.b.n if() -> if
    void a(int,long) -> a
    long a(int) -> a
    long do() -> do
    void for(long) -> for
    long a() -> a
    void do(long) -> do
    long int() -> int
    void if(long) -> if
    long for() -> for
    void a(long) -> a
com.baidu.location.b.o -> com.baidu.location.b.o:
    com.baidu.location.b.o e4 -> e4
    java.lang.String e7 -> e7
    int fg -> fg
    int fd -> fd
    int e9 -> e9
    int e6 -> e6
    int fc -> fc
    int e8 -> e8
    java.lang.String e3 -> e3
    java.lang.String ff -> ff
    java.lang.String fh -> fh
    java.text.SimpleDateFormat fb -> fb
    com.baidu.location.b.l e5 -> e5
    com.baidu.location.b.o$a fe -> fe
    long fa -> fa
    com.baidu.location.b.o aY() -> aY
    com.baidu.location.b.l aV() -> aV
    void aX() -> aX
    void if(com.baidu.location.b.l) -> if
    void j(java.lang.String) -> j
    void aW() -> aW
    void i(java.lang.String) -> i
    boolean if(java.lang.String,java.util.List) -> if
    void for(java.lang.String,java.lang.String) -> for
    long if(com.baidu.location.b.o,long) -> if
com.baidu.location.b.o$a -> com.baidu.location.b.o$a:
    java.lang.String dp -> dp
    boolean dq -> dq
    com.baidu.location.b.o dn -> dn
    boolean ay() -> ay
    void au() -> au
    void int(boolean) -> int
    void goto(java.lang.String) -> goto
com.baidu.location.c.a -> com.baidu.location.c.a:
    com.baidu.location.c.d o -> o
    int case -> case
    double new -> new
    double int -> int
    java.lang.Long k -> k
    com.baidu.location.c.a$b void -> void
    com.baidu.location.c.a$b x -> x
    android.database.sqlite.SQLiteDatabase q -> q
    android.database.sqlite.SQLiteDatabase byte -> byte
    int i -> i
    int else -> else
    int p -> p
    int n -> n
    int d -> d
    int u -> u
    int char -> char
    int c -> c
    double w -> w
    double for -> for
    int j -> j
    java.lang.StringBuffer r -> r
    java.lang.StringBuffer goto -> goto
    java.util.HashSet t -> t
    java.util.concurrent.ConcurrentHashMap long -> long
    java.util.concurrent.ConcurrentHashMap do -> do
    int l -> l
    int v -> v
    int if -> if
    int try -> try
    java.lang.StringBuffer b -> b
    boolean m -> m
    int h -> h
    int g -> g
    int f -> f
    int e -> e
    int s -> s
    android.database.sqlite.SQLiteDatabase if() -> if
    void do() -> do
    com.baidu.location.BDLocation if(java.lang.Long) -> if
    com.baidu.location.BDLocation if(java.util.LinkedHashMap,com.baidu.location.BDLocation,int) -> if
    void if(java.lang.String,java.lang.Long,com.baidu.location.BDLocation) -> if
    void if(java.util.LinkedHashMap) -> if
    void if(com.baidu.location.BDLocation,com.baidu.location.BDLocation,com.baidu.location.BDLocation,java.lang.String,java.lang.Long) -> if
    android.database.Cursor if(com.baidu.location.c.c$a) -> if
    double if(double,double,double,double) -> if
    int if(java.util.ArrayList,double) -> if
    void for() -> for
    void if(java.lang.String,java.lang.String,java.lang.String) -> if
    void if(java.lang.String[]) -> if
    void if(com.baidu.location.c.a,java.lang.String,java.lang.Long,com.baidu.location.BDLocation) -> if
    java.lang.StringBuffer if(com.baidu.location.c.a,java.lang.StringBuffer) -> if
    java.lang.StringBuffer do(com.baidu.location.c.a,java.lang.StringBuffer) -> do
    void if(com.baidu.location.c.a,java.util.LinkedHashMap) -> if
    void if(com.baidu.location.c.a,com.baidu.location.BDLocation,com.baidu.location.BDLocation,com.baidu.location.BDLocation,java.lang.String,java.lang.Long) -> if
    com.baidu.location.c.d for(com.baidu.location.c.a) -> for
    android.database.sqlite.SQLiteDatabase do(com.baidu.location.c.a) -> do
    android.database.sqlite.SQLiteDatabase int(com.baidu.location.c.a) -> int
    void if(com.baidu.location.c.a,java.lang.String[]) -> if
    void if(com.baidu.location.c.a,java.lang.String,java.lang.String,java.lang.String) -> if
    com.baidu.location.c.a$b if(com.baidu.location.c.a) -> if
com.baidu.location.c.a$1 -> com.baidu.location.c.a$1:
    com.baidu.location.c.a a -> a
com.baidu.location.c.a$a -> com.baidu.location.c.a$a:
    java.lang.String new -> new
    java.lang.Long for -> for
    com.baidu.location.BDLocation byte -> byte
    com.baidu.location.BDLocation int -> int
    com.baidu.location.BDLocation do -> do
    java.lang.String if -> if
    java.util.LinkedHashMap try -> try
    com.baidu.location.c.a a -> a
    void run() -> run
com.baidu.location.c.a$b -> com.baidu.location.c.a$b:
    java.lang.String dw -> dw
    java.lang.String dy -> dy
    java.lang.String ds -> ds
    com.baidu.location.c.a dF -> dF
    int dr -> dr
    int dD -> dD
    java.lang.String du -> du
    java.lang.String dE -> dE
    java.lang.String dI -> dI
    java.lang.String dB -> dB
    boolean dG -> dG
    int dv -> dv
    long dH -> dH
    long dJ -> dJ
    long dt -> dt
    long dz -> dz
    int dA -> dA
    long dC -> dC
    long dx -> dx
    com.baidu.location.c.a dK -> dK
    void au() -> au
    void int(boolean) -> int
    void aH() -> aH
    void aC() -> aC
    boolean aD() -> aD
    void az() -> az
    java.lang.String aE() -> aE
    java.lang.String aG() -> aG
    java.lang.String aA() -> aA
    java.lang.String aB() -> aB
    boolean aF() -> aF
    void new(java.lang.String,java.lang.String,java.lang.String) -> new
    void if(com.baidu.location.c.a$b,java.lang.String,java.lang.String,java.lang.String) -> if
    boolean if(com.baidu.location.c.a$b,boolean) -> if
    long if(com.baidu.location.c.a$b,long) -> if
    com.baidu.location.c.a if(com.baidu.location.c.a$b) -> if
    void do(com.baidu.location.c.a$b) -> do
com.baidu.location.c.a$b$1 -> com.baidu.location.c.a$b$1:
    com.baidu.location.c.a$b a -> a
    void run() -> run
com.baidu.location.c.a$c -> com.baidu.location.c.a$c:
    double a -> a
    double do -> do
    double if -> if
com.baidu.location.c.b -> com.baidu.location.c.b:
    com.baidu.location.c.b fk -> fk
    java.lang.String fq -> fq
    boolean fr -> fr
    boolean fy -> fy
    double fl -> fl
    double fv -> fv
    double fu -> fu
    double fp -> fp
    double fo -> fo
    boolean ft -> ft
    int fn -> fn
    int fi -> fi
    int fz -> fz
    java.lang.String fs -> fs
    java.lang.String fx -> fx
    java.lang.String fm -> fm
    java.lang.String fw -> fw
    android.os.Handler fj -> fj
    com.baidu.location.c.b a0() -> a0
    void a1() -> a1
    com.baidu.location.BDLocation try(boolean) -> try
    com.baidu.location.BDLocation if(java.lang.String,java.util.List,boolean) -> if
    void do(java.lang.String,java.util.List) -> do
    void if(java.lang.String,android.database.sqlite.SQLiteDatabase) -> if
    void if(java.util.List,android.database.sqlite.SQLiteDatabase) -> if
    void if(java.lang.String,com.baidu.location.h.h,android.database.sqlite.SQLiteDatabase) -> if
    void if(com.baidu.location.h.f,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
    void if(java.lang.String,com.baidu.location.h.h,com.baidu.location.h.f,com.baidu.location.BDLocation) -> if
    java.lang.String new(boolean) -> new
    void aZ() -> aZ
    void if(com.baidu.location.c.b) -> if
    void if(com.baidu.location.c.b,java.lang.String,java.util.List) -> if
    java.lang.String do(com.baidu.location.c.b,boolean) -> do
    boolean if(com.baidu.location.c.b,boolean) -> if
    java.lang.String a2() -> a2
    void if(com.baidu.location.c.b,java.lang.String,com.baidu.location.h.h,android.database.sqlite.SQLiteDatabase) -> if
    void if(com.baidu.location.c.b,com.baidu.location.h.f,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
com.baidu.location.c.b$1 -> com.baidu.location.c.b$1:
    com.baidu.location.c.b a -> a
    void run() -> run
com.baidu.location.c.b$2 -> com.baidu.location.c.b$2:
    java.lang.String if -> if
    java.util.List do -> do
    com.baidu.location.c.b a -> a
    java.lang.String a() -> a
    java.lang.Object call() -> call
com.baidu.location.c.b$a -> com.baidu.location.c.b$a:
    com.baidu.location.c.b a -> a
    java.lang.Boolean a(java.lang.Boolean[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.c.b$b -> com.baidu.location.c.b$b:
    com.baidu.location.c.b a -> a
    java.lang.Boolean a(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.c.c -> com.baidu.location.c.c:
    java.lang.String R -> R
    java.lang.String Z -> Z
    java.lang.String U -> U
    java.lang.String M -> M
    java.lang.String Y -> Y
    java.lang.String A -> A
    java.lang.String J -> J
    java.lang.String aa -> aa
    java.lang.String I -> I
    java.lang.String K -> K
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String X -> X
    java.lang.String N -> N
    java.lang.String W -> W
    java.lang.String F -> F
    java.lang.String E -> E
    java.lang.String L -> L
    java.lang.String Q -> Q
    java.lang.String z -> z
    java.lang.String C -> C
    java.lang.String B -> B
    java.lang.String P -> P
    java.lang.String y -> y
    java.lang.String V -> V
    java.lang.String G -> G
    java.lang.String O -> O
    java.lang.String[] D -> D
    java.text.SimpleDateFormat H -> H
    com.baidu.location.BDLocation if(android.database.Cursor) -> if
    android.database.Cursor if(com.baidu.location.BDLocation) -> if
    java.lang.String[] if(com.baidu.location.h.h,com.baidu.location.h.f,com.baidu.location.BDLocation,java.lang.String,boolean,int) -> if
    java.lang.String if(com.baidu.location.BDLocation,int) -> if
    java.lang.String if(com.baidu.location.BDLocation,com.baidu.location.BDLocation,com.baidu.location.c.c$a) -> if
com.baidu.location.c.c$a -> com.baidu.location.c.c$a:
    java.lang.String a -> a
    java.lang.String case -> case
    java.lang.String else -> else
    java.lang.String for -> for
    boolean new -> new
    boolean int -> int
    boolean byte -> byte
    int do -> do
    com.baidu.location.BDLocation try -> try
    boolean char -> char
    java.util.LinkedHashMap if -> if
com.baidu.location.c.d -> com.baidu.location.c.d:
    android.content.Context an -> an
    com.baidu.location.c.d aq -> aq
    java.io.File af -> af
    com.baidu.location.c.g aj -> aj
    com.baidu.location.c.a al -> al
    com.baidu.location.c.f ah -> ah
    com.baidu.location.c.e ac -> ac
    java.lang.String ao -> ao
    java.lang.String ap -> ap
    java.lang.String ai -> ai
    java.lang.String ag -> ag
    java.lang.String ak -> ak
    java.lang.String ad -> ad
    java.lang.String am -> am
    java.lang.String ar -> ar
    java.lang.String ab -> ab
    java.lang.String ae -> ae
    java.lang.String as -> as
    int at -> at
    android.net.Uri int(java.lang.String) -> int
    com.baidu.location.c.d try() -> try
    void if(android.content.Context) -> if
    android.content.Context char() -> char
    java.io.File d() -> d
    com.baidu.location.BDLocation do(java.lang.String[]) -> do
    com.baidu.location.BDLocation if(com.baidu.location.h.h,com.baidu.location.h.f,com.baidu.location.BDLocation,com.baidu.location.c.d$c,com.baidu.location.c.d$b) -> if
    android.database.Cursor for(java.lang.String[]) -> for
    boolean long() -> long
    boolean e() -> e
    boolean case() -> case
    boolean goto() -> goto
    boolean m() -> m
    boolean i() -> i
    long if(java.lang.String) -> if
    boolean do(java.lang.String) -> do
    void k() -> k
    com.baidu.location.c.g j() -> j
    com.baidu.location.c.f l() -> l
    com.baidu.location.c.e new() -> new
    void int() -> int
    boolean void() -> void
    void n() -> n
    void h() -> h
    double byte() -> byte
    android.content.Context else() -> else
    com.baidu.location.c.e if(com.baidu.location.c.d) -> if
    android.net.Uri for(java.lang.String) -> for
    com.baidu.location.c.a do(com.baidu.location.c.d) -> do
com.baidu.location.c.d$1 -> com.baidu.location.c.d$1:
    java.lang.String[] if -> if
    com.baidu.location.c.d a -> a
    com.baidu.location.BDLocation a() -> a
    java.lang.Object call() -> call
com.baidu.location.c.d$a -> com.baidu.location.c.d$a:
    com.baidu.location.c.d$a new -> new
    com.baidu.location.c.d$a a -> a
    com.baidu.location.c.d$a if -> if
    com.baidu.location.c.d$a for -> for
    com.baidu.location.c.d$a int -> int
    com.baidu.location.c.d$a[] do -> do
    com.baidu.location.c.d$a[] a() -> a
    com.baidu.location.c.d$a valueOf(java.lang.String) -> valueOf
com.baidu.location.c.d$b -> com.baidu.location.c.d$b:
    com.baidu.location.c.d$b a -> a
    com.baidu.location.c.d$b do -> do
    com.baidu.location.c.d$b[] if -> if
    com.baidu.location.c.d$b[] a() -> a
    com.baidu.location.c.d$b valueOf(java.lang.String) -> valueOf
com.baidu.location.c.d$c -> com.baidu.location.c.d$c:
    com.baidu.location.c.d$c do -> do
    com.baidu.location.c.d$c if -> if
    com.baidu.location.c.d$c[] a -> a
    com.baidu.location.c.d$c[] a() -> a
    com.baidu.location.c.d$c valueOf(java.lang.String) -> valueOf
com.baidu.location.c.e -> com.baidu.location.c.e:
    java.lang.String au -> au
    com.baidu.location.c.d aA -> aA
    android.database.sqlite.SQLiteDatabase aR -> aR
    com.baidu.location.c.e$a aP -> aP
    boolean aO -> aO
    boolean ax -> ax
    boolean aE -> aE
    boolean aD -> aD
    boolean aF -> aF
    java.lang.String[] aG -> aG
    boolean aC -> aC
    int aN -> aN
    int aJ -> aJ
    int aM -> aM
    double aw -> aw
    double aL -> aL
    double aQ -> aQ
    double ay -> ay
    double aH -> aH
    int aT -> aT
    boolean aB -> aB
    long aI -> aI
    long aS -> aS
    long az -> az
    long aK -> aK
    long av -> av
    int s() -> s
    double A() -> A
    double r() -> r
    double p() -> p
    double E() -> E
    double z() -> z
    void q() -> q
    boolean w() -> w
    boolean C() -> C
    boolean y() -> y
    boolean x() -> x
    boolean B() -> B
    boolean t() -> t
    long try(java.lang.String) -> try
    int o() -> o
    java.lang.String[] v() -> v
    int u() -> u
    int D() -> D
    boolean new(java.lang.String) -> new
    void int(java.lang.String[]) -> int
    boolean if(com.baidu.location.c.e,boolean) -> if
    boolean do(com.baidu.location.c.e,boolean) -> do
    boolean for(com.baidu.location.c.e,boolean) -> for
    boolean int(com.baidu.location.c.e,boolean) -> int
    boolean new(com.baidu.location.c.e,boolean) -> new
    boolean try(com.baidu.location.c.e,boolean) -> try
    java.lang.String[] if(com.baidu.location.c.e,java.lang.String[]) -> if
    int for(com.baidu.location.c.e,int) -> for
    int if(com.baidu.location.c.e,int) -> if
    int do(com.baidu.location.c.e,int) -> do
    double new(com.baidu.location.c.e,double) -> new
    double if(com.baidu.location.c.e,double) -> if
    double do(com.baidu.location.c.e,double) -> do
    double for(com.baidu.location.c.e,double) -> for
    double int(com.baidu.location.c.e,double) -> int
    long for(com.baidu.location.c.e,long) -> for
    long int(com.baidu.location.c.e,long) -> int
    long if(com.baidu.location.c.e,long) -> if
    long new(com.baidu.location.c.e,long) -> new
    long do(com.baidu.location.c.e,long) -> do
    int int(com.baidu.location.c.e,int) -> int
    boolean h(com.baidu.location.c.e) -> h
    boolean char(com.baidu.location.c.e) -> char
    boolean for(com.baidu.location.c.e) -> for
    boolean j(com.baidu.location.c.e) -> j
    boolean d(com.baidu.location.c.e) -> d
    boolean byte(com.baidu.location.c.e) -> byte
    int k(com.baidu.location.c.e) -> k
    double if(com.baidu.location.c.e) -> if
    double i(com.baidu.location.c.e) -> i
    double goto(com.baidu.location.c.e) -> goto
    double int(com.baidu.location.c.e) -> int
    double l(com.baidu.location.c.e) -> l
    long long(com.baidu.location.c.e) -> long
    long new(com.baidu.location.c.e) -> new
    long m(com.baidu.location.c.e) -> m
    long e(com.baidu.location.c.e) -> e
    long case(com.baidu.location.c.e) -> case
    int void(com.baidu.location.c.e) -> void
    int try(com.baidu.location.c.e) -> try
    int do(com.baidu.location.c.e) -> do
    com.baidu.location.c.d else(com.baidu.location.c.e) -> else
com.baidu.location.c.e$1 -> com.baidu.location.c.e$1:
com.baidu.location.c.e$a -> com.baidu.location.c.e$a:
    int dR -> dR
    long dY -> dY
    long dQ -> dQ
    boolean dN -> dN
    java.lang.String ed -> ed
    java.lang.String ei -> ei
    java.lang.String dS -> dS
    java.lang.String dT -> dT
    java.lang.String ej -> ej
    java.lang.String d1 -> d1
    java.lang.String dM -> dM
    java.lang.String eb -> eb
    java.lang.String dW -> dW
    java.lang.String dX -> dX
    java.lang.String d5 -> d5
    java.lang.String ef -> ef
    java.lang.String d8 -> d8
    java.lang.String d3 -> d3
    java.lang.String ea -> ea
    java.lang.String dP -> dP
    java.lang.String ec -> ec
    java.lang.String dO -> dO
    java.lang.String eg -> eg
    java.lang.String d4 -> d4
    java.lang.String dV -> dV
    java.lang.String d9 -> d9
    java.lang.String dL -> dL
    java.lang.String dZ -> dZ
    java.lang.String d7 -> d7
    java.lang.String d6 -> d6
    java.lang.String eh -> eh
    int dU -> dU
    int d2 -> d2
    long d0 -> d0
    com.baidu.location.c.e ee -> ee
    void au() -> au
    void int(boolean) -> int
    void aJ() -> aJ
    boolean aI() -> aI
    void if(com.baidu.location.c.e$a) -> if
com.baidu.location.c.f -> com.baidu.location.c.f:
    com.baidu.location.c.d aW -> aW
    java.lang.String aV -> aV
    int a1 -> a1
    int a0 -> a0
    double a2 -> a2
    double a5 -> a5
    double a3 -> a3
    double a6 -> a6
    double[] aY -> aY
    java.lang.String aZ -> aZ
    int a4 -> a4
    android.database.sqlite.SQLiteDatabase a7 -> a7
    int aX -> aX
    int aU -> aU
    boolean F() -> F
    org.json.JSONObject H() -> H
    void if(org.json.JSONObject) -> if
    com.baidu.location.Address do(double,double) -> do
    java.util.List if(double,double) -> if
    int if(int,int) -> if
    double[] for(double,double,double,double) -> for
    double int(double,double,double,double) -> int
    double if(double,double,double,double,double,double) -> if
    java.lang.String if(int,double,double) -> if
    java.lang.String do(int,double,double) -> do
    double[] G() -> G
    double[] do(double,double,double,double) -> do
com.baidu.location.c.f$1 -> com.baidu.location.c.f$1:
    com.baidu.location.c.f a -> a
    int a(java.util.Map$Entry,java.util.Map$Entry) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.baidu.location.c.f$a -> com.baidu.location.c.f$a:
    double if -> if
    double a -> a
    double if(com.baidu.location.c.f$a) -> if
    double a(com.baidu.location.c.f$a) -> a
    double if(com.baidu.location.c.f$a,double) -> if
    double a(com.baidu.location.c.f$a,double) -> a
com.baidu.location.c.f$b -> com.baidu.location.c.f$b:
    com.baidu.location.c.f$b a -> a
    com.baidu.location.c.f$b do -> do
    com.baidu.location.c.f$b goto -> goto
    com.baidu.location.c.f$b char -> char
    int byte -> byte
    java.lang.String new -> new
    int case -> case
    java.lang.String if -> if
    java.lang.String try -> try
    java.lang.String else -> else
    int int -> int
    com.baidu.location.c.f$b[] for -> for
    com.baidu.location.c.f$b[] a() -> a
    com.baidu.location.c.f$b valueOf(java.lang.String) -> valueOf
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
    void if(java.lang.StringBuffer,java.lang.String,java.lang.String,int) -> if
    java.lang.String a(org.json.JSONObject) -> a
    java.lang.String a(int,double,double) -> a
    java.lang.String if(com.baidu.location.c.f$b) -> if
    java.lang.String do(com.baidu.location.c.f$b) -> do
    java.lang.String a(com.baidu.location.c.f$b,org.json.JSONObject) -> a
    int for(com.baidu.location.c.f$b) -> for
    java.lang.String a(com.baidu.location.c.f$b,int,double,double) -> a
    int a(com.baidu.location.c.f$b) -> a
    void a(java.lang.StringBuffer,java.lang.String,java.lang.String,int) -> a
com.baidu.location.c.f$b$1 -> com.baidu.location.c.f$b$1:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.c.f$b$2 -> com.baidu.location.c.f$b$2:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.c.f$b$3 -> com.baidu.location.c.f$b$3:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.c.f$b$4 -> com.baidu.location.c.f$b$4:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.c.g -> com.baidu.location.c.g:
    java.lang.String a9 -> a9
    android.database.sqlite.SQLiteDatabase a8 -> a8
    com.baidu.location.c.g$a be -> be
    int bd -> bd
    int bc -> bc
    java.lang.String bb -> bb
    java.lang.String ba -> ba
    void I() -> I
    void byte(java.lang.String) -> byte
    java.lang.String J() -> J
    void if(boolean) -> if
    void if(com.baidu.location.c.g,boolean) -> if
    java.lang.String if(com.baidu.location.c.g) -> if
com.baidu.location.c.g$a -> com.baidu.location.c.g$a:
    int ex -> ex
    java.lang.String ey -> ey
    java.lang.String ep -> ep
    java.lang.String ew -> ew
    java.lang.String en -> en
    int eu -> eu
    int es -> es
    long em -> em
    int ek -> ek
    long et -> et
    java.lang.String el -> el
    boolean er -> er
    boolean ev -> ev
    com.baidu.location.c.g eo -> eo
    com.baidu.location.c.g eq -> eq
    void au() -> au
    void int(boolean) -> int
    void aK() -> aK
    void for(com.baidu.location.c.g$a) -> for
    boolean do(com.baidu.location.c.g$a) -> do
    com.baidu.location.c.g if(com.baidu.location.c.g$a) -> if
com.baidu.location.c.g$a$1 -> com.baidu.location.c.g$a$1:
    com.baidu.location.c.g$a a -> a
    void run() -> run
com.baidu.location.d.a -> com.baidu.location.d.a:
    java.util.ArrayList fG -> fG
    float fK -> fK
    com.baidu.location.BDLocation fH -> fH
    long fM -> fM
    com.baidu.location.LocationClient fO -> fO
    android.content.Context fB -> fB
    int fA -> fA
    long fI -> fI
    boolean fL -> fL
    android.app.PendingIntent fF -> fF
    android.app.AlarmManager fC -> fC
    com.baidu.location.d.a$b fJ -> fJ
    java.lang.String fE -> fE
    com.baidu.location.d.a$a fD -> fD
    boolean fN -> fN
    void a4() -> a4
    int do(com.baidu.location.BDNotifyListener) -> do
    void if(com.baidu.location.BDNotifyListener) -> if
    int for(com.baidu.location.BDNotifyListener) -> for
    boolean a5() -> a5
    void a3() -> a3
    void new(long) -> new
    void for(com.baidu.location.BDLocation) -> for
    java.util.ArrayList do(com.baidu.location.d.a) -> do
    void if(com.baidu.location.d.a,com.baidu.location.BDLocation) -> if
    com.baidu.location.LocationClient if(com.baidu.location.d.a) -> if
com.baidu.location.d.a$a -> com.baidu.location.d.a$a:
    com.baidu.location.d.a a -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.d.a$b -> com.baidu.location.d.a$b:
    com.baidu.location.d.a a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.e.a -> com.baidu.location.e.a:
    long a -> a
    com.baidu.location.h.h if -> if
    android.location.Location for -> for
    java.lang.String do -> do
    void a(java.lang.String) -> a
    java.lang.String do() -> do
    long for() -> for
    void a(long) -> a
    com.baidu.location.h.h a() -> a
    void a(com.baidu.location.h.h) -> a
    android.location.Location if() -> if
    void a(android.location.Location) -> a
com.baidu.location.e.b -> com.baidu.location.e.b:
    float[] fU -> fU
    float[] fS -> fS
    android.hardware.SensorManager fR -> fR
    com.baidu.location.e.b fT -> fT
    float fQ -> fQ
    boolean fP -> fP
    com.baidu.location.e.b a7() -> a7
    void a9() -> a9
    void a8() -> a8
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void byte(boolean) -> byte
    boolean ba() -> ba
    float a6() -> a6
com.baidu.location.e.c -> com.baidu.location.e.c:
    com.baidu.location.h.f f0 -> f0
    com.baidu.location.h.h fZ -> fZ
    boolean fX -> fX
    boolean fV -> fV
    java.lang.String fW -> fW
    android.os.Handler fY -> fY
    void if(android.os.Message) -> if
    void bb() -> bb
    java.lang.String k(java.lang.String) -> k
com.baidu.location.e.c$a -> com.baidu.location.e.c$a:
    java.lang.String eB -> eB
    java.lang.String eA -> eA
    com.baidu.location.e.c ez -> ez
    void au() -> au
    void int(boolean) -> int
    void long(java.lang.String) -> long
com.baidu.location.e.c$b -> com.baidu.location.e.c$b:
    com.baidu.location.e.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.e.d -> com.baidu.location.e.d:
    com.baidu.location.e.d gw -> gw
    java.util.ArrayList gv -> gv
    boolean gy -> gy
    boolean gu -> gu
    boolean gx -> gx
    com.baidu.location.e.d bw() -> bw
    void by() -> by
    boolean bt() -> bt
    boolean bu() -> bu
    void long(android.os.Message) -> long
    void char(android.os.Message) -> char
    boolean goto(android.os.Message) -> goto
    void do(com.baidu.location.BDLocation,int) -> do
    void try(com.baidu.location.BDLocation) -> try
    void if(android.os.Bundle,int) -> if
    void l(java.lang.String) -> l
    void if(com.baidu.location.BDLocation,android.os.Message) -> if
    void br() -> br
    void bq() -> bq
    java.lang.String bz() -> bz
    int else(android.os.Message) -> else
    int case(android.os.Message) -> case
    com.baidu.location.e.d$a if(android.os.Messenger) -> if
    void if(com.baidu.location.e.d$a) -> if
    void bs() -> bs
    void bv() -> bv
    void bx() -> bx
com.baidu.location.e.d$a -> com.baidu.location.e.d$a:
    java.lang.String int -> int
    android.os.Messenger for -> for
    com.baidu.location.LocationClientOption do -> do
    int if -> if
    com.baidu.location.e.d a -> a
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.BDLocation,int) -> a
    void if(com.baidu.location.BDLocation) -> if
    void if() -> if
    void do() -> do
    void a() -> a
    void a(int) -> a
    void a(int,java.lang.String,com.baidu.location.BDLocation) -> a
    void a(int,android.os.Bundle) -> a
    void a(com.baidu.location.e.d$a,int,android.os.Bundle) -> a
    void a(com.baidu.location.e.d$a,int) -> a
com.baidu.location.e.e -> com.baidu.location.e.e:
    java.lang.String eI -> eI
    java.lang.String eH -> eH
    java.lang.String eG -> eG
    java.lang.String eF -> eF
    int eD -> eD
    android.os.Handler eE -> eE
    com.baidu.location.e.e eC -> eC
    com.baidu.location.e.e aR() -> aR
    void aQ() -> aQ
    android.os.Handler aN() -> aN
    void au() -> au
    void int(boolean) -> int
    void aO() -> aO
    void aP() -> aP
    boolean aL() -> aL
    void aM() -> aM
    boolean do(java.lang.String,java.lang.String) -> do
    void if(java.io.File,java.io.File) -> if
    void do(com.baidu.location.e.e) -> do
    boolean for(com.baidu.location.e.e) -> for
    void if(com.baidu.location.e.e) -> if
com.baidu.location.e.e$1 -> com.baidu.location.e.e$1:
    com.baidu.location.e.e a -> a
    void run() -> run
com.baidu.location.e.e$2 -> com.baidu.location.e.e$2:
    com.baidu.location.e.e a -> a
    void run() -> run
com.baidu.location.e.e$3 -> com.baidu.location.e.e$3:
    com.baidu.location.e.e a -> a
    void run() -> run
com.baidu.location.e.f -> com.baidu.location.e.f:
    boolean gD -> gD
    java.lang.String gB -> gB
    com.baidu.location.e.f$a gC -> gC
    com.baidu.location.e.f gA -> gA
    int gz -> gz
    com.baidu.location.e.f bC() -> bC
    void bE() -> bE
    void bF() -> bF
    java.lang.String bB() -> bB
    boolean bA() -> bA
    int bD() -> bD
    boolean if(com.baidu.location.e.f,boolean) -> if
    int if(com.baidu.location.e.f,int) -> if
    java.lang.String if(com.baidu.location.e.f,java.lang.String) -> if
com.baidu.location.e.f$a -> com.baidu.location.e.f$a:
    com.baidu.location.e.f a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.e.g -> com.baidu.location.e.g:
    com.baidu.location.e.g gN -> gN
    com.baidu.location.e.g$a gH -> gH
    boolean gK -> gK
    boolean gM -> gM
    boolean gP -> gP
    boolean gE -> gE
    boolean gR -> gR
    boolean gF -> gF
    boolean gJ -> gJ
    boolean gO -> gO
    int gL -> gL
    java.lang.String gG -> gG
    int gQ -> gQ
    int gI -> gI
    int gS -> gS
    com.baidu.location.e.g bH() -> bH
    void bN() -> bN
    void bK() -> bK
    void bL() -> bL
    boolean n(java.lang.String) -> n
    void bG() -> bG
    void bM() -> bM
    void bJ() -> bJ
    void m(java.lang.String) -> m
    void if(org.apache.http.HttpEntity) -> if
    void do(org.apache.http.HttpEntity) -> do
    void do(int) -> do
    void bI() -> bI
    void bO() -> bO
    void if(int) -> if
    void do(com.baidu.location.e.g,org.apache.http.HttpEntity) -> do
    void if(com.baidu.location.e.g,org.apache.http.HttpEntity) -> if
com.baidu.location.e.g$a -> com.baidu.location.e.g$a:
    java.lang.String eL -> eL
    boolean eK -> eK
    boolean eM -> eM
    com.baidu.location.e.g eJ -> eJ
    void au() -> au
    void int(boolean) -> int
    void if(java.lang.String,boolean) -> if
com.baidu.location.e.h -> com.baidu.location.e.h:
    void b1() -> b1
    void b0() -> b0
com.baidu.location.e.i -> com.baidu.location.e.i:
    com.baidu.location.e.i hB -> hB
    int g7 -> g7
    java.lang.String hf -> hf
    long gV -> gV
    java.lang.String hq -> hq
    int g9 -> g9
    double g1 -> g1
    java.lang.String gW -> gW
    int hd -> hd
    int he -> he
    int gU -> gU
    int hv -> hv
    double gX -> gX
    double hi -> hi
    double hm -> hm
    int hE -> hE
    int gZ -> gZ
    int g3 -> g3
    int hu -> hu
    int hl -> hl
    long hw -> hw
    com.baidu.location.e.i$a g8 -> g8
    boolean g0 -> g0
    boolean g4 -> g4
    int hc -> hc
    float hh -> hh
    float gY -> gY
    long ha -> ha
    int g2 -> g2
    long ho -> ho
    android.location.Location hj -> hj
    android.location.Location hC -> hC
    java.lang.StringBuilder hg -> hg
    long hk -> hk
    android.os.Handler gT -> gT
    java.lang.String hD -> hD
    byte[] hz -> hz
    byte[] g6 -> g6
    int ht -> ht
    java.util.List hn -> hn
    int hA -> hA
    java.lang.String g5 -> g5
    java.lang.String hb -> hb
    java.lang.String hr -> hr
    boolean hs -> hs
    int hy -> hy
    double hp -> hp
    double hx -> hx
    com.baidu.location.e.i bP() -> bP
    void bW() -> bW
    void bV() -> bV
    void bQ() -> bQ
    boolean if(java.lang.String,android.content.Context) -> if
    void for(android.location.Location) -> for
    void do(android.location.Location) -> do
    boolean bX() -> bX
    void bS() -> bS
    void bY() -> bY
    void new(android.location.Location) -> new
    void bU() -> bU
    byte[] for(int) -> for
    void if(android.location.Location) -> if
    void int(android.location.Location) -> int
    void int(int) -> int
    byte[] q(java.lang.String) -> q
    java.lang.String if(java.io.File,java.lang.String) -> if
    void bZ() -> bZ
    java.lang.String o(java.lang.String) -> o
    void bT() -> bT
    void p(java.lang.String) -> p
    void r(java.lang.String) -> r
    void new(int) -> new
    void s(java.lang.String) -> s
    void bR() -> bR
    void if(com.baidu.location.e.i,android.location.Location) -> if
    java.lang.String if(com.baidu.location.e.i,java.io.File,java.lang.String) -> if
    void if(com.baidu.location.e.i,java.lang.String) -> if
    android.os.Handler if(com.baidu.location.e.i) -> if
com.baidu.location.e.i$1 -> com.baidu.location.e.i$1:
    android.location.Location if -> if
    com.baidu.location.e.i a -> a
    void run() -> run
com.baidu.location.e.i$2 -> com.baidu.location.e.i$2:
    com.baidu.location.e.i a -> a
    void run() -> run
com.baidu.location.e.i$3 -> com.baidu.location.e.i$3:
    com.baidu.location.e.i a -> a
    void run() -> run
com.baidu.location.e.i$a -> com.baidu.location.e.i$a:
    java.lang.String eO -> eO
    com.baidu.location.e.i eN -> eN
    void au() -> au
    void int(boolean) -> int
    void void(java.lang.String) -> void
com.baidu.location.e.j -> com.baidu.location.e.j:
    com.baidu.location.e.j hF -> hF
    com.baidu.location.e.j$a hM -> hM
    boolean hK -> hK
    boolean hJ -> hJ
    boolean hL -> hL
    boolean hH -> hH
    boolean hG -> hG
    android.os.Handler hI -> hI
    com.baidu.location.e.j b3() -> b3
    void b2() -> b2
    void b5() -> b5
    void b4() -> b4
    void b6() -> b6
    void b1() -> b1
    void b0() -> b0
    boolean if(com.baidu.location.e.j) -> if
    boolean do(com.baidu.location.e.j) -> do
    boolean if(com.baidu.location.e.j,boolean) -> if
    void for(com.baidu.location.e.j) -> for
com.baidu.location.e.j$1 -> com.baidu.location.e.j$1:
com.baidu.location.e.j$a -> com.baidu.location.e.j$a:
    com.baidu.location.e.j a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.e.j$b -> com.baidu.location.e.j$b:
    com.baidu.location.e.j bf -> bf
    void run() -> run
com.baidu.location.e.j$b$1 -> com.baidu.location.e.j$b$1:
    com.baidu.location.e.j$b a -> a
    void run() -> run
com.baidu.location.e.k -> com.baidu.location.e.k:
    com.baidu.location.e.k hQ -> hQ
    com.baidu.location.h.f hO -> hO
    com.baidu.location.h.h hN -> hN
    long hP -> hP
    long hS -> hS
    java.lang.String hR -> hR
    com.baidu.location.e.k b8() -> b8
    void b7() -> b7
    boolean for(com.baidu.location.h.h) -> for
    boolean for(com.baidu.location.h.f) -> for
    void t(java.lang.String) -> t
    void if(com.baidu.location.e.k,java.lang.String) -> if
com.baidu.location.e.k$a -> com.baidu.location.e.k$a:
    java.lang.String eQ -> eQ
    com.baidu.location.e.k eP -> eP
    void d(java.lang.String) -> d
    void au() -> au
    void int(boolean) -> int
com.baidu.location.e.l -> com.baidu.location.e.l:
    com.baidu.location.e.l ih -> ih
    java.lang.String h6 -> h6
    java.io.File hW -> hW
    int hT -> hT
    int h2 -> h2
    int ia -> ia
    int id -> id
    int h9 -> h9
    int ib -> ib
    int hV -> hV
    int hX -> hX
    java.lang.StringBuffer hU -> hU
    boolean h1 -> h1
    int h7 -> h7
    int ig -> ig
    long h0 -> h0
    long hZ -> hZ
    long ii -> ii
    double h4 -> h4
    double h5 -> h5
    int hY -> hY
    int h3 -> h3
    int h8 -> h8
    java.lang.String ic -> ic
    boolean ie -> ie
    com.baidu.location.e.l cd() -> cd
    void cc() -> cc
    void cg() -> cg
    boolean try(android.location.Location) -> try
    boolean if(android.location.Location,int,int) -> if
    boolean cf() -> cf
    boolean u(java.lang.String) -> u
    java.lang.String try(int) -> try
    void ca() -> ca
    void cb() -> cb
    java.lang.String ce() -> ce
    boolean b9() -> b9
    boolean if(int,int,int) -> if
com.baidu.location.e.m -> com.baidu.location.e.m:
    com.baidu.location.e.m f5 -> f5
    int gr -> gr
    int f1 -> f1
    boolean gl -> gl
    com.baidu.location.e.c$a f2 -> f2
    java.lang.String gs -> gs
    com.baidu.location.BDLocation gp -> gp
    com.baidu.location.BDLocation gq -> gq
    com.baidu.location.h.f gh -> gh
    com.baidu.location.h.h ge -> ge
    com.baidu.location.h.f gt -> gt
    com.baidu.location.h.h ga -> ga
    boolean gm -> gm
    boolean f3 -> f3
    boolean gi -> gi
    long gc -> gc
    long gd -> gd
    com.baidu.location.Address go -> go
    java.lang.String f9 -> f9
    java.util.List gb -> gb
    double gg -> gg
    double gj -> gj
    boolean f4 -> f4
    long gk -> gk
    long f6 -> f6
    com.baidu.location.e.m$b f8 -> f8
    boolean gf -> gf
    boolean f7 -> f7
    boolean gn -> gn
    android.os.Handler fY -> fY
    com.baidu.location.e.m bg() -> bg
    void do(android.os.Message) -> do
    void bo() -> bo
    void bh() -> bh
    void try(android.os.Message) -> try
    void byte(android.os.Message) -> byte
    void for(android.os.Message) -> for
    com.baidu.location.Address new(com.baidu.location.BDLocation) -> new
    java.lang.String bj() -> bj
    java.util.List bl() -> bl
    void int(android.os.Message) -> int
    boolean do(com.baidu.location.h.f) -> do
    boolean bd() -> bd
    boolean bm() -> bm
    boolean do(com.baidu.location.h.h) -> do
    boolean if(com.baidu.location.h.f) -> if
    boolean if(com.baidu.location.h.h) -> if
    boolean bn() -> bn
    void new(android.os.Message) -> new
    void bf() -> bf
    void if(android.os.Message) -> if
    void bb() -> bb
    void bk() -> bk
    void int(com.baidu.location.BDLocation) -> int
    void be() -> be
    void bp() -> bp
    void bi() -> bi
    com.baidu.location.BDLocation bc() -> bc
    boolean do(com.baidu.location.e.m) -> do
    boolean do(com.baidu.location.e.m,boolean) -> do
    void if(com.baidu.location.e.m,android.os.Message) -> if
    boolean for(com.baidu.location.e.m) -> for
    boolean if(com.baidu.location.e.m,boolean) -> if
    boolean if(com.baidu.location.e.m) -> if
com.baidu.location.e.m$1 -> com.baidu.location.e.m$1:
    com.baidu.location.e.m a -> a
    void run() -> run
com.baidu.location.e.m$a -> com.baidu.location.e.m$a:
    com.baidu.location.e.m a -> a
    void run() -> run
com.baidu.location.e.m$b -> com.baidu.location.e.m$b:
    com.baidu.location.e.m a -> a
    void run() -> run
com.baidu.location.e.n -> com.baidu.location.e.n:
    android.os.HandlerThread a -> a
    android.os.HandlerThread a() -> a
com.baidu.location.e.o -> com.baidu.location.e.o:
    java.util.ArrayList im -> im
    java.util.ArrayList iJ -> iJ
    java.util.ArrayList io -> io
    java.lang.String iL -> iL
    java.lang.String it -> it
    java.lang.String iG -> iG
    java.lang.String ik -> ik
    java.lang.String iz -> iz
    int iu -> iu
    int iC -> iC
    int iD -> iD
    int iK -> iK
    java.io.File iA -> iA
    int iM -> iM
    int is -> is
    int iE -> iE
    int iO -> iO
    double iI -> iI
    double ij -> ij
    double ix -> ix
    double iH -> iH
    int iq -> iq
    int iy -> iy
    int ip -> ip
    android.location.Location iw -> iw
    android.location.Location ir -> ir
    android.location.Location il -> il
    com.baidu.location.h.f in -> in
    com.baidu.location.e.o$b iN -> iN
    com.baidu.location.e.o iB -> iB
    int iF -> iF
    long iv -> iv
    com.baidu.location.e.o cm() -> cm
    java.lang.String cl() -> cl
    void do(com.baidu.location.h.h,com.baidu.location.h.f,android.location.Location,java.lang.String) -> do
    void new(double,double,double,double) -> new
    boolean if(android.location.Location,boolean) -> if
    boolean byte(android.location.Location) -> byte
    boolean if(android.location.Location,com.baidu.location.h.f) -> if
    void cj() -> cj
    void ck() -> ck
    void co() -> co
    void y(java.lang.String) -> y
    void x(java.lang.String) -> x
    void A(java.lang.String) -> A
    int if(java.util.List,int) -> if
    boolean if(int,int,int,int,long) -> if
    void v(java.lang.String) -> v
    void w(java.lang.String) -> w
    void if(int,boolean) -> if
    boolean for(java.lang.String,java.util.List) -> for
    java.lang.String cn() -> cn
    void ch() -> ch
    java.lang.String byte(int) -> byte
    java.lang.String ci() -> ci
    void z(java.lang.String) -> z
    java.lang.String if(com.baidu.location.h.h,com.baidu.location.h.f,android.location.Location,java.lang.String,java.lang.String) -> if
com.baidu.location.e.o$a -> com.baidu.location.e.o$a:
    java.lang.String eS -> eS
    com.baidu.location.e.o eR -> eR
    void au() -> au
    void int(boolean) -> int
    void aS() -> aS
com.baidu.location.e.o$b -> com.baidu.location.e.o$b:
    boolean eU -> eU
    int eX -> eX
    int eW -> eW
    java.util.ArrayList eV -> eV
    com.baidu.location.e.o eT -> eT
    void au() -> au
    void int(boolean) -> int
    void aT() -> aT
com.baidu.location.e.p -> com.baidu.location.e.p:
    android.content.Context iS -> iS
    android.telephony.TelephonyManager iV -> iV
    com.baidu.location.e.p$b iR -> iR
    java.lang.reflect.Method i0 -> i0
    java.lang.reflect.Method iW -> iW
    java.lang.reflect.Method iT -> iT
    java.lang.Class i2 -> i2
    android.net.wifi.WifiManager iY -> iY
    com.baidu.location.e.p$c iX -> iX
    java.lang.String iQ -> iQ
    com.baidu.location.LocationClientOption i1 -> i1
    com.baidu.location.e.p$a iP -> iP
    java.lang.String iU -> iU
    com.baidu.location.e.p$d iZ -> iZ
    java.lang.String cq() -> cq
    java.lang.String cr() -> cr
    java.lang.String char(int) -> char
    java.lang.String case(int) -> case
    void cp() -> cp
    void if(android.telephony.CellLocation) -> if
    android.content.Context for(com.baidu.location.e.p) -> for
    com.baidu.location.LocationClientOption if(com.baidu.location.e.p) -> if
    com.baidu.location.e.p$a do(com.baidu.location.e.p) -> do
com.baidu.location.e.p$1 -> com.baidu.location.e.p$1:
com.baidu.location.e.p$a -> com.baidu.location.e.p$a:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.e.p$b -> com.baidu.location.e.p$b:
    int for -> for
    int new -> new
    int do -> do
    int if -> if
    char int -> int
    com.baidu.location.e.p a -> a
    boolean if() -> if
    java.lang.String toString() -> toString
    java.lang.String a() -> a
    boolean a(com.baidu.location.e.p$b) -> a
com.baidu.location.e.p$c -> com.baidu.location.e.p$c:
    java.util.List if -> if
    long do -> do
    com.baidu.location.e.p a -> a
    int if() -> if
    java.lang.String a(int) -> a
    void a() -> a
com.baidu.location.e.p$d -> com.baidu.location.e.p$d:
    java.lang.String eZ -> eZ
    com.baidu.location.e.p eY -> eY
    void au() -> au
    void int(boolean) -> int
    void e(java.lang.String) -> e
com.baidu.location.f -> com.baidu.location.f:
    com.baidu.location.LLSInterface lZ -> lZ
    com.baidu.location.LLSInterface l1 -> l1
    com.baidu.location.LLSInterface l2 -> l2
    java.lang.String replaceFileName -> replaceFileName
    java.lang.String l0 -> l0
    android.content.Context mC -> mC
    boolean isServing -> isServing
    void onCreate() -> onCreate
    boolean do(java.io.File) -> do
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    float getFrameVersion() -> getFrameVersion
    java.lang.String getJarFileName() -> getJarFileName
    android.content.Context getServiceContext() -> getServiceContext
com.baidu.location.f.a.a -> com.baidu.location.f.a.a:
    boolean a -> a
    java.lang.String if -> if
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
com.baidu.location.f.a.b -> com.baidu.location.f.a.b:
    java.lang.String do -> do
    boolean a -> a
    java.lang.String int -> int
    java.lang.String for -> for
    java.lang.String if -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String do(android.content.Context) -> do
    java.lang.String if(android.content.Context) -> if
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.location.f.a.b$a -> com.baidu.location.f.a.b$a:
    java.lang.String do -> do
    java.lang.String if -> if
    boolean a -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.location.f.a.b$a a(android.content.Context) -> a
com.baidu.location.f.a.c -> com.baidu.location.f.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.location.f.b.a -> com.baidu.location.f.b.a:
    java.lang.String if -> if
    java.lang.String a -> a
    byte[] if(java.lang.String,java.lang.String,byte[]) -> if
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.location.f.b.b -> com.baidu.location.f.b.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.location.g.a -> com.baidu.location.g.a:
    double jc -> jc
    double i4 -> i4
    float ja -> ja
    boolean jd -> jd
    boolean i7 -> i7
    java.lang.String i9 -> i9
    java.lang.String i6 -> i6
    java.lang.String i8 -> i8
    java.lang.String i5 -> i5
    java.lang.String je -> je
    java.lang.String jb -> jb
    java.lang.String i3 -> i3
    boolean cx() -> cx
    java.lang.String cw() -> cw
    boolean cs() -> cs
    double ct() -> ct
    double cu() -> cu
    float cv() -> cv
com.baidu.location.g.b -> com.baidu.location.g.b:
    com.baidu.location.h.h jg -> jg
    com.baidu.location.h.f ji -> ji
    com.baidu.location.g.a jl -> jl
    boolean jk -> jk
    long jf -> jf
    java.text.SimpleDateFormat jj -> jj
    com.baidu.location.b.l jh -> jh
    void cz() -> cz
    com.baidu.location.b.l if(com.baidu.location.g.b) -> if
    java.text.SimpleDateFormat cy() -> cy
com.baidu.location.g.b$a -> com.baidu.location.g.b$a:
    com.baidu.location.BDLocation e1 -> e1
    com.baidu.location.g.b e0 -> e0
    void au() -> au
    void int(boolean) -> int
    void aU() -> aU
com.baidu.location.g.b$b -> com.baidu.location.g.b$b:
    com.baidu.location.g.b e2 -> e2
    void au() -> au
    void int(boolean) -> int
    void h(java.lang.String) -> h
com.baidu.location.h.a -> com.baidu.location.h.a:
    long jL -> jL
    long jo -> jo
    int jw -> jw
    com.baidu.location.h.a jA -> jA
    android.content.Context jG -> jG
    android.location.LocationManager jM -> jM
    android.location.Location jK -> jK
    com.baidu.location.h.a$b jJ -> jJ
    com.baidu.location.h.a$c jE -> jE
    android.location.GpsStatus jx -> jx
    com.baidu.location.h.a$a jy -> jy
    int jI -> jI
    long jr -> jr
    boolean jn -> jn
    boolean ju -> ju
    java.lang.String js -> js
    boolean jH -> jH
    long jD -> jD
    java.lang.String jz -> jz
    android.os.Handler jF -> jF
    int jC -> jC
    int jp -> jp
    int jv -> jv
    int jt -> jt
    int jB -> jB
    int jq -> jq
    java.util.HashMap jm -> jm
    com.baidu.location.h.a cL() -> cL
    void cA() -> cA
    void if(java.lang.String,android.location.Location) -> if
    void cF() -> cF
    void cI() -> cI
    void cE() -> cE
    boolean cK() -> cK
    java.lang.String cJ() -> cJ
    void case(boolean) -> case
    java.lang.String cG() -> cG
    java.lang.String long(android.location.Location) -> long
    java.lang.String cD() -> cD
    android.location.Location cB() -> cB
    boolean cC() -> cC
    boolean cH() -> cH
    boolean if(android.location.Location,android.location.Location,boolean) -> if
    void char(android.location.Location) -> char
    void case(android.location.Location) -> case
    void if(double,double,float) -> if
    void char(boolean) -> char
    java.lang.String goto(android.location.Location) -> goto
    java.lang.String else(android.location.Location) -> else
    java.lang.String if(android.location.GpsSatellite,java.util.HashMap) -> if
    int if(java.util.HashMap) -> if
    double[] if(java.util.List) -> if
    double[] int(double,double) -> int
    double[] new(double,double) -> new
    int if(com.baidu.location.h.i,int) -> if
    void if(com.baidu.location.h.a,android.location.Location) -> if
    com.baidu.location.h.a$a do(com.baidu.location.h.a) -> do
    void if(com.baidu.location.h.a,java.lang.String,android.location.Location) -> if
    boolean int(com.baidu.location.h.a) -> int
    android.os.Handler try(com.baidu.location.h.a) -> try
    long do(com.baidu.location.h.a,long) -> do
    void if(com.baidu.location.h.a,boolean) -> if
    void do(com.baidu.location.h.a,android.location.Location) -> do
    boolean do(com.baidu.location.h.a,boolean) -> do
    long if(com.baidu.location.h.a,long) -> if
    android.location.LocationManager for(com.baidu.location.h.a) -> for
    android.location.GpsStatus new(com.baidu.location.h.a) -> new
    android.location.GpsStatus if(com.baidu.location.h.a,android.location.GpsStatus) -> if
    int do(com.baidu.location.h.a,int) -> do
    int if(com.baidu.location.h.a,int) -> if
    java.util.HashMap if(com.baidu.location.h.a,java.util.HashMap) -> if
    int if(com.baidu.location.h.a) -> if
    java.util.HashMap byte(com.baidu.location.h.a) -> byte
    java.lang.String if(com.baidu.location.h.a,android.location.GpsSatellite,java.util.HashMap) -> if
    int else(int) -> else
    int case(com.baidu.location.h.a) -> case
    int if(com.baidu.location.h.a,com.baidu.location.h.i,int) -> if
    java.lang.String B(java.lang.String) -> B
com.baidu.location.h.a$1 -> com.baidu.location.h.a$1:
    com.baidu.location.h.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.h.a$a -> com.baidu.location.h.a$a:
    long if -> if
    long a -> a
    int case -> case
    boolean try -> try
    java.util.List byte -> byte
    java.lang.String for -> for
    java.lang.String new -> new
    java.lang.String do -> do
    com.baidu.location.h.a int -> int
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.baidu.location.h.a$b -> com.baidu.location.h.a$b:
    com.baidu.location.h.a a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.h.a$c -> com.baidu.location.h.a$c:
    long if -> if
    com.baidu.location.h.a a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.h.b -> com.baidu.location.h.b:
    com.baidu.location.h.b j3 -> j3
    android.telephony.TelephonyManager jN -> jN
    com.baidu.location.h.h jT -> jT
    com.baidu.location.h.h jQ -> jQ
    java.util.List j0 -> j0
    com.baidu.location.h.b$a j1 -> j1
    boolean jR -> jR
    java.lang.reflect.Method j2 -> j2
    java.lang.reflect.Method jP -> jP
    java.lang.reflect.Method jX -> jX
    java.lang.reflect.Method jO -> jO
    java.lang.reflect.Method j4 -> j4
    java.lang.Class jY -> jY
    long jW -> jW
    int jZ -> jZ
    boolean jV -> jV
    int jU -> jU
    int jS -> jS
    com.baidu.location.h.b cU() -> cU
    void cN() -> cN
    void cR() -> cR
    boolean cV() -> cV
    void cS() -> cS
    void cW() -> cW
    int cP() -> cP
    java.lang.String cO() -> cO
    com.baidu.location.h.h cM() -> cM
    void cT() -> cT
    com.baidu.location.h.h do(android.telephony.CellLocation) -> do
    void try(com.baidu.location.h.h) -> try
    com.baidu.location.h.h cX() -> cX
    com.baidu.location.h.h if(android.telephony.CellInfo) -> if
    int void(int) -> void
    int cQ() -> cQ
    java.lang.String byte(com.baidu.location.h.h) -> byte
    java.lang.String int(com.baidu.location.h.h) -> int
    java.lang.String new(com.baidu.location.h.h) -> new
    void if(com.baidu.location.h.b) -> if
    com.baidu.location.h.h do(com.baidu.location.h.b) -> do
com.baidu.location.h.b$a -> com.baidu.location.h.b$a:
    com.baidu.location.h.b a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.h.c -> com.baidu.location.h.c:
    int case -> case
    int e -> e
    int goto -> goto
    int f -> f
    int int -> int
    int b -> b
    int new -> new
    int else -> else
    int char -> char
    int d -> d
    int byte -> byte
    int a -> a
    int for -> for
    int try -> try
    int long -> long
    int void -> void
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String c -> c
    java.lang.String if -> if
    java.lang.String do -> do
    java.lang.String a(int) -> a
    com.baidu.location.h.j a() -> a
com.baidu.location.h.d -> com.baidu.location.h.d:
    com.baidu.location.h.g a() -> a
com.baidu.location.h.e -> com.baidu.location.h.e:
    int j6 -> j6
    long j5 -> j5
    long kb -> kb
    long kd -> kd
    com.baidu.location.h.e kf -> kf
    android.net.wifi.WifiManager ke -> ke
    com.baidu.location.h.e$a kj -> kj
    com.baidu.location.h.f j9 -> j9
    long kc -> kc
    long ki -> ki
    boolean kh -> kh
    java.lang.Object ka -> ka
    java.lang.reflect.Method kg -> kg
    boolean j7 -> j7
    long j8 -> j8
    com.baidu.location.h.e de() -> de
    void c4() -> c4
    void db() -> db
    boolean cY() -> cY
    boolean c3() -> c3
    boolean c8() -> c8
    boolean c9() -> c9
    int da() -> da
    java.lang.String c7() -> c7
    boolean c0() -> c0
    com.baidu.location.h.f c6() -> c6
    com.baidu.location.h.f dc() -> dc
    com.baidu.location.h.f c2() -> c2
    void dd() -> dd
    void c1() -> c1
    boolean cZ() -> cZ
    boolean if(com.baidu.location.h.f,com.baidu.location.h.f,float) -> if
    boolean if(java.util.List,java.util.List,float) -> if
    double if(com.baidu.location.h.f,com.baidu.location.h.f) -> if
    java.lang.String c5() -> c5
    boolean D(java.lang.String) -> D
    com.baidu.location.h.f do(java.util.List) -> do
    void if(com.baidu.location.h.e) -> if
com.baidu.location.h.e$1 -> com.baidu.location.h.e$1:
com.baidu.location.h.e$a -> com.baidu.location.h.e$a:
    com.baidu.location.h.e a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.h.f -> com.baidu.location.h.f:
    java.util.List kn -> kn
    long kl -> kl
    long ko -> ko
    boolean km -> km
    boolean kp -> kp
    long kk -> kk
    java.lang.String di() -> di
    int dl() -> dl
    java.lang.String dp() -> dp
    java.lang.String dk() -> dk
    java.lang.String e(int) -> e
    java.lang.String do(int,boolean) -> do
    java.lang.String i(int) -> i
    java.lang.String d(int) -> d
    java.lang.String if(int,java.util.List) -> if
    java.lang.String dn() -> dn
    void dg() -> dg
    java.lang.String j(int) -> j
    java.lang.String h(int) -> h
    boolean new(com.baidu.location.h.f) -> new
    boolean int(com.baidu.location.h.f) -> int
    boolean try(com.baidu.location.h.f) -> try
    int df() -> df
    boolean dh() -> dh
    boolean dq() -> dq
    boolean dm() -> dm
    boolean dj() -> dj
com.baidu.location.h.g -> com.baidu.location.h.g:
    void cA() -> cA
    void cF() -> cF
    void cI() -> cI
    void cE() -> cE
    void case(boolean) -> case
    java.lang.String cG() -> cG
    java.lang.String cD() -> cD
    android.location.Location cB() -> cB
    boolean cC() -> cC
    boolean cH() -> cH
com.baidu.location.h.h -> com.baidu.location.h.h:
    int kq -> kq
    int ku -> ku
    int kx -> kx
    int ky -> ky
    int kz -> kz
    int kt -> kt
    long ks -> ks
    int kv -> kv
    char kw -> kw
    boolean kr -> kr
    boolean case(com.baidu.location.h.h) -> case
    int dt() -> dt
    boolean du() -> du
    boolean ds() -> ds
    boolean dv() -> dv
    boolean dB() -> dB
    boolean dy() -> dy
    void dr() -> dr
    java.lang.String dA() -> dA
    java.lang.String dw() -> dw
    java.lang.String dz() -> dz
    java.lang.String dx() -> dx
com.baidu.location.h.i -> com.baidu.location.h.i:
    boolean int -> int
    java.lang.String for -> for
    boolean do -> do
    double a -> a
    double if -> if
    java.lang.String try -> try
    int new -> new
    void a() -> a
    boolean a(java.lang.String) -> a
    boolean do() -> do
    double for() -> for
    double if() -> if
com.baidu.location.h.j -> com.baidu.location.h.j:
    void cN() -> cN
    void cR() -> cR
    java.lang.String cO() -> cO
    com.baidu.location.h.h cM() -> cM
    java.lang.String int(com.baidu.location.h.h) -> int
    int cP() -> cP
    int cQ() -> cQ
    void goto(int) -> goto
    void C(java.lang.String) -> C
    void long(int) -> long
com.baidu.location.h.k -> com.baidu.location.h.k:
    void c4() -> c4
    void db() -> db
    boolean cY() -> cY
    boolean c3() -> c3
    boolean c8() -> c8
    boolean c0() -> c0
    boolean c9() -> c9
    com.baidu.location.h.f c6() -> c6
    com.baidu.location.h.f dc() -> dc
    com.baidu.location.h.f c2() -> c2
    com.baidu.location.h.f do(java.util.List) -> do
    boolean cZ() -> cZ
    java.lang.String c5() -> c5
    java.lang.String c7() -> c7
    int da() -> da
    boolean D(java.lang.String) -> D
    void c1() -> c1
com.baidu.location.h.l -> com.baidu.location.h.l:
    com.baidu.location.h.k a() -> a
com.baidu.mapapi.SDKInitializer -> com.baidu.mapapi.SDKInitializer:
    java.lang.String SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR -> SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR
    java.lang.String SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR -> SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR
    java.lang.String SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE -> SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE
    boolean a -> a
    void initialize(java.lang.String,android.content.Context) -> initialize
    void initialize(android.content.Context) -> initialize
com.baidu.mapapi.VersionInfo -> com.baidu.mapapi.VersionInfo:
    java.lang.String VERSION_INFO -> VERSION_INFO
    java.lang.String VERSION_DESC -> VERSION_DESC
    java.lang.String getApiVersion() -> getApiVersion
    java.lang.String getVersionDesc() -> getVersionDesc
com.baidu.mapapi.a -> com.baidu.mapapi.a:
    java.lang.String a -> a
    android.content.Context b -> b
    android.os.Handler c -> c
    com.baidu.platform.comapi.a d -> d
    int e -> e
    com.baidu.mapapi.a f -> f
    com.baidu.mapapi.a a() -> a
    void a(android.content.Context) -> a
    void b() -> b
    boolean c() -> c
    void d() -> d
    android.content.Context e() -> e
    void f() -> f
    void g() -> g
    void a(android.os.Message) -> a
    void a(com.baidu.mapapi.utils.PermissionCheck$b) -> a
com.baidu.mapapi.b -> com.baidu.mapapi.b:
    com.baidu.mapapi.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.cloud.BaseCloudSearchInfo -> com.baidu.mapapi.cloud.BaseCloudSearchInfo:
    java.lang.String q -> q
    java.lang.String tags -> tags
    java.lang.String sortby -> sortby
    java.lang.String filter -> filter
    int pageIndex -> pageIndex
    int pageSize -> pageSize
    java.lang.String a() -> a
com.baidu.mapapi.cloud.BaseSearchInfo -> com.baidu.mapapi.cloud.BaseSearchInfo:
    java.lang.String a -> a
    java.lang.String ak -> ak
    int geoTableId -> geoTableId
    java.lang.String sn -> sn
    java.lang.String a() -> a
com.baidu.mapapi.cloud.BaseSearchResult -> com.baidu.mapapi.cloud.BaseSearchResult:
    int STATUS_CODE_SUCCEED -> STATUS_CODE_SUCCEED
    int STATUS_CODE_RESULT_NOTFOUND -> STATUS_CODE_RESULT_NOTFOUND
    int STATUS_CODE_NETWORK_ERROR -> STATUS_CODE_NETWORK_ERROR
    int STATUS_CODE_NETWORK_TIME_OUT -> STATUS_CODE_NETWORK_TIME_OUT
    int status -> status
    int size -> size
    int total -> total
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.BoundSearchInfo -> com.baidu.mapapi.cloud.BoundSearchInfo:
    java.lang.String bound -> bound
    java.lang.String a() -> a
com.baidu.mapapi.cloud.CloudListener -> com.baidu.mapapi.cloud.CloudListener:
    void onGetSearchResult(com.baidu.mapapi.cloud.CloudSearchResult,int) -> onGetSearchResult
    void onGetDetailSearchResult(com.baidu.mapapi.cloud.DetailSearchResult,int) -> onGetDetailSearchResult
com.baidu.mapapi.cloud.CloudManager -> com.baidu.mapapi.cloud.CloudManager:
    java.lang.String a -> a
    android.os.Bundle b -> b
    com.baidu.mapapi.cloud.CloudManager c -> c
    com.baidu.platform.comjni.map.cloud.a d -> d
    android.os.Handler e -> e
    com.baidu.mapapi.cloud.CloudListener f -> f
    com.baidu.mapapi.cloud.CloudManager getInstance() -> getInstance
    void init(com.baidu.mapapi.cloud.CloudListener) -> init
    int a(int) -> a
    void destroy() -> destroy
    boolean localSearch(com.baidu.mapapi.cloud.LocalSearchInfo) -> localSearch
    boolean nearbySearch(com.baidu.mapapi.cloud.NearbySearchInfo) -> nearbySearch
    boolean boundSearch(com.baidu.mapapi.cloud.BoundSearchInfo) -> boundSearch
    boolean a(com.baidu.mapapi.cloud.BaseCloudSearchInfo) -> a
    boolean detailSearch(com.baidu.mapapi.cloud.DetailSearchInfo) -> detailSearch
    java.lang.String b(int) -> b
    com.baidu.platform.comjni.map.cloud.a a(com.baidu.mapapi.cloud.CloudManager) -> a
    com.baidu.mapapi.cloud.CloudListener b(com.baidu.mapapi.cloud.CloudManager) -> b
    java.lang.String a(com.baidu.mapapi.cloud.CloudManager,int) -> a
    int b(com.baidu.mapapi.cloud.CloudManager,int) -> b
com.baidu.mapapi.cloud.CloudPoiInfo -> com.baidu.mapapi.cloud.CloudPoiInfo:
    int uid -> uid
    int geotableId -> geotableId
    java.lang.String title -> title
    java.lang.String address -> address
    java.lang.String province -> province
    java.lang.String city -> city
    java.lang.String district -> district
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String tags -> tags
    int distance -> distance
    int weight -> weight
    java.util.Map extras -> extras
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.CloudSearchResult -> com.baidu.mapapi.cloud.CloudSearchResult:
    java.util.List poiList -> poiList
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.DetailSearchInfo -> com.baidu.mapapi.cloud.DetailSearchInfo:
    int uid -> uid
    java.lang.String a() -> a
com.baidu.mapapi.cloud.DetailSearchResult -> com.baidu.mapapi.cloud.DetailSearchResult:
    com.baidu.mapapi.cloud.CloudPoiInfo poiInfo -> poiInfo
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.LocalSearchInfo -> com.baidu.mapapi.cloud.LocalSearchInfo:
    java.lang.String region -> region
    java.lang.String a() -> a
com.baidu.mapapi.cloud.NearbySearchInfo -> com.baidu.mapapi.cloud.NearbySearchInfo:
    java.lang.String location -> location
    int radius -> radius
    java.lang.String a() -> a
com.baidu.mapapi.cloud.a -> com.baidu.mapapi.cloud.a:
    com.baidu.mapapi.cloud.CloudManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.favorite.FavoriteManager -> com.baidu.mapapi.favorite.FavoriteManager:
    com.baidu.mapapi.favorite.FavoriteManager a -> a
    com.baidu.platform.comapi.b.b b -> b
    com.baidu.mapapi.favorite.FavoriteManager getInstance() -> getInstance
    void init() -> init
    int add(com.baidu.mapapi.favorite.FavoritePoiInfo) -> add
    com.baidu.mapapi.favorite.FavoritePoiInfo getFavPoi(java.lang.String) -> getFavPoi
    java.util.List getAllFavPois() -> getAllFavPois
    boolean deleteFavPois(java.lang.String) -> deleteFavPois
    boolean clearAllFavPoi() -> clearAllFavPoi
    boolean updateFavPoi(java.lang.String,com.baidu.mapapi.favorite.FavoritePoiInfo) -> updateFavPoi
    void destroy() -> destroy
com.baidu.mapapi.favorite.FavoritePoiInfo -> com.baidu.mapapi.favorite.FavoritePoiInfo:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    com.baidu.mapapi.favorite.FavoritePoiInfo poiName(java.lang.String) -> poiName
    com.baidu.mapapi.favorite.FavoritePoiInfo pt(com.baidu.mapapi.model.LatLng) -> pt
    com.baidu.mapapi.favorite.FavoritePoiInfo addr(java.lang.String) -> addr
    com.baidu.mapapi.favorite.FavoritePoiInfo cityName(java.lang.String) -> cityName
    com.baidu.mapapi.favorite.FavoritePoiInfo uid(java.lang.String) -> uid
    java.lang.String getID() -> getID
    java.lang.String getPoiName() -> getPoiName
    com.baidu.mapapi.model.LatLng getPt() -> getPt
    java.lang.String getAddr() -> getAddr
    java.lang.String getUid() -> getUid
    java.lang.String getCityName() -> getCityName
    long getTimeStamp() -> getTimeStamp
com.baidu.mapapi.favorite.a -> com.baidu.mapapi.favorite.a:
    com.baidu.platform.comapi.b.a a(com.baidu.mapapi.favorite.FavoritePoiInfo) -> a
    com.baidu.mapapi.favorite.FavoritePoiInfo a(com.baidu.platform.comapi.b.a) -> a
    com.baidu.mapapi.favorite.FavoritePoiInfo a(org.json.JSONObject) -> a
com.baidu.mapapi.map.Arc -> com.baidu.mapapi.map.Arc:
    java.lang.String f -> f
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.ArcOptions -> com.baidu.mapapi.map.ArcOptions:
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.model.LatLng g -> g
    com.baidu.mapapi.model.LatLng h -> h
    com.baidu.mapapi.model.LatLng i -> i
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    com.baidu.mapapi.map.ArcOptions color(int) -> color
    com.baidu.mapapi.map.ArcOptions points(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> points
    com.baidu.mapapi.map.ArcOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.ArcOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.ArcOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.ArcOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.BaiduMap -> com.baidu.mapapi.map.BaiduMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    java.lang.String b -> b
    com.baidu.mapapi.map.Projection c -> c
    com.baidu.mapapi.map.UiSettings d -> d
    com.baidu.platform.comapi.map.f e -> e
    java.util.List f -> f
    java.util.List g -> g
    com.baidu.mapapi.map.Overlay$a h -> h
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener i -> i
    com.baidu.mapapi.map.BaiduMap$OnMapTouchListener j -> j
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener k -> k
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback l -> l
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener m -> m
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener n -> n
    java.util.ArrayList o -> o
    java.util.ArrayList p -> p
    com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener q -> q
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener r -> r
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback s -> s
    com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback t -> t
    com.baidu.mapapi.map.HeatMap u -> u
    java.util.concurrent.locks.Lock v -> v
    com.baidu.mapapi.map.InfoWindow w -> w
    com.baidu.mapapi.map.Marker x -> x
    android.view.View y -> y
    com.baidu.mapapi.map.Marker z -> z
    com.baidu.mapapi.map.MyLocationData A -> A
    com.baidu.mapapi.map.MyLocationConfiguration B -> B
    com.baidu.mapapi.map.MapView a -> a
    boolean C -> C
    com.baidu.mapapi.map.Overlay addOverlay(com.baidu.mapapi.map.OverlayOptions) -> addOverlay
    void clear() -> clear
    void setMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> setMapStatus
    com.baidu.mapapi.map.MapStatus getMapStatus() -> getMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate,int) -> animateMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> animateMapStatus
    com.baidu.platform.comapi.map.z a(com.baidu.mapapi.map.MapStatusUpdate) -> a
    void setMapType(int) -> setMapType
    int getMapType() -> getMapType
    float getMaxZoomLevel() -> getMaxZoomLevel
    void setMaxAndMinZoomLevel(float,float) -> setMaxAndMinZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    com.baidu.mapapi.map.Projection getProjection() -> getProjection
    com.baidu.mapapi.map.UiSettings getUiSettings() -> getUiSettings
    void setBuildingsEnabled(boolean) -> setBuildingsEnabled
    boolean isBuildingsEnabled() -> isBuildingsEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationData(com.baidu.mapapi.map.MyLocationData) -> setMyLocationData
    com.baidu.mapapi.map.MyLocationData getLocationData() -> getLocationData
    void setMyLocationConfigeration(com.baidu.mapapi.map.MyLocationConfiguration) -> setMyLocationConfigeration
    com.baidu.mapapi.map.MyLocationConfiguration getLocationConfigeration() -> getLocationConfigeration
    void a(com.baidu.mapapi.map.MyLocationData,com.baidu.mapapi.map.MyLocationConfiguration) -> a
    void addHeatMap(com.baidu.mapapi.map.HeatMap) -> addHeatMap
    void a(com.baidu.mapapi.map.HeatMap) -> a
    void a() -> a
    void setBaiduHeatMapEnabled(boolean) -> setBaiduHeatMapEnabled
    boolean isBaiduHeatMapEnabled() -> isBaiduHeatMapEnabled
    boolean isSupportBaiduHeatMap() -> isSupportBaiduHeatMap
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isTrafficEnabled() -> isTrafficEnabled
    void snapshot(com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback) -> snapshot
    void snapshotScope(android.graphics.Rect,com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback) -> snapshotScope
    void showInfoWindow(com.baidu.mapapi.map.InfoWindow) -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    void setOnMapStatusChangeListener(com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener) -> setOnMapStatusChangeListener
    void setOnMapTouchListener(com.baidu.mapapi.map.BaiduMap$OnMapTouchListener) -> setOnMapTouchListener
    void setOnMapClickListener(com.baidu.mapapi.map.BaiduMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapLoadedCallback(com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback) -> setOnMapLoadedCallback
    void setOnMapDoubleClickListener(com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener) -> setOnMapDoubleClickListener
    void setOnMapLongClickListener(com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnPolylineClickListener(com.baidu.mapapi.map.BaiduMap$OnPolylineClickListener) -> setOnPolylineClickListener
    void setOnMarkerClickListener(com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnMyLocationClickListener(com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener) -> setOnMyLocationClickListener
    void setOnMapDrawFrameCallback(com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback) -> setOnMapDrawFrameCallback
    void removeMarkerClickListener(com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener) -> removeMarkerClickListener
    java.util.List a(com.baidu.mapapi.map.BaiduMap) -> a
    com.baidu.platform.comapi.map.f b(com.baidu.mapapi.map.BaiduMap) -> b
    java.util.List c(com.baidu.mapapi.map.BaiduMap) -> c
    android.view.View d(com.baidu.mapapi.map.BaiduMap) -> d
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener e(com.baidu.mapapi.map.BaiduMap) -> e
    com.baidu.mapapi.map.BaiduMap$OnMapTouchListener f(com.baidu.mapapi.map.BaiduMap) -> f
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener g(com.baidu.mapapi.map.BaiduMap) -> g
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener h(com.baidu.mapapi.map.BaiduMap) -> h
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener i(com.baidu.mapapi.map.BaiduMap) -> i
    com.baidu.mapapi.map.Projection a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Projection) -> a
    boolean a(com.baidu.mapapi.map.BaiduMap,boolean) -> a
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback j(com.baidu.mapapi.map.BaiduMap) -> j
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback k(com.baidu.mapapi.map.BaiduMap) -> k
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener l(com.baidu.mapapi.map.BaiduMap) -> l
    com.baidu.mapapi.map.InfoWindow m(com.baidu.mapapi.map.BaiduMap) -> m
    com.baidu.mapapi.map.Marker n(com.baidu.mapapi.map.BaiduMap) -> n
    java.util.ArrayList o(com.baidu.mapapi.map.BaiduMap) -> o
    java.util.ArrayList p(com.baidu.mapapi.map.BaiduMap) -> p
    com.baidu.mapapi.map.Marker q(com.baidu.mapapi.map.BaiduMap) -> q
    com.baidu.mapapi.map.Projection r(com.baidu.mapapi.map.BaiduMap) -> r
    com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener s(com.baidu.mapapi.map.BaiduMap) -> s
    com.baidu.mapapi.map.Marker a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Marker) -> a
    java.util.concurrent.locks.Lock t(com.baidu.mapapi.map.BaiduMap) -> t
    com.baidu.mapapi.map.HeatMap u(com.baidu.mapapi.map.BaiduMap) -> u
    com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback v(com.baidu.mapapi.map.BaiduMap) -> v
com.baidu.mapapi.map.BaiduMap$1 -> com.baidu.mapapi.map.BaiduMap$1:
    int[] a -> a
com.baidu.mapapi.map.BaiduMap$OnMapClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapClickListener:
    void onMapClick(com.baidu.mapapi.model.LatLng) -> onMapClick
    boolean onMapPoiClick(com.baidu.mapapi.map.MapPoi) -> onMapPoiClick
com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener:
    void onMapDoubleClick(com.baidu.mapapi.model.LatLng) -> onMapDoubleClick
com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback -> com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback:
    void onMapDrawFrame(javax.microedition.khronos.opengles.GL10,com.baidu.mapapi.map.MapStatus) -> onMapDrawFrame
com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback -> com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback:
    void onMapLoaded() -> onMapLoaded
com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener:
    void onMapLongClick(com.baidu.mapapi.model.LatLng) -> onMapLongClick
com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener -> com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener:
    void onMapStatusChangeStart(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeStart
    void onMapStatusChange(com.baidu.mapapi.map.MapStatus) -> onMapStatusChange
    void onMapStatusChangeFinish(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeFinish
com.baidu.mapapi.map.BaiduMap$OnMapTouchListener -> com.baidu.mapapi.map.BaiduMap$OnMapTouchListener:
    void onTouch(android.view.MotionEvent) -> onTouch
com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener:
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener:
    void onMarkerDrag(com.baidu.mapapi.map.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.baidu.mapapi.map.Marker) -> onMarkerDragEnd
    void onMarkerDragStart(com.baidu.mapapi.map.Marker) -> onMarkerDragStart
com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener -> com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener:
    boolean onMyLocationClick() -> onMyLocationClick
com.baidu.mapapi.map.BaiduMap$OnPolylineClickListener -> com.baidu.mapapi.map.BaiduMap$OnPolylineClickListener:
    boolean onPolylineClick(com.baidu.mapapi.map.Polyline) -> onPolylineClick
com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback -> com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback:
    void onSnapshotReady(android.graphics.Bitmap) -> onSnapshotReady
com.baidu.mapapi.map.BaiduMapOptions -> com.baidu.mapapi.map.BaiduMapOptions:
    com.baidu.mapapi.map.MapStatus a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.baidu.mapapi.map.BaiduMapOptions mapStatus(com.baidu.mapapi.map.MapStatus) -> mapStatus
    com.baidu.mapapi.map.BaiduMapOptions compassEnabled(boolean) -> compassEnabled
    com.baidu.mapapi.map.BaiduMapOptions mapType(int) -> mapType
    com.baidu.mapapi.map.BaiduMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions overlookingGesturesEnabled(boolean) -> overlookingGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scaleControlEnabled(boolean) -> scaleControlEnabled
    com.baidu.platform.comapi.map.y a() -> a
com.baidu.mapapi.map.BitmapDescriptor -> com.baidu.mapapi.map.BitmapDescriptor:
    android.graphics.Bitmap a -> a
    android.os.Bundle b -> b
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    byte[] a() -> a
    android.os.Bundle b() -> b
    void recycle() -> recycle
com.baidu.mapapi.map.BitmapDescriptorFactory -> com.baidu.mapapi.map.BitmapDescriptorFactory:
    com.baidu.mapapi.map.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.baidu.mapapi.map.BitmapDescriptor fromAssetWithDpi(java.lang.String) -> fromAssetWithDpi
    com.baidu.mapapi.map.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
    com.baidu.mapapi.map.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.baidu.mapapi.map.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.baidu.mapapi.map.BitmapDescriptor fromResource(int) -> fromResource
    com.baidu.mapapi.map.BitmapDescriptor fromView(android.view.View) -> fromView
com.baidu.mapapi.map.Circle -> com.baidu.mapapi.map.Circle:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.Stroke d -> d
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setFillColor(int) -> setFillColor
    void setRadius(int) -> setRadius
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.CircleOptions -> com.baidu.mapapi.map.CircleOptions:
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    com.baidu.mapapi.map.Stroke h -> h
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.CircleOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.CircleOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.CircleOptions radius(int) -> radius
    com.baidu.mapapi.map.CircleOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.CircleOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.CircleOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.CircleOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Dot -> com.baidu.mapapi.map.Dot:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setColor(int) -> setColor
    void setRadius(int) -> setRadius
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.DotOptions -> com.baidu.mapapi.map.DotOptions:
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.DotOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.DotOptions color(int) -> color
    com.baidu.mapapi.map.DotOptions radius(int) -> radius
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.DotOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.DotOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.DotOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Gradient -> com.baidu.mapapi.map.Gradient:
    int a -> a
    int[] b -> b
    float[] c -> c
    java.util.HashMap a() -> a
    int[] a(double) -> a
    int a(int,int,float) -> a
com.baidu.mapapi.map.Gradient$1 -> com.baidu.mapapi.map.Gradient$1:
com.baidu.mapapi.map.Gradient$a -> com.baidu.mapapi.map.Gradient$a:
    int b -> b
    int c -> c
    float d -> d
    com.baidu.mapapi.map.Gradient a -> a
    float a(com.baidu.mapapi.map.Gradient$a) -> a
    int b(com.baidu.mapapi.map.Gradient$a) -> b
    int c(com.baidu.mapapi.map.Gradient$a) -> c
com.baidu.mapapi.map.GroundOverlay -> com.baidu.mapapi.map.GroundOverlay:
    java.lang.String j -> j
    int a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    com.baidu.mapapi.model.LatLng c -> c
    double d -> d
    double e -> e
    float f -> f
    float g -> g
    com.baidu.mapapi.model.LatLngBounds h -> h
    float i -> i
    void setImage(com.baidu.mapapi.map.BitmapDescriptor) -> setImage
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setDimensions(int) -> setDimensions
    void setDimensions(int,int) -> setDimensions
    double getWidth() -> getWidth
    double getHeight() -> getHeight
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setPositionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> setPositionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.GroundOverlayOptions -> com.baidu.mapapi.map.GroundOverlayOptions:
    com.baidu.mapapi.map.BitmapDescriptor d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    float h -> h
    float i -> i
    com.baidu.mapapi.model.LatLngBounds j -> j
    float k -> k
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.GroundOverlayOptions image(com.baidu.mapapi.map.BitmapDescriptor) -> image
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    com.baidu.mapapi.map.GroundOverlayOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int) -> dimensions
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int,int) -> dimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.baidu.mapapi.map.GroundOverlayOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.GroundOverlayOptions positionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> positionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    com.baidu.mapapi.map.GroundOverlayOptions transparency(float) -> transparency
    float getTransparency() -> getTransparency
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.GroundOverlayOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.GroundOverlayOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.GroundOverlayOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.HeatMap -> com.baidu.mapapi.map.HeatMap:
    java.lang.String b -> b
    android.util.SparseIntArray c -> c
    int[] d -> d
    float[] e -> e
    com.baidu.mapapi.map.i f -> f
    java.util.Collection g -> g
    int h -> h
    com.baidu.mapapi.map.Gradient i -> i
    double j -> j
    com.baidu.mapapi.map.d k -> k
    int[] l -> l
    double[] m -> m
    double[] n -> n
    java.util.HashMap o -> o
    java.util.concurrent.ExecutorService p -> p
    java.util.HashSet q -> q
    com.baidu.mapapi.map.BaiduMap a -> a
    int DEFAULT_RADIUS -> DEFAULT_RADIUS
    double DEFAULT_OPACITY -> DEFAULT_OPACITY
    com.baidu.mapapi.map.Gradient DEFAULT_GRADIENT -> DEFAULT_GRADIENT
    int r -> r
    void removeHeatMap() -> removeHeatMap
    void b(java.util.Collection) -> b
    java.util.Collection c(java.util.Collection) -> c
    com.baidu.mapapi.map.j a(int,int,int) -> a
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    com.baidu.mapapi.map.j c(java.lang.String) -> c
    void a(java.lang.String,com.baidu.mapapi.map.j) -> a
    void d() -> d
    void b() -> b
    void c() -> c
    void b(int,int,int) -> b
    void a(com.baidu.mapapi.map.Gradient) -> a
    double[] a(int) -> a
    com.baidu.mapapi.map.j a(android.graphics.Bitmap) -> a
    com.baidu.mapapi.map.d d(java.util.Collection) -> d
    double[] a(int,double) -> a
    double[][] a(double[][],double[]) -> a
    android.graphics.Bitmap a(double[][],int[],double) -> a
    double a(java.util.Collection,com.baidu.mapapi.map.d,int,int) -> a
    java.util.Collection a(java.util.Collection) -> a
    void a(com.baidu.mapapi.map.HeatMap,int,int,int) -> a
com.baidu.mapapi.map.HeatMap$Builder -> com.baidu.mapapi.map.HeatMap$Builder:
    java.util.Collection a -> a
    int b -> b
    com.baidu.mapapi.map.Gradient c -> c
    double d -> d
    com.baidu.mapapi.map.HeatMap$Builder data(java.util.Collection) -> data
    com.baidu.mapapi.map.HeatMap$Builder weightedData(java.util.Collection) -> weightedData
    com.baidu.mapapi.map.HeatMap$Builder radius(int) -> radius
    com.baidu.mapapi.map.HeatMap$Builder gradient(com.baidu.mapapi.map.Gradient) -> gradient
    com.baidu.mapapi.map.HeatMap$Builder opacity(double) -> opacity
    com.baidu.mapapi.map.HeatMap build() -> build
    java.util.Collection a(com.baidu.mapapi.map.HeatMap$Builder) -> a
    int b(com.baidu.mapapi.map.HeatMap$Builder) -> b
    com.baidu.mapapi.map.Gradient c(com.baidu.mapapi.map.HeatMap$Builder) -> c
    double d(com.baidu.mapapi.map.HeatMap$Builder) -> d
com.baidu.mapapi.map.InfoWindow -> com.baidu.mapapi.map.InfoWindow:
    com.baidu.mapapi.map.BitmapDescriptor a -> a
    android.view.View b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener d -> d
    int e -> e
com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener -> com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener:
    void onInfoWindowClick() -> onInfoWindowClick
com.baidu.mapapi.map.MapFragment -> com.baidu.mapapi.map.MapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.MapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.MapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.MapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.MapPoi -> com.baidu.mapapi.map.MapPoi:
    java.lang.String c -> c
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.map.MapStatus -> com.baidu.mapapi.map.MapStatus:
    float rotate -> rotate
    com.baidu.mapapi.model.LatLng target -> target
    float overlook -> overlook
    float zoom -> zoom
    android.graphics.Point targetScreen -> targetScreen
    com.baidu.mapapi.model.LatLngBounds bound -> bound
    double b -> b
    double c -> c
    com.baidu.platform.comapi.map.z a -> a
    double a() -> a
    double b() -> b
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.z) -> a
    com.baidu.platform.comapi.map.z c() -> c
    com.baidu.platform.comapi.map.z b(com.baidu.platform.comapi.map.z) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.MapStatus$Builder -> com.baidu.mapapi.map.MapStatus$Builder:
    float a -> a
    com.baidu.mapapi.model.LatLng b -> b
    float c -> c
    float d -> d
    android.graphics.Point e -> e
    com.baidu.mapapi.model.LatLngBounds f -> f
    double g -> g
    double h -> h
    com.baidu.mapapi.map.MapStatus$Builder rotate(float) -> rotate
    com.baidu.mapapi.map.MapStatus$Builder target(com.baidu.mapapi.model.LatLng) -> target
    com.baidu.mapapi.map.MapStatus$Builder overlook(float) -> overlook
    com.baidu.mapapi.map.MapStatus$Builder zoom(float) -> zoom
    com.baidu.mapapi.map.MapStatus$Builder targetScreen(android.graphics.Point) -> targetScreen
    com.baidu.mapapi.map.MapStatus build() -> build
com.baidu.mapapi.map.MapStatusUpdate -> com.baidu.mapapi.map.MapStatusUpdate:
    java.lang.String l -> l
    int a -> a
    com.baidu.mapapi.map.MapStatus b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLngBounds d -> d
    int e -> e
    int f -> f
    float g -> g
    int h -> h
    int i -> i
    float j -> j
    android.graphics.Point k -> k
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.f,com.baidu.mapapi.map.MapStatus) -> a
com.baidu.mapapi.map.MapStatusUpdateFactory -> com.baidu.mapapi.map.MapStatusUpdateFactory:
    com.baidu.mapapi.map.MapStatusUpdate newMapStatus(com.baidu.mapapi.map.MapStatus) -> newMapStatus
    com.baidu.mapapi.map.MapStatusUpdate newLatLng(com.baidu.mapapi.model.LatLng) -> newLatLng
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds,int,int) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngZoom(com.baidu.mapapi.model.LatLng,float) -> newLatLngZoom
    com.baidu.mapapi.map.MapStatusUpdate scrollBy(int,int) -> scrollBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomIn() -> zoomIn
    com.baidu.mapapi.map.MapStatusUpdate zoomOut() -> zoomOut
    com.baidu.mapapi.map.MapStatusUpdate zoomTo(float) -> zoomTo
com.baidu.mapapi.map.MapView -> com.baidu.mapapi.map.MapView:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.f b -> b
    com.baidu.mapapi.map.BaiduMap c -> c
    android.widget.ImageView d -> d
    android.graphics.Bitmap e -> e
    android.widget.ZoomControls f -> f
    android.graphics.Point g -> g
    android.graphics.Point h -> h
    android.widget.RelativeLayout i -> i
    android.widget.TextView j -> j
    android.widget.TextView k -> k
    android.widget.ImageView l -> l
    android.util.SparseArray m -> m
    float n -> n
    com.baidu.platform.comapi.map.h o -> o
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> a
    void b(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b() -> b
    void c(android.content.Context) -> c
    com.baidu.mapapi.map.BaiduMap getMap() -> getMap
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View) -> a
    void showZoomControls(boolean) -> showZoomControls
    void setZoomControlsPosition(android.graphics.Point) -> setZoomControlsPosition
    void showScaleControl(boolean) -> showScaleControl
    void setScaleControlPosition(android.graphics.Point) -> setScaleControlPosition
    com.baidu.platform.comapi.map.f a(com.baidu.mapapi.map.MapView) -> a
    float b(com.baidu.mapapi.map.MapView) -> b
    android.util.SparseArray a() -> a
    android.widget.ImageView c(com.baidu.mapapi.map.MapView) -> c
    android.widget.TextView d(com.baidu.mapapi.map.MapView) -> d
    android.widget.TextView e(com.baidu.mapapi.map.MapView) -> e
    float a(com.baidu.mapapi.map.MapView,float) -> a
    void f(com.baidu.mapapi.map.MapView) -> f
com.baidu.mapapi.map.MapViewLayoutParams -> com.baidu.mapapi.map.MapViewLayoutParams:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    com.baidu.mapapi.model.LatLng a -> a
    android.graphics.Point b -> b
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode c -> c
    float d -> d
    float e -> e
    int f -> f
com.baidu.mapapi.map.MapViewLayoutParams$Builder -> com.baidu.mapapi.map.MapViewLayoutParams$Builder:
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    android.graphics.Point d -> d
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode e -> e
    int f -> f
    int g -> g
    int h -> h
    com.baidu.mapapi.map.MapViewLayoutParams build() -> build
    com.baidu.mapapi.map.MapViewLayoutParams$Builder width(int) -> width
    com.baidu.mapapi.map.MapViewLayoutParams$Builder height(int) -> height
    com.baidu.mapapi.map.MapViewLayoutParams$Builder align(int,int) -> align
    com.baidu.mapapi.map.MapViewLayoutParams$Builder position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.MapViewLayoutParams$Builder point(android.graphics.Point) -> point
    com.baidu.mapapi.map.MapViewLayoutParams$Builder layoutMode(com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode) -> layoutMode
    com.baidu.mapapi.map.MapViewLayoutParams$Builder yOffset(int) -> yOffset
com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode -> com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode:
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode mapMode -> mapMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode absoluteMode -> absoluteMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] $VALUES -> $VALUES
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] values() -> values
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.Marker -> com.baidu.mapapi.map.Marker:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    float c -> c
    float d -> d
    boolean e -> e
    boolean f -> f
    float g -> g
    java.lang.String h -> h
    int i -> i
    boolean j -> j
    boolean k -> k
    java.util.ArrayList l -> l
    int m -> m
    void setIcon(com.baidu.mapapi.map.BitmapDescriptor) -> setIcon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    void setIcons(java.util.ArrayList) -> setIcons
    java.util.ArrayList getIcons() -> getIcons
    void setPeriod(int) -> setPeriod
    int getPeriod() -> getPeriod
    void setToTop() -> setToTop
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    boolean isFlat() -> isFlat
    void setFlat(boolean) -> setFlat
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setRotate(float) -> setRotate
    float getRotate() -> getRotate
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    android.os.Bundle a(android.os.Bundle) -> a
    void a(java.util.ArrayList,android.os.Bundle) -> a
com.baidu.mapapi.map.MarkerOptions -> com.baidu.mapapi.map.MarkerOptions:
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.map.BitmapDescriptor e -> e
    float f -> f
    float g -> g
    boolean h -> h
    boolean i -> i
    float j -> j
    java.lang.String k -> k
    int l -> l
    boolean m -> m
    java.util.ArrayList n -> n
    int o -> o
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.MarkerOptions icon(com.baidu.mapapi.map.BitmapDescriptor) -> icon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    com.baidu.mapapi.map.MarkerOptions icons(java.util.ArrayList) -> icons
    java.util.ArrayList getIcons() -> getIcons
    com.baidu.mapapi.map.MarkerOptions period(int) -> period
    int getPeriod() -> getPeriod
    com.baidu.mapapi.map.MarkerOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.MarkerOptions perspective(boolean) -> perspective
    boolean isPerspective() -> isPerspective
    com.baidu.mapapi.map.MarkerOptions a(int) -> a
    com.baidu.mapapi.map.MarkerOptions draggable(boolean) -> draggable
    boolean isFlat() -> isFlat
    com.baidu.mapapi.map.MarkerOptions flat(boolean) -> flat
    boolean isDraggable() -> isDraggable
    com.baidu.mapapi.map.MarkerOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.MarkerOptions rotate(float) -> rotate
    float getRotate() -> getRotate
    com.baidu.mapapi.map.MarkerOptions title(java.lang.String) -> title
    java.lang.String getTitle() -> getTitle
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.MarkerOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.MarkerOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.MarkerOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.MyLocationConfiguration -> com.baidu.mapapi.map.MyLocationConfiguration:
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode locationMode -> locationMode
    boolean enableDirection -> enableDirection
    com.baidu.mapapi.map.BitmapDescriptor customMarker -> customMarker
com.baidu.mapapi.map.MyLocationConfiguration$LocationMode -> com.baidu.mapapi.map.MyLocationConfiguration$LocationMode:
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode NORMAL -> NORMAL
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode FOLLOWING -> FOLLOWING
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode COMPASS -> COMPASS
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] a -> a
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] values() -> values
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.MyLocationData -> com.baidu.mapapi.map.MyLocationData:
    double latitude -> latitude
    double longitude -> longitude
    float speed -> speed
    float direction -> direction
    float accuracy -> accuracy
    int satellitesNum -> satellitesNum
com.baidu.mapapi.map.MyLocationData$Builder -> com.baidu.mapapi.map.MyLocationData$Builder:
    double a -> a
    double b -> b
    float c -> c
    float d -> d
    float e -> e
    int f -> f
    com.baidu.mapapi.map.MyLocationData$Builder latitude(double) -> latitude
    com.baidu.mapapi.map.MyLocationData$Builder longitude(double) -> longitude
    com.baidu.mapapi.map.MyLocationData$Builder speed(float) -> speed
    com.baidu.mapapi.map.MyLocationData$Builder direction(float) -> direction
    com.baidu.mapapi.map.MyLocationData$Builder accuracy(float) -> accuracy
    com.baidu.mapapi.map.MyLocationData$Builder satellitesNum(int) -> satellitesNum
    com.baidu.mapapi.map.MyLocationData build() -> build
com.baidu.mapapi.map.Overlay -> com.baidu.mapapi.map.Overlay:
    java.lang.String n -> n
    com.baidu.platform.comapi.map.e o -> o
    int p -> p
    boolean q -> q
    android.os.Bundle r -> r
    com.baidu.mapapi.map.Overlay$a listener -> listener
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    android.os.Bundle getExtraInfo() -> getExtraInfo
    void setExtraInfo(android.os.Bundle) -> setExtraInfo
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
    void remove() -> remove
    void a(int,android.os.Bundle) -> a
    void a(java.util.List,android.os.Bundle) -> a
com.baidu.mapapi.map.Overlay$a -> com.baidu.mapapi.map.Overlay$a:
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.OverlayOptions -> com.baidu.mapapi.map.OverlayOptions:
    com.baidu.mapapi.map.Overlay a() -> a
com.baidu.mapapi.map.Polygon -> com.baidu.mapapi.map.Polygon:
    com.baidu.mapapi.map.Stroke a -> a
    int b -> b
    java.util.List c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setFillColor(int) -> setFillColor
    void setPoints(java.util.List) -> setPoints
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolygonOptions -> com.baidu.mapapi.map.PolygonOptions:
    com.baidu.mapapi.map.Stroke d -> d
    int e -> e
    java.util.List f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.PolygonOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.PolygonOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolygonOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolygonOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolygonOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolygonOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Polyline -> com.baidu.mapapi.map.Polyline:
    int a -> a
    java.util.List b -> b
    int[] c -> c
    int d -> d
    boolean e -> e
    boolean f -> f
    com.baidu.mapapi.map.BitmapDescriptor g -> g
    java.util.List h -> h
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setDottedLine(boolean) -> setDottedLine
    void setFocus(boolean) -> setFocus
    boolean isFocus() -> isFocus
    boolean isDottedLine() -> isDottedLine
    void setPoints(java.util.List) -> setPoints
    void setWidth(int) -> setWidth
    void a(int[],android.os.Bundle) -> a
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a(boolean) -> a
    android.os.Bundle b() -> b
com.baidu.mapapi.map.PolylineOptions -> com.baidu.mapapi.map.PolylineOptions:
    int e -> e
    java.util.List f -> f
    java.util.List g -> g
    int h -> h
    com.baidu.mapapi.map.BitmapDescriptor i -> i
    java.util.List j -> j
    boolean k -> k
    int a -> a
    boolean b -> b
    boolean c -> c
    android.os.Bundle d -> d
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    java.util.List getTextureIndexs() -> getTextureIndexs
    int getWidth() -> getWidth
    com.baidu.mapapi.map.PolylineOptions color(int) -> color
    com.baidu.mapapi.map.PolylineOptions customTexture(com.baidu.mapapi.map.BitmapDescriptor) -> customTexture
    com.baidu.mapapi.map.PolylineOptions customTextureList(java.util.List) -> customTextureList
    java.util.List getCustomTextureList() -> getCustomTextureList
    com.baidu.mapapi.map.BitmapDescriptor getCustomTexture() -> getCustomTexture
    com.baidu.mapapi.map.PolylineOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolylineOptions textureIndex(java.util.List) -> textureIndex
    com.baidu.mapapi.map.PolylineOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolylineOptions visible(boolean) -> visible
    com.baidu.mapapi.map.PolylineOptions focus(boolean) -> focus
    com.baidu.mapapi.map.PolylineOptions dottedLine(boolean) -> dottedLine
    boolean isDottedLine() -> isDottedLine
    boolean isVisible() -> isVisible
    boolean isFocus() -> isFocus
    com.baidu.mapapi.map.PolylineOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolylineOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Projection -> com.baidu.mapapi.map.Projection:
    com.baidu.platform.comapi.map.f a -> a
    com.baidu.mapapi.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.baidu.mapapi.model.LatLng) -> toScreenLocation
    android.graphics.PointF toOpenGLLocation(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.map.MapStatus) -> toOpenGLLocation
    float metersToEquatorPixels(float) -> metersToEquatorPixels
com.baidu.mapapi.map.Stroke -> com.baidu.mapapi.map.Stroke:
    int strokeWidth -> strokeWidth
    int color -> color
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.SupportMapFragment -> com.baidu.mapapi.map.SupportMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.SupportMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.SupportMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.MapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.Text -> com.baidu.mapapi.map.Text:
    java.lang.String k -> k
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    int d -> d
    int e -> e
    android.graphics.Typeface f -> f
    int g -> g
    int h -> h
    float i -> i
    int j -> j
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    void setText(java.lang.String) -> setText
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    void setBgColor(int) -> setBgColor
    void setFontColor(int) -> setFontColor
    void setFontSize(int) -> setFontSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setAlign(int,int) -> setAlign
    void setRotate(float) -> setRotate
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
com.baidu.mapapi.map.TextOptions -> com.baidu.mapapi.map.TextOptions:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    int h -> h
    android.graphics.Typeface i -> i
    int j -> j
    int k -> k
    float l -> l
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    com.baidu.mapapi.map.TextOptions text(java.lang.String) -> text
    com.baidu.mapapi.map.TextOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.TextOptions bgColor(int) -> bgColor
    com.baidu.mapapi.map.TextOptions fontColor(int) -> fontColor
    com.baidu.mapapi.map.TextOptions fontSize(int) -> fontSize
    com.baidu.mapapi.map.TextOptions typeface(android.graphics.Typeface) -> typeface
    com.baidu.mapapi.map.TextOptions align(int,int) -> align
    com.baidu.mapapi.map.TextOptions rotate(float) -> rotate
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.TextOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.TextOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.TextOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.UiSettings -> com.baidu.mapapi.map.UiSettings:
    com.baidu.platform.comapi.map.f a -> a
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isOverlookingGesturesEnabled() -> isOverlookingGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setCompassPosition(android.graphics.Point) -> setCompassPosition
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setOverlookingGesturesEnabled(boolean) -> setOverlookingGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
com.baidu.mapapi.map.WeightedLatLng -> com.baidu.mapapi.map.WeightedLatLng:
    android.graphics.Point a -> a
    double DEFAULT_INTENSITY -> DEFAULT_INTENSITY
    double intensity -> intensity
    com.baidu.mapapi.model.LatLng latLng -> latLng
    android.graphics.Point a() -> a
com.baidu.mapapi.map.a -> com.baidu.mapapi.map.a:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.b -> com.baidu.mapapi.map.b:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.map.z) -> a
    void b(com.baidu.platform.comapi.map.z) -> b
    void c(com.baidu.platform.comapi.map.z) -> c
    void a(android.view.MotionEvent) -> a
    void a(com.baidu.platform.comapi.a.b) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.platform.comapi.a.b) -> d
    void e(com.baidu.platform.comapi.a.b) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.z) -> a
    void d() -> d
    void e() -> e
com.baidu.mapapi.map.c -> com.baidu.mapapi.map.c:
    com.baidu.mapapi.map.BaiduMap a -> a
    android.os.Bundle a(int,int,int) -> a
com.baidu.mapapi.map.d -> com.baidu.mapapi.map.d:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    boolean a(double,double) -> a
    boolean a(android.graphics.Point) -> a
    boolean a(double,double,double,double) -> a
    boolean a(com.baidu.mapapi.map.d) -> a
    boolean b(com.baidu.mapapi.map.d) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.e -> com.baidu.mapapi.map.e:
    int a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.HeatMap d -> d
    void run() -> run
com.baidu.mapapi.map.f -> com.baidu.mapapi.map.f:
    com.baidu.mapapi.map.MapView a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.a.b) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(com.baidu.platform.comapi.map.z) -> a
    void b(com.baidu.platform.comapi.map.z) -> b
    void c(com.baidu.platform.comapi.map.z) -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.platform.comapi.a.b) -> d
    void e(com.baidu.platform.comapi.a.b) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.z) -> a
    void d() -> d
    void e() -> e
    void a(android.view.MotionEvent) -> a
com.baidu.mapapi.map.g -> com.baidu.mapapi.map.g:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.h -> com.baidu.mapapi.map.h:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.i -> com.baidu.mapapi.map.i:
    com.baidu.mapapi.map.d a -> a
    int b -> b
    java.util.List c -> c
    java.util.List d -> d
    void a(com.baidu.mapapi.map.i$a) -> a
    void a(double,double,com.baidu.mapapi.map.i$a) -> a
    void a() -> a
    java.util.Collection a(com.baidu.mapapi.map.d) -> a
    void a(com.baidu.mapapi.map.d,java.util.Collection) -> a
com.baidu.mapapi.map.i$a -> com.baidu.mapapi.map.i$a:
    android.graphics.Point a() -> a
com.baidu.mapapi.map.j -> com.baidu.mapapi.map.j:
    byte[] a -> a
    int b -> b
    int c -> c
    android.os.Bundle a() -> a
com.baidu.mapapi.map.offline.MKOLSearchRecord -> com.baidu.mapapi.map.offline.MKOLSearchRecord:
    int cityID -> cityID
    int size -> size
    java.lang.String cityName -> cityName
    int cityType -> cityType
    java.util.ArrayList childCities -> childCities
com.baidu.mapapi.map.offline.MKOLUpdateElement -> com.baidu.mapapi.map.offline.MKOLUpdateElement:
    int UNDEFINED -> UNDEFINED
    int DOWNLOADING -> DOWNLOADING
    int WAITING -> WAITING
    int SUSPENDED -> SUSPENDED
    int FINISHED -> FINISHED
    int eOLDSMd5Error -> eOLDSMd5Error
    int eOLDSNetError -> eOLDSNetError
    int eOLDSIOError -> eOLDSIOError
    int eOLDSWifiError -> eOLDSWifiError
    int eOLDSMissData -> eOLDSMissData
    int cityID -> cityID
    java.lang.String cityName -> cityName
    int ratio -> ratio
    int status -> status
    com.baidu.mapapi.model.LatLng geoPt -> geoPt
    int size -> size
    int serversize -> serversize
    int level -> level
    boolean update -> update
com.baidu.mapapi.map.offline.MKOfflineMap -> com.baidu.mapapi.map.offline.MKOfflineMap:
    java.lang.String a -> a
    int TYPE_NEW_OFFLINE -> TYPE_NEW_OFFLINE
    int TYPE_DOWNLOAD_UPDATE -> TYPE_DOWNLOAD_UPDATE
    int TYPE_VER_UPDATE -> TYPE_VER_UPDATE
    com.baidu.platform.comapi.map.q b -> b
    com.baidu.mapapi.map.offline.MKOfflineMapListener c -> c
    boolean init(com.baidu.mapapi.map.offline.MKOfflineMapListener) -> init
    boolean start(int) -> start
    boolean update(int) -> update
    boolean pause(int) -> pause
    void destroy() -> destroy
    boolean remove(int) -> remove
    java.util.ArrayList getHotCityList() -> getHotCityList
    java.util.ArrayList getOfflineCityList() -> getOfflineCityList
    java.util.ArrayList searchCity(java.lang.String) -> searchCity
    java.util.ArrayList getAllUpdateInfo() -> getAllUpdateInfo
    com.baidu.mapapi.map.offline.MKOLUpdateElement getUpdateInfo(int) -> getUpdateInfo
    int importOfflineData() -> importOfflineData
    int importOfflineData(boolean) -> importOfflineData
    com.baidu.platform.comapi.map.q a(com.baidu.mapapi.map.offline.MKOfflineMap) -> a
    com.baidu.mapapi.map.offline.MKOfflineMapListener b(com.baidu.mapapi.map.offline.MKOfflineMap) -> b
com.baidu.mapapi.map.offline.MKOfflineMapListener -> com.baidu.mapapi.map.offline.MKOfflineMapListener:
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.baidu.mapapi.map.offline.a -> com.baidu.mapapi.map.offline.a:
    com.baidu.mapapi.map.offline.MKOfflineMap a -> a
    void a(int,int) -> a
com.baidu.mapapi.model.LatLng -> com.baidu.mapapi.model.LatLng:
    java.lang.String a -> a
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds -> com.baidu.mapapi.model.LatLngBounds:
    com.baidu.mapapi.model.LatLng northeast -> northeast
    com.baidu.mapapi.model.LatLng southwest -> southwest
    boolean contains(com.baidu.mapapi.model.LatLng) -> contains
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds$Builder -> com.baidu.mapapi.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    boolean e -> e
    com.baidu.mapapi.model.LatLngBounds build() -> build
    com.baidu.mapapi.model.LatLngBounds$Builder include(com.baidu.mapapi.model.LatLng) -> include
com.baidu.mapapi.model.a -> com.baidu.mapapi.model.a:
    android.os.Bundle a -> a
    double[] b -> b
    double[] c -> c
    double[][] d -> d
    double[][] e -> e
    com.baidu.mapapi.model.a$a a(com.baidu.mapapi.model.a$a,double[]) -> a
    com.baidu.mapapi.model.LatLng a(com.baidu.platform.comapi.a.b) -> a
    com.baidu.platform.comapi.a.b a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.platform.comapi.a.d b(com.baidu.mapapi.model.LatLng) -> b
    int a(com.baidu.mapapi.model.LatLng,int) -> a
    com.baidu.mapapi.model.LatLng a(java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(java.lang.String) -> b
    java.util.List c(java.lang.String) -> c
    com.baidu.platform.comapi.a.d a(float,float,java.lang.String) -> a
    java.util.List d(java.lang.String) -> d
com.baidu.mapapi.model.a$a -> com.baidu.mapapi.model.a$a:
    double a -> a
    double b -> b
com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException -> com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException:
com.baidu.mapapi.navi.BaiduMapNavigation -> com.baidu.mapapi.navi.BaiduMapNavigation:
    boolean a -> a
    void setSupportWebNavi(boolean) -> setSupportWebNavi
    boolean openBaiduMapNavi(com.baidu.mapapi.navi.NaviParaOption,android.content.Context) -> openBaiduMapNavi
    void openWebBaiduMapNavi(com.baidu.mapapi.navi.NaviParaOption,android.content.Context) -> openWebBaiduMapNavi
    void a(com.baidu.mapapi.navi.NaviParaOption,android.content.Context) -> a
    java.lang.String a(android.content.Context) -> a
com.baidu.mapapi.navi.IllegalNaviArgumentException -> com.baidu.mapapi.navi.IllegalNaviArgumentException:
com.baidu.mapapi.navi.NaviParaOption -> com.baidu.mapapi.navi.NaviParaOption:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    java.lang.String d -> d
    com.baidu.mapapi.navi.NaviParaOption startPoint(com.baidu.mapapi.model.LatLng) -> startPoint
    com.baidu.mapapi.navi.NaviParaOption startName(java.lang.String) -> startName
    com.baidu.mapapi.navi.NaviParaOption endPoint(com.baidu.mapapi.model.LatLng) -> endPoint
    com.baidu.mapapi.navi.NaviParaOption endName(java.lang.String) -> endName
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    java.lang.String getStartName() -> getStartName
    java.lang.String getEndName() -> getEndName
com.baidu.mapapi.overlayutil.BusLineOverlay -> com.baidu.mapapi.overlayutil.BusLineOverlay:
    com.baidu.mapapi.search.busline.BusLineResult a -> a
    void setData(com.baidu.mapapi.search.busline.BusLineResult) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    boolean onBusStationClick(int) -> onBusStationClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
    boolean onPolylineClick(com.baidu.mapapi.map.Polyline) -> onPolylineClick
com.baidu.mapapi.overlayutil.DrivingRouteOverlay -> com.baidu.mapapi.overlayutil.DrivingRouteOverlay:
    com.baidu.mapapi.search.route.DrivingRouteLine d -> d
    boolean a -> a
    void setFocus(boolean) -> setFocus
    java.util.List getOverlayOptions() -> getOverlayOptions
    void setData(com.baidu.mapapi.search.route.DrivingRouteLine) -> setData
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    int getLineColor() -> getLineColor
    java.util.List getCustomTextureList() -> getCustomTextureList
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
    boolean onPolylineClick(com.baidu.mapapi.map.Polyline) -> onPolylineClick
com.baidu.mapapi.overlayutil.OverlayManager -> com.baidu.mapapi.overlayutil.OverlayManager:
    com.baidu.mapapi.map.BaiduMap b -> b
    java.util.List a -> a
    java.util.List c -> c
    java.util.List getOverlayOptions() -> getOverlayOptions
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void zoomToSpan() -> zoomToSpan
com.baidu.mapapi.overlayutil.PoiOverlay -> com.baidu.mapapi.overlayutil.PoiOverlay:
    com.baidu.mapapi.search.poi.PoiResult a -> a
    void setData(com.baidu.mapapi.search.poi.PoiResult) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.search.poi.PoiResult getPoiResult() -> getPoiResult
    boolean onPoiClick(int) -> onPoiClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
    boolean onPolylineClick(com.baidu.mapapi.map.Polyline) -> onPolylineClick
com.baidu.mapapi.overlayutil.TransitRouteOverlay -> com.baidu.mapapi.overlayutil.TransitRouteOverlay:
    com.baidu.mapapi.search.route.TransitRouteLine a -> a
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.map.BitmapDescriptor a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep) -> a
    void setData(com.baidu.mapapi.search.route.TransitRouteLine) -> setData
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    int getLineColor() -> getLineColor
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
    boolean onPolylineClick(com.baidu.mapapi.map.Polyline) -> onPolylineClick
com.baidu.mapapi.overlayutil.TransitRouteOverlay$1 -> com.baidu.mapapi.overlayutil.TransitRouteOverlay$1:
    int[] a -> a
com.baidu.mapapi.overlayutil.WalkingRouteOverlay -> com.baidu.mapapi.overlayutil.WalkingRouteOverlay:
    com.baidu.mapapi.search.route.WalkingRouteLine a -> a
    void setData(com.baidu.mapapi.search.route.WalkingRouteLine) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    int getLineColor() -> getLineColor
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
    boolean onPolylineClick(com.baidu.mapapi.map.Polyline) -> onPolylineClick
com.baidu.mapapi.radar.RadarNearbyInfo -> com.baidu.mapapi.radar.RadarNearbyInfo:
    java.lang.String userID -> userID
    com.baidu.mapapi.model.LatLng pt -> pt
    int distance -> distance
    java.util.Date timeStamp -> timeStamp
    java.lang.String mobileName -> mobileName
    java.lang.String mobileOS -> mobileOS
    java.lang.String comments -> comments
com.baidu.mapapi.radar.RadarNearbyResult -> com.baidu.mapapi.radar.RadarNearbyResult:
    java.util.List infoList -> infoList
    int totalNum -> totalNum
    int pageIndex -> pageIndex
    int pageNum -> pageNum
com.baidu.mapapi.radar.RadarNearbySearchOption -> com.baidu.mapapi.radar.RadarNearbySearchOption:
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    int d -> d
    com.baidu.mapapi.radar.RadarNearbySearchSortType e -> e
    java.util.Date f -> f
    java.util.Date g -> g
    com.baidu.mapapi.radar.RadarNearbySearchOption centerPt(com.baidu.mapapi.model.LatLng) -> centerPt
    com.baidu.mapapi.radar.RadarNearbySearchOption timeRange(java.util.Date,java.util.Date) -> timeRange
    com.baidu.mapapi.radar.RadarNearbySearchOption sortType(com.baidu.mapapi.radar.RadarNearbySearchSortType) -> sortType
    com.baidu.mapapi.radar.RadarNearbySearchOption radius(int) -> radius
    com.baidu.mapapi.radar.RadarNearbySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.radar.RadarNearbySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.radar.RadarNearbySearchSortType -> com.baidu.mapapi.radar.RadarNearbySearchSortType:
    com.baidu.mapapi.radar.RadarNearbySearchSortType distance_from_near_to_far -> distance_from_near_to_far
    com.baidu.mapapi.radar.RadarNearbySearchSortType distance_from_far_to_near -> distance_from_far_to_near
    com.baidu.mapapi.radar.RadarNearbySearchSortType time_from_past_to_recent -> time_from_past_to_recent
    com.baidu.mapapi.radar.RadarNearbySearchSortType time_from_recent_to_past -> time_from_recent_to_past
    com.baidu.mapapi.radar.RadarNearbySearchSortType[] a -> a
    com.baidu.mapapi.radar.RadarNearbySearchSortType[] values() -> values
    com.baidu.mapapi.radar.RadarNearbySearchSortType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.radar.RadarSearchError -> com.baidu.mapapi.radar.RadarSearchError:
    com.baidu.mapapi.radar.RadarSearchError RADAR_NO_ERROR -> RADAR_NO_ERROR
    com.baidu.mapapi.radar.RadarSearchError RADAR_NO_RESULT -> RADAR_NO_RESULT
    com.baidu.mapapi.radar.RadarSearchError RADAR_AK_NOT_BIND -> RADAR_AK_NOT_BIND
    com.baidu.mapapi.radar.RadarSearchError RADAR_NETWORK_ERROR -> RADAR_NETWORK_ERROR
    com.baidu.mapapi.radar.RadarSearchError RADAR_NETWORK_TIMEOUT -> RADAR_NETWORK_TIMEOUT
    com.baidu.mapapi.radar.RadarSearchError RADAR_AK_ERROR -> RADAR_AK_ERROR
    com.baidu.mapapi.radar.RadarSearchError RADAR_USERID_NOT_EXIST -> RADAR_USERID_NOT_EXIST
    com.baidu.mapapi.radar.RadarSearchError RADAR_FORBID_BY_USER -> RADAR_FORBID_BY_USER
    com.baidu.mapapi.radar.RadarSearchError RADAR_FORBID_BY_ADMIN -> RADAR_FORBID_BY_ADMIN
    com.baidu.mapapi.radar.RadarSearchError RADAR_PERMISSION_UNFINISHED -> RADAR_PERMISSION_UNFINISHED
    com.baidu.mapapi.radar.RadarSearchError[] a -> a
    com.baidu.mapapi.radar.RadarSearchError[] values() -> values
    com.baidu.mapapi.radar.RadarSearchError valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.radar.RadarSearchListener -> com.baidu.mapapi.radar.RadarSearchListener:
    void onGetNearbyInfoList(com.baidu.mapapi.radar.RadarNearbyResult,com.baidu.mapapi.radar.RadarSearchError) -> onGetNearbyInfoList
    void onGetUploadState(com.baidu.mapapi.radar.RadarSearchError) -> onGetUploadState
    void onGetClearInfoState(com.baidu.mapapi.radar.RadarSearchError) -> onGetClearInfoState
com.baidu.mapapi.radar.RadarSearchManager -> com.baidu.mapapi.radar.RadarSearchManager:
    com.baidu.mapapi.radar.RadarSearchManager a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.Timer d -> d
    java.util.TimerTask e -> e
    boolean f -> f
    android.os.Handler g -> g
    com.baidu.mapapi.radar.RadarUploadInfoCallback h -> h
    com.baidu.mapapi.radar.RadarUploadInfo i -> i
    long j -> j
    int k -> k
    int l -> l
    com.baidu.mapapi.radar.RadarSearchManager getInstance() -> getInstance
    void setUserID(java.lang.String) -> setUserID
    void clearUserInfo() -> clearUserInfo
    boolean nearbyInfoRequest(com.baidu.mapapi.radar.RadarNearbySearchOption) -> nearbyInfoRequest
    void startUploadAuto(com.baidu.mapapi.radar.RadarUploadInfoCallback,int) -> startUploadAuto
    void stopUploadAuto() -> stopUploadAuto
    void addNearbyInfoListener(com.baidu.mapapi.radar.RadarSearchListener) -> addNearbyInfoListener
    void removeNearbyInfoListener(com.baidu.mapapi.radar.RadarSearchListener) -> removeNearbyInfoListener
    boolean uploadInfoRequest(com.baidu.mapapi.radar.RadarUploadInfo) -> uploadInfoRequest
    boolean a(com.baidu.mapapi.radar.RadarUploadInfo) -> a
    void destroy() -> destroy
    com.baidu.mapapi.radar.RadarNearbyResult a(java.lang.String) -> a
    com.baidu.mapapi.radar.RadarSearchError a(int) -> a
    void onGetNearByResult(java.lang.String,int) -> onGetNearByResult
    void onGetUploadResult(int) -> onGetUploadResult
    void onGetClearInfoResult(int) -> onGetClearInfoResult
    com.baidu.mapapi.radar.RadarSearchManager a() -> a
    com.baidu.mapapi.radar.RadarUploadInfoCallback a(com.baidu.mapapi.radar.RadarSearchManager) -> a
    com.baidu.mapapi.radar.RadarUploadInfo a(com.baidu.mapapi.radar.RadarSearchManager,com.baidu.mapapi.radar.RadarUploadInfo) -> a
    boolean b(com.baidu.mapapi.radar.RadarSearchManager,com.baidu.mapapi.radar.RadarUploadInfo) -> b
    android.os.Handler b(com.baidu.mapapi.radar.RadarSearchManager) -> b
com.baidu.mapapi.radar.RadarUploadInfo -> com.baidu.mapapi.radar.RadarUploadInfo:
    com.baidu.mapapi.model.LatLng pt -> pt
    java.lang.String comments -> comments
com.baidu.mapapi.radar.RadarUploadInfoCallback -> com.baidu.mapapi.radar.RadarUploadInfoCallback:
    com.baidu.mapapi.radar.RadarUploadInfo OnUploadInfoCallback() -> OnUploadInfoCallback
com.baidu.mapapi.radar.a -> com.baidu.mapapi.radar.a:
    com.baidu.mapapi.radar.RadarSearchManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.radar.b -> com.baidu.mapapi.radar.b:
    com.baidu.mapapi.radar.RadarSearchManager a -> a
    void run() -> run
com.baidu.mapapi.search.busline.BusLineResult -> com.baidu.mapapi.search.busline.BusLineResult:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    java.util.Date d -> d
    java.util.Date e -> e
    java.lang.String f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.lang.String getBusCompany() -> getBusCompany
    java.lang.String getBusLineName() -> getBusLineName
    void a(java.lang.String) -> a
    boolean isMonthTicket() -> isMonthTicket
    void a(boolean) -> a
    java.util.Date getStartTime() -> getStartTime
    void a(java.util.Date) -> a
    java.util.Date getEndTime() -> getEndTime
    void b(java.util.Date) -> b
    java.util.List getStations() -> getStations
    void a(java.util.List) -> a
    java.util.List getSteps() -> getSteps
    void b(java.util.List) -> b
    java.lang.String getUid() -> getUid
    void b(java.lang.String) -> b
com.baidu.mapapi.search.busline.BusLineResult$BusStation -> com.baidu.mapapi.search.busline.BusLineResult$BusStation:
com.baidu.mapapi.search.busline.BusLineResult$BusStep -> com.baidu.mapapi.search.busline.BusLineResult$BusStep:
com.baidu.mapapi.search.busline.BusLineSearch -> com.baidu.mapapi.search.busline.BusLineSearch:
    com.baidu.platform.comapi.d.d a -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.busline.BusLineSearch newInstance() -> newInstance
    boolean searchBusLine(com.baidu.mapapi.search.busline.BusLineSearchOption) -> searchBusLine
    void setOnGetBusLineSearchResultListener(com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener) -> setOnGetBusLineSearchResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.busline.BusLineSearch) -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b(com.baidu.mapapi.search.busline.BusLineSearch) -> b
com.baidu.mapapi.search.busline.BusLineSearch$1 -> com.baidu.mapapi.search.busline.BusLineSearch$1:
com.baidu.mapapi.search.busline.BusLineSearch$a -> com.baidu.mapapi.search.busline.BusLineSearch$a:
    com.baidu.mapapi.search.busline.BusLineSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.busline.BusLineSearchOption -> com.baidu.mapapi.search.busline.BusLineSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.busline.BusLineSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.busline.BusLineSearchOption uid(java.lang.String) -> uid
com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener -> com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener:
    void onGetBusLineResult(com.baidu.mapapi.search.busline.BusLineResult) -> onGetBusLineResult
com.baidu.mapapi.search.busline.a -> com.baidu.mapapi.search.busline.a:
    com.baidu.mapapi.search.busline.BusLineResult a(java.lang.String) -> a
com.baidu.mapapi.search.core.CityInfo -> com.baidu.mapapi.search.core.CityInfo:
    java.lang.String city -> city
    int num -> num
com.baidu.mapapi.search.core.PoiInfo -> com.baidu.mapapi.search.core.PoiInfo:
    java.lang.String name -> name
    java.lang.String uid -> uid
    java.lang.String address -> address
    java.lang.String city -> city
    java.lang.String phoneNum -> phoneNum
    java.lang.String postCode -> postCode
    com.baidu.mapapi.search.core.PoiInfo$POITYPE type -> type
    com.baidu.mapapi.model.LatLng location -> location
    boolean hasCaterDetails -> hasCaterDetails
    boolean isPano -> isPano
com.baidu.mapapi.search.core.PoiInfo$POITYPE -> com.baidu.mapapi.search.core.PoiInfo$POITYPE:
    com.baidu.mapapi.search.core.PoiInfo$POITYPE POINT -> POINT
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_STATION -> BUS_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_LINE -> BUS_LINE
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_STATION -> SUBWAY_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_LINE -> SUBWAY_LINE
    int a -> a
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] values() -> values
    com.baidu.mapapi.search.core.PoiInfo$POITYPE valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
    com.baidu.mapapi.search.core.PoiInfo$POITYPE fromInt(int) -> fromInt
com.baidu.mapapi.search.core.RouteLine -> com.baidu.mapapi.search.core.RouteLine:
    com.baidu.mapapi.search.core.RouteNode a -> a
    com.baidu.mapapi.search.core.RouteNode b -> b
    java.lang.String c -> c
    java.util.List d -> d
    int e -> e
    int f -> f
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    com.baidu.mapapi.search.core.RouteNode getStarting() -> getStarting
    void setStarting(com.baidu.mapapi.search.core.RouteNode) -> setStarting
    com.baidu.mapapi.search.core.RouteNode getTerminal() -> getTerminal
    void setTerminal(com.baidu.mapapi.search.core.RouteNode) -> setTerminal
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void setSteps(java.util.List) -> setSteps
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.core.RouteNode -> com.baidu.mapapi.search.core.RouteNode:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.core.RouteNode titleAndLocation(java.lang.String,com.baidu.mapapi.model.LatLng) -> titleAndLocation
    com.baidu.mapapi.search.core.RouteNode location(com.baidu.mapapi.model.LatLng) -> location
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void setLocation(com.baidu.mapapi.model.LatLng) -> setLocation
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
com.baidu.mapapi.search.core.RouteStep -> com.baidu.mapapi.search.core.RouteStep:
    int a -> a
    int b -> b
    java.util.List mWayPoints -> mWayPoints
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    java.util.List getWayPoints() -> getWayPoints
    void setWayPoints(java.util.List) -> setWayPoints
com.baidu.mapapi.search.core.SearchResult -> com.baidu.mapapi.search.core.SearchResult:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO error -> error
com.baidu.mapapi.search.core.SearchResult$ERRORNO -> com.baidu.mapapi.search.core.SearchResult$ERRORNO:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NO_ERROR -> NO_ERROR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO RESULT_NOT_FOUND -> RESULT_NOT_FOUND
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_KEYWORD -> AMBIGUOUS_KEYWORD
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_ROURE_ADDR -> AMBIGUOUS_ROURE_ADDR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS -> NOT_SUPPORT_BUS
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS_2CITY -> NOT_SUPPORT_BUS_2CITY
    com.baidu.mapapi.search.core.SearchResult$ERRORNO ST_EN_TOO_NEAR -> ST_EN_TOO_NEAR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO KEY_ERROR -> KEY_ERROR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO PERMISSION_UNFINISHED -> PERMISSION_UNFINISHED
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NETWORK_TIME_OUT -> NETWORK_TIME_OUT
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NETWORK_ERROR -> NETWORK_ERROR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] values() -> values
    com.baidu.mapapi.search.core.SearchResult$ERRORNO valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.core.TaxiInfo -> com.baidu.mapapi.search.core.TaxiInfo:
    float a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    float e -> e
    float f -> f
    float getTotalPrice() -> getTotalPrice
    void setTotalPrice(float) -> setTotalPrice
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    float getPerKMPrice() -> getPerKMPrice
    void setPerKMPrice(float) -> setPerKMPrice
    float getStartPrice() -> getStartPrice
    void setStartPrice(float) -> setStartPrice
com.baidu.mapapi.search.core.VehicleInfo -> com.baidu.mapapi.search.core.VehicleInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    int getPassStationNum() -> getPassStationNum
    void setPassStationNum(int) -> setPassStationNum
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    int getZonePrice() -> getZonePrice
    void setZonePrice(int) -> setZonePrice
    int getTotalPrice() -> getTotalPrice
    void setTotalPrice(int) -> setTotalPrice
com.baidu.mapapi.search.geocode.GeoCodeOption -> com.baidu.mapapi.search.geocode.GeoCodeOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.GeoCodeOption city(java.lang.String) -> city
    com.baidu.mapapi.search.geocode.GeoCodeOption address(java.lang.String) -> address
com.baidu.mapapi.search.geocode.GeoCodeResult -> com.baidu.mapapi.search.geocode.GeoCodeResult:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
com.baidu.mapapi.search.geocode.GeoCoder -> com.baidu.mapapi.search.geocode.GeoCoder:
    com.baidu.platform.comapi.d.d a -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.geocode.GeoCoder newInstance() -> newInstance
    boolean geocode(com.baidu.mapapi.search.geocode.GeoCodeOption) -> geocode
    boolean reverseGeoCode(com.baidu.mapapi.search.geocode.ReverseGeoCodeOption) -> reverseGeoCode
    void setOnGetGeoCodeResultListener(com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener) -> setOnGetGeoCodeResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.geocode.GeoCoder) -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b(com.baidu.mapapi.search.geocode.GeoCoder) -> b
    int c(com.baidu.mapapi.search.geocode.GeoCoder) -> c
com.baidu.mapapi.search.geocode.GeoCoder$1 -> com.baidu.mapapi.search.geocode.GeoCoder$1:
com.baidu.mapapi.search.geocode.GeoCoder$a -> com.baidu.mapapi.search.geocode.GeoCoder$a:
    com.baidu.mapapi.search.geocode.GeoCoder a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener -> com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener:
    void onGetGeoCodeResult(com.baidu.mapapi.search.geocode.GeoCodeResult) -> onGetGeoCodeResult
    void onGetReverseGeoCodeResult(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult) -> onGetReverseGeoCodeResult
com.baidu.mapapi.search.geocode.ReverseGeoCodeOption -> com.baidu.mapapi.search.geocode.ReverseGeoCodeOption:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.search.geocode.ReverseGeoCodeOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent c -> c
    com.baidu.mapapi.model.LatLng d -> d
    java.util.List e -> e
    java.lang.String getBusinessCircle() -> getBusinessCircle
    void a(java.lang.String) -> a
    java.lang.String getAddress() -> getAddress
    void b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent getAddressDetail() -> getAddressDetail
    void a(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent) -> a
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.util.List getPoiList() -> getPoiList
    void a(java.util.List) -> a
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent:
    java.lang.String streetNumber -> streetNumber
    java.lang.String street -> street
    java.lang.String district -> district
    java.lang.String city -> city
    java.lang.String province -> province
com.baidu.mapapi.search.geocode.a -> com.baidu.mapapi.search.geocode.a:
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult a(java.lang.String) -> a
    com.baidu.mapapi.search.geocode.GeoCodeResult b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent a(org.json.JSONObject,java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(org.json.JSONObject,java.lang.String) -> b
    java.util.List c(org.json.JSONObject,java.lang.String) -> c
com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener -> com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener:
    void onGetPoiResult(com.baidu.mapapi.search.poi.PoiResult) -> onGetPoiResult
    void onGetPoiDetailResult(com.baidu.mapapi.search.poi.PoiDetailResult) -> onGetPoiDetailResult
com.baidu.mapapi.search.poi.PoiBoundSearchOption -> com.baidu.mapapi.search.poi.PoiBoundSearchOption:
    com.baidu.mapapi.model.LatLngBounds a -> a
    java.lang.String b -> b
    float c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.poi.PoiBoundSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiBoundSearchOption bound(com.baidu.mapapi.model.LatLngBounds) -> bound
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiCitySearchOption -> com.baidu.mapapi.search.poi.PoiCitySearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    float c -> c
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiCitySearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.poi.PoiCitySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiDetailResult -> com.baidu.mapapi.search.poi.PoiDetailResult:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.model.LatLng d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    double k -> k
    double l -> l
    double m -> m
    double n -> n
    double o -> o
    double p -> p
    double q -> q
    double r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    java.lang.String x -> x
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    java.lang.String getAddress() -> getAddress
    java.lang.String getTelephone() -> getTelephone
    java.lang.String getUid() -> getUid
    java.lang.String getTag() -> getTag
    java.lang.String getDetailUrl() -> getDetailUrl
    java.lang.String getType() -> getType
    double getPrice() -> getPrice
    double getOverallRating() -> getOverallRating
    double getTasteRating() -> getTasteRating
    double getServiceRating() -> getServiceRating
    double getEnvironmentRating() -> getEnvironmentRating
    double getFacilityRating() -> getFacilityRating
    double getHygieneRating() -> getHygieneRating
    double getTechnologyRating() -> getTechnologyRating
    int getImageNum() -> getImageNum
    int getGrouponNum() -> getGrouponNum
    int getCommentNum() -> getCommentNum
    int getFavoriteNum() -> getFavoriteNum
    int getCheckinNum() -> getCheckinNum
    java.lang.String getShopHours() -> getShopHours
    boolean a(java.lang.String) -> a
com.baidu.mapapi.search.poi.PoiDetailSearchOption -> com.baidu.mapapi.search.poi.PoiDetailSearchOption:
    java.lang.String a -> a
    boolean b -> b
    com.baidu.mapapi.search.poi.PoiDetailSearchOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.poi.PoiNearbySearchOption -> com.baidu.mapapi.search.poi.PoiNearbySearchOption:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiSortType g -> g
    com.baidu.mapapi.search.poi.PoiNearbySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiNearbySearchOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.poi.PoiNearbySearchOption sortType(com.baidu.mapapi.search.poi.PoiSortType) -> sortType
    com.baidu.mapapi.search.poi.PoiNearbySearchOption radius(int) -> radius
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiResult -> com.baidu.mapapi.search.poi.PoiResult:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.util.List e -> e
    java.util.List f -> f
    int getCurrentPageNum() -> getCurrentPageNum
    void a(int) -> a
    int getTotalPageNum() -> getTotalPageNum
    void b(int) -> b
    int getCurrentPageCapacity() -> getCurrentPageCapacity
    void c(int) -> c
    int getTotalPoiNum() -> getTotalPoiNum
    void d(int) -> d
    java.util.List getAllPoi() -> getAllPoi
    void a(java.util.List) -> a
    java.util.List getSuggestCityList() -> getSuggestCityList
    void b(java.util.List) -> b
com.baidu.mapapi.search.poi.PoiSearch -> com.baidu.mapapi.search.poi.PoiSearch:
    com.baidu.platform.comapi.d.d a -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    boolean f -> f
    int g -> g
    com.baidu.mapapi.search.poi.PoiSearch newInstance() -> newInstance
    void setOnGetPoiSearchResultListener(com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener) -> setOnGetPoiSearchResultListener
    boolean searchInCity(com.baidu.mapapi.search.poi.PoiCitySearchOption) -> searchInCity
    boolean searchNearby(com.baidu.mapapi.search.poi.PoiNearbySearchOption) -> searchNearby
    boolean searchInBound(com.baidu.mapapi.search.poi.PoiBoundSearchOption) -> searchInBound
    boolean searchPoiDetail(com.baidu.mapapi.search.poi.PoiDetailSearchOption) -> searchPoiDetail
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.poi.PoiSearch) -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b(com.baidu.mapapi.search.poi.PoiSearch) -> b
    int c(com.baidu.mapapi.search.poi.PoiSearch) -> c
    com.baidu.platform.comapi.d.d d(com.baidu.mapapi.search.poi.PoiSearch) -> d
    int e(com.baidu.mapapi.search.poi.PoiSearch) -> e
com.baidu.mapapi.search.poi.PoiSearch$1 -> com.baidu.mapapi.search.poi.PoiSearch$1:
com.baidu.mapapi.search.poi.PoiSearch$a -> com.baidu.mapapi.search.poi.PoiSearch$a:
    com.baidu.mapapi.search.poi.PoiSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.poi.PoiSortType -> com.baidu.mapapi.search.poi.PoiSortType:
    com.baidu.mapapi.search.poi.PoiSortType comprehensive -> comprehensive
    com.baidu.mapapi.search.poi.PoiSortType distance_from_near_to_far -> distance_from_near_to_far
    com.baidu.mapapi.search.poi.PoiSortType[] a -> a
    com.baidu.mapapi.search.poi.PoiSortType[] values() -> values
    com.baidu.mapapi.search.poi.PoiSortType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.poi.a -> com.baidu.mapapi.search.poi.a:
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String,int,int) -> a
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String) -> a
com.baidu.mapapi.search.route.DrivingRouteLine -> com.baidu.mapapi.search.route.DrivingRouteLine:
    boolean a -> a
    java.util.List b -> b
    boolean isSupportTraffic() -> isSupportTraffic
    java.util.List getWayPoints() -> getWayPoints
    void a(java.util.List) -> a
com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep -> com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep:
    int e -> e
    com.baidu.mapapi.search.core.RouteNode f -> f
    com.baidu.mapapi.search.core.RouteNode g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    int k -> k
    java.util.List c -> c
    int[] d -> d
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrance() -> getEntrance
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    int[] getTrafficList() -> getTrafficList
    void a(java.util.List) -> a
    void a(int[]) -> a
    java.lang.String getEntranceInstructions() -> getEntranceInstructions
    void a(java.lang.String) -> a
    java.lang.String getExitInstructions() -> getExitInstructions
    void b(java.lang.String) -> b
    java.lang.String getInstructions() -> getInstructions
    void c(java.lang.String) -> c
    int getNumTurns() -> getNumTurns
    void b(int) -> b
com.baidu.mapapi.search.route.DrivingRoutePlanOption -> com.baidu.mapapi.search.route.DrivingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy c -> c
    java.util.List d -> d
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy e -> e
    com.baidu.mapapi.search.route.DrivingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.DrivingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.DrivingRoutePlanOption passBy(java.util.List) -> passBy
    com.baidu.mapapi.search.route.DrivingRoutePlanOption trafficPolicy(com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy) -> trafficPolicy
    com.baidu.mapapi.search.route.DrivingRoutePlanOption policy(com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy) -> policy
com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy -> com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy:
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_AVOID_JAM -> ECAR_AVOID_JAM
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_TIME_FIRST -> ECAR_TIME_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_DIS_FIRST -> ECAR_DIS_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_FEE_FIRST -> ECAR_FEE_FIRST
    int a -> a
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] values() -> values
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy -> com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy:
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy ROUTE_PATH -> ROUTE_PATH
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy ROUTE_PATH_AND_TRAFFIC -> ROUTE_PATH_AND_TRAFFIC
    int a -> a
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy[] b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy[] values() -> values
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.DrivingRouteResult -> com.baidu.mapapi.search.route.DrivingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.OnGetRoutePlanResultListener -> com.baidu.mapapi.search.route.OnGetRoutePlanResultListener:
    void onGetWalkingRouteResult(com.baidu.mapapi.search.route.WalkingRouteResult) -> onGetWalkingRouteResult
    void onGetTransitRouteResult(com.baidu.mapapi.search.route.TransitRouteResult) -> onGetTransitRouteResult
    void onGetDrivingRouteResult(com.baidu.mapapi.search.route.DrivingRouteResult) -> onGetDrivingRouteResult
com.baidu.mapapi.search.route.PlanNode -> com.baidu.mapapi.search.route.PlanNode:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.model.LatLng a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.baidu.mapapi.search.route.PlanNode withLocation(com.baidu.mapapi.model.LatLng) -> withLocation
    com.baidu.mapapi.search.route.PlanNode withCityNameAndPlaceName(java.lang.String,java.lang.String) -> withCityNameAndPlaceName
com.baidu.mapapi.search.route.RoutePlanSearch -> com.baidu.mapapi.search.route.RoutePlanSearch:
    com.baidu.platform.comapi.d.d a -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.route.RoutePlanSearch newInstance() -> newInstance
    void setOnGetRoutePlanResultListener(com.baidu.mapapi.search.route.OnGetRoutePlanResultListener) -> setOnGetRoutePlanResultListener
    boolean transitSearch(com.baidu.mapapi.search.route.TransitRoutePlanOption) -> transitSearch
    boolean walkingSearch(com.baidu.mapapi.search.route.WalkingRoutePlanOption) -> walkingSearch
    boolean drivingSearch(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> drivingSearch
    java.util.ArrayList a(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> a
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.route.RoutePlanSearch) -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b(com.baidu.mapapi.search.route.RoutePlanSearch) -> b
    int c(com.baidu.mapapi.search.route.RoutePlanSearch) -> c
com.baidu.mapapi.search.route.RoutePlanSearch$1 -> com.baidu.mapapi.search.route.RoutePlanSearch$1:
com.baidu.mapapi.search.route.RoutePlanSearch$a -> com.baidu.mapapi.search.route.RoutePlanSearch$a:
    com.baidu.mapapi.search.route.RoutePlanSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.route.SuggestAddrInfo -> com.baidu.mapapi.search.route.SuggestAddrInfo:
    java.util.List a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.util.List getSuggestStartNode() -> getSuggestStartNode
    void a(java.util.List) -> a
    java.util.List getSuggestEndNode() -> getSuggestEndNode
    void b(java.util.List) -> b
    java.util.List getSuggestWpNode() -> getSuggestWpNode
    void c(java.util.List) -> c
    java.util.List getSuggestStartCity() -> getSuggestStartCity
    void d(java.util.List) -> d
    java.util.List getSuggestEndCity() -> getSuggestEndCity
    void e(java.util.List) -> e
    java.util.List getSuggestWpCity() -> getSuggestWpCity
    void f(java.util.List) -> f
com.baidu.mapapi.search.route.TransitRouteLine -> com.baidu.mapapi.search.route.TransitRouteLine:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxitInfo() -> getTaxitInfo
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep:
    com.baidu.mapapi.search.core.VehicleInfo c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String getInstructions() -> getInstructions
    void a(com.baidu.mapapi.search.core.VehicleInfo) -> a
    void a(java.lang.String) -> a
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType getStepType() -> getStepType
    void a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType) -> a
    void b(java.lang.String) -> b
    java.util.List getWayPoints() -> getWayPoints
    com.baidu.mapapi.search.core.RouteNode getEntrance() -> getEntrance
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    com.baidu.mapapi.search.core.VehicleInfo getVehicleInfo() -> getVehicleInfo
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType:
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType BUSLINE -> BUSLINE
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType SUBWAY -> SUBWAY
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType WAKLING -> WAKLING
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] $VALUES -> $VALUES
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] values() -> values
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.route.TransitRoutePlanOption -> com.baidu.mapapi.search.route.TransitRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy d -> d
    com.baidu.mapapi.search.route.TransitRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.TransitRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.TransitRoutePlanOption city(java.lang.String) -> city
    com.baidu.mapapi.search.route.TransitRoutePlanOption policy(com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy) -> policy
com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy -> com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy:
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TIME_FIRST -> EBUS_TIME_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TRANSFER_FIRST -> EBUS_TRANSFER_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_WALK_FIRST -> EBUS_WALK_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_NO_SUBWAY -> EBUS_NO_SUBWAY
    int a -> a
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] b -> b
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] values() -> values
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.TransitRouteResult -> com.baidu.mapapi.search.route.TransitRouteResult:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    java.util.List b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.WalkingRouteLine -> com.baidu.mapapi.search.route.WalkingRouteLine:
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep -> com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep:
    int c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrance() -> getEntrance
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    void a(java.lang.String) -> a
    java.lang.String getEntraceInstructions() -> getEntraceInstructions
    void b(java.lang.String) -> b
    java.lang.String getExitInstructions() -> getExitInstructions
    void c(java.lang.String) -> c
    java.lang.String getInstructions() -> getInstructions
    void d(java.lang.String) -> d
com.baidu.mapapi.search.route.WalkingRoutePlanOption -> com.baidu.mapapi.search.route.WalkingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.WalkingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.WalkingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
com.baidu.mapapi.search.route.WalkingRouteResult -> com.baidu.mapapi.search.route.WalkingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    java.util.List getRouteLines() -> getRouteLines
    void a(java.util.List) -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.a -> com.baidu.mapapi.search.route.a:
    com.baidu.mapapi.search.route.TransitRouteResult a(java.lang.String) -> a
    com.baidu.mapapi.search.route.DrivingRouteResult b(java.lang.String) -> b
    com.baidu.mapapi.search.route.WalkingRouteResult c(java.lang.String) -> c
    com.baidu.mapapi.search.core.TaxiInfo d(java.lang.String) -> d
    com.baidu.mapapi.search.core.VehicleInfo e(java.lang.String) -> e
    com.baidu.mapapi.search.core.RouteNode b(org.json.JSONObject,java.lang.String) -> b
    com.baidu.mapapi.search.core.RouteNode c(org.json.JSONObject,java.lang.String) -> c
    java.util.List d(org.json.JSONObject,java.lang.String) -> d
    com.baidu.mapapi.search.route.SuggestAddrInfo f(java.lang.String) -> f
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
    java.util.List a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String g(java.lang.String) -> g
com.baidu.mapapi.search.share.LocationShareURLOption -> com.baidu.mapapi.search.share.LocationShareURLOption:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.share.LocationShareURLOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.share.LocationShareURLOption name(java.lang.String) -> name
    com.baidu.mapapi.search.share.LocationShareURLOption snippet(java.lang.String) -> snippet
com.baidu.mapapi.search.share.OnGetShareUrlResultListener -> com.baidu.mapapi.search.share.OnGetShareUrlResultListener:
    void onGetPoiDetailShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetPoiDetailShareUrlResult
    void onGetLocationShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetLocationShareUrlResult
com.baidu.mapapi.search.share.PoiDetailShareURLOption -> com.baidu.mapapi.search.share.PoiDetailShareURLOption:
    java.lang.String a -> a
    com.baidu.mapapi.search.share.PoiDetailShareURLOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.share.ShareUrlResult -> com.baidu.mapapi.search.share.ShareUrlResult:
    java.lang.String a -> a
    int b -> b
    java.lang.String getUrl() -> getUrl
    void a(java.lang.String) -> a
    void a(int) -> a
com.baidu.mapapi.search.share.ShareUrlSearch -> com.baidu.mapapi.search.share.ShareUrlSearch:
    com.baidu.platform.comapi.d.d a -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.share.ShareUrlSearch newInstance() -> newInstance
    boolean requestPoiDetailShareUrl(com.baidu.mapapi.search.share.PoiDetailShareURLOption) -> requestPoiDetailShareUrl
    boolean requestLocationShareUrl(com.baidu.mapapi.search.share.LocationShareURLOption) -> requestLocationShareUrl
    void setOnGetShareUrlResultListener(com.baidu.mapapi.search.share.OnGetShareUrlResultListener) -> setOnGetShareUrlResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.share.ShareUrlSearch) -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b(com.baidu.mapapi.search.share.ShareUrlSearch) -> b
    int c(com.baidu.mapapi.search.share.ShareUrlSearch) -> c
com.baidu.mapapi.search.share.ShareUrlSearch$1 -> com.baidu.mapapi.search.share.ShareUrlSearch$1:
com.baidu.mapapi.search.share.ShareUrlSearch$a -> com.baidu.mapapi.search.share.ShareUrlSearch$a:
    com.baidu.mapapi.search.share.ShareUrlSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.share.a -> com.baidu.mapapi.search.share.a:
    com.baidu.mapapi.search.share.ShareUrlResult a(java.lang.String) -> a
com.baidu.mapapi.search.sug.OnGetSuggestionResultListener -> com.baidu.mapapi.search.sug.OnGetSuggestionResultListener:
    void onGetSuggestionResult(com.baidu.mapapi.search.sug.SuggestionResult) -> onGetSuggestionResult
com.baidu.mapapi.search.sug.SuggestionResult -> com.baidu.mapapi.search.sug.SuggestionResult:
    java.util.ArrayList a -> a
    java.util.List getAllSuggestions() -> getAllSuggestions
    void a(java.util.ArrayList) -> a
com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo -> com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo:
    java.lang.String key -> key
    java.lang.String city -> city
    java.lang.String district -> district
    com.baidu.mapapi.model.LatLng pt -> pt
    java.lang.String uid -> uid
com.baidu.mapapi.search.sug.SuggestionSearch -> com.baidu.mapapi.search.sug.SuggestionSearch:
    com.baidu.platform.comapi.d.d a -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.sug.SuggestionSearch newInstance() -> newInstance
    boolean requestSuggestion(com.baidu.mapapi.search.sug.SuggestionSearchOption) -> requestSuggestion
    void setOnGetSuggestionResultListener(com.baidu.mapapi.search.sug.OnGetSuggestionResultListener) -> setOnGetSuggestionResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.sug.SuggestionSearch) -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b(com.baidu.mapapi.search.sug.SuggestionSearch) -> b
com.baidu.mapapi.search.sug.SuggestionSearch$1 -> com.baidu.mapapi.search.sug.SuggestionSearch$1:
com.baidu.mapapi.search.sug.SuggestionSearch$a -> com.baidu.mapapi.search.sug.SuggestionSearch$a:
    com.baidu.mapapi.search.sug.SuggestionSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.sug.SuggestionSearchOption -> com.baidu.mapapi.search.sug.SuggestionSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.search.sug.SuggestionSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.sug.SuggestionSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.sug.SuggestionSearchOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.sug.a -> com.baidu.mapapi.search.sug.a:
    com.baidu.mapapi.search.sug.SuggestionResult a(java.lang.String) -> a
com.baidu.mapapi.utils.AreaUtil -> com.baidu.mapapi.utils.AreaUtil:
    double calculateArea(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> calculateArea
com.baidu.mapapi.utils.CoordinateConverter -> com.baidu.mapapi.utils.CoordinateConverter:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.utils.CoordinateConverter$CoordType b -> b
    com.baidu.mapapi.utils.CoordinateConverter coord(com.baidu.mapapi.model.LatLng) -> coord
    com.baidu.mapapi.utils.CoordinateConverter from(com.baidu.mapapi.utils.CoordinateConverter$CoordType) -> from
    com.baidu.mapapi.model.LatLng convert() -> convert
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.mapapi.model.LatLng b(com.baidu.mapapi.model.LatLng) -> b
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng,java.lang.String) -> a
com.baidu.mapapi.utils.CoordinateConverter$1 -> com.baidu.mapapi.utils.CoordinateConverter$1:
    int[] a -> a
com.baidu.mapapi.utils.CoordinateConverter$CoordType -> com.baidu.mapapi.utils.CoordinateConverter$CoordType:
    com.baidu.mapapi.utils.CoordinateConverter$CoordType GPS -> GPS
    com.baidu.mapapi.utils.CoordinateConverter$CoordType COMMON -> COMMON
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] $VALUES -> $VALUES
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] values() -> values
    com.baidu.mapapi.utils.CoordinateConverter$CoordType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.utils.DistanceUtil -> com.baidu.mapapi.utils.DistanceUtil:
    double getDistance(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> getDistance
com.baidu.mapapi.utils.OpenClientUtil -> com.baidu.mapapi.utils.OpenClientUtil:
    int getBaiduMapVersion(android.content.Context) -> getBaiduMapVersion
    void getLatestBaiduMapApp(android.content.Context) -> getLatestBaiduMapApp
com.baidu.mapapi.utils.PermissionCheck -> com.baidu.mapapi.utils.PermissionCheck:
    java.lang.String a -> a
    android.content.Context b -> b
    java.util.Hashtable c -> c
    com.baidu.lbsapi.auth.i d -> d
    com.baidu.lbsapi.auth.n e -> e
    com.baidu.mapapi.utils.PermissionCheck$c f -> f
    void setPermissionCheckResultListener(com.baidu.mapapi.utils.PermissionCheck$c) -> setPermissionCheckResultListener
    void init(android.content.Context) -> init
    int permissionCheck() -> permissionCheck
    void destory() -> destory
    com.baidu.mapapi.utils.PermissionCheck$c a() -> a
com.baidu.mapapi.utils.PermissionCheck$1 -> com.baidu.mapapi.utils.PermissionCheck$1:
com.baidu.mapapi.utils.PermissionCheck$a -> com.baidu.mapapi.utils.PermissionCheck$a:
    void a(int,java.lang.String) -> a
com.baidu.mapapi.utils.PermissionCheck$b -> com.baidu.mapapi.utils.PermissionCheck$b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String toString() -> toString
com.baidu.mapapi.utils.PermissionCheck$c -> com.baidu.mapapi.utils.PermissionCheck$c:
    void a(com.baidu.mapapi.utils.PermissionCheck$b) -> a
com.baidu.mapapi.utils.SpatialRelationUtil -> com.baidu.mapapi.utils.SpatialRelationUtil:
    boolean isPolygonContainsPoint(java.util.List,com.baidu.mapapi.model.LatLng) -> isPolygonContainsPoint
    boolean isCircleContainsPoint(com.baidu.mapapi.model.LatLng,int,com.baidu.mapapi.model.LatLng) -> isCircleContainsPoint
    com.baidu.mapapi.model.LatLng getNearestPointFromLine(java.util.List,com.baidu.mapapi.model.LatLng) -> getNearestPointFromLine
    boolean a(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> a
    com.baidu.mapapi.model.LatLng b(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> b
com.baidu.mapapi.utils.a -> com.baidu.mapapi.utils.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.mapapi.utils.a$a -> com.baidu.mapapi.utils.a$a:
    java.lang.String a(byte[]) -> a
com.baidu.mapapi.utils.b -> com.baidu.mapapi.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.utils.i g -> g
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
com.baidu.mapapi.utils.c -> com.baidu.mapapi.utils.c:
    java.lang.String c -> c
    com.baidu.a.a.a.b d -> d
    com.baidu.a.a.a.a e -> e
    int a -> a
    int f -> f
    java.lang.String g -> g
    com.baidu.mapapi.model.LatLng h -> h
    com.baidu.mapapi.model.LatLng i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    com.baidu.mapapi.model.LatLng o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    android.content.ServiceConnection b -> b
    java.lang.String a() -> a
    void a(android.content.Context) -> a
    boolean a(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context,int) -> a
    boolean a(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context,int) -> a
    boolean a(com.baidu.mapapi.navi.NaviParaOption,android.content.Context,int) -> a
    boolean a(android.content.Context,int) -> a
    boolean a(int) -> a
    void b(android.content.Context) -> b
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    boolean i() -> i
    void b(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context,int) -> b
    void b(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context,int) -> b
    void b(com.baidu.mapapi.navi.NaviParaOption,android.content.Context,int) -> b
    java.lang.String b() -> b
    com.baidu.a.a.a.a c() -> c
    com.baidu.a.a.a.a a(com.baidu.a.a.a.a) -> a
    boolean a(boolean) -> a
    com.baidu.a.a.a.b d() -> d
    com.baidu.a.a.a.b a(com.baidu.a.a.a.b) -> a
    boolean e() -> e
com.baidu.mapapi.utils.d -> com.baidu.mapapi.utils.d:
    int a -> a
    void a(android.os.IBinder) -> a
com.baidu.mapapi.utils.e -> com.baidu.mapapi.utils.e:
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.mapapi.utils.f -> com.baidu.mapapi.utils.f:
    com.baidu.mapapi.utils.e a -> a
    void a(android.os.IBinder) -> a
com.baidu.mapapi.utils.g -> com.baidu.mapapi.utils.g:
    com.baidu.mapapi.map.offline.MKOLSearchRecord a(com.baidu.platform.comapi.map.p) -> a
    com.baidu.mapapi.map.offline.MKOLUpdateElement a(com.baidu.platform.comapi.map.s) -> a
com.baidu.mapapi.utils.h -> com.baidu.mapapi.utils.h:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean equals(java.lang.Object) -> equals
com.baidu.mapapi.utils.i -> com.baidu.mapapi.utils.i:
    com.baidu.mapapi.utils.i a -> a
    boolean b -> b
    boolean c -> c
    java.util.List d -> d
    com.baidu.mapapi.utils.h e -> e
    java.lang.String f -> f
    com.baidu.mapapi.utils.i a() -> a
    void a(android.content.Context) -> a
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    com.baidu.mapapi.utils.h b() -> b
    com.baidu.mapapi.utils.h b(android.content.Context) -> b
    boolean a(android.content.Context,com.baidu.mapapi.utils.h) -> a
    boolean a(java.lang.String) -> a
com.baidu.mapapi.utils.poi.BaiduMapPoiSearch -> com.baidu.mapapi.utils.poi.BaiduMapPoiSearch:
    boolean a -> a
    void setSupportWebPoi(boolean) -> setSupportWebPoi
    boolean openBaiduMapPoiDetialsPage(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context) -> openBaiduMapPoiDetialsPage
    boolean openBaiduMapPoiNearbySearch(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context) -> openBaiduMapPoiNearbySearch
    void finish(android.content.Context) -> finish
    void a(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context) -> a
    void b(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context) -> b
com.baidu.mapapi.utils.poi.IllegalPoiSearchArgumentException -> com.baidu.mapapi.utils.poi.IllegalPoiSearchArgumentException:
com.baidu.mapapi.utils.poi.PoiParaOption -> com.baidu.mapapi.utils.poi.PoiParaOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    int d -> d
    com.baidu.mapapi.utils.poi.PoiParaOption uid(java.lang.String) -> uid
    java.lang.String getUid() -> getUid
    com.baidu.mapapi.utils.poi.PoiParaOption key(java.lang.String) -> key
    java.lang.String getKey() -> getKey
    com.baidu.mapapi.utils.poi.PoiParaOption center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    com.baidu.mapapi.utils.poi.PoiParaOption radius(int) -> radius
    int getRadius() -> getRadius
com.baidu.mapapi.utils.route.BaiduMapRoutePlan -> com.baidu.mapapi.utils.route.BaiduMapRoutePlan:
    boolean a -> a
    void setSupportWebRoute(boolean) -> setSupportWebRoute
    boolean openBaiduMapWalkingRoute(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context) -> openBaiduMapWalkingRoute
    boolean openBaiduMapTransitRoute(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context) -> openBaiduMapTransitRoute
    void finish(android.content.Context) -> finish
    boolean openBaiduMapDrivingRoute(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context) -> openBaiduMapDrivingRoute
    void a(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context,int) -> a
com.baidu.mapapi.utils.route.IllegalRoutePlanArgumentException -> com.baidu.mapapi.utils.route.IllegalRoutePlanArgumentException:
com.baidu.mapapi.utils.route.RouteParaOption -> com.baidu.mapapi.utils.route.RouteParaOption:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType f -> f
    com.baidu.mapapi.utils.route.RouteParaOption startPoint(com.baidu.mapapi.model.LatLng) -> startPoint
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.utils.route.RouteParaOption endPoint(com.baidu.mapapi.model.LatLng) -> endPoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    com.baidu.mapapi.utils.route.RouteParaOption startName(java.lang.String) -> startName
    java.lang.String getStartName() -> getStartName
    com.baidu.mapapi.utils.route.RouteParaOption endName(java.lang.String) -> endName
    java.lang.String getEndName() -> getEndName
    com.baidu.mapapi.utils.route.RouteParaOption busStrategyType(com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType) -> busStrategyType
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType getBusStrategyType() -> getBusStrategyType
    com.baidu.mapapi.utils.route.RouteParaOption cityName(java.lang.String) -> cityName
    java.lang.String getCityName() -> getCityName
com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType -> com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType:
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType bus_time_first -> bus_time_first
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType bus_transfer_little -> bus_transfer_little
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType bus_walk_little -> bus_walk_little
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType bus_no_subway -> bus_no_subway
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType bus_recommend_way -> bus_recommend_way
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType[] a -> a
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType[] values() -> values
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.a -> com.baidu.platform.comapi.a:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
com.baidu.platform.comapi.a.a -> com.baidu.platform.comapi.a.a:
    int a -> a
    com.baidu.platform.comapi.a.d b -> b
    com.baidu.platform.comapi.a.d c -> c
    java.util.ArrayList d -> d
com.baidu.platform.comapi.a.b -> com.baidu.platform.comapi.a.b:
    double a -> a
    double b -> b
    double a() -> a
    double b() -> b
    void a(double) -> a
    void b(double) -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.a.c -> com.baidu.platform.comapi.a.c:
    com.baidu.platform.comapi.a.d a -> a
    com.baidu.platform.comapi.a.d b -> b
    void a(com.baidu.platform.comapi.a.d) -> a
    void b(com.baidu.platform.comapi.a.d) -> b
com.baidu.platform.comapi.a.d -> com.baidu.platform.comapi.a.d:
    int a -> a
    int b -> b
    int a() -> a
    void a(int) -> a
    int b() -> b
    void b(int) -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.b.a -> com.baidu.platform.comapi.b.a:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.platform.comapi.a.d c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    boolean i -> i
    java.lang.String j -> j
com.baidu.platform.comapi.b.b -> com.baidu.platform.comapi.b.b:
    com.baidu.platform.comjni.map.favorite.a a -> a
    com.baidu.platform.comapi.b.b b -> b
    boolean c -> c
    boolean d -> d
    java.util.Vector e -> e
    java.util.Vector f -> f
    boolean g -> g
    com.baidu.platform.comapi.b.b$c h -> h
    com.baidu.platform.comapi.b.b$b i -> i
    com.baidu.platform.comapi.b.b a() -> a
    boolean h() -> h
    void b() -> b
    boolean i() -> i
    int a(java.lang.String,com.baidu.platform.comapi.b.a) -> a
    boolean a(java.lang.String) -> a
    boolean c() -> c
    void j() -> j
    java.util.ArrayList d() -> d
    java.util.ArrayList e() -> e
    com.baidu.platform.comapi.b.a b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    boolean b(java.lang.String,com.baidu.platform.comapi.b.a) -> b
    java.lang.String f() -> f
    boolean g() -> g
com.baidu.platform.comapi.b.b$1 -> com.baidu.platform.comapi.b.b$1:
com.baidu.platform.comapi.b.b$a -> com.baidu.platform.comapi.b.b$a:
    com.baidu.platform.comapi.b.b a -> a
    int a(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.baidu.platform.comapi.b.b$b -> com.baidu.platform.comapi.b.b$b:
    long b -> b
    long c -> c
    com.baidu.platform.comapi.b.b a -> a
    void a() -> a
    void b() -> b
    boolean c() -> c
    boolean a(com.baidu.platform.comapi.b.b$b) -> a
    void b(com.baidu.platform.comapi.b.b$b) -> b
    void c(com.baidu.platform.comapi.b.b$b) -> c
com.baidu.platform.comapi.b.b$c -> com.baidu.platform.comapi.b.b$c:
    java.lang.String b -> b
    long c -> c
    long d -> d
    com.baidu.platform.comapi.b.b a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean a(com.baidu.platform.comapi.b.b$c) -> a
    boolean b(com.baidu.platform.comapi.b.b$c) -> b
    java.lang.String c(com.baidu.platform.comapi.b.b$c) -> c
    void a(com.baidu.platform.comapi.b.b$c,java.lang.String) -> a
com.baidu.platform.comapi.c.a -> com.baidu.platform.comapi.c.a:
    com.baidu.platform.comjni.map.radar.a a -> a
    com.baidu.platform.comapi.c.d b -> b
    android.os.Handler c -> c
    com.baidu.platform.comapi.c.a d -> d
    com.baidu.platform.comapi.c.a a() -> a
    boolean f() -> f
    void a(com.baidu.platform.comapi.c.c) -> a
    void b() -> b
    boolean a(java.lang.String) -> a
    java.lang.String c() -> c
    boolean a(java.lang.String,com.baidu.mapapi.model.LatLng,java.lang.String) -> a
    boolean a(java.lang.String,com.baidu.mapapi.model.LatLng,int,int,int,int,int,java.lang.String) -> a
    void d() -> d
    com.baidu.platform.comapi.c.d e() -> e
com.baidu.platform.comapi.c.b -> com.baidu.platform.comapi.c.b:
    com.baidu.platform.comapi.c.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.c.c -> com.baidu.platform.comapi.c.c:
    void onGetNearByResult(java.lang.String,int) -> onGetNearByResult
    void onGetUploadResult(int) -> onGetUploadResult
    void onGetClearInfoResult(int) -> onGetClearInfoResult
com.baidu.platform.comapi.c.d -> com.baidu.platform.comapi.c.d:
    com.baidu.platform.comapi.c.c a -> a
    com.baidu.platform.comapi.c.a b -> b
    void a(com.baidu.platform.comapi.c.c) -> a
    void a() -> a
    void b() -> b
    void a(com.baidu.platform.comapi.c.a) -> a
    void a(android.os.Message) -> a
com.baidu.platform.comapi.d.a -> com.baidu.platform.comapi.d.a:
    int a -> a
    com.baidu.platform.comapi.a.d b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.baidu.platform.comapi.d.b -> com.baidu.platform.comapi.d.b:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.platform.comapi.d.c -> com.baidu.platform.comapi.d.c:
    java.lang.String a -> a
    com.baidu.platform.comapi.d.b b -> b
    com.baidu.platform.comapi.d.d c -> c
    void a(com.baidu.platform.comapi.d.b) -> a
    void a() -> a
    void a(com.baidu.platform.comapi.d.d) -> a
    void a(android.os.Message) -> a
com.baidu.platform.comapi.d.d -> com.baidu.platform.comapi.d.d:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.search.a b -> b
    long c -> c
    com.baidu.platform.comapi.d.c d -> d
    android.os.Handler e -> e
    int f -> f
    android.os.Bundle g -> g
    void a(com.baidu.platform.comapi.d.b) -> a
    void a() -> a
    int b() -> b
    void a(int) -> a
    boolean a(java.lang.String,java.lang.String,int,com.baidu.platform.comapi.a.c,int,java.util.Map) -> a
    boolean a(java.lang.String,int,int,int,com.baidu.platform.comapi.a.c,com.baidu.platform.comapi.a.c,java.util.Map,int) -> a
    boolean a(java.lang.String,int,int,com.baidu.platform.comapi.a.c,int,com.baidu.platform.comapi.a.d,java.util.Map) -> a
    android.os.Bundle a(com.baidu.platform.comapi.d.a) -> a
    boolean a(com.baidu.platform.comapi.d.a,com.baidu.platform.comapi.d.a,java.lang.String,com.baidu.platform.comapi.a.c,int,int,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.d.a,com.baidu.platform.comapi.d.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.a.c,int,int,int,java.util.ArrayList,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.d.a,com.baidu.platform.comapi.d.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.a.c,int,java.util.Map) -> a
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,int,java.lang.String,com.baidu.platform.comapi.a.c,int,com.baidu.platform.comapi.a.d) -> a
    boolean a(com.baidu.platform.comapi.a.d) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(com.baidu.platform.comapi.a.d,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    java.lang.String b(int) -> b
    android.os.Bundle c() -> c
    long a(com.baidu.platform.comapi.d.d) -> a
    com.baidu.platform.comapi.d.c b(com.baidu.platform.comapi.d.d) -> b
com.baidu.platform.comapi.d.e -> com.baidu.platform.comapi.d.e:
    com.baidu.platform.comapi.d.d a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.d.f -> com.baidu.platform.comapi.d.f:
    com.baidu.platform.comapi.a.d a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.baidu.platform.comapi.e.a -> com.baidu.platform.comapi.e.a:
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
com.baidu.platform.comapi.e.b -> com.baidu.platform.comapi.e.b:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    void a(android.content.Context) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean a(android.net.NetworkInfo) -> a
com.baidu.platform.comapi.e.c -> com.baidu.platform.comapi.e.c:
    java.lang.String F -> F
    com.baidu.platform.comjni.map.commonmemcache.a a -> a
    com.baidu.platform.comjni.a.a.a b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    android.content.Context B -> B
    int C -> C
    float D -> D
    boolean G -> G
    int H -> H
    int I -> I
    java.lang.String E -> E
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void f(android.content.Context) -> f
    void g(android.content.Context) -> g
    byte[] a(android.content.Context) -> a
    void h(android.content.Context) -> h
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    android.os.Bundle a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void d() -> d
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String e() -> e
    int f() -> f
    java.lang.String g() -> g
    int h() -> h
    java.lang.String i() -> i
    int j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
com.baidu.platform.comapi.map.A -> com.baidu.platform.comapi.map.A:
com.baidu.platform.comapi.map.B -> com.baidu.platform.comapi.map.B:
    com.baidu.platform.comjni.map.basemap.a a -> a
    com.baidu.platform.comapi.a.b a(int,int) -> a
    android.graphics.Point a(com.baidu.platform.comapi.a.b) -> a
com.baidu.platform.comapi.map.C -> com.baidu.platform.comapi.map.C:
    java.lang.String h -> h
    android.os.Bundle e -> e
    java.lang.String f -> f
    int g -> g
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    android.os.Bundle b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comapi.map.D -> com.baidu.platform.comapi.map.D:
com.baidu.platform.comapi.map.MapRenderer -> com.baidu.platform.comapi.map.MapRenderer:
    java.lang.String d -> d
    long e -> e
    com.baidu.platform.comapi.map.MapRenderer$a f -> f
    com.baidu.platform.comapi.map.f g -> g
    int a -> a
    int b -> b
    int c -> c
    void nativeInit(long) -> nativeInit
    void nativeResize(long,int,int) -> nativeResize
    int nativeRender(long) -> nativeRender
    void a(long) -> a
    boolean a() -> a
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.baidu.platform.comapi.map.MapRenderer$a -> com.baidu.platform.comapi.map.MapRenderer$a:
    void u() -> u
com.baidu.platform.comapi.map.a -> com.baidu.platform.comapi.map.a:
com.baidu.platform.comapi.map.b -> com.baidu.platform.comapi.map.b:
    long a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
com.baidu.platform.comapi.map.c -> com.baidu.platform.comapi.map.c:
com.baidu.platform.comapi.map.d -> com.baidu.platform.comapi.map.d:
com.baidu.platform.comapi.map.e -> com.baidu.platform.comapi.map.e:
    com.baidu.platform.comapi.map.e a -> a
    com.baidu.platform.comapi.map.e b -> b
    com.baidu.platform.comapi.map.e c -> c
    com.baidu.platform.comapi.map.e d -> d
    com.baidu.platform.comapi.map.e e -> e
    com.baidu.platform.comapi.map.e f -> f
    com.baidu.platform.comapi.map.e g -> g
    com.baidu.platform.comapi.map.e h -> h
    com.baidu.platform.comapi.map.e i -> i
    com.baidu.platform.comapi.map.e j -> j
    com.baidu.platform.comapi.map.e[] k -> k
    com.baidu.platform.comapi.map.e[] values() -> values
    com.baidu.platform.comapi.map.e valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.f -> com.baidu.platform.comapi.map.f:
    java.lang.String e -> e
    float a -> a
    float b -> b
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    boolean o -> o
    boolean p -> p
    android.content.Context q -> q
    com.baidu.platform.comapi.map.MapRenderer r -> r
    java.util.List c -> c
    com.baidu.platform.comjni.map.basemap.a d -> d
    long s -> s
    android.os.Handler t -> t
    java.util.List u -> u
    com.baidu.platform.comapi.map.w v -> v
    com.baidu.platform.comapi.map.d w -> w
    com.baidu.platform.comapi.map.j x -> x
    com.baidu.platform.comapi.map.D y -> y
    com.baidu.platform.comapi.map.o z -> z
    com.baidu.platform.comapi.map.i A -> A
    com.baidu.platform.comapi.map.k B -> B
    com.baidu.platform.comapi.map.a C -> C
    com.baidu.platform.comapi.map.l D -> D
    com.baidu.platform.comapi.map.B E -> E
    boolean F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    com.baidu.platform.comapi.map.f$a K -> K
    android.view.VelocityTracker L -> L
    android.view.GestureDetector M -> M
    long N -> N
    long O -> O
    long P -> P
    long Q -> Q
    int R -> R
    long S -> S
    float T -> T
    float U -> U
    boolean V -> V
    long W -> W
    long Z -> Z
    boolean aa -> aa
    boolean ab -> ab
    boolean ac -> ac
    void v() -> v
    void w() -> w
    boolean b(int,int,int,int,int,int) -> b
    void x() -> x
    void a(com.baidu.platform.comapi.map.y) -> a
    void y() -> y
    void z() -> z
    void a() -> a
    void a(com.baidu.platform.comapi.map.b) -> a
    void A() -> A
    boolean b() -> b
    void a(boolean) -> a
    boolean c() -> c
    void b(boolean) -> b
    boolean d() -> d
    boolean e() -> e
    void c(boolean) -> c
    boolean f() -> f
    void d(boolean) -> d
    void e(boolean) -> e
    boolean g() -> g
    void f(boolean) -> f
    void a(android.graphics.Point) -> a
    boolean h() -> h
    void g(boolean) -> g
    boolean i() -> i
    void h(boolean) -> h
    void j() -> j
    void a(java.lang.String,android.os.Bundle) -> a
    boolean k() -> k
    void i(boolean) -> i
    void j(boolean) -> j
    boolean l() -> l
    void k(boolean) -> k
    boolean m() -> m
    void l(boolean) -> l
    boolean n() -> n
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void o() -> o
    void a(com.baidu.platform.comapi.map.h) -> a
    void a(com.baidu.platform.comapi.map.l) -> a
    void a(com.baidu.platform.comapi.map.z) -> a
    void a(com.baidu.platform.comapi.map.z,int) -> a
    com.baidu.platform.comapi.map.z p() -> p
    com.baidu.platform.comapi.map.z q() -> q
    double r() -> r
    void a(java.lang.String,android.graphics.Rect) -> a
    float a(int,int,int,int,int,int) -> a
    com.baidu.platform.comapi.a.b a(int,int) -> a
    android.graphics.Point a(com.baidu.platform.comapi.a.b) -> a
    void s() -> s
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void t() -> t
    int a(int,int,int) -> a
    void u() -> u
    int a(android.os.Bundle,long,int,android.os.Bundle) -> a
    boolean a(long) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean a(android.view.MotionEvent) -> a
    void b(android.view.MotionEvent) -> b
    boolean c(android.view.MotionEvent) -> c
    boolean d(android.view.MotionEvent) -> d
    void B() -> B
    boolean b(int,int) -> b
    void C() -> C
    void D() -> D
    void E() -> E
    void F() -> F
    long a(com.baidu.platform.comapi.map.f) -> a
    int b(com.baidu.platform.comapi.map.f) -> b
    int c(com.baidu.platform.comapi.map.f) -> c
    void d(com.baidu.platform.comapi.map.f) -> d
    void e(com.baidu.platform.comapi.map.f) -> e
    boolean f(com.baidu.platform.comapi.map.f) -> f
    boolean a(com.baidu.platform.comapi.map.f,boolean) -> a
    boolean g(com.baidu.platform.comapi.map.f) -> g
    boolean h(com.baidu.platform.comapi.map.f) -> h
com.baidu.platform.comapi.map.f$a -> com.baidu.platform.comapi.map.f$a:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean e -> e
    float f -> f
    float g -> g
    double h -> h
com.baidu.platform.comapi.map.g -> com.baidu.platform.comapi.map.g:
    com.baidu.platform.comapi.map.f a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.h -> com.baidu.platform.comapi.map.h:
    void a() -> a
    void a(com.baidu.platform.comapi.map.z) -> a
    void b(com.baidu.platform.comapi.map.z) -> b
    void c(com.baidu.platform.comapi.map.z) -> c
    void a(android.view.MotionEvent) -> a
    void a(com.baidu.platform.comapi.a.b) -> a
    void a(java.lang.String) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void d(com.baidu.platform.comapi.a.b) -> d
    void e(com.baidu.platform.comapi.a.b) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.z) -> a
    void d() -> d
    void e() -> e
com.baidu.platform.comapi.map.i -> com.baidu.platform.comapi.map.i:
com.baidu.platform.comapi.map.j -> com.baidu.platform.comapi.map.j:
com.baidu.platform.comapi.map.k -> com.baidu.platform.comapi.map.k:
com.baidu.platform.comapi.map.l -> com.baidu.platform.comapi.map.l:
    android.os.Bundle a(int,int,int) -> a
com.baidu.platform.comapi.map.m -> com.baidu.platform.comapi.map.m:
com.baidu.platform.comapi.map.n -> com.baidu.platform.comapi.map.n:
com.baidu.platform.comapi.map.o -> com.baidu.platform.comapi.map.o:
com.baidu.platform.comapi.map.p -> com.baidu.platform.comapi.map.p:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    java.util.ArrayList e -> e
    void a(java.util.ArrayList) -> a
    java.util.ArrayList a() -> a
com.baidu.platform.comapi.map.q -> com.baidu.platform.comapi.map.q:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.basemap.a b -> b
    com.baidu.platform.comapi.map.q c -> c
    com.baidu.platform.comapi.map.v d -> d
    android.os.Handler e -> e
    com.baidu.platform.comapi.map.q a() -> a
    void g() -> g
    void h() -> h
    void b() -> b
    void a(com.baidu.platform.comapi.map.u) -> a
    void b(com.baidu.platform.comapi.map.u) -> b
    boolean a(int) -> a
    boolean b(int) -> b
    boolean c(int) -> c
    boolean d(int) -> d
    boolean e(int) -> e
    boolean a(boolean,boolean) -> a
    boolean f(int) -> f
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    java.util.ArrayList a(java.lang.String) -> a
    com.baidu.platform.comapi.map.t g(int) -> g
    java.util.ArrayList e() -> e
    com.baidu.platform.comapi.map.q f() -> f
    com.baidu.platform.comapi.map.v a(com.baidu.platform.comapi.map.q) -> a
com.baidu.platform.comapi.map.r -> com.baidu.platform.comapi.map.r:
    com.baidu.platform.comapi.map.q a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.s -> com.baidu.platform.comapi.map.s:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.platform.comapi.a.d g -> g
    int h -> h
    int i -> i
    boolean j -> j
    int k -> k
    int l -> l
com.baidu.platform.comapi.map.t -> com.baidu.platform.comapi.map.t:
    com.baidu.platform.comapi.map.s a -> a
    void a(com.baidu.platform.comapi.map.s) -> a
    com.baidu.platform.comapi.map.s a() -> a
com.baidu.platform.comapi.map.u -> com.baidu.platform.comapi.map.u:
    void a(int,int) -> a
com.baidu.platform.comapi.map.v -> com.baidu.platform.comapi.map.v:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.u b -> b
    void a(com.baidu.platform.comapi.map.u) -> a
    void b(com.baidu.platform.comapi.map.u) -> b
    void a(android.os.Message) -> a
com.baidu.platform.comapi.map.w -> com.baidu.platform.comapi.map.w:
com.baidu.platform.comapi.map.x -> com.baidu.platform.comapi.map.x:
    com.baidu.platform.comapi.map.x a -> a
    com.baidu.platform.comapi.map.x b -> b
    com.baidu.platform.comapi.map.x c -> c
    int d -> d
    com.baidu.platform.comapi.map.x[] e -> e
    com.baidu.platform.comapi.map.x[] values() -> values
    com.baidu.platform.comapi.map.x valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.y -> com.baidu.platform.comapi.map.y:
    com.baidu.platform.comapi.map.z a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.baidu.platform.comapi.map.y a(com.baidu.platform.comapi.map.z) -> a
    com.baidu.platform.comapi.map.y a(boolean) -> a
    com.baidu.platform.comapi.map.y a(int) -> a
    com.baidu.platform.comapi.map.y b(boolean) -> b
    com.baidu.platform.comapi.map.y c(boolean) -> c
    com.baidu.platform.comapi.map.y d(boolean) -> d
    com.baidu.platform.comapi.map.y e(boolean) -> e
com.baidu.platform.comapi.map.z -> com.baidu.platform.comapi.map.z:
    java.lang.String t -> t
    float a -> a
    int b -> b
    int c -> c
    double d -> d
    double e -> e
    int f -> f
    int g -> g
    long h -> h
    long i -> i
    com.baidu.platform.comapi.map.z$b j -> j
    com.baidu.platform.comapi.map.z$a k -> k
    boolean l -> l
    double m -> m
    double n -> n
    int o -> o
    java.lang.String p -> p
    float q -> q
    boolean r -> r
    int s -> s
    void a(android.os.Bundle) -> a
    android.os.Bundle a(com.baidu.platform.comapi.map.f) -> a
com.baidu.platform.comapi.map.z$a -> com.baidu.platform.comapi.map.z$a:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    com.baidu.platform.comapi.a.d e -> e
    com.baidu.platform.comapi.a.d f -> f
    com.baidu.platform.comapi.a.d g -> g
    com.baidu.platform.comapi.a.d h -> h
    com.baidu.platform.comapi.map.z i -> i
com.baidu.platform.comapi.map.z$b -> com.baidu.platform.comapi.map.z$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.baidu.platform.comapi.map.z e -> e
com.baidu.platform.comjni.a.a.a -> com.baidu.platform.comjni.a.a.a:
    int a -> a
    com.baidu.platform.comjni.a.a.b b -> b
com.baidu.platform.comjni.a.a.b -> com.baidu.platform.comjni.a.a.b:
com.baidu.platform.comjni.engine.AppEngine -> com.baidu.platform.comjni.engine.AppEngine:
    void despatchMessage(int,int,int,long) -> despatchMessage
    void InitClass() -> InitClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.JNIEngine -> com.baidu.platform.comjni.engine.JNIEngine:
    int initClass(java.lang.Object,int) -> initClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.a -> com.baidu.platform.comjni.engine.a:
    java.lang.String a -> a
    android.util.SparseArray b -> b
    void a(int,android.os.Handler) -> a
    void b(int,android.os.Handler) -> b
    void a(int,int,int,long) -> a
    void a() -> a
com.baidu.platform.comjni.map.basemap.BaseMapCallback -> com.baidu.platform.comjni.map.basemap.BaseMapCallback:
    android.util.LongSparseArray a -> a
    void addLayerDataInterface(long,com.baidu.platform.comjni.map.basemap.b) -> addLayerDataInterface
    void removeLayerDataInterface(long) -> removeLayerDataInterface
    int ReqLayerData(android.os.Bundle,long,int,android.os.Bundle) -> ReqLayerData
com.baidu.platform.comjni.map.basemap.JNIBaseMap -> com.baidu.platform.comjni.map.basemap.JNIBaseMap:
    long a -> a
    long Create() -> Create
    int SetCallback(long,com.baidu.platform.comjni.map.basemap.BaseMapCallback) -> SetCallback
    int Release(long) -> Release
    boolean Init(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> Init
    void OnPause(long) -> OnPause
    void OnResume(long) -> OnResume
    void ResetImageRes(long) -> ResetImageRes
    void SetMapStatus(long,android.os.Bundle) -> SetMapStatus
    int SetMapControlMode(long,int) -> SetMapControlMode
    android.os.Bundle GetMapStatus(long) -> GetMapStatus
    android.os.Bundle getDrawingMapStatus(long) -> getDrawingMapStatus
    float GetZoomToBound(long,android.os.Bundle) -> GetZoomToBound
    void ShowSatelliteMap(long,boolean) -> ShowSatelliteMap
    void ShowTrafficMap(long,boolean) -> ShowTrafficMap
    void ShowHotMap(long,boolean) -> ShowHotMap
    boolean GetBaiduHotMapCityInfo(long) -> GetBaiduHotMapCityInfo
    void ShowLayers(long,long,boolean) -> ShowLayers
    void UpdateLayers(long,long) -> UpdateLayers
    long AddLayer(long,int,int,java.lang.String) -> AddLayer
    void ClearLayer(long,long) -> ClearLayer
    java.lang.String GetNearlyObjID(long,long,int,int,int) -> GetNearlyObjID
    java.lang.String ScrPtToGeoPoint(long,int,int) -> ScrPtToGeoPoint
    java.lang.String GeoPtToScrPoint(long,int,int) -> GeoPtToScrPoint
    void SaveScreenToLocal(long,java.lang.String,android.os.Bundle) -> SaveScreenToLocal
    boolean OnRecordAdd(long,int) -> OnRecordAdd
    boolean OnRecordStart(long,int,boolean,int) -> OnRecordStart
    boolean OnRecordSuspend(long,int,boolean,int) -> OnRecordSuspend
    boolean OnRecordReload(long,int,boolean) -> OnRecordReload
    boolean OnRecordRemove(long,int,boolean) -> OnRecordRemove
    java.lang.String OnRecordGetAll(long) -> OnRecordGetAll
    java.lang.String OnRecordGetAt(long,int) -> OnRecordGetAt
    boolean OnRecordImport(long,boolean,boolean) -> OnRecordImport
    java.lang.String OnHotcityGet(long) -> OnHotcityGet
    java.lang.String OnSchcityGet(long,java.lang.String) -> OnSchcityGet
    void addOneOverlayItem(long,android.os.Bundle) -> addOneOverlayItem
    void updateOneOverlayItem(long,android.os.Bundle) -> updateOneOverlayItem
    void removeOneOverlayItem(long,android.os.Bundle) -> removeOneOverlayItem
    void PostStatInfo(long) -> PostStatInfo
    int MapProc(long,int,int,int) -> MapProc
    long CreateDuplicate(long) -> CreateDuplicate
    int[] GetScreenBuf(long,int[],int,int) -> GetScreenBuf
    void enableDrawHouseHeight(long,boolean) -> enableDrawHouseHeight
    boolean isDrawHouseHeightEnable(long) -> isDrawHouseHeightEnable
    void clearHeatMapLayerCache(long) -> clearHeatMapLayerCache
com.baidu.platform.comjni.map.basemap.a -> com.baidu.platform.comjni.map.basemap.a:
    java.lang.String a -> a
    long b -> b
    com.baidu.platform.comjni.map.basemap.JNIBaseMap c -> c
    java.util.List d -> d
    boolean a() -> a
    boolean b() -> b
    long c() -> c
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Bundle) -> a
    int a(int) -> a
    android.os.Bundle g() -> g
    android.os.Bundle h() -> h
    float b(android.os.Bundle) -> b
    void a(boolean) -> a
    void b(boolean) -> b
    boolean i() -> i
    void c(boolean) -> c
    void a(long,boolean) -> a
    void a(long) -> a
    long a(int,int,java.lang.String) -> a
    void b(long) -> b
    java.lang.String a(int,int,int,int) -> a
    java.lang.String a(int,int) -> a
    java.lang.String b(int,int) -> b
    void a(java.lang.String,android.os.Bundle) -> a
    boolean b(int) -> b
    boolean a(int,boolean,int) -> a
    boolean b(int,boolean,int) -> b
    boolean a(int,boolean) -> a
    boolean b(int,boolean) -> b
    java.lang.String j() -> j
    java.lang.String c(int) -> c
    boolean a(boolean,boolean) -> a
    java.lang.String k() -> k
    java.lang.String a(java.lang.String) -> a
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void e(android.os.Bundle) -> e
    void l() -> l
    int a(long,int,int,int) -> a
    int[] a(int[],int,int) -> a
    void d(boolean) -> d
    boolean m() -> m
    void n() -> n
com.baidu.platform.comjni.map.basemap.b -> com.baidu.platform.comjni.map.basemap.b:
    int a(android.os.Bundle,long,int,android.os.Bundle) -> a
    boolean a(long) -> a
com.baidu.platform.comjni.map.cloud.JniCloud -> com.baidu.platform.comjni.map.cloud.JniCloud:
    long create() -> create
    int release(long) -> release
    java.lang.String getSearchResult(long,int) -> getSearchResult
    void cloudSearch(long,android.os.Bundle) -> cloudSearch
    void cloudDetailSearch(long,android.os.Bundle) -> cloudDetailSearch
com.baidu.platform.comjni.map.cloud.a -> com.baidu.platform.comjni.map.cloud.a:
    java.lang.String a -> a
    long b -> b
    com.baidu.platform.comjni.map.cloud.JniCloud c -> c
    long a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache -> com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache:
    long Create() -> Create
    void Init(long,android.os.Bundle) -> Init
com.baidu.platform.comjni.map.commonmemcache.a -> com.baidu.platform.comjni.map.commonmemcache.a:
    long a -> a
    com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache b -> b
    long a() -> a
    void a(android.os.Bundle) -> a
com.baidu.platform.comjni.map.favorite.JNIFavorite -> com.baidu.platform.comjni.map.favorite.JNIFavorite:
    long Create() -> Create
    int Release(long) -> Release
    boolean Load(long,java.lang.String,java.lang.String,java.lang.String,int,int,int) -> Load
    boolean SetType(long,int) -> SetType
    boolean Add(long,java.lang.String,java.lang.String) -> Add
    boolean Update(long,java.lang.String,java.lang.String) -> Update
    boolean Remove(long,java.lang.String) -> Remove
    boolean Clear(long) -> Clear
    java.lang.String GetValue(long,java.lang.String) -> GetValue
    int GetAll(long,android.os.Bundle) -> GetAll
    boolean IsExist(long,java.lang.String) -> IsExist
    boolean SaveCache(long) -> SaveCache
com.baidu.platform.comjni.map.favorite.a -> com.baidu.platform.comjni.map.favorite.a:
    long a -> a
    com.baidu.platform.comjni.map.favorite.JNIFavorite b -> b
    long a() -> a
    int b() -> b
    boolean a(java.lang.String,java.lang.String,java.lang.String,int,int,int) -> a
    boolean a(int) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(java.lang.String) -> a
    boolean c() -> c
    java.lang.String b(java.lang.String) -> b
    int a(android.os.Bundle) -> a
    boolean c(java.lang.String) -> c
    boolean d() -> d
com.baidu.platform.comjni.map.favorite.a$a -> com.baidu.platform.comjni.map.favorite.a$a:
    boolean a -> a
    void b() -> b
    void a() -> a
com.baidu.platform.comjni.map.radar.JNIRadar -> com.baidu.platform.comjni.map.radar.JNIRadar:
    long Create() -> Create
    int Release(long) -> Release
    java.lang.String GetRadarResult(long,int) -> GetRadarResult
    boolean SendUploadLocationInfoRequest(long,android.os.Bundle) -> SendUploadLocationInfoRequest
    boolean SendClearLocationInfoRequest(long,android.os.Bundle) -> SendClearLocationInfoRequest
    boolean SendGetLocationInfosNearbyRequest(long,android.os.Bundle) -> SendGetLocationInfosNearbyRequest
com.baidu.platform.comjni.map.radar.a -> com.baidu.platform.comjni.map.radar.a:
    long a -> a
    com.baidu.platform.comjni.map.radar.JNIRadar b -> b
    long a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    boolean a(android.os.Bundle) -> a
    boolean b(android.os.Bundle) -> b
    boolean c(android.os.Bundle) -> c
com.baidu.platform.comjni.map.search.JNISearch -> com.baidu.platform.comjni.map.search.JNISearch:
    long Create() -> Create
    int Release(long) -> Release
    java.lang.String GetSearchResult(long,int) -> GetSearchResult
    boolean ForceSearchByCityName(long,android.os.Bundle) -> ForceSearchByCityName
    boolean AreaSearch(long,android.os.Bundle) -> AreaSearch
    boolean RoutePlanByBus(long,android.os.Bundle) -> RoutePlanByBus
    boolean RoutePlanByCar(long,android.os.Bundle) -> RoutePlanByCar
    boolean RoutePlanByFoot(long,android.os.Bundle) -> RoutePlanByFoot
    boolean POIDetailSearchPlace(long,java.lang.String) -> POIDetailSearchPlace
    boolean BusLineDetailSearch(long,java.lang.String,java.lang.String) -> BusLineDetailSearch
    boolean SuggestionSearch(long,android.os.Bundle) -> SuggestionSearch
    boolean ReverseGeocodeSearch(long,int,int) -> ReverseGeocodeSearch
    boolean geocode(long,java.lang.String,java.lang.String) -> geocode
    boolean PoiRGCShareUrlSearch(long,int,int,java.lang.String,java.lang.String) -> PoiRGCShareUrlSearch
    boolean PoiDetailShareUrlSearch(long,java.lang.String) -> PoiDetailShareUrlSearch
    boolean MapBoundSearch(long,android.os.Bundle) -> MapBoundSearch
com.baidu.platform.comjni.map.search.a -> com.baidu.platform.comjni.map.search.a:
    java.lang.String a -> a
    long b -> b
    com.baidu.platform.comjni.map.search.JNISearch c -> c
    long a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    boolean a(android.os.Bundle) -> a
    boolean b(android.os.Bundle) -> b
    boolean c(android.os.Bundle) -> c
    boolean d(android.os.Bundle) -> d
    boolean e(android.os.Bundle) -> e
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean f(android.os.Bundle) -> f
    boolean a(int,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(int,int,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean g(android.os.Bundle) -> g
com.baidu.platform.comjni.tools.BundleKeySet -> com.baidu.platform.comjni.tools.BundleKeySet:
    java.lang.String[] getBundleKeys(android.os.Bundle) -> getBundleKeys
com.baidu.platform.comjni.tools.JNITools -> com.baidu.platform.comjni.tools.JNITools:
    boolean TransGeoStr2Pt(java.lang.Object) -> TransGeoStr2Pt
    void TransNodeStr2Pt(java.lang.Object) -> TransNodeStr2Pt
    boolean TransGeoStr2ComplexPt(java.lang.Object) -> TransGeoStr2ComplexPt
    void GetDistanceByMC(java.lang.Object) -> GetDistanceByMC
    boolean CoordinateEncryptEx(float,float,java.lang.String,java.lang.Object) -> CoordinateEncryptEx
    java.lang.String GetToken() -> GetToken
com.baidu.platform.comjni.tools.ParcelItem -> com.baidu.platform.comjni.tools.ParcelItem:
    android.os.Bundle b -> b
    android.os.Parcelable$Creator a -> a
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.platform.comjni.tools.a -> com.baidu.platform.comjni.tools.a:
    com.baidu.platform.comapi.a.a a(java.lang.String) -> a
    double a(com.baidu.platform.comapi.a.d,com.baidu.platform.comapi.a.d) -> a
    java.lang.String a() -> a
com.baidu.platform.comjni.tools.b -> com.baidu.platform.comjni.tools.b:
    com.baidu.platform.comjni.tools.ParcelItem a(android.os.Parcel) -> a
    com.baidu.platform.comjni.tools.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.vi.VDeviceAPI -> com.baidu.vi.VDeviceAPI:
    android.os.PowerManager$WakeLock a -> a
    android.content.BroadcastReceiver b -> b
    long getTotalSpace() -> getTotalSpace
    long getFreeSpace() -> getFreeSpace
    long getSdcardTotalSpace() -> getSdcardTotalSpace
    long getSdcardFreeSpace() -> getSdcardFreeSpace
    long getTotalMemory() -> getTotalMemory
    long getAvailableMemory() -> getAvailableMemory
    java.lang.String getOsVersion() -> getOsVersion
    void setupSoftware(java.lang.String) -> setupSoftware
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getAppVersion() -> getAppVersion
    int getCurrentNetworkType() -> getCurrentNetworkType
    boolean isWifiConnected() -> isWifiConnected
    com.baidu.vi.c getNetworkInfo(int) -> getNetworkInfo
    void setNetworkChangedCallback() -> setNetworkChangedCallback
    void unsetNetworkChangedCallback() -> unsetNetworkChangedCallback
    void onNetworkStateChanged() -> onNetworkStateChanged
    android.net.wifi.ScanResult[] getWifiHotpot() -> getWifiHotpot
    float getSystemMetricsX() -> getSystemMetricsX
    float getSystemMetricsY() -> getSystemMetricsY
    float getScreenDensity() -> getScreenDensity
    int getScreenDensityDpi() -> getScreenDensityDpi
    void setScreenAlwaysOn(boolean) -> setScreenAlwaysOn
    int getScreenBrightness() -> getScreenBrightness
    void makeCall(java.lang.String) -> makeCall
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    int sendMMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMMS
    void openUrl(java.lang.String) -> openUrl
    java.lang.String getCellId() -> getCellId
    java.lang.String getLac() -> getLac
    java.lang.String getImei() -> getImei
    java.lang.String getImsi() -> getImsi
com.baidu.vi.VMsg -> com.baidu.vi.VMsg:
    java.lang.String a -> a
    android.os.Handler b -> b
    android.os.HandlerThread c -> c
    void init() -> init
    void destroy() -> destroy
    void postMessage(int,int,int,long) -> postMessage
    void OnUserCommand1(int,int,int,long) -> OnUserCommand1
    void a(int,int,int,long) -> a
com.baidu.vi.VMsg$a -> com.baidu.vi.VMsg$a:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.vi.a -> com.baidu.vi.a:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.vi.b -> com.baidu.vi.b:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    android.content.Context a() -> a
com.baidu.vi.c -> com.baidu.vi.c:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.baidu.vi.c$1 -> com.baidu.vi.c$1:
    int[] a -> a
com.cmcc.bracelet.lsjx.libs.Config -> com.cmcc.bracelet.lsjx.libs.Config:
    int SECONDNUM -> SECONDNUM
com.cmcc.bracelet.lsjx.libs.DingdangSettingActivity -> com.cmcc.bracelet.lsjx.libs.DingdangSettingActivity:
    com.ai.android.picker.TimePicker tpSport -> tpSport
    com.ai.android.picker.TimePicker tpSleep -> tpSleep
    android.widget.LinearLayout llSleep -> llSleep
    android.widget.LinearLayout spSleep -> spSleep
    android.widget.ToggleButton tbSport -> tbSport
    android.widget.ToggleButton tbSleep -> tbSleep
    android.widget.RadioButton rbLeft -> rbLeft
    android.widget.RadioButton rbRight -> rbRight
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void loadConfig() -> loadConfig
    void saveConfig() -> saveConfig
    int getRepeatConfig(android.widget.LinearLayout) -> getRepeatConfig
    void loadRepeat(android.widget.LinearLayout,int) -> loadRepeat
    void initViews() -> initViews
    void onClick(android.view.View) -> onClick
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void enableSport(boolean) -> enableSport
    void enableSleep(boolean) -> enableSleep
com.cmcc.bracelet.lsjx.libs.JWDeviceManager -> com.cmcc.bracelet.lsjx.libs.JWDeviceManager:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi bleApi -> bleApi
    android.os.Handler mHandler -> mHandler
    java.lang.String mStartTime -> mStartTime
    java.lang.String mEndTime -> mEndTime
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager mJwDeviceManager -> mJwDeviceManager
    boolean isStartRealTime -> isStartRealTime
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack cb -> cb
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager getInstance(android.content.Context) -> getInstance
    void connect(java.lang.String) -> connect
    void disConnect() -> disConnect
    void syncData(java.lang.String,java.lang.String) -> syncData
    void clearDeviceData() -> clearDeviceData
    int getDeviceStatus() -> getDeviceStatus
    void setCallBack(cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack) -> setCallBack
    cmccsi.mhealth.app.sports.device.BaseDeviceInterface$BaseCallBack getBaseCallBack() -> getBaseCallBack
    void startRealTime() -> startRealTime
    void stopRealTime() -> stopRealTime
    void updateOTAData(java.lang.String) -> updateOTAData
    java.lang.String getDeviceInfo() -> getDeviceInfo
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi access$0(com.cmcc.bracelet.lsjx.libs.JWDeviceManager) -> access$0
    java.lang.String access$1(com.cmcc.bracelet.lsjx.libs.JWDeviceManager) -> access$1
    java.lang.String access$2(com.cmcc.bracelet.lsjx.libs.JWDeviceManager) -> access$2
com.cmcc.bracelet.lsjx.libs.JWDeviceManager$1 -> com.cmcc.bracelet.lsjx.libs.JWDeviceManager$1:
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager this$0 -> this$0
    void run() -> run
com.cmcc.bracelet.lsjx.libs.JWDeviceManager$2 -> com.cmcc.bracelet.lsjx.libs.JWDeviceManager$2:
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager this$0 -> this$0
    void run() -> run
com.cmcc.bracelet.lsjx.libs.JWDeviceManager$3 -> com.cmcc.bracelet.lsjx.libs.JWDeviceManager$3:
    com.cmcc.bracelet.lsjx.libs.JWDeviceManager this$0 -> this$0
    java.lang.String val$fw_file_path -> val$fw_file_path
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    java.lang.String mBluetoothDeviceAddress -> mBluetoothDeviceAddress
    java.lang.String wantConnectDeviceAddress -> wantConnectDeviceAddress
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> mBluetoothAdapter
    android.bluetooth.BluetoothGattCharacteristic gattCharacteristic -> gattCharacteristic
    java.util.ArrayList mBleDevices -> mBleDevices
    android.bluetooth.BluetoothGatt mBluetoothGatt -> mBluetoothGatt
    boolean mScanning -> mScanning
    long SCAN_PERIOD -> SCAN_PERIOD
    java.util.UUID UUID_TOUCHUAN_RECEIVE -> UUID_TOUCHUAN_RECEIVE
    int mConnectionState -> mConnectionState
    int STATE_DISCONNECTED -> STATE_DISCONNECTED
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_CONNECTED -> STATE_CONNECTED
    android.bluetooth.BluetoothAdapter$LeScanCallback mLeScanCallback -> mLeScanCallback
    android.bluetooth.BluetoothGattCallback mGattCallback -> mGattCallback
    byte[] mData -> mData
    android.bluetooth.BluetoothGattService mGattService -> mGattService
    java.util.ArrayList mGattCharacteristics -> mGattCharacteristics
    java.lang.String LIST_NAME -> LIST_NAME
    java.lang.String LIST_UUID -> LIST_UUID
    java.lang.String ACTION_GATT_CONNECTED -> ACTION_GATT_CONNECTED
    java.lang.String ACTION_GATT_DISCONNECTED -> ACTION_GATT_DISCONNECTED
    java.lang.String ACTION_GATT_SERVICES_DISCOVERED -> ACTION_GATT_SERVICES_DISCOVERED
    java.lang.String ACTION_DATA_AVAILABLE -> ACTION_DATA_AVAILABLE
    java.lang.String EXTRA_DATA -> EXTRA_DATA
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi mLsjxBleApi -> mLsjxBleApi
    byte SPORTCLOCKNUM -> SPORTCLOCKNUM
    byte SLEEPCLOCKNUM -> SLEEPCLOCKNUM
    int progress -> progress
    boolean is_update -> is_update
    com.quintic.libota.otaManager updateManager -> updateManager
    java.lang.Runnable update -> update
    int[] $SWITCH_TABLE$com$quintic$libota$bleGlobalVariables$otaResult -> $SWITCH_TABLE$com$quintic$libota$bleGlobalVariables$otaResult
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi getInstance(android.content.Context) -> getInstance
    void init(android.content.Context) -> init
    void startScan() -> startScan
    void connectByAddress(java.lang.String) -> connectByAddress
    void stopScan() -> stopScan
    java.util.ArrayList getBleDevices() -> getBleDevices
    boolean isScanning() -> isScanning
    boolean connectBleDevice(android.bluetooth.BluetoothDevice) -> connectBleDevice
    boolean connectBleAddress(java.lang.String) -> connectBleAddress
    void disconnect() -> disconnect
    void close() -> close
    void readCharacteristic(android.bluetooth.BluetoothGattCharacteristic) -> readCharacteristic
    boolean writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic) -> writeCharacteristic
    boolean setValue(android.bluetooth.BluetoothGattCharacteristic,byte[]) -> setValue
    void setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean) -> setCharacteristicNotification
    void setting() -> setting
    byte[] getData() -> getData
    android.bluetooth.BluetoothGattService getGattService() -> getGattService
    void scanLeDevice(boolean) -> scanLeDevice
    void updateData(android.bluetooth.BluetoothGattCharacteristic) -> updateData
    void displayGattServices(java.util.List) -> displayGattServices
    java.lang.String getBleAddr() -> getBleAddr
    void getHistory() -> getHistory
    void delAll() -> delAll
    void doConnect(java.lang.String) -> doConnect
    void setUserInfo(com.cmcc.bracelet.lsjx.libs.UserInfo) -> setUserInfo
    void getDeviceInfo() -> getDeviceInfo
    void getDeviceVersion() -> getDeviceVersion
    void setClock(byte,int[],int,int) -> setClock
    void setClockClose(byte) -> setClockClose
    void setSportClockClose() -> setSportClockClose
    void setSleepClockClose() -> setSleepClockClose
    void setSportClock(int[],int,int) -> setSportClock
    void setSleepClock(int[],int,int) -> setSleepClock
    void startOtaUpdate(java.lang.String) -> startOtaUpdate
    java.lang.String otaError2String(com.quintic.libota.bleGlobalVariables$otaResult) -> otaError2String
    void getSyncData(java.lang.String,java.lang.String) -> getSyncData
    java.lang.String date2TimeStamp(java.lang.String,java.lang.String) -> date2TimeStamp
    com.quintic.libota.otaManager access$0(com.cmcc.bracelet.lsjx.libs.LSJXBleApi) -> access$0
    java.lang.String access$1(com.quintic.libota.bleGlobalVariables$otaResult) -> access$1
    java.util.ArrayList access$2(com.cmcc.bracelet.lsjx.libs.LSJXBleApi) -> access$2
    java.lang.String access$3(com.cmcc.bracelet.lsjx.libs.LSJXBleApi) -> access$3
    void access$4(com.cmcc.bracelet.lsjx.libs.LSJXBleApi,java.lang.String) -> access$4
    android.bluetooth.BluetoothGatt access$5(com.cmcc.bracelet.lsjx.libs.LSJXBleApi) -> access$5
    android.content.Context access$6(com.cmcc.bracelet.lsjx.libs.LSJXBleApi) -> access$6
    void access$7(com.cmcc.bracelet.lsjx.libs.LSJXBleApi,java.util.List) -> access$7
    java.lang.String access$8() -> access$8
    void access$9(com.cmcc.bracelet.lsjx.libs.LSJXBleApi,android.bluetooth.BluetoothGattCharacteristic) -> access$9
    android.bluetooth.BluetoothGattCallback access$10(com.cmcc.bracelet.lsjx.libs.LSJXBleApi) -> access$10
    void access$11(com.cmcc.bracelet.lsjx.libs.LSJXBleApi,android.bluetooth.BluetoothGatt) -> access$11
    android.bluetooth.BluetoothGattCharacteristic access$12(com.cmcc.bracelet.lsjx.libs.LSJXBleApi) -> access$12
    void access$13(com.cmcc.bracelet.lsjx.libs.LSJXBleApi,boolean) -> access$13
    android.bluetooth.BluetoothAdapter access$14(com.cmcc.bracelet.lsjx.libs.LSJXBleApi) -> access$14
    android.bluetooth.BluetoothAdapter$LeScanCallback access$15(com.cmcc.bracelet.lsjx.libs.LSJXBleApi) -> access$15
    void access$16(com.cmcc.bracelet.lsjx.libs.LSJXBleApi,byte,int[],int,int) -> access$16
    int[] $SWITCH_TABLE$com$quintic$libota$bleGlobalVariables$otaResult() -> $SWITCH_TABLE$com$quintic$libota$bleGlobalVariables$otaResult
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$1 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$1:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$10 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$10:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$birthday -> val$birthday
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$11 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$11:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$12 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$12:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$historical_data_synchronization_step -> val$historical_data_synchronization_step
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$13 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$13:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$byte_send_alarm_clock -> val$byte_send_alarm_clock
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$14 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$14:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$user_info_data -> val$user_info_data
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$15 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$15:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$bandOnRightOrLeft -> val$bandOnRightOrLeft
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$16 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$16:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$birthday -> val$birthday
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$17 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$17:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$goalSteps -> val$goalSteps
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$18 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$18:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$byte_send_set_sport_time_clock -> val$byte_send_set_sport_time_clock
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$19 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$19:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$byte_send_set_sleep_time_clock -> val$byte_send_set_sleep_time_clock
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$2 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$2:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    void onLeScan(android.bluetooth.BluetoothDevice,int,byte[]) -> onLeScan
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$20 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$20:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$byte_send_get_device_model -> val$byte_send_get_device_model
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$21 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$21:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$byte_send_get_device_model -> val$byte_send_get_device_model
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$22 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$22:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$byte_send_set_sport_time_clock -> val$byte_send_set_sport_time_clock
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$23 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$23:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$byte_send_set_sport_time_clock -> val$byte_send_set_sport_time_clock
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$24 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$24:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    int[] val$day -> val$day
    int val$hour -> val$hour
    int val$min -> val$min
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$25 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$25:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    int[] val$day -> val$day
    int val$hour -> val$hour
    int val$min -> val$min
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$26 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$26:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$byte_send -> val$byte_send
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$3 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$3:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int) -> onConnectionStateChange
    void onServicesDiscovered(android.bluetooth.BluetoothGatt,int) -> onServicesDiscovered
    void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int) -> onCharacteristicRead
    void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int) -> onCharacteristicWrite
    void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic) -> onCharacteristicChanged
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$4 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$4:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$5 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$5:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    android.bluetooth.BluetoothDevice val$device -> val$device
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$6 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$6:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$byte_send -> val$byte_send
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$7 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$7:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$user_info_data -> val$user_info_data
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$8 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$8:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$bandOnRightOrLeft -> val$bandOnRightOrLeft
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$9 -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$9:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    byte[] val$goalSteps -> val$goalSteps
    void run() -> run
com.cmcc.bracelet.lsjx.libs.LSJXBleApi$updateInstance -> com.cmcc.bracelet.lsjx.libs.LSJXBleApi$updateInstance:
    com.cmcc.bracelet.lsjx.libs.LSJXBleApi this$0 -> this$0
    boolean bleInterfaceInit(android.bluetooth.BluetoothGatt) -> bleInterfaceInit
com.cmcc.bracelet.lsjx.libs.LSJXGattAttributes -> com.cmcc.bracelet.lsjx.libs.LSJXGattAttributes:
    java.util.HashMap attributes -> attributes
    java.lang.String CLIENT_CHARACTERISTIC_CONFIG -> CLIENT_CHARACTERISTIC_CONFIG
    java.lang.String TOUCHUAN_DEVICE -> TOUCHUAN_DEVICE
    java.lang.String TOUCHUAN_SEND -> TOUCHUAN_SEND
    java.lang.String TOUCHUAN_RECEIVE -> TOUCHUAN_RECEIVE
    java.lang.String lookup(java.lang.String,java.lang.String) -> lookup
com.cmcc.bracelet.lsjx.libs.LSJXMsg -> com.cmcc.bracelet.lsjx.libs.LSJXMsg:
    int id -> id
    int date -> date
    int hour -> hour
    int minute -> minute
    int carlories -> carlories
    int stepNum -> stepNum
    int range -> range
    int exercise_time -> exercise_time
    int other1 -> other1
    int other2 -> other2
    int getDate() -> getDate
    void setDate(int) -> setDate
    int getHour() -> getHour
    void setHour(int) -> setHour
    int getMinute() -> getMinute
    void setMinute(int) -> setMinute
    int getCarlories() -> getCarlories
    void setCarlories(int) -> setCarlories
    int getStepNum() -> getStepNum
    void setStepNum(int) -> setStepNum
    int getRange() -> getRange
    void setRange(int) -> setRange
    int getExercise_time() -> getExercise_time
    void setExercise_time(int) -> setExercise_time
    int getOther1() -> getOther1
    void setOther1(int) -> setOther1
    int getOther2() -> getOther2
    void setOther2(int) -> setOther2
com.cmcc.bracelet.lsjx.libs.Protocol -> com.cmcc.bracelet.lsjx.libs.Protocol:
    java.lang.String TAG -> TAG
    byte PRO_HEAD_StepOfReaTimeData -> PRO_HEAD_StepOfReaTimeData
    byte PRO_HEAD_ShortSleep -> PRO_HEAD_ShortSleep
    byte PRO_HEAD_AntiLost -> PRO_HEAD_AntiLost
    byte PRO_HEAD_TimeTheAlarmClock -> PRO_HEAD_TimeTheAlarmClock
    byte PRO_HEAD_CallsToRemind -> PRO_HEAD_CallsToRemind
    byte PRO_HEAD_HisDataSyncStepAndSleep -> PRO_HEAD_HisDataSyncStepAndSleep
    byte PRO_HEAD_PersonalInfoSysEnvSetting -> PRO_HEAD_PersonalInfoSysEnvSetting
    byte PRO_HEAD_BlueConSetting -> PRO_HEAD_BlueConSetting
    byte PRO_HEAD_DevInfo -> PRO_HEAD_DevInfo
    byte PRO_HEAD_TheBattery -> PRO_HEAD_TheBattery
    byte PRO_HEAD_FirmwareUpgrade -> PRO_HEAD_FirmwareUpgrade
    byte PRO_HEAD_LogInformation -> PRO_HEAD_LogInformation
    byte PRO_HEAD_TestItem -> PRO_HEAD_TestItem
    byte PRO_HEAD_SynchronousMeterStep_SynchronousSleep -> PRO_HEAD_SynchronousMeterStep_SynchronousSleep
    byte PRO_ID0 -> PRO_ID0
    byte PRO_ID1 -> PRO_ID1
    byte PRO_ID2 -> PRO_ID2
    byte PRO_ID3 -> PRO_ID3
    byte PRO_ID4 -> PRO_ID4
    int REAL_TIME_STEP_NUMBER -> REAL_TIME_STEP_NUMBER
    int REAL_TIME_CALORIE -> REAL_TIME_CALORIE
    int REAL_TIME_RANGE -> REAL_TIME_RANGE
    int REAL_TIME_EXERCISE_TIME -> REAL_TIME_EXERCISE_TIME
    int BATTLY_QUANTITY -> BATTLY_QUANTITY
    java.lang.String DEVICE_FIRMWARE_VERSION -> DEVICE_FIRMWARE_VERSION
    java.lang.String DEVICE_MODEL -> DEVICE_MODEL
    int BATTLY_STATE -> BATTLY_STATE
    boolean returnHistory -> returnHistory
    cmccsi.mhealth.app.sports.bean.PedometorDataInfo nowInfo -> nowInfo
    cmccsi.mhealth.app.sports.bean.PedometorListInfo pedometorListInfoList -> pedometorListInfoList
    java.util.ArrayList pedoDetailInfoList -> pedoDetailInfoList
    int historyBagSum -> historyBagSum
    int startTimeStampInt -> startTimeStampInt
    int endTimeStampInt -> endTimeStampInt
    int historyBagNumber -> historyBagNumber
    java.util.List metorListResout -> metorListResout
    int percent -> percent
    void dispatchPack(int,byte[],com.cmcc.bracelet.lsjx.libs.JWDeviceManager) -> dispatchPack
    void returnAppMsg(int,int) -> returnAppMsg
    byte[] writeByte(byte,byte[]) -> writeByte
    byte[] writeProtocolDataBytes(byte[]) -> writeProtocolDataBytes
    void readByte(byte[],com.cmcc.bracelet.lsjx.libs.JWDeviceManager) -> readByte
    byte[] readProtocolDataBytes(byte[]) -> readProtocolDataBytes
    byte[] stripByte(byte[]) -> stripByte
    void fillCheckSumByte(byte[]) -> fillCheckSumByte
    boolean isCheckSumValid(byte[]) -> isCheckSumValid
    void printHexString(byte[]) -> printHexString
    java.lang.String getPreTime(java.lang.String,java.lang.String) -> getPreTime
    java.lang.String getStringDate() -> getStringDate
    java.lang.String timeStamp2Date(java.lang.String) -> timeStamp2Date
    java.lang.String getTwoHour(java.lang.String,java.lang.String) -> getTwoHour
    java.lang.String getTwoDay(java.lang.String,java.lang.String) -> getTwoDay
    boolean isTwoDaysSame(int,int) -> isTwoDaysSame
    int getTodayBagCount() -> getTodayBagCount
com.cmcc.bracelet.lsjx.libs.UserInfo -> com.cmcc.bracelet.lsjx.libs.UserInfo:
    boolean female -> female
    int height -> height
    int weight -> weight
    boolean bandOnRight -> bandOnRight
    int walkingStepLength -> walkingStepLength
    int runningStepLength -> runningStepLength
    int birthYear -> birthYear
    int birthMonth -> birthMonth
    int birthDay -> birthDay
    int goalSteps -> goalSteps
    int goalDurationHour -> goalDurationHour
    int goalDurationMinute -> goalDurationMinute
    int alarmRepeat -> alarmRepeat
    int alarmHour -> alarmHour
    int alarmMinute -> alarmMinute
    boolean isFemale() -> isFemale
    void setFemale(boolean) -> setFemale
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    int getWeight() -> getWeight
    void setWeight(int) -> setWeight
    boolean isBandOnRight() -> isBandOnRight
    void setBandOnRight(boolean) -> setBandOnRight
    int getWalkingStepLength() -> getWalkingStepLength
    void setWalkingStepLength(int) -> setWalkingStepLength
    int getRunningStepLength() -> getRunningStepLength
    void setRunningStepLength(int) -> setRunningStepLength
    int getBirthYear() -> getBirthYear
    void setBirthYear(int) -> setBirthYear
    int getBirthMonth() -> getBirthMonth
    void setBirthMonth(int) -> setBirthMonth
    int getBirthDay() -> getBirthDay
    void setBirthDay(int) -> setBirthDay
    int getGoalSteps() -> getGoalSteps
    void setGoalSteps(int) -> setGoalSteps
    int getGoalDurationHour() -> getGoalDurationHour
    void setGoalDurationHour(int) -> setGoalDurationHour
    int getGoalDurationMinute() -> getGoalDurationMinute
    void setGoalDurationMinute(int) -> setGoalDurationMinute
    int getAlarmRepeat() -> getAlarmRepeat
    void setAlarmRepeat(int) -> setAlarmRepeat
    int getAlarmHour() -> getAlarmHour
    void setAlarmHour(int) -> setAlarmHour
    int getAlarmMinute() -> getAlarmMinute
    void setAlarmMinute(int) -> setAlarmMinute
com.cmcc.ecg.net.AFDetectionAndroid -> com.cmcc.ecg.net.AFDetectionAndroid:
    long counterRR -> counterRR
    long counterRunCode -> counterRunCode
    double[] lastTwelveRR -> lastTwelveRR
    double meanRR -> meanRR
    double sampleEntropy -> sampleEntropy
    double COSEn -> COSEn
    double AFthres -> AFthres
    boolean wasAF -> wasAF
    int Rnum -> Rnum
    int m -> m
    double r -> r
    double r_new -> r_new
    int getRnum() -> getRnum
    void setRnum(int) -> setRnum
    void Initialise() -> Initialise
    void meanRRComputation() -> meanRRComputation
    void SampleEntropy() -> SampleEntropy
    boolean get_result(double) -> get_result
com.cmcc.ecg.net.Constant -> com.cmcc.ecg.net.Constant:
    java.lang.String ipaddress -> ipaddress
    java.lang.String bleAddress -> bleAddress
    java.lang.String deviceId -> deviceId
    java.lang.String gwIP -> gwIP
    java.lang.String appIP -> appIP
    java.lang.String gwUrl -> gwUrl
    java.lang.String getDeviceIdUrl -> getDeviceIdUrl
    java.lang.String loginUrl -> loginUrl
    java.lang.String datalistUrl -> datalistUrl
    java.lang.String dataUrl -> dataUrl
    java.lang.String registUrl -> registUrl
    java.lang.String getBleAddress() -> getBleAddress
    void setBleAddress(java.lang.String) -> setBleAddress
    java.lang.String getGwUrl() -> getGwUrl
    void setGwUrl(java.lang.String) -> setGwUrl
    java.lang.String getLoginUrl() -> getLoginUrl
    void setLoginUrl(java.lang.String) -> setLoginUrl
    java.lang.String getDatalistUrl() -> getDatalistUrl
    void setDatalistUrl(java.lang.String) -> setDatalistUrl
    java.lang.String getGetDeviceIdUrl() -> getGetDeviceIdUrl
    void setGetDeviceIdUrl(java.lang.String) -> setGetDeviceIdUrl
    java.lang.String getDataUrl() -> getDataUrl
    void setDataUrl(java.lang.String) -> setDataUrl
    java.lang.String getRegistUrl() -> getRegistUrl
    void setRegistUrl(java.lang.String) -> setRegistUrl
    java.lang.String getDeviceId() -> getDeviceId
    void setDeviceId(java.lang.String) -> setDeviceId
com.cmcc.ecg.net.ContextUtil -> com.cmcc.ecg.net.ContextUtil:
    com.cmcc.ecg.net.ContextUtil instance -> instance
    com.cmcc.ecg.net.ContextUtil getInstance() -> getInstance
    void onCreate() -> onCreate
com.cmcc.ecg.net.JsonCreat -> com.cmcc.ecg.net.JsonCreat:
    java.lang.String key_data -> key_data
    java.lang.String key_datas -> key_datas
    java.lang.String key_company -> key_company
    java.lang.String key_password -> key_password
    java.lang.String mCompany -> mCompany
    java.lang.String mPassword -> mPassword
    java.lang.String key_apptype -> key_apptype
    java.lang.String key_deviceid -> key_deviceid
    java.lang.String key_datatype -> key_datatype
    java.lang.String key_collectdate -> key_collectdate
    java.lang.String key_datavalue -> key_datavalue
    java.lang.String appType -> appType
    java.lang.String dataType -> dataType
    java.lang.String key_rawdata -> key_rawdata
    java.lang.String key_hr -> key_hr
    java.lang.String key_isaf -> key_isaf
    java.lang.String key_detailedresults -> key_detailedresults
    java.lang.String key_simpleresult -> key_simpleresult
    java.lang.String key_measureTime -> key_measureTime
    org.json.JSONArray mappJson -> mappJson
    org.json.JSONObject mhttpJson -> mhttpJson
    org.json.JSONObject mgwJson -> mgwJson
    java.util.List mlist -> mlist
    void appJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> appJson
    void httpJson(java.lang.String,java.lang.String) -> httpJson
    java.util.List jsonsend() -> jsonsend
    org.json.JSONObject myJsonCreat(java.lang.String,java.lang.String) -> myJsonCreat
com.cmcc.ecg.net.MyJson -> com.cmcc.ecg.net.MyJson:
    java.lang.String TAG -> TAG
    java.lang.String info -> info
    java.lang.String deviceID -> deviceID
    boolean isValueData(com.cmcc.ishang.lib.net.gson.BaseNetItem) -> isValueData
    void setValue(com.cmcc.ishang.lib.net.gson.BaseNetItem) -> setValue
com.cmcc.ecg.net.NetworkToolEcg -> com.cmcc.ecg.net.NetworkToolEcg:
    int NONE -> NONE
    int WIFI -> WIFI
    int MOBILE -> MOBILE
    int getNetworkState(android.content.Context) -> getNetworkState
com.cmcc.ecg.net.Sub -> com.cmcc.ecg.net.Sub:
    java.lang.String phone -> phone
    java.lang.String userid -> userid
    java.lang.String getPhone() -> getPhone
    void setPhone(java.lang.String) -> setPhone
    java.lang.String getUserid() -> getUserid
    void setUserid(java.lang.String) -> setUserid
com.cmcc.ecg.net.Sub1 -> com.cmcc.ecg.net.Sub1:
    java.lang.String weight -> weight
    java.lang.String step -> step
    java.lang.String transType -> transType
    java.lang.String stepNum -> stepNum
    java.lang.String distance -> distance
    java.lang.String power -> power
    java.lang.String cal -> cal
    java.lang.String yxbssum -> yxbssum
    java.lang.String strength1 -> strength1
    java.lang.String strength2 -> strength2
    java.lang.String strength3 -> strength3
    java.lang.String strength4 -> strength4
    java.lang.String getWeight() -> getWeight
    void setWeight(java.lang.String) -> setWeight
    java.lang.String getStep() -> getStep
    void setStep(java.lang.String) -> setStep
    java.lang.String getTransType() -> getTransType
    void setTransType(java.lang.String) -> setTransType
    java.lang.String getStepNum() -> getStepNum
    void setStepNum(java.lang.String) -> setStepNum
    java.lang.String getDistance() -> getDistance
    void setDistance(java.lang.String) -> setDistance
    java.lang.String getPower() -> getPower
    void setPower(java.lang.String) -> setPower
    java.lang.String getCal() -> getCal
    void setCal(java.lang.String) -> setCal
    java.lang.String getYxbssum() -> getYxbssum
    void setYxbssum(java.lang.String) -> setYxbssum
    java.lang.String getStrength1() -> getStrength1
    void setStrength1(java.lang.String) -> setStrength1
    java.lang.String getStrength2() -> getStrength2
    void setStrength2(java.lang.String) -> setStrength2
    java.lang.String getStrength3() -> getStrength3
    void setStrength3(java.lang.String) -> setStrength3
    java.lang.String getStrength4() -> getStrength4
    void setStrength4(java.lang.String) -> setStrength4
com.cmcc.ishang.lib.net.gson.BaseNetItem -> com.cmcc.ishang.lib.net.gson.BaseNetItem:
    java.lang.String status -> status
    java.lang.String reason -> reason
    void setValue(com.cmcc.ishang.lib.net.gson.BaseNetItem) -> setValue
    boolean isValueData(com.cmcc.ishang.lib.net.gson.BaseNetItem) -> isValueData
com.cmcc.ishang.lib.net.gson.NetTool -> com.cmcc.ishang.lib.net.gson.NetTool:
    org.apache.http.client.HttpClient mHttpClient -> mHttpClient
    com.cmcc.ishang.lib.net.gson.NetTool instance -> instance
    void setConnectTimeOut(java.lang.Object) -> setConnectTimeOut
    void setSoTimeOut(java.lang.Object) -> setSoTimeOut
    com.cmcc.ishang.lib.net.gson.NetTool getInstance() -> getInstance
    java.lang.String postDataFromNet(java.lang.String,com.cmcc.ishang.lib.net.gson.BaseNetItem,java.util.List) -> postDataFromNet
    org.apache.http.HttpEntity httpClientExecutePost(java.lang.String,java.util.List) -> httpClientExecutePost
    java.lang.String getDataFromNet(java.lang.String,com.cmcc.ishang.lib.net.gson.BaseNetItem) -> getDataFromNet
    org.apache.http.HttpEntity httpClientExecuteGet(java.lang.String) -> httpClientExecuteGet
com.cmcc.ishang.lib.net.gson.Responses -> com.cmcc.ishang.lib.net.gson.Responses:
    java.lang.String ENTITY_NONE -> ENTITY_NONE
    java.lang.String RAWDATA_NONE -> RAWDATA_NONE
    java.lang.String RAWDATA_NOT_VALUABLE -> RAWDATA_NOT_VALUABLE
    java.lang.String NOT_SUCCESS -> NOT_SUCCESS
    java.lang.String ERROR_JSE -> ERROR_JSE
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR -> ERROR
    java.lang.String ERROR_ENTITY_GETCONTENT -> ERROR_ENTITY_GETCONTENT
    java.lang.String SUCCESS -> SUCCESS
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> access$000
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    com.google.gson.JsonArray deepCopy() -> deepCopy
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    com.google.gson.JsonElement deepCopy() -> deepCopy
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    com.google.gson.JsonNull deepCopy() -> deepCopy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedHashTreeMap members -> members
    com.google.gson.JsonObject deepCopy() -> deepCopy
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.TreeTypeAdapter$1:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedHashTreeMap -> com.google.gson.internal.LinkedHashTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedHashTreeMap$Node[] table -> table
    com.google.gson.internal.LinkedHashTreeMap$Node header -> header
    int size -> size
    int modCount -> modCount
    int threshold -> threshold
    com.google.gson.internal.LinkedHashTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedHashTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedHashTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedHashTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int secondaryHash(int) -> secondaryHash
    void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedHashTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node) -> replaceInParent
    void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    void doubleCapacity() -> doubleCapacity
    com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[]) -> doubleCapacity
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedHashTreeMap$1 -> com.google.gson.internal.LinkedHashTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder -> com.google.gson.internal.LinkedHashTreeMap$AvlBuilder:
    com.google.gson.internal.LinkedHashTreeMap$Node stack -> stack
    int leavesToSkip -> leavesToSkip
    int leavesSkipped -> leavesSkipped
    int size -> size
    void reset(int) -> reset
    void add(com.google.gson.internal.LinkedHashTreeMap$Node) -> add
    com.google.gson.internal.LinkedHashTreeMap$Node root() -> root
com.google.gson.internal.LinkedHashTreeMap$AvlIterator -> com.google.gson.internal.LinkedHashTreeMap$AvlIterator:
    com.google.gson.internal.LinkedHashTreeMap$Node stackTop -> stackTop
    void reset(com.google.gson.internal.LinkedHashTreeMap$Node) -> reset
    com.google.gson.internal.LinkedHashTreeMap$Node next() -> next
com.google.gson.internal.LinkedHashTreeMap$EntrySet -> com.google.gson.internal.LinkedHashTreeMap$EntrySet:
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedHashTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedHashTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.LinkedHashTreeMap$KeySet -> com.google.gson.internal.LinkedHashTreeMap$KeySet:
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedHashTreeMap$KeySet$1 -> com.google.gson.internal.LinkedHashTreeMap$KeySet$1:
    com.google.gson.internal.LinkedHashTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedHashTreeMap$Node next -> next
    com.google.gson.internal.LinkedHashTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedHashTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.google.gson.internal.LinkedHashTreeMap$Node -> com.google.gson.internal.LinkedHashTreeMap$Node:
    com.google.gson.internal.LinkedHashTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedHashTreeMap$Node left -> left
    com.google.gson.internal.LinkedHashTreeMap$Node right -> right
    com.google.gson.internal.LinkedHashTreeMap$Node next -> next
    com.google.gson.internal.LinkedHashTreeMap$Node prev -> prev
    java.lang.Object key -> key
    int hash -> hash
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedHashTreeMap$Node first() -> first
    com.google.gson.internal.LinkedHashTreeMap$Node last() -> last
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.google.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    com.google.gson.JsonElement get() -> get
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    java.util.Map read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    java.lang.reflect.Field val$field -> val$field
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    java.lang.String read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    java.net.URL read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    java.net.URI read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    int doPeek() -> doPeek
    int peekKeyword() -> peekKeyword
    int peekNumber() -> peekNumber
    boolean isLiteral(char) -> isLiteral
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    java.lang.String nextQuotedValue(char) -> nextQuotedValue
    java.lang.String nextUnquotedValue() -> nextUnquotedValue
    void skipQuotedValue(char) -> skipQuotedValue
    void skipUnquotedValue() -> skipUnquotedValue
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(int) -> push
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> readEscapeCharacter
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    int access$000(com.google.gson.stream.JsonReader) -> access$000
    int access$100(com.google.gson.stream.JsonReader) -> access$100
    int access$002(com.google.gson.stream.JsonReader,int) -> access$002
    int access$200(com.google.gson.stream.JsonReader) -> access$200
    int access$300(com.google.gson.stream.JsonReader) -> access$300
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    void push(int) -> push
    int peek() -> peek
    void replaceTop(int) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.jjoe64.graphview.BarGraphView -> com.jjoe64.graphview.BarGraphView:
    boolean drawValuesOnTop -> drawValuesOnTop
    int valuesOnTopColor -> valuesOnTopColor
    void drawHorizontalLabels(android.graphics.Canvas,float,float,float,java.lang.String[],float) -> drawHorizontalLabels
    void drawSeries(android.graphics.Canvas,com.jjoe64.graphview.GraphViewDataInterface[],float,float,float,double,double,double,double,float,com.jjoe64.graphview.GraphViewSeries$GraphViewSeriesStyle) -> drawSeries
    boolean getDrawValuesOnTop() -> getDrawValuesOnTop
    int getValuesOnTopColor() -> getValuesOnTopColor
    void setDrawValuesOnTop(boolean) -> setDrawValuesOnTop
    void setValuesOnTopColor(int) -> setValuesOnTopColor
com.jjoe64.graphview.BuildConfig -> com.jjoe64.graphview.BuildConfig:
    boolean DEBUG -> DEBUG
com.jjoe64.graphview.CustomLabelFormatter -> com.jjoe64.graphview.CustomLabelFormatter:
    java.lang.String formatLabel(double,boolean) -> formatLabel
com.jjoe64.graphview.GraphView -> com.jjoe64.graphview.GraphView:
    android.graphics.Paint paint -> paint
    java.lang.String[] horlabels -> horlabels
    java.lang.String[] verlabels -> verlabels
    java.lang.String title -> title
    boolean scrollable -> scrollable
    boolean disableTouch -> disableTouch
    double viewportStart -> viewportStart
    double viewportSize -> viewportSize
    android.view.View viewVerLabels -> viewVerLabels
    com.jjoe64.graphview.compatible.ScaleGestureDetector scaleDetector -> scaleDetector
    boolean scalable -> scalable
    java.text.NumberFormat[] numberformatter -> numberformatter
    java.util.List graphSeries -> graphSeries
    boolean showLegend -> showLegend
    com.jjoe64.graphview.GraphView$LegendAlign legendAlign -> legendAlign
    boolean manualYAxis -> manualYAxis
    double manualMaxYValue -> manualMaxYValue
    double manualMinYValue -> manualMinYValue
    com.jjoe64.graphview.GraphViewStyle graphViewStyle -> graphViewStyle
    com.jjoe64.graphview.GraphView$GraphViewContentView graphViewContentView -> graphViewContentView
    com.jjoe64.graphview.CustomLabelFormatter customLabelFormatter -> customLabelFormatter
    java.lang.Integer labelTextHeight -> labelTextHeight
    java.lang.Integer horLabelTextWidth -> horLabelTextWidth
    java.lang.Integer verLabelTextWidth -> verLabelTextWidth
    android.graphics.Rect textBounds -> textBounds
    boolean staticHorizontalLabels -> staticHorizontalLabels
    boolean staticVerticalLabels -> staticVerticalLabels
    int[] $SWITCH_TABLE$com$jjoe64$graphview$GraphView$LegendAlign -> $SWITCH_TABLE$com$jjoe64$graphview$GraphView$LegendAlign
    com.jjoe64.graphview.GraphViewDataInterface[] _values(int) -> _values
    void addSeries(com.jjoe64.graphview.GraphViewSeries) -> addSeries
    void drawHorizontalLabels(android.graphics.Canvas,float,float,float,java.lang.String[],float) -> drawHorizontalLabels
    void drawLegend(android.graphics.Canvas,float,float) -> drawLegend
    void drawSeries(android.graphics.Canvas,com.jjoe64.graphview.GraphViewDataInterface[],float,float,float,double,double,double,double,float,com.jjoe64.graphview.GraphViewSeries$GraphViewSeriesStyle) -> drawSeries
    java.lang.String formatLabel(double,boolean) -> formatLabel
    java.lang.String[] generateHorlabels(float) -> generateHorlabels
    java.lang.String[] generateVerlabels(float) -> generateVerlabels
    com.jjoe64.graphview.CustomLabelFormatter getCustomLabelFormatter() -> getCustomLabelFormatter
    com.jjoe64.graphview.GraphViewStyle getGraphViewStyle() -> getGraphViewStyle
    com.jjoe64.graphview.GraphView$LegendAlign getLegendAlign() -> getLegendAlign
    float getLegendWidth() -> getLegendWidth
    double getMaxX(boolean) -> getMaxX
    double getMaxY() -> getMaxY
    double getMinX(boolean) -> getMinX
    double getMinY() -> getMinY
    boolean isDisableTouch() -> isDisableTouch
    boolean isScrollable() -> isScrollable
    boolean isShowLegend() -> isShowLegend
    void redrawAll() -> redrawAll
    void removeAllSeries() -> removeAllSeries
    void removeSeries(com.jjoe64.graphview.GraphViewSeries) -> removeSeries
    void removeSeries(int) -> removeSeries
    void scrollToEnd() -> scrollToEnd
    void setCustomLabelFormatter(com.jjoe64.graphview.CustomLabelFormatter) -> setCustomLabelFormatter
    void setDisableTouch(boolean) -> setDisableTouch
    void setGraphViewStyle(com.jjoe64.graphview.GraphViewStyle) -> setGraphViewStyle
    void setHorizontalLabels(java.lang.String[]) -> setHorizontalLabels
    void setLegendAlign(com.jjoe64.graphview.GraphView$LegendAlign) -> setLegendAlign
    void setLegendWidth(float) -> setLegendWidth
    void setManualYAxis(boolean) -> setManualYAxis
    void setManualYAxisBounds(double,double) -> setManualYAxisBounds
    void setScalable(boolean) -> setScalable
    void setScrollable(boolean) -> setScrollable
    void setShowLegend(boolean) -> setShowLegend
    void setTitle(java.lang.String) -> setTitle
    void setVerticalLabels(java.lang.String[]) -> setVerticalLabels
    void setViewPort(double,double) -> setViewPort
    java.lang.Integer access$0(com.jjoe64.graphview.GraphView) -> access$0
    java.lang.Integer access$1(com.jjoe64.graphview.GraphView) -> access$1
    android.graphics.Rect access$2(com.jjoe64.graphview.GraphView) -> access$2
    void access$3(com.jjoe64.graphview.GraphView,java.lang.Integer) -> access$3
    void access$4(com.jjoe64.graphview.GraphView,java.lang.Integer) -> access$4
    java.lang.String[] access$5(com.jjoe64.graphview.GraphView) -> access$5
    java.lang.String[] access$6(com.jjoe64.graphview.GraphView,float) -> access$6
    void access$7(com.jjoe64.graphview.GraphView,java.lang.String[]) -> access$7
    java.lang.String[] access$8(com.jjoe64.graphview.GraphView) -> access$8
    java.lang.String[] access$9(com.jjoe64.graphview.GraphView,float) -> access$9
    void access$10(com.jjoe64.graphview.GraphView,java.lang.String[]) -> access$10
    java.util.List access$11(com.jjoe64.graphview.GraphView) -> access$11
    com.jjoe64.graphview.GraphViewDataInterface[] access$12(com.jjoe64.graphview.GraphView,int) -> access$12
    boolean access$13(com.jjoe64.graphview.GraphView) -> access$13
    double access$14(com.jjoe64.graphview.GraphView) -> access$14
    double access$15(com.jjoe64.graphview.GraphView) -> access$15
    void access$16(com.jjoe64.graphview.GraphView,double) -> access$16
    boolean access$17(com.jjoe64.graphview.GraphView) -> access$17
    boolean access$18(com.jjoe64.graphview.GraphView) -> access$18
    android.view.View access$19(com.jjoe64.graphview.GraphView) -> access$19
    boolean access$20(com.jjoe64.graphview.GraphView) -> access$20
    com.jjoe64.graphview.compatible.ScaleGestureDetector access$21(com.jjoe64.graphview.GraphView) -> access$21
    java.lang.Integer access$22(com.jjoe64.graphview.GraphView) -> access$22
    void access$23(com.jjoe64.graphview.GraphView,java.lang.Integer) -> access$23
    int[] $SWITCH_TABLE$com$jjoe64$graphview$GraphView$LegendAlign() -> $SWITCH_TABLE$com$jjoe64$graphview$GraphView$LegendAlign
    void access$25(com.jjoe64.graphview.GraphView,double) -> access$25
com.jjoe64.graphview.GraphView$1 -> com.jjoe64.graphview.GraphView$1:
    com.jjoe64.graphview.GraphView this$0 -> this$0
    boolean onScale(com.jjoe64.graphview.compatible.ScaleGestureDetector) -> onScale
com.jjoe64.graphview.GraphView$GraphViewConfig -> com.jjoe64.graphview.GraphView$GraphViewConfig:
    float BORDER -> BORDER
com.jjoe64.graphview.GraphView$GraphViewContentView -> com.jjoe64.graphview.GraphView$GraphViewContentView:
    float lastTouchEventX -> lastTouchEventX
    float graphwidth -> graphwidth
    boolean scrollingStarted -> scrollingStarted
    com.jjoe64.graphview.GraphView this$0 -> this$0
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMoveGesture(float) -> onMoveGesture
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.jjoe64.graphview.GraphView$GraphViewData -> com.jjoe64.graphview.GraphView$GraphViewData:
    double valueX -> valueX
    double valueY -> valueY
    double getX() -> getX
    double getY() -> getY
com.jjoe64.graphview.GraphView$LegendAlign -> com.jjoe64.graphview.GraphView$LegendAlign:
    com.jjoe64.graphview.GraphView$LegendAlign TOP -> TOP
    com.jjoe64.graphview.GraphView$LegendAlign MIDDLE -> MIDDLE
    com.jjoe64.graphview.GraphView$LegendAlign BOTTOM -> BOTTOM
    com.jjoe64.graphview.GraphView$LegendAlign[] ENUM$VALUES -> ENUM$VALUES
    com.jjoe64.graphview.GraphView$LegendAlign[] values() -> values
    com.jjoe64.graphview.GraphView$LegendAlign valueOf(java.lang.String) -> valueOf
com.jjoe64.graphview.GraphView$VerLabelsView -> com.jjoe64.graphview.GraphView$VerLabelsView:
    com.jjoe64.graphview.GraphView this$0 -> this$0
    void onDraw(android.graphics.Canvas) -> onDraw
com.jjoe64.graphview.GraphViewDataInterface -> com.jjoe64.graphview.GraphViewDataInterface:
    double getX() -> getX
    double getY() -> getY
com.jjoe64.graphview.GraphViewSeries -> com.jjoe64.graphview.GraphViewSeries:
    java.lang.String description -> description
    com.jjoe64.graphview.GraphViewSeries$GraphViewSeriesStyle style -> style
    com.jjoe64.graphview.GraphViewDataInterface[] values -> values
    java.util.List graphViews -> graphViews
    void addGraphView(com.jjoe64.graphview.GraphView) -> addGraphView
    void appendData(com.jjoe64.graphview.GraphViewDataInterface,boolean) -> appendData
    void appendData(com.jjoe64.graphview.GraphViewDataInterface,boolean,int) -> appendData
    com.jjoe64.graphview.GraphViewSeries$GraphViewSeriesStyle getStyle() -> getStyle
    void removeGraphView(com.jjoe64.graphview.GraphView) -> removeGraphView
    void resetData(com.jjoe64.graphview.GraphViewDataInterface[]) -> resetData
com.jjoe64.graphview.GraphViewSeries$GraphViewSeriesStyle -> com.jjoe64.graphview.GraphViewSeries$GraphViewSeriesStyle:
    int color -> color
    int thickness -> thickness
    com.jjoe64.graphview.ValueDependentColor valueDependentColor -> valueDependentColor
    com.jjoe64.graphview.ValueDependentColor getValueDependentColor() -> getValueDependentColor
    void setValueDependentColor(com.jjoe64.graphview.ValueDependentColor) -> setValueDependentColor
com.jjoe64.graphview.GraphViewStyle -> com.jjoe64.graphview.GraphViewStyle:
    int verticalLabelsColor -> verticalLabelsColor
    int horizontalLabelsColor -> horizontalLabelsColor
    int gridColor -> gridColor
    float textSize -> textSize
    int verticalLabelsWidth -> verticalLabelsWidth
    int numVerticalLabels -> numVerticalLabels
    int numHorizontalLabels -> numHorizontalLabels
    int legendWidth -> legendWidth
    int legendBorder -> legendBorder
    int legendSpacing -> legendSpacing
    int legendMarginBottom -> legendMarginBottom
    android.graphics.Paint$Align verticalLabelsAlign -> verticalLabelsAlign
    int getGridColor() -> getGridColor
    int getHorizontalLabelsColor() -> getHorizontalLabelsColor
    int getLegendBorder() -> getLegendBorder
    int getLegendSpacing() -> getLegendSpacing
    int getLegendWidth() -> getLegendWidth
    int getLegendMarginBottom() -> getLegendMarginBottom
    int getNumHorizontalLabels() -> getNumHorizontalLabels
    int getNumVerticalLabels() -> getNumVerticalLabels
    float getTextSize() -> getTextSize
    android.graphics.Paint$Align getVerticalLabelsAlign() -> getVerticalLabelsAlign
    int getVerticalLabelsColor() -> getVerticalLabelsColor
    int getVerticalLabelsWidth() -> getVerticalLabelsWidth
    void setDefaults() -> setDefaults
    void setGridColor(int) -> setGridColor
    void setHorizontalLabelsColor(int) -> setHorizontalLabelsColor
    void setLegendBorder(int) -> setLegendBorder
    void setLegendSpacing(int) -> setLegendSpacing
    void setLegendWidth(int) -> setLegendWidth
    void setLegendMarginBottom(int) -> setLegendMarginBottom
    void setNumHorizontalLabels(int) -> setNumHorizontalLabels
    void setNumVerticalLabels(int) -> setNumVerticalLabels
    void setTextSize(float) -> setTextSize
    void setVerticalLabelsAlign(android.graphics.Paint$Align) -> setVerticalLabelsAlign
    void setVerticalLabelsColor(int) -> setVerticalLabelsColor
    void setVerticalLabelsWidth(int) -> setVerticalLabelsWidth
    void useTextColorFromTheme(android.content.Context) -> useTextColorFromTheme
com.jjoe64.graphview.LineGraphView -> com.jjoe64.graphview.LineGraphView:
    android.graphics.Paint paintBackground -> paintBackground
    boolean drawBackground -> drawBackground
    boolean drawDataPoints -> drawDataPoints
    float dataPointsRadius -> dataPointsRadius
    void drawSeries(android.graphics.Canvas,com.jjoe64.graphview.GraphViewDataInterface[],float,float,float,double,double,double,double,float,com.jjoe64.graphview.GraphViewSeries$GraphViewSeriesStyle) -> drawSeries
    int getBackgroundColor() -> getBackgroundColor
    float getDataPointsRadius() -> getDataPointsRadius
    boolean getDrawBackground() -> getDrawBackground
    boolean getDrawDataPoints() -> getDrawDataPoints
    void setBackgroundColor(int) -> setBackgroundColor
    void setDataPointsRadius(float) -> setDataPointsRadius
    void setDrawBackground(boolean) -> setDrawBackground
    void setDrawDataPoints(boolean) -> setDrawDataPoints
com.jjoe64.graphview.ValueDependentColor -> com.jjoe64.graphview.ValueDependentColor:
    int get(com.jjoe64.graphview.GraphViewDataInterface) -> get
com.jjoe64.graphview.compatible.RealScaleGestureDetector -> com.jjoe64.graphview.compatible.RealScaleGestureDetector:
com.jjoe64.graphview.compatible.RealScaleGestureDetector$1 -> com.jjoe64.graphview.compatible.RealScaleGestureDetector$1:
    com.jjoe64.graphview.compatible.ScaleGestureDetector$SimpleOnScaleGestureListener val$fakeListener -> val$fakeListener
    com.jjoe64.graphview.compatible.ScaleGestureDetector val$fakeScaleGestureDetector -> val$fakeScaleGestureDetector
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
com.jjoe64.graphview.compatible.ScaleGestureDetector -> com.jjoe64.graphview.compatible.ScaleGestureDetector:
    java.lang.Object realScaleGestureDetector -> realScaleGestureDetector
    java.lang.reflect.Method method_getScaleFactor -> method_getScaleFactor
    java.lang.reflect.Method method_isInProgress -> method_isInProgress
    java.lang.reflect.Method method_onTouchEvent -> method_onTouchEvent
    double getScaleFactor() -> getScaleFactor
    boolean isInProgress() -> isInProgress
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.jjoe64.graphview.compatible.ScaleGestureDetector$SimpleOnScaleGestureListener -> com.jjoe64.graphview.compatible.ScaleGestureDetector$SimpleOnScaleGestureListener:
    boolean onScale(com.jjoe64.graphview.compatible.ScaleGestureDetector) -> onScale
com.lidroid.xutils.BitmapUtils -> com.lidroid.xutils.BitmapUtils:
    boolean pauseTask -> pauseTask
    boolean cancelAllTask -> cancelAllTask
    java.lang.Object pauseTaskLock -> pauseTaskLock
    android.content.Context context -> context
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    com.lidroid.xutils.bitmap.BitmapDisplayConfig defaultDisplayConfig -> defaultDisplayConfig
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.drawable.Drawable) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(int) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.Bitmap) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.drawable.Drawable) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(int) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.Bitmap) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(int,int) -> configDefaultBitmapMaxSize
    com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> configDefaultBitmapMaxSize
    com.lidroid.xutils.BitmapUtils configDefaultImageLoadAnimation(android.view.animation.Animation) -> configDefaultImageLoadAnimation
    com.lidroid.xutils.BitmapUtils configDefaultAutoRotation(boolean) -> configDefaultAutoRotation
    com.lidroid.xutils.BitmapUtils configDefaultShowOriginal(boolean) -> configDefaultShowOriginal
    com.lidroid.xutils.BitmapUtils configDefaultBitmapConfig(android.graphics.Bitmap$Config) -> configDefaultBitmapConfig
    com.lidroid.xutils.BitmapUtils configDefaultDisplayConfig(com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> configDefaultDisplayConfig
    com.lidroid.xutils.BitmapUtils configDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> configDownloader
    com.lidroid.xutils.BitmapUtils configDefaultCacheExpiry(long) -> configDefaultCacheExpiry
    com.lidroid.xutils.BitmapUtils configDefaultConnectTimeout(int) -> configDefaultConnectTimeout
    com.lidroid.xutils.BitmapUtils configDefaultReadTimeout(int) -> configDefaultReadTimeout
    com.lidroid.xutils.BitmapUtils configThreadPoolSize(int) -> configThreadPoolSize
    com.lidroid.xutils.BitmapUtils configMemoryCacheEnabled(boolean) -> configMemoryCacheEnabled
    com.lidroid.xutils.BitmapUtils configDiskCacheEnabled(boolean) -> configDiskCacheEnabled
    com.lidroid.xutils.BitmapUtils configDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> configDiskCacheFileNameGenerator
    com.lidroid.xutils.BitmapUtils configBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> configBitmapCacheListener
    void display(android.view.View,java.lang.String) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapTaskFromContainer(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> getBitmapTaskFromContainer
    boolean bitmapLoadTaskExist(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> bitmapLoadTaskExist
    java.lang.Object access$0(com.lidroid.xutils.BitmapUtils) -> access$0
    boolean access$1(com.lidroid.xutils.BitmapUtils) -> access$1
    boolean access$2(com.lidroid.xutils.BitmapUtils) -> access$2
    com.lidroid.xutils.bitmap.BitmapGlobalConfig access$3(com.lidroid.xutils.BitmapUtils) -> access$3
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask access$4(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> access$4
com.lidroid.xutils.BitmapUtils$BitmapLoadTask -> com.lidroid.xutils.BitmapUtils$BitmapLoadTask:
    java.lang.String uri -> uri
    java.lang.ref.WeakReference containerReference -> containerReference
    com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack callBack -> callBack
    com.lidroid.xutils.bitmap.BitmapDisplayConfig displayConfig -> displayConfig
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom from -> from
    int PROGRESS_LOAD_STARTED -> PROGRESS_LOAD_STARTED
    int PROGRESS_LOADING -> PROGRESS_LOADING
    com.lidroid.xutils.BitmapUtils this$0 -> this$0
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> doInBackground
    void updateProgress(long,long) -> updateProgress
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    android.view.View getTargetContainer() -> getTargetContainer
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$3(com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> access$3
com.lidroid.xutils.DbUtils -> com.lidroid.xutils.DbUtils:
    java.util.HashMap daoMap -> daoMap
    android.database.sqlite.SQLiteDatabase database -> database
    com.lidroid.xutils.DbUtils$DaoConfig daoConfig -> daoConfig
    boolean debug -> debug
    boolean allowTransaction -> allowTransaction
    java.util.concurrent.locks.Lock writeLock -> writeLock
    boolean writeLocked -> writeLocked
    com.lidroid.xutils.DbUtils$FindTempCache findTempCache -> findTempCache
    com.lidroid.xutils.DbUtils getInstance(com.lidroid.xutils.DbUtils$DaoConfig) -> getInstance
    com.lidroid.xutils.DbUtils create(android.content.Context) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    com.lidroid.xutils.DbUtils create(com.lidroid.xutils.DbUtils$DaoConfig) -> create
    com.lidroid.xutils.DbUtils configDebug(boolean) -> configDebug
    com.lidroid.xutils.DbUtils configAllowTransaction(boolean) -> configAllowTransaction
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    com.lidroid.xutils.DbUtils$DaoConfig getDaoConfig() -> getDaoConfig
    void saveOrUpdate(java.lang.Object) -> saveOrUpdate
    void saveOrUpdateAll(java.util.List) -> saveOrUpdateAll
    void replace(java.lang.Object) -> replace
    void replaceAll(java.util.List) -> replaceAll
    void save(java.lang.Object) -> save
    void saveAll(java.util.List) -> saveAll
    boolean saveBindingId(java.lang.Object) -> saveBindingId
    void saveBindingIdAll(java.util.List) -> saveBindingIdAll
    void deleteById(java.lang.Class,java.lang.Object) -> deleteById
    void delete(java.lang.Object) -> delete
    void delete(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> delete
    void deleteAll(java.util.List) -> deleteAll
    void deleteAll(java.lang.Class) -> deleteAll
    void update(java.lang.Object,java.lang.String[]) -> update
    void update(java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> update
    void updateAll(java.util.List,java.lang.String[]) -> updateAll
    void updateAll(java.util.List,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> updateAll
    java.lang.Object findById(java.lang.Class,java.lang.Object) -> findById
    java.lang.Object findFirst(com.lidroid.xutils.db.sqlite.Selector) -> findFirst
    java.lang.Object findFirst(java.lang.Class) -> findFirst
    java.util.List findAll(com.lidroid.xutils.db.sqlite.Selector) -> findAll
    java.util.List findAll(java.lang.Class) -> findAll
    com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelFirst
    com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelFirst
    java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelAll
    java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelAll
    long count(com.lidroid.xutils.db.sqlite.Selector) -> count
    long count(java.lang.Class) -> count
    android.database.sqlite.SQLiteDatabase createDatabase(com.lidroid.xutils.DbUtils$DaoConfig) -> createDatabase
    void saveOrUpdateWithoutTransaction(java.lang.Object) -> saveOrUpdateWithoutTransaction
    boolean saveBindingIdWithoutTransaction(java.lang.Object) -> saveBindingIdWithoutTransaction
    long getLastAutoIncrementId(java.lang.String) -> getLastAutoIncrementId
    void createTableIfNotExist(java.lang.Class) -> createTableIfNotExist
    boolean tableIsExist(java.lang.Class) -> tableIsExist
    void dropDb() -> dropDb
    void dropTable(java.lang.Class) -> dropTable
    void close() -> close
    void debugSql(java.lang.String) -> debugSql
    void beginTransaction() -> beginTransaction
    void setTransactionSuccessful() -> setTransactionSuccessful
    void endTransaction() -> endTransaction
    void execNonQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execNonQuery
    void execNonQuery(java.lang.String) -> execNonQuery
    android.database.Cursor execQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execQuery
    android.database.Cursor execQuery(java.lang.String) -> execQuery
com.lidroid.xutils.DbUtils$DaoConfig -> com.lidroid.xutils.DbUtils$DaoConfig:
    android.content.Context context -> context
    java.lang.String dbName -> dbName
    int dbVersion -> dbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener dbUpgradeListener -> dbUpgradeListener
    java.lang.String dbDir -> dbDir
    android.content.Context getContext() -> getContext
    java.lang.String getDbName() -> getDbName
    void setDbName(java.lang.String) -> setDbName
    int getDbVersion() -> getDbVersion
    void setDbVersion(int) -> setDbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener getDbUpgradeListener() -> getDbUpgradeListener
    void setDbUpgradeListener(com.lidroid.xutils.DbUtils$DbUpgradeListener) -> setDbUpgradeListener
    java.lang.String getDbDir() -> getDbDir
    void setDbDir(java.lang.String) -> setDbDir
com.lidroid.xutils.DbUtils$DbUpgradeListener -> com.lidroid.xutils.DbUtils$DbUpgradeListener:
    void onUpgrade(com.lidroid.xutils.DbUtils,int,int) -> onUpgrade
com.lidroid.xutils.DbUtils$FindTempCache -> com.lidroid.xutils.DbUtils$FindTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    com.lidroid.xutils.DbUtils this$0 -> this$0
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void setSeq(long) -> setSeq
com.lidroid.xutils.HttpUtils -> com.lidroid.xutils.HttpUtils:
    com.lidroid.xutils.http.HttpCache sHttpCache -> sHttpCache
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String responseTextCharset -> responseTextCharset
    long currentRequestExpiry -> currentRequestExpiry
    int DEFAULT_CONN_TIMEOUT -> DEFAULT_CONN_TIMEOUT
    int DEFAULT_RETRY_TIMES -> DEFAULT_RETRY_TIMES
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor EXECUTOR -> EXECUTOR
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    com.lidroid.xutils.HttpUtils configResponseTextCharset(java.lang.String) -> configResponseTextCharset
    com.lidroid.xutils.HttpUtils configHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> configHttpRedirectHandler
    com.lidroid.xutils.HttpUtils configHttpCacheSize(int) -> configHttpCacheSize
    com.lidroid.xutils.HttpUtils configDefaultHttpCacheExpiry(long) -> configDefaultHttpCacheExpiry
    com.lidroid.xutils.HttpUtils configCurrentHttpCacheExpiry(long) -> configCurrentHttpCacheExpiry
    com.lidroid.xutils.HttpUtils configCookieStore(org.apache.http.client.CookieStore) -> configCookieStore
    com.lidroid.xutils.HttpUtils configUserAgent(java.lang.String) -> configUserAgent
    com.lidroid.xutils.HttpUtils configTimeout(int) -> configTimeout
    com.lidroid.xutils.HttpUtils configSoTimeout(int) -> configSoTimeout
    com.lidroid.xutils.HttpUtils configRegisterScheme(org.apache.http.conn.scheme.Scheme) -> configRegisterScheme
    com.lidroid.xutils.HttpUtils configSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> configSSLSocketFactory
    com.lidroid.xutils.HttpUtils configRequestRetryCount(int) -> configRequestRetryCount
    com.lidroid.xutils.HttpUtils configRequestThreadPoolSize(int) -> configRequestThreadPoolSize
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String) -> sendSync
    com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams) -> sendSync
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler sendRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> sendRequest
    com.lidroid.xutils.http.ResponseStream sendSyncRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams) -> sendSyncRequest
com.lidroid.xutils.HttpUtils$1 -> com.lidroid.xutils.HttpUtils$1:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.HttpUtils$2 -> com.lidroid.xutils.HttpUtils$2:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.ViewUtils -> com.lidroid.xutils.ViewUtils:
    void inject(android.view.View) -> inject
    void inject(android.app.Activity) -> inject
    void inject(android.preference.PreferenceActivity) -> inject
    void inject(java.lang.Object,android.view.View) -> inject
    void inject(java.lang.Object,android.app.Activity) -> inject
    void inject(java.lang.Object,android.preference.PreferenceGroup) -> inject
    void inject(java.lang.Object,android.preference.PreferenceActivity) -> inject
    void injectObject(java.lang.Object,com.lidroid.xutils.view.ViewFinder) -> injectObject
com.lidroid.xutils.bitmap.BitmapCacheListener -> com.lidroid.xutils.bitmap.BitmapCacheListener:
    void onInitMemoryCacheFinished() -> onInitMemoryCacheFinished
    void onInitDiskFinished() -> onInitDiskFinished
    void onClearCacheFinished() -> onClearCacheFinished
    void onClearMemoryCacheFinished() -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished() -> onClearDiskCacheFinished
    void onClearCacheFinished(java.lang.String) -> onClearCacheFinished
    void onClearMemoryCacheFinished(java.lang.String) -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished(java.lang.String) -> onClearDiskCacheFinished
    void onFlushCacheFinished() -> onFlushCacheFinished
    void onCloseCacheFinished() -> onCloseCacheFinished
com.lidroid.xutils.bitmap.BitmapCommonUtils -> com.lidroid.xutils.bitmap.BitmapCommonUtils:
    com.lidroid.xutils.bitmap.core.BitmapSize screenSize -> screenSize
    com.lidroid.xutils.bitmap.core.BitmapSize getScreenSize(android.content.Context) -> getScreenSize
    com.lidroid.xutils.bitmap.core.BitmapSize optimizeMaxSizeByView(android.view.View,int,int) -> optimizeMaxSizeByView
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
com.lidroid.xutils.bitmap.BitmapDisplayConfig -> com.lidroid.xutils.bitmap.BitmapDisplayConfig:
    com.lidroid.xutils.bitmap.core.BitmapSize bitmapMaxSize -> bitmapMaxSize
    android.view.animation.Animation animation -> animation
    android.graphics.drawable.Drawable loadingDrawable -> loadingDrawable
    android.graphics.drawable.Drawable loadFailedDrawable -> loadFailedDrawable
    boolean autoRotation -> autoRotation
    boolean showOriginal -> showOriginal
    android.graphics.Bitmap$Config bitmapConfig -> bitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory bitmapFactory -> bitmapFactory
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.bitmap.core.BitmapSize getBitmapMaxSize() -> getBitmapMaxSize
    void setBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> setBitmapMaxSize
    android.view.animation.Animation getAnimation() -> getAnimation
    void setAnimation(android.view.animation.Animation) -> setAnimation
    android.graphics.drawable.Drawable getLoadingDrawable() -> getLoadingDrawable
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    android.graphics.drawable.Drawable getLoadFailedDrawable() -> getLoadFailedDrawable
    void setLoadFailedDrawable(android.graphics.drawable.Drawable) -> setLoadFailedDrawable
    boolean isAutoRotation() -> isAutoRotation
    void setAutoRotation(boolean) -> setAutoRotation
    boolean isShowOriginal() -> isShowOriginal
    void setShowOriginal(boolean) -> setShowOriginal
    android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    void setBitmapConfig(android.graphics.Bitmap$Config) -> setBitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory getBitmapFactory() -> getBitmapFactory
    void setBitmapFactory(com.lidroid.xutils.bitmap.factory.BitmapFactory) -> setBitmapFactory
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    java.lang.String toString() -> toString
    com.lidroid.xutils.bitmap.BitmapDisplayConfig cloneNew() -> cloneNew
com.lidroid.xutils.bitmap.BitmapGlobalConfig -> com.lidroid.xutils.bitmap.BitmapGlobalConfig:
    java.lang.String diskCachePath -> diskCachePath
    int MIN_MEMORY_CACHE_SIZE -> MIN_MEMORY_CACHE_SIZE
    int memoryCacheSize -> memoryCacheSize
    int MIN_DISK_CACHE_SIZE -> MIN_DISK_CACHE_SIZE
    int diskCacheSize -> diskCacheSize
    boolean memoryCacheEnabled -> memoryCacheEnabled
    boolean diskCacheEnabled -> diskCacheEnabled
    com.lidroid.xutils.bitmap.download.Downloader downloader -> downloader
    com.lidroid.xutils.bitmap.core.BitmapCache bitmapCache -> bitmapCache
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor BITMAP_LOAD_EXECUTOR -> BITMAP_LOAD_EXECUTOR
    com.lidroid.xutils.task.PriorityExecutor DISK_CACHE_EXECUTOR -> DISK_CACHE_EXECUTOR
    long defaultCacheExpiry -> defaultCacheExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener bitmapCacheListener -> bitmapCacheListener
    android.content.Context mContext -> mContext
    java.util.HashMap configMap -> configMap
    com.lidroid.xutils.bitmap.BitmapGlobalConfig getInstance(android.content.Context,java.lang.String) -> getInstance
    void initBitmapCache() -> initBitmapCache
    java.lang.String getDiskCachePath() -> getDiskCachePath
    com.lidroid.xutils.bitmap.download.Downloader getDownloader() -> getDownloader
    void setDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> setDownloader
    long getDefaultCacheExpiry() -> getDefaultCacheExpiry
    void setDefaultCacheExpiry(long) -> setDefaultCacheExpiry
    int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    int getDefaultReadTimeout() -> getDefaultReadTimeout
    void setDefaultReadTimeout(int) -> setDefaultReadTimeout
    com.lidroid.xutils.bitmap.core.BitmapCache getBitmapCache() -> getBitmapCache
    int getMemoryCacheSize() -> getMemoryCacheSize
    void setMemoryCacheSize(int) -> setMemoryCacheSize
    void setMemCacheSizePercent(float) -> setMemCacheSizePercent
    int getDiskCacheSize() -> getDiskCacheSize
    void setDiskCacheSize(int) -> setDiskCacheSize
    int getThreadPoolSize() -> getThreadPoolSize
    void setThreadPoolSize(int) -> setThreadPoolSize
    com.lidroid.xutils.task.PriorityExecutor getBitmapLoadExecutor() -> getBitmapLoadExecutor
    com.lidroid.xutils.task.PriorityExecutor getDiskCacheExecutor() -> getDiskCacheExecutor
    boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    void setMemoryCacheEnabled(boolean) -> setMemoryCacheEnabled
    boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    void setDiskCacheEnabled(boolean) -> setDiskCacheEnabled
    com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener getBitmapCacheListener() -> getBitmapCacheListener
    void setBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> setBitmapCacheListener
    int getMemoryClass() -> getMemoryClass
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    com.lidroid.xutils.bitmap.BitmapCacheListener access$0(com.lidroid.xutils.bitmap.BitmapGlobalConfig) -> access$0
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask -> com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask:
    int MESSAGE_INIT_MEMORY_CACHE -> MESSAGE_INIT_MEMORY_CACHE
    int MESSAGE_INIT_DISK_CACHE -> MESSAGE_INIT_DISK_CACHE
    int MESSAGE_FLUSH -> MESSAGE_FLUSH
    int MESSAGE_CLOSE -> MESSAGE_CLOSE
    int MESSAGE_CLEAR -> MESSAGE_CLEAR
    int MESSAGE_CLEAR_MEMORY -> MESSAGE_CLEAR_MEMORY
    int MESSAGE_CLEAR_DISK -> MESSAGE_CLEAR_DISK
    int MESSAGE_CLEAR_BY_KEY -> MESSAGE_CLEAR_BY_KEY
    int MESSAGE_CLEAR_MEMORY_BY_KEY -> MESSAGE_CLEAR_MEMORY_BY_KEY
    int MESSAGE_CLEAR_DISK_BY_KEY -> MESSAGE_CLEAR_DISK_BY_KEY
    com.lidroid.xutils.bitmap.BitmapGlobalConfig this$0 -> this$0
    java.lang.Object[] doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.bitmap.PauseOnScrollListener -> com.lidroid.xutils.bitmap.PauseOnScrollListener:
    com.lidroid.xutils.task.TaskHandler taskHandler -> taskHandler
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack:
    com.lidroid.xutils.bitmap.callback.BitmapSetter bitmapSetter -> bitmapSetter
    void onPreLoad(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onPreLoad
    void onLoadStarted(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onLoadStarted
    void onLoading(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,long,long) -> onLoading
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    void setBitmapSetter(com.lidroid.xutils.bitmap.callback.BitmapSetter) -> setBitmapSetter
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom -> com.lidroid.xutils.bitmap.callback.BitmapLoadFrom:
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom MEMORY_CACHE -> MEMORY_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom DISK_CACHE -> DISK_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom URI -> URI
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] values() -> values
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.bitmap.callback.BitmapSetter -> com.lidroid.xutils.bitmap.callback.BitmapSetter:
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack:
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    void animationDisplay(android.view.View,android.view.animation.Animation) -> animationDisplay
com.lidroid.xutils.bitmap.core.AsyncDrawable -> com.lidroid.xutils.bitmap.core.AsyncDrawable:
    java.lang.ref.WeakReference bitmapLoadTaskReference -> bitmapLoadTaskReference
    android.graphics.drawable.Drawable baseDrawable -> baseDrawable
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapWorkerTask() -> getBitmapWorkerTask
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void setBounds(int,int,int,int) -> setBounds
    void setBounds(android.graphics.Rect) -> setBounds
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void invalidateSelf() -> invalidateSelf
    void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
com.lidroid.xutils.bitmap.core.BitmapCache -> com.lidroid.xutils.bitmap.core.BitmapCache:
    int DISK_CACHE_INDEX -> DISK_CACHE_INDEX
    com.lidroid.xutils.cache.LruDiskCache mDiskLruCache -> mDiskLruCache
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    java.lang.Object mDiskCacheLock -> mDiskCacheLock
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    void initMemoryCache() -> initMemoryCache
    void initDiskCache() -> initDiskCache
    void setMemoryCacheSize(int) -> setMemoryCacheSize
    void setDiskCacheSize(int) -> setDiskCacheSize
    void setDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setDiskCacheFileNameGenerator
    android.graphics.Bitmap downloadBitmap(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadBitmap
    android.graphics.Bitmap addBitmapToMemoryCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap,long) -> addBitmapToMemoryCache
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromDiskCache
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flush() -> flush
    void close() -> close
    android.graphics.Bitmap decodeBitmapMeta(com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> decodeBitmapMeta
    android.graphics.Bitmap rotateBitmapIfNeeded(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap) -> rotateBitmapIfNeeded
com.lidroid.xutils.bitmap.core.BitmapCache$1 -> com.lidroid.xutils.bitmap.core.BitmapCache$1:
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    int sizeOf(com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey,android.graphics.Bitmap) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta -> com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta:
    java.io.FileInputStream inputStream -> inputStream
    byte[] data -> data
    long expiryTimestamp -> expiryTimestamp
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey -> com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey:
    java.lang.String uri -> uri
    java.lang.String subKey -> subKey
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lidroid.xutils.bitmap.core.BitmapDecoder -> com.lidroid.xutils.bitmap.core.BitmapDecoder:
    java.lang.Object lock -> lock
    android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromResource
    android.graphics.Bitmap decodeSampledBitmapFromFile(java.lang.String,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromFile
    android.graphics.Bitmap decodeSampledBitmapFromDescriptor(java.io.FileDescriptor,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromDescriptor
    android.graphics.Bitmap decodeSampledBitmapFromByteArray(byte[],com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromByteArray
    android.graphics.Bitmap decodeResource(android.content.res.Resources,int) -> decodeResource
    android.graphics.Bitmap decodeFile(java.lang.String) -> decodeFile
    android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor) -> decodeFileDescriptor
    android.graphics.Bitmap decodeByteArray(byte[]) -> decodeByteArray
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> calculateInSampleSize
com.lidroid.xutils.bitmap.core.BitmapSize -> com.lidroid.xutils.bitmap.core.BitmapSize:
    com.lidroid.xutils.bitmap.core.BitmapSize ZERO -> ZERO
    int width -> width
    int height -> height
    com.lidroid.xutils.bitmap.core.BitmapSize scaleDown(int) -> scaleDown
    com.lidroid.xutils.bitmap.core.BitmapSize scale(float) -> scale
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    java.lang.String toString() -> toString
com.lidroid.xutils.bitmap.download.DefaultDownloader -> com.lidroid.xutils.bitmap.download.DefaultDownloader:
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
com.lidroid.xutils.bitmap.download.Downloader -> com.lidroid.xutils.bitmap.download.Downloader:
    android.content.Context context -> context
    long defaultExpiry -> defaultExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    void setDefaultExpiry(long) -> setDefaultExpiry
    long getDefaultExpiry() -> getDefaultExpiry
    int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    int getDefaultReadTimeout() -> getDefaultReadTimeout
    void setDefaultReadTimeout(int) -> setDefaultReadTimeout
com.lidroid.xutils.bitmap.factory.BitmapFactory -> com.lidroid.xutils.bitmap.factory.BitmapFactory:
    com.lidroid.xutils.bitmap.factory.BitmapFactory cloneNew() -> cloneNew
    android.graphics.Bitmap createBitmap(android.graphics.Bitmap) -> createBitmap
com.lidroid.xutils.cache.FileNameGenerator -> com.lidroid.xutils.cache.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.lidroid.xutils.cache.KeyExpiryMap -> com.lidroid.xutils.cache.KeyExpiryMap:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    java.lang.Long get(java.lang.Object) -> get
    java.lang.Long put(java.lang.Object,java.lang.Long) -> put
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Long remove(java.lang.Object) -> remove
    void clear() -> clear
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.lidroid.xutils.cache.LruDiskCache -> com.lidroid.xutils.cache.LruDiskCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION -> VERSION
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    char CLEAN -> CLEAN
    char UPDATE -> UPDATE
    char DELETE -> DELETE
    char READ -> READ
    char EXPIRY_PREFIX -> EXPIRY_PREFIX
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int valueCount -> valueCount
    long size -> size
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    com.lidroid.xutils.cache.LruDiskCache open(java.io.File,int,int,long) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    long getExpiryTimestamp(java.lang.String) -> getExpiryTimestamp
    java.io.File getCacheFile(java.lang.String,int) -> getCacheFile
    com.lidroid.xutils.cache.LruDiskCache$Snapshot get(java.lang.String) -> get
    com.lidroid.xutils.cache.LruDiskCache$Snapshot getByDiskKey(java.lang.String) -> getByDiskKey
    com.lidroid.xutils.cache.LruDiskCache$Editor edit(java.lang.String) -> edit
    com.lidroid.xutils.cache.LruDiskCache$Editor editByDiskKey(java.lang.String,long) -> editByDiskKey
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    void completeEdit(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean removeByDiskKey(java.lang.String) -> removeByDiskKey
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void delete() -> delete
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    java.io.Writer access$0(com.lidroid.xutils.cache.LruDiskCache) -> access$0
    void access$1(com.lidroid.xutils.cache.LruDiskCache) -> access$1
    boolean access$2(com.lidroid.xutils.cache.LruDiskCache) -> access$2
    void access$3(com.lidroid.xutils.cache.LruDiskCache) -> access$3
    void access$4(com.lidroid.xutils.cache.LruDiskCache,int) -> access$4
    com.lidroid.xutils.cache.LruDiskCache$Editor access$5(com.lidroid.xutils.cache.LruDiskCache,java.lang.String,long) -> access$5
    java.lang.String access$6(java.io.InputStream) -> access$6
    int access$7(com.lidroid.xutils.cache.LruDiskCache) -> access$7
    java.io.File access$8(com.lidroid.xutils.cache.LruDiskCache) -> access$8
    java.io.OutputStream access$9() -> access$9
    void access$10(com.lidroid.xutils.cache.LruDiskCache,com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$10
    boolean access$11(com.lidroid.xutils.cache.LruDiskCache,java.lang.String) -> access$11
com.lidroid.xutils.cache.LruDiskCache$1 -> com.lidroid.xutils.cache.LruDiskCache$1:
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.lidroid.xutils.cache.LruDiskCache$2 -> com.lidroid.xutils.cache.LruDiskCache$2:
    void write(int) -> write
com.lidroid.xutils.cache.LruDiskCache$Editor -> com.lidroid.xutils.cache.LruDiskCache$Editor:
    com.lidroid.xutils.cache.LruDiskCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void setEntryExpiryTimestamp(long) -> setEntryExpiryTimestamp
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    void access$0(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$0
    com.lidroid.xutils.cache.LruDiskCache$Entry access$2(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$2
    boolean[] access$3(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$3
com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream -> com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream:
    com.lidroid.xutils.cache.LruDiskCache$Editor this$1 -> this$1
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.lidroid.xutils.cache.LruDiskCache$Entry -> com.lidroid.xutils.cache.LruDiskCache$Entry:
    java.lang.String diskKey -> diskKey
    long expiryTimestamp -> expiryTimestamp
    long[] lengths -> lengths
    boolean readable -> readable
    com.lidroid.xutils.cache.LruDiskCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[],int) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$0(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$0
    void access$1(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$1
    com.lidroid.xutils.cache.LruDiskCache$Editor access$2(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$2
    java.lang.String access$3(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$3
    void access$5(com.lidroid.xutils.cache.LruDiskCache$Entry,boolean) -> access$5
    void access$6(com.lidroid.xutils.cache.LruDiskCache$Entry,com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$6
    void access$7(com.lidroid.xutils.cache.LruDiskCache$Entry,java.lang.String[],int) -> access$7
    long[] access$8(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$8
    long access$9(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$9
    long access$10(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$10
    void access$11(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$11
com.lidroid.xutils.cache.LruDiskCache$Snapshot -> com.lidroid.xutils.cache.LruDiskCache$Snapshot:
    java.lang.String diskKey -> diskKey
    long sequenceNumber -> sequenceNumber
    java.io.FileInputStream[] ins -> ins
    long[] lengths -> lengths
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    com.lidroid.xutils.cache.LruDiskCache$Editor edit() -> edit
    java.io.FileInputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void close() -> close
    java.lang.String readLine() -> readLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$0(com.lidroid.xutils.cache.LruDiskCache$StrictLineReader) -> access$0
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1 -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1:
    com.lidroid.xutils.cache.LruDiskCache$StrictLineReader this$1 -> this$1
    java.lang.String toString() -> toString
com.lidroid.xutils.cache.LruMemoryCache -> com.lidroid.xutils.cache.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    com.lidroid.xutils.cache.KeyExpiryMap keyExpiryMap -> keyExpiryMap
    void setMaxSize(int) -> setMaxSize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put(java.lang.Object,java.lang.Object,long) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    boolean containsKey(java.lang.Object) -> containsKey
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
com.lidroid.xutils.cache.MD5FileNameGenerator -> com.lidroid.xutils.cache.MD5FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.lidroid.xutils.db.annotation.Check -> com.lidroid.xutils.db.annotation.Check:
    java.lang.String value() -> value
com.lidroid.xutils.db.annotation.Column -> com.lidroid.xutils.db.annotation.Column:
    java.lang.String column() -> column
    java.lang.String defaultValue() -> defaultValue
com.lidroid.xutils.db.annotation.Finder -> com.lidroid.xutils.db.annotation.Finder:
    java.lang.String valueColumn() -> valueColumn
    java.lang.String targetColumn() -> targetColumn
com.lidroid.xutils.db.annotation.Foreign -> com.lidroid.xutils.db.annotation.Foreign:
    java.lang.String column() -> column
    java.lang.String foreign() -> foreign
com.lidroid.xutils.db.annotation.Id -> com.lidroid.xutils.db.annotation.Id:
    java.lang.String column() -> column
com.lidroid.xutils.db.annotation.NoAutoIncrement -> com.lidroid.xutils.db.annotation.NoAutoIncrement:
com.lidroid.xutils.db.annotation.NotNull -> com.lidroid.xutils.db.annotation.NotNull:
com.lidroid.xutils.db.annotation.Table -> com.lidroid.xutils.db.annotation.Table:
    java.lang.String name() -> name
    java.lang.String execAfterTableCreated() -> execAfterTableCreated
com.lidroid.xutils.db.annotation.Transient -> com.lidroid.xutils.db.annotation.Transient:
com.lidroid.xutils.db.annotation.Unique -> com.lidroid.xutils.db.annotation.Unique:
com.lidroid.xutils.db.converter.BooleanColumnConverter -> com.lidroid.xutils.db.converter.BooleanColumnConverter:
    java.lang.Boolean getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Boolean getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Boolean) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteArrayColumnConverter -> com.lidroid.xutils.db.converter.ByteArrayColumnConverter:
    byte[] getFieldValue(android.database.Cursor,int) -> getFieldValue
    byte[] getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(byte[]) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteColumnConverter -> com.lidroid.xutils.db.converter.ByteColumnConverter:
    java.lang.Byte getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Byte getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Byte) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.CharColumnConverter -> com.lidroid.xutils.db.converter.CharColumnConverter:
    java.lang.Character getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Character getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Character) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ColumnConverter -> com.lidroid.xutils.db.converter.ColumnConverter:
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.converter.ColumnConverterFactory -> com.lidroid.xutils.db.converter.ColumnConverterFactory:
    java.util.concurrent.ConcurrentHashMap columnType_columnConverter_map -> columnType_columnConverter_map
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter(java.lang.Class) -> getColumnConverter
    com.lidroid.xutils.db.sqlite.ColumnDbType getDbColumnType(java.lang.Class) -> getDbColumnType
    void registerColumnConverter(java.lang.Class,com.lidroid.xutils.db.converter.ColumnConverter) -> registerColumnConverter
    boolean isSupportColumnConverter(java.lang.Class) -> isSupportColumnConverter
com.lidroid.xutils.db.converter.DateColumnConverter -> com.lidroid.xutils.db.converter.DateColumnConverter:
    java.util.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.util.Date getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.util.Date) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.DoubleColumnConverter -> com.lidroid.xutils.db.converter.DoubleColumnConverter:
    java.lang.Double getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Double getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Double) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.FloatColumnConverter -> com.lidroid.xutils.db.converter.FloatColumnConverter:
    java.lang.Float getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Float getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Float) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.IntegerColumnConverter -> com.lidroid.xutils.db.converter.IntegerColumnConverter:
    java.lang.Integer getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Integer getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Integer) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.LongColumnConverter -> com.lidroid.xutils.db.converter.LongColumnConverter:
    java.lang.Long getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Long getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Long) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ShortColumnConverter -> com.lidroid.xutils.db.converter.ShortColumnConverter:
    java.lang.Short getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Short getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Short) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.SqlDateColumnConverter -> com.lidroid.xutils.db.converter.SqlDateColumnConverter:
    java.sql.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.sql.Date getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.sql.Date) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.StringColumnConverter -> com.lidroid.xutils.db.converter.StringColumnConverter:
    java.lang.String getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.String getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.String) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.sqlite.ColumnDbType -> com.lidroid.xutils.db.sqlite.ColumnDbType:
    com.lidroid.xutils.db.sqlite.ColumnDbType INTEGER -> INTEGER
    com.lidroid.xutils.db.sqlite.ColumnDbType REAL -> REAL
    com.lidroid.xutils.db.sqlite.ColumnDbType TEXT -> TEXT
    com.lidroid.xutils.db.sqlite.ColumnDbType BLOB -> BLOB
    java.lang.String value -> value
    com.lidroid.xutils.db.sqlite.ColumnDbType[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    com.lidroid.xutils.db.sqlite.ColumnDbType[] values() -> values
    com.lidroid.xutils.db.sqlite.ColumnDbType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.db.sqlite.CursorUtils -> com.lidroid.xutils.db.sqlite.CursorUtils:
    java.lang.Object getEntity(com.lidroid.xutils.DbUtils,android.database.Cursor,java.lang.Class,long) -> getEntity
    com.lidroid.xutils.db.table.DbModel getDbModel(android.database.Cursor) -> getDbModel
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache -> com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void setSeq(long) -> setSeq
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence -> com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence:
    long seq -> seq
    java.lang.String FOREIGN_LAZY_LOADER_CLASS_NAME -> FOREIGN_LAZY_LOADER_CLASS_NAME
    java.lang.String FINDER_LAZY_LOADER_CLASS_NAME -> FINDER_LAZY_LOADER_CLASS_NAME
    long getSeq() -> getSeq
com.lidroid.xutils.db.sqlite.DbModelSelector -> com.lidroid.xutils.db.sqlite.DbModelSelector:
    java.lang.String[] columnExpressions -> columnExpressions
    java.lang.String groupByColumnName -> groupByColumnName
    com.lidroid.xutils.db.sqlite.WhereBuilder having -> having
    com.lidroid.xutils.db.sqlite.Selector selector -> selector
    com.lidroid.xutils.db.sqlite.DbModelSelector from(java.lang.Class) -> from
    com.lidroid.xutils.db.sqlite.DbModelSelector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    com.lidroid.xutils.db.sqlite.DbModelSelector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    com.lidroid.xutils.db.sqlite.DbModelSelector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.DbModelSelector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    com.lidroid.xutils.db.sqlite.DbModelSelector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.DbModelSelector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    com.lidroid.xutils.db.sqlite.DbModelSelector having(com.lidroid.xutils.db.sqlite.WhereBuilder) -> having
    com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String) -> orderBy
    com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String,boolean) -> orderBy
    com.lidroid.xutils.db.sqlite.DbModelSelector limit(int) -> limit
    com.lidroid.xutils.db.sqlite.DbModelSelector offset(int) -> offset
    java.lang.Class getEntityType() -> getEntityType
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.FinderLazyLoader -> com.lidroid.xutils.db.sqlite.FinderLazyLoader:
    com.lidroid.xutils.db.table.Finder finderColumn -> finderColumn
    java.lang.Object finderValue -> finderValue
    java.util.List getAllFromDb() -> getAllFromDb
    java.lang.Object getFirstFromDb() -> getFirstFromDb
com.lidroid.xutils.db.sqlite.ForeignLazyLoader -> com.lidroid.xutils.db.sqlite.ForeignLazyLoader:
    com.lidroid.xutils.db.table.Foreign foreignColumn -> foreignColumn
    java.lang.Object columnValue -> columnValue
    java.util.List getAllFromDb() -> getAllFromDb
    java.lang.Object getFirstFromDb() -> getFirstFromDb
    void setColumnValue(java.lang.Object) -> setColumnValue
    java.lang.Object getColumnValue() -> getColumnValue
com.lidroid.xutils.db.sqlite.Selector -> com.lidroid.xutils.db.sqlite.Selector:
    java.lang.Class entityType -> entityType
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.sqlite.WhereBuilder whereBuilder -> whereBuilder
    java.util.List orderByList -> orderByList
    int limit -> limit
    int offset -> offset
    com.lidroid.xutils.db.sqlite.Selector from(java.lang.Class) -> from
    com.lidroid.xutils.db.sqlite.Selector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    com.lidroid.xutils.db.sqlite.Selector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    com.lidroid.xutils.db.sqlite.Selector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.Selector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    com.lidroid.xutils.db.sqlite.Selector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.Selector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String) -> orderBy
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String,boolean) -> orderBy
    com.lidroid.xutils.db.sqlite.Selector limit(int) -> limit
    com.lidroid.xutils.db.sqlite.Selector offset(int) -> offset
    java.lang.String toString() -> toString
    java.lang.Class getEntityType() -> getEntityType
com.lidroid.xutils.db.sqlite.Selector$OrderBy -> com.lidroid.xutils.db.sqlite.Selector$OrderBy:
    java.lang.String columnName -> columnName
    boolean desc -> desc
    com.lidroid.xutils.db.sqlite.Selector this$0 -> this$0
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.SqlInfo -> com.lidroid.xutils.db.sqlite.SqlInfo:
    java.lang.String sql -> sql
    java.util.LinkedList bindArgs -> bindArgs
    java.lang.String getSql() -> getSql
    void setSql(java.lang.String) -> setSql
    java.util.LinkedList getBindArgs() -> getBindArgs
    java.lang.Object[] getBindArgsAsArray() -> getBindArgsAsArray
    java.lang.String[] getBindArgsAsStrArray() -> getBindArgsAsStrArray
    void addBindArg(java.lang.Object) -> addBindArg
    void addBindArgWithoutConverter(java.lang.Object) -> addBindArgWithoutConverter
    void addBindArgs(java.lang.Object[]) -> addBindArgs
com.lidroid.xutils.db.sqlite.SqlInfoBuilder -> com.lidroid.xutils.db.sqlite.SqlInfoBuilder:
    com.lidroid.xutils.db.sqlite.SqlInfo buildInsertSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildInsertSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildReplaceSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildReplaceSqlInfo
    java.lang.String buildDeleteSqlByTableName(java.lang.String) -> buildDeleteSqlByTableName
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,java.lang.Object) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,java.lang.String[]) -> buildUpdateSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> buildUpdateSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildCreateTableSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class) -> buildCreateTableSqlInfo
    com.lidroid.xutils.db.table.KeyValue column2KeyValue(java.lang.Object,com.lidroid.xutils.db.table.Column) -> column2KeyValue
    java.util.List entity2KeyValueList(com.lidroid.xutils.DbUtils,java.lang.Object) -> entity2KeyValueList
com.lidroid.xutils.db.sqlite.WhereBuilder -> com.lidroid.xutils.db.sqlite.WhereBuilder:
    java.util.List whereItems -> whereItems
    com.lidroid.xutils.db.sqlite.WhereBuilder b() -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder b(java.lang.String,java.lang.String,java.lang.Object) -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.WhereBuilder or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    int getWhereItemSize() -> getWhereItemSize
    java.lang.String toString() -> toString
    void appendCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> appendCondition
com.lidroid.xutils.db.table.Column -> com.lidroid.xutils.db.table.Column:
    com.lidroid.xutils.db.table.Table table -> table
    int index -> index
    java.lang.String columnName -> columnName
    java.lang.Object defaultValue -> defaultValue
    java.lang.reflect.Method getMethod -> getMethod
    java.lang.reflect.Method setMethod -> setMethod
    java.lang.reflect.Field columnField -> columnField
    com.lidroid.xutils.db.converter.ColumnConverter columnConverter -> columnConverter
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    java.lang.Object getFieldValue(java.lang.Object) -> getFieldValue
    com.lidroid.xutils.db.table.Table getTable() -> getTable
    void setTable(com.lidroid.xutils.db.table.Table) -> setTable
    int getIndex() -> getIndex
    java.lang.String getColumnName() -> getColumnName
    java.lang.Object getDefaultValue() -> getDefaultValue
    java.lang.reflect.Field getColumnField() -> getColumnField
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter() -> getColumnConverter
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.ColumnUtils -> com.lidroid.xutils.db.table.ColumnUtils:
    java.util.HashSet DB_PRIMITIVE_TYPES -> DB_PRIMITIVE_TYPES
    boolean isDbPrimitiveType(java.lang.Class) -> isDbPrimitiveType
    java.lang.reflect.Method getColumnGetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnGetMethod
    java.lang.reflect.Method getColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnSetMethod
    java.lang.String getColumnNameByField(java.lang.reflect.Field) -> getColumnNameByField
    java.lang.String getForeignColumnNameByField(java.lang.reflect.Field) -> getForeignColumnNameByField
    java.lang.String getColumnDefaultValue(java.lang.reflect.Field) -> getColumnDefaultValue
    boolean isTransient(java.lang.reflect.Field) -> isTransient
    boolean isForeign(java.lang.reflect.Field) -> isForeign
    boolean isFinder(java.lang.reflect.Field) -> isFinder
    boolean isUnique(java.lang.reflect.Field) -> isUnique
    boolean isNotNull(java.lang.reflect.Field) -> isNotNull
    java.lang.String getCheck(java.lang.reflect.Field) -> getCheck
    java.lang.Class getForeignEntityType(com.lidroid.xutils.db.table.Foreign) -> getForeignEntityType
    java.lang.Class getFinderTargetEntityType(com.lidroid.xutils.db.table.Finder) -> getFinderTargetEntityType
    java.lang.Object convert2DbColumnValueIfNeeded(java.lang.Object) -> convert2DbColumnValueIfNeeded
    boolean isStartWithIs(java.lang.String) -> isStartWithIs
    java.lang.reflect.Method getBooleanColumnGetMethod(java.lang.Class,java.lang.String) -> getBooleanColumnGetMethod
    java.lang.reflect.Method getBooleanColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getBooleanColumnSetMethod
com.lidroid.xutils.db.table.DbModel -> com.lidroid.xutils.db.table.DbModel:
    java.util.HashMap dataMap -> dataMap
    java.lang.String getString(java.lang.String) -> getString
    int getInt(java.lang.String) -> getInt
    boolean getBoolean(java.lang.String) -> getBoolean
    double getDouble(java.lang.String) -> getDouble
    float getFloat(java.lang.String) -> getFloat
    long getLong(java.lang.String) -> getLong
    java.util.Date getDate(java.lang.String) -> getDate
    java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    void add(java.lang.String,java.lang.String) -> add
    java.util.HashMap getDataMap() -> getDataMap
    boolean isEmpty(java.lang.String) -> isEmpty
com.lidroid.xutils.db.table.Finder -> com.lidroid.xutils.db.table.Finder:
    java.lang.String valueColumnName -> valueColumnName
    java.lang.String targetColumnName -> targetColumnName
    java.lang.Class getTargetEntityType() -> getTargetEntityType
    java.lang.String getTargetColumnName() -> getTargetColumnName
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    java.lang.Object getDefaultValue() -> getDefaultValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.Foreign -> com.lidroid.xutils.db.table.Foreign:
    java.lang.String foreignColumnName -> foreignColumnName
    com.lidroid.xutils.db.converter.ColumnConverter foreignColumnConverter -> foreignColumnConverter
    java.lang.String getForeignColumnName() -> getForeignColumnName
    java.lang.Class getForeignEntityType() -> getForeignEntityType
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object getDefaultValue() -> getDefaultValue
com.lidroid.xutils.db.table.Id -> com.lidroid.xutils.db.table.Id:
    java.lang.String columnFieldClassName -> columnFieldClassName
    boolean isAutoIncrementChecked -> isAutoIncrementChecked
    boolean isAutoIncrement -> isAutoIncrement
    java.util.HashSet INTEGER_TYPES -> INTEGER_TYPES
    java.util.HashSet AUTO_INCREMENT_TYPES -> AUTO_INCREMENT_TYPES
    boolean isAutoIncrement() -> isAutoIncrement
    void setAutoIncrementId(java.lang.Object,long) -> setAutoIncrementId
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
com.lidroid.xutils.db.table.KeyValue -> com.lidroid.xutils.db.table.KeyValue:
    java.lang.String key -> key
    java.lang.Object value -> value
com.lidroid.xutils.db.table.Table -> com.lidroid.xutils.db.table.Table:
    com.lidroid.xutils.DbUtils db -> db
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.table.Id id -> id
    java.util.HashMap columnMap -> columnMap
    java.util.HashMap finderMap -> finderMap
    java.util.HashMap tableMap -> tableMap
    boolean checkedDatabase -> checkedDatabase
    com.lidroid.xutils.db.table.Table get(com.lidroid.xutils.DbUtils,java.lang.Class) -> get
    void remove(com.lidroid.xutils.DbUtils,java.lang.Class) -> remove
    void remove(com.lidroid.xutils.DbUtils,java.lang.String) -> remove
    boolean isCheckedDatabase() -> isCheckedDatabase
    void setCheckedDatabase(boolean) -> setCheckedDatabase
com.lidroid.xutils.db.table.TableUtils -> com.lidroid.xutils.db.table.TableUtils:
    java.util.concurrent.ConcurrentHashMap entityColumnsMap -> entityColumnsMap
    java.util.concurrent.ConcurrentHashMap entityIdMap -> entityIdMap
    java.lang.String getTableName(java.lang.Class) -> getTableName
    java.lang.String getExecAfterTableCreated(java.lang.Class) -> getExecAfterTableCreated
    java.util.HashMap getColumnMap(java.lang.Class) -> getColumnMap
    void addColumns2Map(java.lang.Class,java.lang.String,java.util.HashMap) -> addColumns2Map
    com.lidroid.xutils.db.table.Column getColumnOrId(java.lang.Class,java.lang.String) -> getColumnOrId
    com.lidroid.xutils.db.table.Id getId(java.lang.Class) -> getId
    java.lang.String getPrimaryKeyFieldName(java.lang.Class) -> getPrimaryKeyFieldName
    java.lang.String getPrimaryKeyColumnName(java.lang.Class) -> getPrimaryKeyColumnName
com.lidroid.xutils.exception.BaseException -> com.lidroid.xutils.exception.BaseException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.exception.DbException -> com.lidroid.xutils.exception.DbException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.exception.HttpException -> com.lidroid.xutils.exception.HttpException:
    long serialVersionUID -> serialVersionUID
    int exceptionCode -> exceptionCode
    int getExceptionCode() -> getExceptionCode
com.lidroid.xutils.http.HttpCache -> com.lidroid.xutils.http.HttpCache:
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    long DEFAULT_EXPIRY_TIME -> DEFAULT_EXPIRY_TIME
    int cacheSize -> cacheSize
    long defaultExpiryTime -> defaultExpiryTime
    java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map -> httpMethod_enabled_map
    void setCacheSize(int) -> setCacheSize
    void setDefaultExpiryTime(long) -> setDefaultExpiryTime
    long getDefaultExpiryTime() -> getDefaultExpiryTime
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.lang.String,long) -> put
    java.lang.String get(java.lang.String) -> get
    void clear() -> clear
    boolean isEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod) -> isEnabled
    boolean isEnabled(java.lang.String) -> isEnabled
    void setEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,boolean) -> setEnabled
com.lidroid.xutils.http.HttpCache$1 -> com.lidroid.xutils.http.HttpCache$1:
    com.lidroid.xutils.http.HttpCache this$0 -> this$0
    int sizeOf(java.lang.String,java.lang.String) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.http.HttpHandler -> com.lidroid.xutils.http.HttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    org.apache.http.client.methods.HttpRequestBase request -> request
    boolean isUploading -> isUploading
    com.lidroid.xutils.http.callback.RequestCallBack callback -> callback
    int retriedCount -> retriedCount
    java.lang.String fileSavePath -> fileSavePath
    boolean isDownloadingFile -> isDownloadingFile
    boolean autoResume -> autoResume
    boolean autoRename -> autoRename
    java.lang.String charset -> charset
    com.lidroid.xutils.http.HttpHandler$State state -> state
    long expiry -> expiry
    int UPDATE_START -> UPDATE_START
    int UPDATE_LOADING -> UPDATE_LOADING
    int UPDATE_FAILURE -> UPDATE_FAILURE
    int UPDATE_SUCCESS -> UPDATE_SUCCESS
    long lastUpdateTime -> lastUpdateTime
    com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler -> notUseApacheRedirectHandler
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    com.lidroid.xutils.http.HttpHandler$State getState() -> getState
    void setExpiry(long) -> setExpiry
    void setRequestCallBack(com.lidroid.xutils.http.callback.RequestCallBack) -> setRequestCallBack
    com.lidroid.xutils.http.callback.RequestCallBack getRequestCallBack() -> getRequestCallBack
    com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse) -> handleResponse
    void cancel() -> cancel
    boolean updateProgress(long,long,boolean) -> updateProgress
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler -> com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.lidroid.xutils.http.HttpHandler$State -> com.lidroid.xutils.http.HttpHandler$State:
    com.lidroid.xutils.http.HttpHandler$State WAITING -> WAITING
    com.lidroid.xutils.http.HttpHandler$State STARTED -> STARTED
    com.lidroid.xutils.http.HttpHandler$State LOADING -> LOADING
    com.lidroid.xutils.http.HttpHandler$State FAILURE -> FAILURE
    com.lidroid.xutils.http.HttpHandler$State CANCELLED -> CANCELLED
    com.lidroid.xutils.http.HttpHandler$State SUCCESS -> SUCCESS
    int value -> value
    com.lidroid.xutils.http.HttpHandler$State[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.http.HttpHandler$State valueOf(int) -> valueOf
    int value() -> value
    com.lidroid.xutils.http.HttpHandler$State[] values() -> values
    com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.RequestParams -> com.lidroid.xutils.http.RequestParams:
    java.lang.String charset -> charset
    java.util.List headers -> headers
    java.util.List queryStringParams -> queryStringParams
    org.apache.http.HttpEntity bodyEntity -> bodyEntity
    java.util.List bodyParams -> bodyParams
    java.util.HashMap fileParams -> fileParams
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    java.lang.String getCharset() -> getCharset
    void setContentType(java.lang.String) -> setContentType
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void addHeaders(java.util.List) -> addHeaders
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(java.util.List) -> setHeaders
    void addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    void addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    void addQueryStringParameter(java.util.List) -> addQueryStringParameter
    void addBodyParameter(java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(org.apache.http.NameValuePair) -> addBodyParameter
    void addBodyParameter(java.util.List) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String,java.lang.String) -> addBodyParameter
    void setBodyEntity(org.apache.http.HttpEntity) -> setBodyEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
    java.util.List getQueryStringParams() -> getQueryStringParams
    java.util.List getHeaders() -> getHeaders
com.lidroid.xutils.http.RequestParams$HeaderItem -> com.lidroid.xutils.http.RequestParams$HeaderItem:
    boolean overwrite -> overwrite
    org.apache.http.Header header -> header
    com.lidroid.xutils.http.RequestParams this$0 -> this$0
com.lidroid.xutils.http.ResponseInfo -> com.lidroid.xutils.http.ResponseInfo:
    org.apache.http.HttpResponse response -> response
    java.lang.Object result -> result
    boolean resultFormCache -> resultFormCache
    java.util.Locale locale -> locale
    int statusCode -> statusCode
    org.apache.http.ProtocolVersion protocolVersion -> protocolVersion
    java.lang.String reasonPhrase -> reasonPhrase
    long contentLength -> contentLength
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
com.lidroid.xutils.http.ResponseStream -> com.lidroid.xutils.http.ResponseStream:
    org.apache.http.HttpResponse baseResponse -> baseResponse
    java.io.InputStream baseStream -> baseStream
    java.lang.String charset -> charset
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    long expiry -> expiry
    java.lang.String _directResult -> _directResult
    java.lang.String getRequestUrl() -> getRequestUrl
    java.lang.String getRequestMethod() -> getRequestMethod
    void setRequestMethod(java.lang.String) -> setRequestMethod
    java.io.InputStream getBaseStream() -> getBaseStream
    org.apache.http.HttpResponse getBaseResponse() -> getBaseResponse
    int getStatusCode() -> getStatusCode
    java.util.Locale getLocale() -> getLocale
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String readString() -> readString
    void readFile(java.lang.String) -> readFile
    int read() -> read
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.SyncHttpHandler -> com.lidroid.xutils.http.SyncHttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    java.lang.String charset -> charset
    int retriedTimes -> retriedTimes
    long expiry -> expiry
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    void setExpiry(long) -> setExpiry
    com.lidroid.xutils.http.ResponseStream sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    com.lidroid.xutils.http.ResponseStream handleResponse(org.apache.http.HttpResponse) -> handleResponse
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler -> com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.FileDownloadHandler -> com.lidroid.xutils.http.callback.FileDownloadHandler:
    java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String) -> handleEntity
com.lidroid.xutils.http.callback.HttpRedirectHandler -> com.lidroid.xutils.http.callback.HttpRedirectHandler:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.RequestCallBack -> com.lidroid.xutils.http.callback.RequestCallBack:
    int DEFAULT_RATE -> DEFAULT_RATE
    int MIN_RATE -> MIN_RATE
    java.lang.String requestUrl -> requestUrl
    java.lang.Object userTag -> userTag
    int rate -> rate
    int getRate() -> getRate
    void setRate(int) -> setRate
    java.lang.Object getUserTag() -> getUserTag
    void setUserTag(java.lang.Object) -> setUserTag
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void onStart() -> onStart
    void onCancelled() -> onCancelled
    void onLoading(long,long,boolean) -> onLoading
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
com.lidroid.xutils.http.callback.RequestCallBackHandler -> com.lidroid.xutils.http.callback.RequestCallBackHandler:
    boolean updateProgress(long,long,boolean) -> updateProgress
com.lidroid.xutils.http.callback.StringDownloadHandler -> com.lidroid.xutils.http.callback.StringDownloadHandler:
    java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String) -> handleEntity
com.lidroid.xutils.http.client.DefaultSSLSocketFactory -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.security.KeyStore trustStore -> trustStore
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance -> instance
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1 -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1:
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.http.client.HttpRequest -> com.lidroid.xutils.http.client.HttpRequest:
    org.apache.http.HttpEntity entity -> entity
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod method -> method
    com.lidroid.xutils.http.client.util.URIBuilder uriBuilder -> uriBuilder
    java.nio.charset.Charset uriCharset -> uriCharset
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List) -> addQueryStringParams
    void setRequestParams(com.lidroid.xutils.http.RequestParams) -> setRequestParams
    void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setRequestParams
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    void setURI(java.lang.String) -> setURI
    java.lang.String getMethod() -> getMethod
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.HttpRequest$HttpMethod -> com.lidroid.xutils.http.client.HttpRequest$HttpMethod:
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET -> GET
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST -> POST
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT -> PUT
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD -> HEAD
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE -> MOVE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY -> COPY
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE -> DELETE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS -> OPTIONS
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE -> TRACE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT -> CONNECT
    java.lang.String value -> value
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values() -> values
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.RetryHandler -> com.lidroid.xutils.http.client.RetryHandler:
    int RETRY_SLEEP_INTERVAL -> RETRY_SLEEP_INTERVAL
    java.util.HashSet exceptionWhiteList -> exceptionWhiteList
    java.util.HashSet exceptionBlackList -> exceptionBlackList
    int maxRetries -> maxRetries
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.lidroid.xutils.http.client.entity.BodyParamsEntity -> com.lidroid.xutils.http.client.entity.BodyParamsEntity:
    byte[] content -> content
    boolean dirty -> dirty
    java.lang.String charset -> charset
    java.util.List params -> params
    com.lidroid.xutils.http.client.entity.BodyParamsEntity addParameter(java.lang.String,java.lang.String) -> addParameter
    com.lidroid.xutils.http.client.entity.BodyParamsEntity addParams(java.util.List) -> addParams
    void refreshContent() -> refreshContent
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.entity.DecompressingEntity -> com.lidroid.xutils.http.client.entity.DecompressingEntity:
    java.io.InputStream content -> content
    long uncompressedLength -> uncompressedLength
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    java.io.InputStream getDecompressingStream() -> getDecompressingStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.FileUploadEntity -> com.lidroid.xutils.http.client.entity.FileUploadEntity:
    long fileSize -> fileSize
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity -> com.lidroid.xutils.http.client.entity.GZipDecompressingEntity:
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity -> com.lidroid.xutils.http.client.entity.InputStreamUploadEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    long length -> length
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.UploadEntity -> com.lidroid.xutils.http.client.entity.UploadEntity:
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.multipart.FormBodyPart -> com.lidroid.xutils.http.client.multipart.FormBodyPart:
    java.lang.String name -> name
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header -> header
    com.lidroid.xutils.http.client.multipart.content.ContentBody body -> body
    java.lang.String getName() -> getName
    com.lidroid.xutils.http.client.multipart.content.ContentBody getBody() -> getBody
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentDisposition
    void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentType
    void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateTransferEncoding
com.lidroid.xutils.http.client.multipart.HttpMultipart -> com.lidroid.xutils.http.client.multipart.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode -> mode
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode -> $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream) -> writeField
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    void setSubType(java.lang.String) -> setSubType
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> writeTo
    long getTotalLength() -> getTotalLength
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode() -> $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
com.lidroid.xutils.http.client.multipart.HttpMultipartMode -> com.lidroid.xutils.http.client.multipart.HttpMultipartMode:
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT -> STRICT
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values() -> values
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.multipart.MIME -> com.lidroid.xutils.http.client.multipart.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
com.lidroid.xutils.http.client.multipart.MinimalField -> com.lidroid.xutils.http.client.multipart.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader -> com.lidroid.xutils.http.client.multipart.MinimalFieldHeader:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(com.lidroid.xutils.http.client.multipart.MinimalField) -> addField
    java.util.List getFields() -> getFields
    com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(com.lidroid.xutils.http.client.multipart.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MultipartEntity -> com.lidroid.xutils.http.client.multipart.MultipartEntity:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    com.lidroid.xutils.http.client.multipart.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String boundary -> boundary
    java.nio.charset.Charset charset -> charset
    java.lang.String multipartSubtype -> multipartSubtype
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    void setMultipartSubtype(java.lang.String) -> setMultipartSubtype
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addPart
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> addPart
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody,java.lang.String) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo -> com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT -> DEFAULT
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    long totalLength -> totalLength
    long pos -> pos
    boolean doCallBack(boolean) -> doCallBack
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody -> com.lidroid.xutils.http.client.multipart.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody -> com.lidroid.xutils.http.client.multipart.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.ContentBody -> com.lidroid.xutils.http.client.multipart.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor -> com.lidroid.xutils.http.client.multipart.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.FileBody -> com.lidroid.xutils.http.client.multipart.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
com.lidroid.xutils.http.client.multipart.content.InputStreamBody -> com.lidroid.xutils.http.client.multipart.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    long length -> length
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.multipart.content.StringBody -> com.lidroid.xutils.http.client.multipart.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.util.URIBuilder -> com.lidroid.xutils.http.client.util.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String encodedSchemeSpecificPart -> encodedSchemeSpecificPart
    java.lang.String encodedAuthority -> encodedAuthority
    java.lang.String userInfo -> userInfo
    java.lang.String encodedUserInfo -> encodedUserInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.lang.String encodedPath -> encodedPath
    java.lang.String encodedQuery -> encodedQuery
    java.util.List queryParams -> queryParams
    java.lang.String fragment -> fragment
    java.lang.String encodedFragment -> encodedFragment
    void digestURI(java.net.URI) -> digestURI
    java.util.List parseQuery(java.lang.String) -> parseQuery
    java.net.URI build(java.nio.charset.Charset) -> build
    java.lang.String buildString(java.nio.charset.Charset) -> buildString
    java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset) -> encodeUserInfo
    java.lang.String encodePath(java.lang.String,java.nio.charset.Charset) -> encodePath
    java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset) -> encodeQuery
    java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset) -> encodeFragment
    com.lidroid.xutils.http.client.util.URIBuilder setScheme(java.lang.String) -> setScheme
    com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    com.lidroid.xutils.http.client.util.URIBuilder setHost(java.lang.String) -> setHost
    com.lidroid.xutils.http.client.util.URIBuilder setPort(int) -> setPort
    com.lidroid.xutils.http.client.util.URIBuilder setPath(java.lang.String) -> setPath
    com.lidroid.xutils.http.client.util.URIBuilder setQuery(java.lang.String) -> setQuery
    com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    com.lidroid.xutils.http.client.util.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    com.lidroid.xutils.http.client.util.URIBuilder setFragment(java.lang.String) -> setFragment
    java.lang.String getScheme() -> getScheme
    java.lang.String getUserInfo() -> getUserInfo
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    java.util.List getQueryParams() -> getQueryParams
    java.lang.String getFragment() -> getFragment
    java.lang.String normalizePath(java.lang.String) -> normalizePath
com.lidroid.xutils.http.client.util.URLEncodedUtils -> com.lidroid.xutils.http.client.util.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] DELIM -> DELIM
    java.util.BitSet UNRESERVED -> UNRESERVED
    java.util.BitSet PUNCT -> PUNCT
    java.util.BitSet USERINFO -> USERINFO
    java.util.BitSet PATHSAFE -> PATHSAFE
    java.util.BitSet FRAGMENT -> FRAGMENT
    java.util.BitSet RESERVED -> RESERVED
    java.util.BitSet URLENCODER -> URLENCODER
    int RADIX -> RADIX
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    java.util.List parse(java.net.URI) -> parse
    void parse(java.util.List,java.util.Scanner) -> parse
    java.util.List parse(java.lang.String) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlencode
    java.lang.String urldecode(java.lang.String,java.nio.charset.Charset,boolean) -> urldecode
    java.lang.String decodeFormFields(java.lang.String,java.lang.String) -> decodeFormFields
    java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> encodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> encFragment
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
com.lidroid.xutils.task.Node -> com.lidroid.xutils.task.Node:
    boolean valueAsT -> valueAsT
    com.lidroid.xutils.task.PriorityObject value -> value
    com.lidroid.xutils.task.Node next -> next
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
com.lidroid.xutils.task.Priority -> com.lidroid.xutils.task.Priority:
    com.lidroid.xutils.task.Priority UI_TOP -> UI_TOP
    com.lidroid.xutils.task.Priority UI_NORMAL -> UI_NORMAL
    com.lidroid.xutils.task.Priority UI_LOW -> UI_LOW
    com.lidroid.xutils.task.Priority DEFAULT -> DEFAULT
    com.lidroid.xutils.task.Priority BG_TOP -> BG_TOP
    com.lidroid.xutils.task.Priority BG_NORMAL -> BG_NORMAL
    com.lidroid.xutils.task.Priority BG_LOW -> BG_LOW
    com.lidroid.xutils.task.Priority[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.task.Priority[] values() -> values
    com.lidroid.xutils.task.Priority valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.task.PriorityAsyncTask -> com.lidroid.xutils.task.PriorityAsyncTask:
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    boolean mExecuteInvoked -> mExecuteInvoked
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> mCancelled
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    com.lidroid.xutils.task.PriorityAsyncTask execute(java.lang.Object[]) -> execute
    com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void execute(java.lang.Runnable,com.lidroid.xutils.task.Priority) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    void access$0(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$0
    java.util.concurrent.atomic.AtomicBoolean access$1(com.lidroid.xutils.task.PriorityAsyncTask) -> access$1
    java.lang.Object access$2(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$2
    void access$3(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$3
com.lidroid.xutils.task.PriorityAsyncTask$1 -> com.lidroid.xutils.task.PriorityAsyncTask$1:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
com.lidroid.xutils.task.PriorityAsyncTask$2 -> com.lidroid.xutils.task.PriorityAsyncTask$2:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    void done() -> done
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult -> com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult:
    com.lidroid.xutils.task.PriorityAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler -> com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable -> com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
com.lidroid.xutils.task.PriorityExecutor -> com.lidroid.xutils.task.PriorityExecutor:
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> mPoolWorkQueue
    java.util.concurrent.ThreadPoolExecutor mThreadPoolExecutor -> mThreadPoolExecutor
    int getPoolSize() -> getPoolSize
    void setPoolSize(int) -> setPoolSize
    boolean isBusy() -> isBusy
    void execute(java.lang.Runnable) -> execute
com.lidroid.xutils.task.PriorityExecutor$1 -> com.lidroid.xutils.task.PriorityExecutor$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.lidroid.xutils.task.PriorityObject -> com.lidroid.xutils.task.PriorityObject:
    com.lidroid.xutils.task.Priority priority -> priority
    java.lang.Object obj -> obj
com.lidroid.xutils.task.PriorityObjectBlockingQueue -> com.lidroid.xutils.task.PriorityObjectBlockingQueue:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    java.util.concurrent.atomic.AtomicInteger count -> count
    com.lidroid.xutils.task.Node head -> head
    com.lidroid.xutils.task.Node last -> last
    java.util.concurrent.locks.ReentrantLock takeLock -> takeLock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.ReentrantLock putLock -> putLock
    java.util.concurrent.locks.Condition notFull -> notFull
    void signalNotEmpty() -> signalNotEmpty
    void signalNotFull() -> signalNotFull
    java.lang.Object opQueue(com.lidroid.xutils.task.Node) -> opQueue
    void _enqueue(com.lidroid.xutils.task.Node) -> _enqueue
    java.lang.Object _dequeue() -> _dequeue
    void fullyLock() -> fullyLock
    void fullyUnlock() -> fullyUnlock
    int size() -> size
    int remainingCapacity() -> remainingCapacity
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    boolean offer(java.lang.Object) -> offer
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    void unlink(com.lidroid.xutils.task.Node,com.lidroid.xutils.task.Node) -> unlink
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void clear() -> clear
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    java.util.Iterator iterator() -> iterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr -> com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr:
    com.lidroid.xutils.task.Node current -> current
    com.lidroid.xutils.task.Node lastRet -> lastRet
    java.lang.Object currentElement -> currentElement
    com.lidroid.xutils.task.PriorityObjectBlockingQueue this$0 -> this$0
    boolean hasNext() -> hasNext
    com.lidroid.xutils.task.Node nextNode(com.lidroid.xutils.task.Node) -> nextNode
    java.lang.Object next() -> next
    void remove() -> remove
com.lidroid.xutils.task.PriorityRunnable -> com.lidroid.xutils.task.PriorityRunnable:
    void run() -> run
com.lidroid.xutils.task.TaskHandler -> com.lidroid.xutils.task.TaskHandler:
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
com.lidroid.xutils.util.CharsetUtils -> com.lidroid.xutils.util.CharsetUtils:
    java.lang.String DEFAULT_ENCODING_CHARSET -> DEFAULT_ENCODING_CHARSET
    java.util.List SUPPORT_CHARSET -> SUPPORT_CHARSET
    java.lang.String toCharset(java.lang.String,java.lang.String,int) -> toCharset
    java.lang.String getEncoding(java.lang.String,int) -> getEncoding
    boolean isCharset(java.lang.String,java.lang.String,int) -> isCharset
com.lidroid.xutils.util.DoubleKeyValueMap -> com.lidroid.xutils.util.DoubleKeyValueMap:
    java.util.concurrent.ConcurrentHashMap k1_k2V_map -> k1_k2V_map
    void put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    java.util.Set getFirstKeys() -> getFirstKeys
    java.util.concurrent.ConcurrentHashMap get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.util.Collection getAllValues(java.lang.Object) -> getAllValues
    java.util.Collection getAllValues() -> getAllValues
    boolean containsKey(java.lang.Object,java.lang.Object) -> containsKey
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    void remove(java.lang.Object) -> remove
    void remove(java.lang.Object,java.lang.Object) -> remove
    void clear() -> clear
com.lidroid.xutils.util.IOUtils -> com.lidroid.xutils.util.IOUtils:
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeQuietly(android.database.Cursor) -> closeQuietly
com.lidroid.xutils.util.LogUtils -> com.lidroid.xutils.util.LogUtils:
    java.lang.String customTagPrefix -> customTagPrefix
    boolean allowD -> allowD
    boolean allowE -> allowE
    boolean allowI -> allowI
    boolean allowV -> allowV
    boolean allowW -> allowW
    boolean allowWtf -> allowWtf
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> customLogger
    java.lang.String generateTag(java.lang.StackTraceElement) -> generateTag
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.Throwable) -> w
    void wtf(java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.Throwable) -> wtf
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.lidroid.xutils.util.LogUtils$CustomLogger:
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void wtf(java.lang.String,java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
com.lidroid.xutils.util.MimeTypeUtils -> com.lidroid.xutils.util.MimeTypeUtils:
    java.lang.String getMimeType(java.lang.String) -> getMimeType
com.lidroid.xutils.util.OtherUtils -> com.lidroid.xutils.util.OtherUtils:
    int STRING_BUFFER_LENGTH -> STRING_BUFFER_LENGTH
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> sslSocketFactory
    java.lang.String getUserAgent(android.content.Context) -> getUserAgent
    java.lang.String getDiskCacheDir(android.content.Context,java.lang.String) -> getDiskCacheDir
    long getAvailableSpace(java.io.File) -> getAvailableSpace
    boolean isSupportRange(org.apache.http.HttpResponse) -> isSupportRange
    java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse) -> getFileNameFromHttpResponse
    java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase) -> getCharsetFromHttpRequest
    long sizeOfString(java.lang.String,java.lang.String) -> sizeOfString
    java.lang.String getSubString(java.lang.String,int,int) -> getSubString
    java.lang.StackTraceElement getCurrentStackTraceElement() -> getCurrentStackTraceElement
    java.lang.StackTraceElement getCallerStackTraceElement() -> getCallerStackTraceElement
    void trustAllHttpsURLConnection() -> trustAllHttpsURLConnection
com.lidroid.xutils.util.OtherUtils$1 -> com.lidroid.xutils.util.OtherUtils$1:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.util.PreferencesCookieStore -> com.lidroid.xutils.util.PreferencesCookieStore:
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    org.apache.http.cookie.Cookie getCookie(java.lang.String) -> getCookie
    java.lang.String encodeCookie(com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie -> com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    com.lidroid.xutils.util.PreferencesCookieStore this$0 -> this$0
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.view.EventListenerManager -> com.lidroid.xutils.view.EventListenerManager:
    com.lidroid.xutils.util.DoubleKeyValueMap listenerCache -> listenerCache
    void addEventMethod(com.lidroid.xutils.view.ViewFinder,com.lidroid.xutils.view.ViewInjectInfo,java.lang.annotation.Annotation,java.lang.Object,java.lang.reflect.Method) -> addEventMethod
com.lidroid.xutils.view.EventListenerManager$DynamicHandler -> com.lidroid.xutils.view.EventListenerManager$DynamicHandler:
    java.lang.ref.WeakReference handlerRef -> handlerRef
    java.util.HashMap methodMap -> methodMap
    void addMethod(java.lang.String,java.lang.reflect.Method) -> addMethod
    java.lang.Object getHandler() -> getHandler
    void setHandler(java.lang.Object) -> setHandler
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.lidroid.xutils.view.ResLoader -> com.lidroid.xutils.view.ResLoader:
    int[] $SWITCH_TABLE$com$lidroid$xutils$view$ResType -> $SWITCH_TABLE$com$lidroid$xutils$view$ResType
    java.lang.Object loadRes(com.lidroid.xutils.view.ResType,android.content.Context,int) -> loadRes
    int[] $SWITCH_TABLE$com$lidroid$xutils$view$ResType() -> $SWITCH_TABLE$com$lidroid$xutils$view$ResType
com.lidroid.xutils.view.ResType -> com.lidroid.xutils.view.ResType:
    com.lidroid.xutils.view.ResType Animation -> Animation
    com.lidroid.xutils.view.ResType Boolean -> Boolean
    com.lidroid.xutils.view.ResType Color -> Color
    com.lidroid.xutils.view.ResType ColorStateList -> ColorStateList
    com.lidroid.xutils.view.ResType Dimension -> Dimension
    com.lidroid.xutils.view.ResType DimensionPixelOffset -> DimensionPixelOffset
    com.lidroid.xutils.view.ResType DimensionPixelSize -> DimensionPixelSize
    com.lidroid.xutils.view.ResType Drawable -> Drawable
    com.lidroid.xutils.view.ResType Integer -> Integer
    com.lidroid.xutils.view.ResType IntArray -> IntArray
    com.lidroid.xutils.view.ResType Movie -> Movie
    com.lidroid.xutils.view.ResType String -> String
    com.lidroid.xutils.view.ResType StringArray -> StringArray
    com.lidroid.xutils.view.ResType Text -> Text
    com.lidroid.xutils.view.ResType TextArray -> TextArray
    com.lidroid.xutils.view.ResType Xml -> Xml
    com.lidroid.xutils.view.ResType[] ENUM$VALUES -> ENUM$VALUES
    com.lidroid.xutils.view.ResType[] values() -> values
    com.lidroid.xutils.view.ResType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.view.ViewFinder -> com.lidroid.xutils.view.ViewFinder:
    android.view.View view -> view
    android.app.Activity activity -> activity
    android.preference.PreferenceGroup preferenceGroup -> preferenceGroup
    android.preference.PreferenceActivity preferenceActivity -> preferenceActivity
    android.view.View findViewById(int) -> findViewById
    android.view.View findViewByInfo(com.lidroid.xutils.view.ViewInjectInfo) -> findViewByInfo
    android.view.View findViewById(int,int) -> findViewById
    android.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    android.content.Context getContext() -> getContext
com.lidroid.xutils.view.ViewInjectInfo -> com.lidroid.xutils.view.ViewInjectInfo:
    java.lang.Object value -> value
    int parentId -> parentId
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lidroid.xutils.view.annotation.ContentView -> com.lidroid.xutils.view.annotation.ContentView:
    int value() -> value
com.lidroid.xutils.view.annotation.PreferenceInject -> com.lidroid.xutils.view.annotation.PreferenceInject:
    java.lang.String value() -> value
com.lidroid.xutils.view.annotation.ResInject -> com.lidroid.xutils.view.annotation.ResInject:
    int id() -> id
    com.lidroid.xutils.view.ResType type() -> type
com.lidroid.xutils.view.annotation.ViewInject -> com.lidroid.xutils.view.annotation.ViewInject:
    int value() -> value
    int parentId() -> parentId
com.lidroid.xutils.view.annotation.event.EventBase -> com.lidroid.xutils.view.annotation.event.EventBase:
    java.lang.Class listenerType() -> listenerType
    java.lang.String listenerSetter() -> listenerSetter
    java.lang.String methodName() -> methodName
com.lidroid.xutils.view.annotation.event.OnChildClick -> com.lidroid.xutils.view.annotation.event.OnChildClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnClick -> com.lidroid.xutils.view.annotation.event.OnClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange -> com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnFocusChange -> com.lidroid.xutils.view.annotation.event.OnFocusChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupClick -> com.lidroid.xutils.view.annotation.event.OnGroupClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupCollapse -> com.lidroid.xutils.view.annotation.event.OnGroupCollapse:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupExpand -> com.lidroid.xutils.view.annotation.event.OnGroupExpand:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemClick -> com.lidroid.xutils.view.annotation.event.OnItemClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemLongClick -> com.lidroid.xutils.view.annotation.event.OnItemLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemSelected -> com.lidroid.xutils.view.annotation.event.OnItemSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnKey -> com.lidroid.xutils.view.annotation.event.OnKey:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnLongClick -> com.lidroid.xutils.view.annotation.event.OnLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnNothingSelected -> com.lidroid.xutils.view.annotation.event.OnNothingSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnPreferenceChange -> com.lidroid.xutils.view.annotation.event.OnPreferenceChange:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnPreferenceClick -> com.lidroid.xutils.view.annotation.event.OnPreferenceClick:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnProgressChanged -> com.lidroid.xutils.view.annotation.event.OnProgressChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange -> com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScroll -> com.lidroid.xutils.view.annotation.event.OnScroll:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScrollStateChanged -> com.lidroid.xutils.view.annotation.event.OnScrollStateChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTabChange -> com.lidroid.xutils.view.annotation.event.OnTabChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTouch -> com.lidroid.xutils.view.annotation.event.OnTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.neurosky.algorithm.HeartLevel -> com.neurosky.algorithm.HeartLevel:
    int a -> a
    int b -> b
    void HeartLevel() -> HeartLevel
    int calculateHeartLevel(int,java.lang.String,int) -> calculateHeartLevel
    int calculateTrainingZone(int) -> calculateTrainingZone
com.neurosky.algorithm.NativeAlgo -> com.neurosky.algorithm.NativeAlgo:
    int rpeakInit() -> rpeakInit
    int rpeakAddSample(int) -> rpeakAddSample
    int rpeakGetRelaxation() -> rpeakGetRelaxation
    int rpeakGetHRV() -> rpeakGetHRV
    int rpeakGetHeartRate() -> rpeakGetHeartRate
    int rpeakGetRespiration() -> rpeakGetRespiration
com.neurosky.algorithm.NativeECG -> com.neurosky.algorithm.NativeECG:
    int loadLibraryException -> loadLibraryException
    void tgECGInit(int) -> tgECGInit
    void tgECGAddSample(int) -> tgECGAddSample
    int tgECGGetSmoothedRaw() -> tgECGGetSmoothedRaw
    int tgECGGetHRV() -> tgECGGetHRV
    int tgECGGetHeartRate() -> tgECGGetHeartRate
    int tgECGGetRRint() -> tgECGGetRRint
    int tgECGGetRespiration() -> tgECGGetRespiration
    int tgECGGetRelaxation() -> tgECGGetRelaxation
    int tgECGComputeHRV(int) -> tgECGComputeHRV
    int tgECGIsRPeak() -> tgECGIsRPeak
    int tgECGGetTotalRriCount() -> tgECGGetTotalRriCount
    int tgECGComputeHRVNow() -> tgECGComputeHRVNow
    int tgECGComputeMoodNow() -> tgECGComputeMoodNow
    java.lang.String tgECGGetAlgoVersion() -> tgECGGetAlgoVersion
    int tgECGComputeHeartAge(int,int,int[],int[]) -> tgECGComputeHeartAge
    int tgECGComputeHeartRateNow() -> tgECGComputeHeartRateNow
    int tgECGGetSignalQuality() -> tgECGGetSignalQuality
    double tgECGGetSignalQualitySoFar() -> tgECGGetSignalQualitySoFar
    void tgECGSetSignalQualityThreshold(int) -> tgECGSetSignalQualityThreshold
    int tgECGGetHRRobust() -> tgECGGetHRRobust
    void tgECGSetStressParam(int,int,int,int,double[]) -> tgECGSetStressParam
    void tgECGResetStress() -> tgECGResetStress
    int tgECGComputeStressNow() -> tgECGComputeStressNow
    double[] tgECGStressExportData() -> tgECGStressExportData
    double[] tgECGStressGetFeatures() -> tgECGStressGetFeatures
    byte[] tgECGGetSleepVersion() -> tgECGGetSleepVersion
    void tgECGSleepInit() -> tgECGSleepInit
    int tgECGSleepAddData(double,byte) -> tgECGSleepAddData
    int tgECGSleepAnalyzePhase(double,double) -> tgECGSleepAnalyzePhase
    int tgECGSleepGetDuration() -> tgECGSleepGetDuration
    int tgECGSleepGetAwakePresleep() -> tgECGSleepGetAwakePresleep
    int tgECGSleepGetNotsleep() -> tgECGSleepGetNotsleep
    int tgECGSleepGetLightsleep() -> tgECGSleepGetLightsleep
    int tgECGSleepGetDeepsleep() -> tgECGSleepGetDeepsleep
    int tgECGSleepGetTotalsleep() -> tgECGSleepGetTotalsleep
    int tgECGSleepGetAwakePostsleep() -> tgECGSleepGetAwakePostsleep
    int tgECGSleepGetEfficiency() -> tgECGSleepGetEfficiency
    int tgECGSleepGetWakecount() -> tgECGSleepGetWakecount
    int tgECGSleepGetBufferlen() -> tgECGSleepGetBufferlen
    void tgECGSleepGetTimephase() -> tgECGSleepGetTimephase
    long[] tgECGSleepGetSleeptime() -> tgECGSleepGetSleeptime
    char[] tgECGSleepGetSleepphase() -> tgECGSleepGetSleepphase
    int tgECGSleepDownsampleTimephase(int) -> tgECGSleepDownsampleTimephase
    long[] tgECGSleepGetDSSleeptime() -> tgECGSleepGetDSSleeptime
    char[] tgECGSleepGetDSSleepphase() -> tgECGSleepGetDSSleepphase
com.neurosky.algorithm.TGLibEKG -> com.neurosky.algorithm.TGLibEKG:
    boolean seabird -> seabird
    int MSG_EKG_RRINT -> MSG_EKG_RRINT
    int MSG_EKG_RRINT_TS -> MSG_EKG_RRINT_TS
    int MSG_CARDIOZONE_HEARTRATE -> MSG_CARDIOZONE_HEARTRATE
    int MSG_CARDIOZONE_HEARTRATE_TS -> MSG_CARDIOZONE_HEARTRATE_TS
    int MSG_CARDIOZONE_HRV -> MSG_CARDIOZONE_HRV
    int MSG_CARDIOZONE_HRV_TS -> MSG_CARDIOZONE_HRV_TS
    int MSG_TRAINING_ZONE -> MSG_TRAINING_ZONE
    int MSG_TRAINING_ZONE_TS -> MSG_TRAINING_ZONE_TS
    int MSG_SMOOTHED_WAVE -> MSG_SMOOTHED_WAVE
    int MSG_MOOD_METER -> MSG_MOOD_METER
    int MSG_MOOD_METER_TS -> MSG_MOOD_METER_TS
    int MSG_HEART_LEVEL -> MSG_HEART_LEVEL
    int MSG_HEART_LEVEL_TS -> MSG_HEART_LEVEL_TS
    int MSG_STRESS -> MSG_STRESS
    int MSG_STRESS_TS -> MSG_STRESS_TS
    int MSG_HEART_AGE -> MSG_HEART_AGE
    int MSG_HEART_AGE_TS -> MSG_HEART_AGE_TS
    int MSG_HEART_RATE_ROBUST -> MSG_HEART_RATE_ROBUST
    int MSG_HEART_RATE_ROBUST_TS -> MSG_HEART_RATE_ROBUST_TS
    long a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    com.neurosky.algorithm.HeartLevel j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int PHASE_UNKNOWN -> PHASE_UNKNOWN
    int PHASE_RESTLESS -> PHASE_RESTLESS
    int PHASE_LIGHT -> PHASE_LIGHT
    int PHASE_DEEP -> PHASE_DEEP
    int PHASE_WALK_AFTER_ONSET -> PHASE_WALK_AFTER_ONSET
    java.util.Date q -> q
    java.util.Date r -> r
    java.util.List s -> s
    java.util.List t -> t
    boolean u -> u
    int v -> v
    java.io.File w -> w
    java.io.FileReader x -> x
    java.io.FileWriter y -> y
    java.io.BufferedWriter z -> z
    java.io.BufferedReader A -> A
    java.io.PrintWriter B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.util.ArrayList E -> E
    java.util.ArrayList F -> F
    int G -> G
    int H -> H
    boolean I -> I
    int J -> J
    java.io.File K -> K
    java.io.FileReader L -> L
    java.io.FileWriter M -> M
    java.io.BufferedWriter N -> N
    java.io.BufferedReader O -> O
    java.io.PrintWriter P -> P
    java.lang.String Q -> Q
    int R -> R
    int S -> S
    boolean T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    double[] Z -> Z
    boolean aa -> aa
    int ab -> ab
    int ac -> ac
    int ad -> ad
    int getVersion() -> getVersion
    java.lang.String getProductID() -> getProductID
    java.lang.String getAlgoVersion() -> getAlgoVersion
    java.lang.String getSleepVersion() -> getSleepVersion
    void setUserProfile(int,boolean,boolean) -> setUserProfile
    boolean initEkgAnalysis(java.util.Date) -> initEkgAnalysis
    boolean initEkgAnalysis(java.util.Date,int) -> initEkgAnalysis
    boolean initEkgAnalysis(java.util.Date,int,int) -> initEkgAnalysis
    void resetEkgAnalysis() -> resetEkgAnalysis
    void setHRVOutputInterval(int) -> setHRVOutputInterval
    void setModdOutputPoint(int) -> setModdOutputPoint
    int computeHRVNow() -> computeHRVNow
    void setSignalQualityThreshold(int) -> setSignalQualityThreshold
    int getSignalQuality() -> getSignalQuality
    double getOverallSignalQuality() -> getOverallSignalQuality
    boolean requestEkgAnalysis(short[],com.neurosky.algorithm.TGLibEKGcallback) -> requestEkgAnalysis
    boolean requestEkgAnalysis_s(short,com.neurosky.algorithm.TGLibEKGcallback) -> requestEkgAnalysis_s
    void a(short,com.neurosky.algorithm.TGLibEKGcallback) -> a
    int setStressParameters(java.lang.String,boolean,int,int,int,java.lang.String) -> setStressParameters
    void a() -> a
    void a(double[]) -> a
    void resetStress() -> resetStress
    void setStressOutputInterval(int) -> setStressOutputInterval
    boolean a(java.lang.String) -> a
    void setHeartAgeParameters(java.lang.String,int,java.lang.String) -> setHeartAgeParameters
    void setHeartAgeOutputPoint(int) -> setHeartAgeOutputPoint
    void setHeartAgeRecordNumber(int) -> setHeartAgeRecordNumber
    void a(com.neurosky.algorithm.TGLibEKGcallback) -> a
    void sleepInitAnalysis() -> sleepInitAnalysis
    void sleepInitAnalysis(java.util.Date,java.util.Date) -> sleepInitAnalysis
    void sleepAddData(java.util.Date,int) -> sleepAddData
    void sleepRequestAnalysis(com.neurosky.algorithm.TGLibEKGcallback,java.util.Date,java.util.Date) -> sleepRequestAnalysis
    int sleepSetInterval(com.neurosky.algorithm.TGLibEKGcallback,int,boolean) -> sleepSetInterval
com.neurosky.algorithm.TGLibEKGcallback -> com.neurosky.algorithm.TGLibEKGcallback:
    void dataReceived(int,java.lang.Object) -> dataReceived
    void sleepResults(int,java.util.Date,java.util.Date,int,int,int,int,int,int,int,int,int) -> sleepResults
    void sleepSmoothData(int,java.util.Date[],int[]) -> sleepSmoothData
com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult -> com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult:
    com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult TGsleepResultNotValid -> TGsleepResultNotValid
    com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult TGsleepResultValid -> TGsleepResultValid
    com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult TGsleepResultInsufficientData -> TGsleepResultInsufficientData
    com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult TGsleepResultNegativeTime -> TGsleepResultNegativeTime
    com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult TGsleepResultMoreThan48hours -> TGsleepResultMoreThan48hours
    com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult TGsleepResultAnalysisInProgress -> TGsleepResultAnalysisInProgress
    int a -> a
    com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult[] b -> b
    int getCode() -> getCode
    com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult[] values() -> values
    com.neurosky.algorithm.TGLibEKGcallback$TGsleepResult valueOf(java.lang.String) -> valueOf
com.neurosky.algorithm.TGLibEKGdictionary -> com.neurosky.algorithm.TGLibEKGdictionary:
com.neurosky.ble.BleCandidate -> com.neurosky.ble.BleCandidate:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    java.util.ArrayList e -> e
    int getAverRSSI() -> getAverRSSI
    com.neurosky.ble.BleCandidate$BleCandidateState tryCandidate(android.bluetooth.BluetoothDevice,int,byte[]) -> tryCandidate
    java.lang.String lowBLEconnect() -> lowBLEconnect
    void clearCandidate() -> clearCandidate
    void demoteCandiate(android.bluetooth.BluetoothDevice) -> demoteCandiate
    int a(com.neurosky.ble.BleCandidate) -> a
com.neurosky.ble.BleCandidate$BleCandidateState -> com.neurosky.ble.BleCandidate$BleCandidateState:
    com.neurosky.ble.BleCandidate$BleCandidateState BleNoChange -> BleNoChange
    com.neurosky.ble.BleCandidate$BleCandidateState BleNewAddition -> BleNewAddition
    com.neurosky.ble.BleCandidate$BleCandidateState BleGoodChoice -> BleGoodChoice
    com.neurosky.ble.BleCandidate$BleCandidateState[] a -> a
    com.neurosky.ble.BleCandidate$BleCandidateState[] values() -> values
    com.neurosky.ble.BleCandidate$BleCandidateState valueOf(java.lang.String) -> valueOf
com.neurosky.ble.ConfigProfile -> com.neurosky.ble.ConfigProfile:
    java.lang.String perpherialId -> perpherialId
    java.lang.String bondToken -> bondToken
    boolean bondAdoptInProgress -> bondAdoptInProgress
    java.lang.String bondSerialNumber -> bondSerialNumber
    long lastEKGrecording -> lastEKGrecording
    long lastPEDrecording -> lastPEDrecording
    long lastDIAGrecording -> lastDIAGrecording
    int lastPEDsteps -> lastPEDsteps
    int lastPEDcalories -> lastPEDcalories
    int lastPEDdistance -> lastPEDdistance
    int lastPEDenergy -> lastPEDenergy
    int lastSYNCsessionID -> lastSYNCsessionID
    int lastPEDactCalories -> lastPEDactCalories
    long lastSLEEPrecording -> lastSLEEPrecording
    long lastFATrecording -> lastFATrecording
    int lastWalkActivityTime -> lastWalkActivityTime
    int lastRunActivityTime -> lastRunActivityTime
    boolean female -> female
    int height -> height
    int weight -> weight
    boolean bandOnRight -> bandOnRight
    int walkingStepLength -> walkingStepLength
    int runningStepLength -> runningStepLength
    int birthYear -> birthYear
    int birthMonth -> birthMonth
    int birthDay -> birthDay
    boolean displayTime24Hour -> displayTime24Hour
    boolean displayImperialUnits -> displayImperialUnits
    int goalSteps -> goalSteps
    int goalDurationHour -> goalDurationHour
    int goalDurationMinute -> goalDurationMinute
    int goalDurationSecond -> goalDurationSecond
    int alarmHour -> alarmHour
    int alarmMinute -> alarmMinute
    int alarmRepeat -> alarmRepeat
    boolean goalDurationSentOnce -> goalDurationSentOnce
    boolean alarmSentOnce -> alarmSentOnce
    long alarmSetTime -> alarmSetTime
    java.lang.String algoHistoryFileName -> algoHistoryFileName
    android.content.SharedPreferences a -> a
    android.content.SharedPreferences$Editor b -> b
    void initProfile() -> initProfile
    void initInstanceToDefaults() -> initInstanceToDefaults
    void resetToDefaults() -> resetToDefaults
    void resetLastRecords(long) -> resetLastRecords
    void setPerpherialId(java.lang.String) -> setPerpherialId
    void setBondToken(java.lang.String) -> setBondToken
    void setBondAdoptInProgress(boolean) -> setBondAdoptInProgress
    void setBondSerialNumber(java.lang.String) -> setBondSerialNumber
    void setLastEKGrecording(long) -> setLastEKGrecording
    void setLastPEDrecording(long) -> setLastPEDrecording
    void setLastPEDsteps(int) -> setLastPEDsteps
    void setLastPEDcalories(int) -> setLastPEDcalories
    void setLastPEDdistance(int) -> setLastPEDdistance
    void setLastPEDenergy(int) -> setLastPEDenergy
    void setLastWalkActivityTime(int) -> setLastWalkActivityTime
    void setLastRunActivityTime(int) -> setLastRunActivityTime
    void setLastSYNCsessionID(int) -> setLastSYNCsessionID
    void setLastPEDactCalories(int) -> setLastPEDactCalories
    void setLastSLEEPrecording(long) -> setLastSLEEPrecording
    void setLastDIAGrecording(long) -> setLastDIAGrecording
    void setLastFATrecording(long) -> setLastFATrecording
    void setFemale(boolean) -> setFemale
    void setHeight(int) -> setHeight
    void setWeight(int) -> setWeight
    void setBandOnRight(boolean) -> setBandOnRight
    void setWalkingStepLength(int) -> setWalkingStepLength
    void setRunningStepLength(int) -> setRunningStepLength
    void setBirthYear(int) -> setBirthYear
    void setBirthMonth(int) -> setBirthMonth
    void setBirthDay(int) -> setBirthDay
    void setDisplayTime24Hour(boolean) -> setDisplayTime24Hour
    void setDisplayImperialUnits(boolean) -> setDisplayImperialUnits
    void setGoalSteps(int) -> setGoalSteps
    void setGoalDurationHour(int) -> setGoalDurationHour
    void setGoalDurationMinute(int) -> setGoalDurationMinute
    void setGoalDurationSecond(int) -> setGoalDurationSecond
    void setAlarmHour(int) -> setAlarmHour
    void setAlarmMinute(int) -> setAlarmMinute
    void setAlarmRepeat(int) -> setAlarmRepeat
    void setGoalDurationSentOnce(boolean) -> setGoalDurationSentOnce
    void setAlarmSentOnce(boolean) -> setAlarmSentOnce
    void setAlarmSetTime(long) -> setAlarmSetTime
    void setAlgoHistoryFileName(java.lang.String) -> setAlgoHistoryFileName
com.neurosky.ble.SampleGattAttributes -> com.neurosky.ble.SampleGattAttributes:
    java.util.HashMap a -> a
    java.lang.String kGenericAccessServiceUUID -> kGenericAccessServiceUUID
    java.lang.String kGenericDeviceInformationServiceUUID -> kGenericDeviceInformationServiceUUID
    java.lang.String kGenericBatteryLevelServiceUUID -> kGenericBatteryLevelServiceUUID
    java.lang.String kGenericModelNumCharacteristicUUID -> kGenericModelNumCharacteristicUUID
    java.lang.String kGenericSerialNumCharacteristicUUID -> kGenericSerialNumCharacteristicUUID
    java.lang.String kGenericFW_VersionCharacteristicUUID -> kGenericFW_VersionCharacteristicUUID
    java.lang.String kGenericHW_VersionCharacteristicUUID -> kGenericHW_VersionCharacteristicUUID
    java.lang.String kGenericSW_VersionCharacteristicUUID -> kGenericSW_VersionCharacteristicUUID
    java.lang.String kGenericManufacturerCharacteristicUUID -> kGenericManufacturerCharacteristicUUID
    java.lang.String kGenericBatteryLevelCharacteristicUUID -> kGenericBatteryLevelCharacteristicUUID
    java.lang.String kOld_WAT_ServiceUUID -> kOld_WAT_ServiceUUID
    java.lang.String kWAT_ServiceUUID -> kWAT_ServiceUUID
    java.lang.String kWAT_AppHandshakeCharacteristicUUID -> kWAT_AppHandshakeCharacteristicUUID
    java.lang.String kWAT_downloadCharacteristicUUID -> kWAT_downloadCharacteristicUUID
    java.lang.String kWAT_TimeCharacteristicUUID -> kWAT_TimeCharacteristicUUID
    java.lang.String kWAT_LogNameCharacteristicUUID -> kWAT_LogNameCharacteristicUUID
    java.lang.String kWAT_GoalSetCharacteristicUUID -> kWAT_GoalSetCharacteristicUUID
    java.lang.String kWAT_SecurityTokenUUID -> kWAT_SecurityTokenUUID
    java.lang.String kWAT_RealTimeEKGCharacteristicUUID -> kWAT_RealTimeEKGCharacteristicUUID
    java.lang.String kWAT_PEDhistoryCharacteristicUUID -> kWAT_PEDhistoryCharacteristicUUID
    java.lang.String kWAT_EKGhistoryCharacteristicUUID -> kWAT_EKGhistoryCharacteristicUUID
    java.lang.String kWAT_SleepHistoryCharacteristicUUID -> kWAT_SleepHistoryCharacteristicUUID
    java.lang.String kWAT_RealTimeCountsCharacteristicUUID -> kWAT_RealTimeCountsCharacteristicUUID
    java.lang.String kWAT_RecordedDataHeaderCharacteristicUUID -> kWAT_RecordedDataHeaderCharacteristicUUID
    java.lang.String kWAT_DiagnosticEventsCharacteristicUUID -> kWAT_DiagnosticEventsCharacteristicUUID
    java.lang.String CLIENT_CHARACTERISTIC_CONFIG -> CLIENT_CHARACTERISTIC_CONFIG
    java.lang.String SERVER_CHARACTERISTIC_CONFIG -> SERVER_CHARACTERISTIC_CONFIG
    java.lang.String lookup(java.lang.String,java.lang.String) -> lookup
com.neurosky.ble.TGBleManager -> com.neurosky.ble.TGBleManager:
    int q -> q
    int rr_buffer_size -> rr_buffer_size
    com.neurosky.ble.TGBleManager r -> r
    android.bluetooth.BluetoothAdapter s -> s
    android.bluetooth.BluetoothGatt t -> t
    android.os.Handler a -> a
    android.content.Context b -> b
    com.neurosky.ble.ConfigProfile u -> u
    com.neurosky.ble.BleCandidate v -> v
    com.neurosky.ble.TGBleManagerCallback w -> w
    java.util.Timer x -> x
    boolean y -> y
    boolean c -> c
    java.lang.Class z -> z
    java.lang.Object A -> A
    java.lang.reflect.Method B -> B
    java.lang.reflect.Method C -> C
    java.lang.reflect.Method D -> D
    java.lang.reflect.Method E -> E
    java.lang.reflect.Method F -> F
    java.lang.Class G -> G
    java.lang.Object H -> H
    java.util.Date I -> I
    java.util.Date J -> J
    java.lang.reflect.Method K -> K
    java.lang.reflect.Method L -> L
    java.lang.reflect.Method M -> M
    java.lang.reflect.Method N -> N
    java.lang.reflect.Method O -> O
    java.lang.reflect.Method P -> P
    java.lang.reflect.Method Q -> Q
    java.lang.reflect.Method R -> R
    java.lang.reflect.Method S -> S
    java.lang.reflect.Method T -> T
    java.lang.reflect.Method U -> U
    java.lang.reflect.Method V -> V
    java.lang.reflect.Method W -> W
    java.lang.reflect.Method X -> X
    java.lang.reflect.Method Y -> Y
    java.lang.reflect.Method Z -> Z
    java.lang.reflect.Method aa -> aa
    java.lang.reflect.Method ab -> ab
    java.lang.reflect.Method ac -> ac
    java.lang.reflect.Method ad -> ad
    java.lang.Object ae -> ae
    java.lang.Object af -> af
    int ag -> ag
    java.lang.String ah -> ah
    boolean d -> d
    java.util.UUID UUID_ACCESS_SERVICE -> UUID_ACCESS_SERVICE
    java.util.UUID UUID_DEVICEINFO_SERVICE -> UUID_DEVICEINFO_SERVICE
    java.util.UUID UUID_BATTERYLEVLE_SERVICE -> UUID_BATTERYLEVLE_SERVICE
    java.util.UUID UUID_MODEL_NUM -> UUID_MODEL_NUM
    java.util.UUID UUID_SERIAL_NUM -> UUID_SERIAL_NUM
    java.util.UUID UUID_FW_VERSION -> UUID_FW_VERSION
    java.util.UUID UUID_HW_VERSION -> UUID_HW_VERSION
    java.util.UUID UUID_SW_VERSION -> UUID_SW_VERSION
    java.util.UUID UUID_MANUFACTURER -> UUID_MANUFACTURER
    java.util.UUID UUID_BATTERY_LEVEL -> UUID_BATTERY_LEVEL
    java.util.UUID UUID_SERVICE -> UUID_SERVICE
    java.util.UUID UUID_APP_HANDSHAKE -> UUID_APP_HANDSHAKE
    java.util.UUID UUID_DOWNLOAD -> UUID_DOWNLOAD
    java.util.UUID UUID_TIME -> UUID_TIME
    java.util.UUID UUID_LOG_NAME -> UUID_LOG_NAME
    java.util.UUID UUID_GOAL_SET -> UUID_GOAL_SET
    java.util.UUID UUID_SECURITY_TOKEN -> UUID_SECURITY_TOKEN
    java.util.UUID UUID_REALTIME_EKG -> UUID_REALTIME_EKG
    java.util.UUID UUID_PED_HISTORY -> UUID_PED_HISTORY
    java.util.UUID UUID_EKG_HISTORY -> UUID_EKG_HISTORY
    java.util.UUID UUID_SLEEP_HISTORY -> UUID_SLEEP_HISTORY
    java.util.UUID UUID_REALTIME_COUNT -> UUID_REALTIME_COUNT
    java.util.UUID UUID_RECORDED_DATAHEADER -> UUID_RECORDED_DATAHEADER
    java.util.UUID UUID_DIAGNOSTIC_EVENTS -> UUID_DIAGNOSTIC_EVENTS
    java.util.UUID UUID_SYNC_HISTORY -> UUID_SYNC_HISTORY
    android.bluetooth.BluetoothGattCharacteristic ai -> ai
    android.bluetooth.BluetoothGattCharacteristic aj -> aj
    android.bluetooth.BluetoothGattCharacteristic ak -> ak
    android.bluetooth.BluetoothGattCharacteristic al -> al
    android.bluetooth.BluetoothGattCharacteristic am -> am
    android.bluetooth.BluetoothGattCharacteristic an -> an
    android.bluetooth.BluetoothGattCharacteristic ao -> ao
    android.bluetooth.BluetoothGattCharacteristic ap -> ap
    android.bluetooth.BluetoothGattCharacteristic aq -> aq
    android.bluetooth.BluetoothGattCharacteristic ar -> ar
    android.bluetooth.BluetoothGattCharacteristic as -> as
    android.bluetooth.BluetoothGattCharacteristic at -> at
    android.bluetooth.BluetoothGattCharacteristic au -> au
    android.bluetooth.BluetoothGattCharacteristic av -> av
    android.bluetooth.BluetoothGattCharacteristic aw -> aw
    android.bluetooth.BluetoothGattCharacteristic ax -> ax
    int MSG_HW_VERSION -> MSG_HW_VERSION
    int MSG_FW_VERSION -> MSG_FW_VERSION
    int MSG_SW_VERSION -> MSG_SW_VERSION
    int MSG_DEVICE_NAME -> MSG_DEVICE_NAME
    int MSG_SERIAL_NUM -> MSG_SERIAL_NUM
    int MSG_HW_MODEL -> MSG_HW_MODEL
    int MSG_HW_MANUFACTOR -> MSG_HW_MANUFACTOR
    int MSG_BATTERY_LEVEL -> MSG_BATTERY_LEVEL
    int MSG_SDK_VERSION -> MSG_SDK_VERSION
    int MSG_MANUFACTOR_ID -> MSG_MANUFACTOR_ID
    int MSG_CONNECTION_ID -> MSG_CONNECTION_ID
    int BLE_STATE_CONNECTED -> BLE_STATE_CONNECTED
    int BLE_STATE_DISCONNECTED -> BLE_STATE_DISCONNECTED
    int BLE_STATE_CONNECTED_LOST -> BLE_STATE_CONNECTED_LOST
    int BLE_STATE_ABORT -> BLE_STATE_ABORT
    int MSG_CANDIDATE_FOUND -> MSG_CANDIDATE_FOUND
    int MSG_EXCEPTION_TYPE -> MSG_EXCEPTION_TYPE
    int POTENTIAL_BOND -> POTENTIAL_BOND
    int POTENTIAL_BOND_CODE -> POTENTIAL_BOND_CODE
    int POTENTIAL_BOND_SN -> POTENTIAL_BOND_SN
    int POTENTIAL_BOND_NAME -> POTENTIAL_BOND_NAME
    int BLE_DID_BOND -> BLE_DID_BOND
    int BLE_BOND_TOKEN -> BLE_BOND_TOKEN
    int MSG_USER_PROFILE -> MSG_USER_PROFILE
    int MSG_USER_GOAL -> MSG_USER_GOAL
    int MSG_TRANSFER_REPORT -> MSG_TRANSFER_REPORT
    int MSG_SYNC_PED_AVAIL -> MSG_SYNC_PED_AVAIL
    int MSG_SYNC_PED_RECV -> MSG_SYNC_PED_RECV
    int MSG_SYNC_EKG_AVAIL -> MSG_SYNC_EKG_AVAIL
    int MSG_SYNC_EKG_RECV -> MSG_SYNC_EKG_RECV
    int MSG_SYNC_DIAG_AVAIL -> MSG_SYNC_DIAG_AVAIL
    int MSG_SYNC_DIAG_RECV -> MSG_SYNC_DIAG_RECV
    int MSG_SYNC_SLEEP_AVAIL -> MSG_SYNC_SLEEP_AVAIL
    int MSG_SYNC_SLEEP_RECV -> MSG_SYNC_SLEEP_RECV
    int MSG_SYNC_RESULT -> MSG_SYNC_RESULT
    int MSG_TRANSFER_PERCENT -> MSG_TRANSFER_PERCENT
    int MSG_TRANSFER_IN_PROGRESS -> MSG_TRANSFER_IN_PROGRESS
    int MSG_HISTORY_PED -> MSG_HISTORY_PED
    int MSG_HISTORY_PED_TS -> MSG_HISTORY_PED_TS
    int MSG_HISTORY_PED_STEPS -> MSG_HISTORY_PED_STEPS
    int MSG_HISTORY_PED_CALORIES -> MSG_HISTORY_PED_CALORIES
    int MSG_HISTORY_PED_DISTANCE -> MSG_HISTORY_PED_DISTANCE
    int MSG_HISTORY_PED_STEPBPM -> MSG_HISTORY_PED_STEPBPM
    int MSG_HISTORY_PED_ENERGY -> MSG_HISTORY_PED_ENERGY
    int MSG_HISTORY_PED_MODE -> MSG_HISTORY_PED_MODE
    int MSG_HISTORY_PED_SLEEPPHASE -> MSG_HISTORY_PED_SLEEPPHASE
    int MSG_HISTORY_PED_ACTCALORIES -> MSG_HISTORY_PED_ACTCALORIES
    int MSG_HISTORY_PED_SEDENTARY -> MSG_HISTORY_PED_SEDENTARY
    int MSG_HISTORY_PED_WALKING -> MSG_HISTORY_PED_WALKING
    int MSG_HISTORY_PED_RUNNING -> MSG_HISTORY_PED_RUNNING
    int MSG_HISTORY_EKG -> MSG_HISTORY_EKG
    int MSG_HISTORY_EKG_TS -> MSG_HISTORY_EKG_TS
    int MSG_HISTORY_EKG_SAMPLERATE -> MSG_HISTORY_EKG_SAMPLERATE
    int MSG_HISTORY_EKG_COMMENT -> MSG_HISTORY_EKG_COMMENT
    int MSG_HISTORY_EKG_SAMPLE -> MSG_HISTORY_EKG_SAMPLE
    int MSG_HISTORY_EKG_STOP -> MSG_HISTORY_EKG_STOP
    int MSG_HISTORY_EKG_FINALHR -> MSG_HISTORY_EKG_FINALHR
    int MSG_EKG_SIGNAL_QUALITY -> MSG_EKG_SIGNAL_QUALITY
    int MSG_EKG_OVERALL_SIGNAL_QUALITY -> MSG_EKG_OVERALL_SIGNAL_QUALITY
    int MSG_HISTORY_SLEEP -> MSG_HISTORY_SLEEP
    int MSG_HISTORY_SLEEP_TS -> MSG_HISTORY_SLEEP_TS
    int MSG_HISTORY_SLEEP_SLEEPPHASE -> MSG_HISTORY_SLEEP_SLEEPPHASE
    int MSG_HISTORY_SLEEP_INITCODE -> MSG_HISTORY_SLEEP_INITCODE
    int MSG_HISTORY_FATBURN -> MSG_HISTORY_FATBURN
    int MSG_HISTORY_FATBURN_TS -> MSG_HISTORY_FATBURN_TS
    int MSG_HISTORY_FATBURN_HR -> MSG_HISTORY_FATBURN_HR
    int MSG_HISTORY_FATBURN_VALUE -> MSG_HISTORY_FATBURN_VALUE
    int MSG_HISTORY_FATBURN_TRAININGZONE -> MSG_HISTORY_FATBURN_TRAININGZONE
    int MSG_HISTORY_DIAGEVENT -> MSG_HISTORY_DIAGEVENT
    int MSG_HISTORY_DIAGEVENT_TS -> MSG_HISTORY_DIAGEVENT_TS
    int MSG_HISTORY_DIAGEVENT_CODE -> MSG_HISTORY_DIAGEVENT_CODE
    int MSG_REALTIME_EKG -> MSG_REALTIME_EKG
    int MSG_REALTIME_EKG_TS -> MSG_REALTIME_EKG_TS
    int MSG_REALTIME_EKG_SAMPLERATE -> MSG_REALTIME_EKG_SAMPLERATE
    int MSG_REALTIME_EKG_COMMENT -> MSG_REALTIME_EKG_COMMENT
    int MSG_REALTIME_EKG_SAMPLE -> MSG_REALTIME_EKG_SAMPLE
    int MSG_REALTIME_EKG_STOP -> MSG_REALTIME_EKG_STOP
    int MSG_REALTIME_EKG_FINALHR -> MSG_REALTIME_EKG_FINALHR
    int MSG_REALTIME_COUNT -> MSG_REALTIME_COUNT
    int MSG_REALTIME_COUNT_TS -> MSG_REALTIME_COUNT_TS
    int MSG_REALTIME_COUNT_STEPS -> MSG_REALTIME_COUNT_STEPS
    int MSG_REALTIME_COUNT_CALORIES -> MSG_REALTIME_COUNT_CALORIES
    int MSG_REALTIME_COUNT_DISTANCE -> MSG_REALTIME_COUNT_DISTANCE
    int MSG_REALTIME_COUNT_ENERGY -> MSG_REALTIME_COUNT_ENERGY
    int MSG_REALTIME_COUNT_MODE -> MSG_REALTIME_COUNT_MODE
    int MSG_REALTIME_COUNT_HR -> MSG_REALTIME_COUNT_HR
    int MSG_REALTIME_COUNT_ACTCALORIES -> MSG_REALTIME_COUNT_ACTCALORIES
    int MSG_FW_TRANSFER_IN_PROGRESS -> MSG_FW_TRANSFER_IN_PROGRESS
    int MSG_FW_TRANSFER_PERCENT -> MSG_FW_TRANSFER_PERCENT
    int MSG_FW_TRANSFER_REPORT -> MSG_FW_TRANSFER_REPORT
    int MSG_FW_TRANSFER_REPORT_RESULT -> MSG_FW_TRANSFER_REPORT_RESULT
    int MSG_FW_TRANSFER_REPORT_SIZE -> MSG_FW_TRANSFER_REPORT_SIZE
    int MSG_FW_TRANSFER_REPORT_CHECKSUM -> MSG_FW_TRANSFER_REPORT_CHECKSUM
    int MSG_FW_TRANSFER_REPORT_TRANSFER -> MSG_FW_TRANSFER_REPORT_TRANSFER
    int MSG_SLEEP_ANALYSIS -> MSG_SLEEP_ANALYSIS
    int MSG_SLEEP_ANALYSIS_RESULT -> MSG_SLEEP_ANALYSIS_RESULT
    int MSG_SLEEP_ANALYSIS_STARTTS -> MSG_SLEEP_ANALYSIS_STARTTS
    int MSG_SLEEP_ANALYSIS_ENDTS -> MSG_SLEEP_ANALYSIS_ENDTS
    int MSG_SLEEP_ANALYSIS_DURATION -> MSG_SLEEP_ANALYSIS_DURATION
    int MSG_SLEEP_ANALYSIS_PRESLEEP -> MSG_SLEEP_ANALYSIS_PRESLEEP
    int MSG_SLEEP_ANALYSIS_NOTSLEEP -> MSG_SLEEP_ANALYSIS_NOTSLEEP
    int MSG_SLEEP_ANALYSIS_DEEPSLEEP -> MSG_SLEEP_ANALYSIS_DEEPSLEEP
    int MSG_SLEEP_ANALYSIS_LIGHTSLEEP -> MSG_SLEEP_ANALYSIS_LIGHTSLEEP
    int MSG_SLEEP_ANALYSIS_WAKEUPCOUNT -> MSG_SLEEP_ANALYSIS_WAKEUPCOUNT
    int MSG_SLEEP_ANALYSIS_TOTALSLEEP -> MSG_SLEEP_ANALYSIS_TOTALSLEEP
    int MSG_SLEEP_ANALYSIS_PREWAKE -> MSG_SLEEP_ANALYSIS_PREWAKE
    int MSG_SLEEP_ANALYSIS_EFFICIENCY -> MSG_SLEEP_ANALYSIS_EFFICIENCY
    int MSG_DATA_ERASED -> MSG_DATA_ERASED
    java.lang.String ay -> ay
    java.lang.String az -> az
    java.lang.String aA -> aA
    java.lang.String aB -> aB
    java.lang.String aC -> aC
    java.lang.String aD -> aD
    java.lang.String aE -> aE
    java.lang.String aF -> aF
    java.lang.String aG -> aG
    java.lang.String aH -> aH
    java.lang.String aI -> aI
    int aJ -> aJ
    int aK -> aK
    java.util.concurrent.Future aL -> aL
    java.util.concurrent.ExecutorService aM -> aM
    com.neurosky.ble.TGBleManager$TGBusyStatus e -> e
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent f -> f
    boolean aN -> aN
    boolean aO -> aO
    boolean aP -> aP
    boolean aQ -> aQ
    java.lang.Process aR -> aR
    java.lang.String aS -> aS
    boolean aT -> aT
    boolean aU -> aU
    boolean aV -> aV
    int aW -> aW
    int aX -> aX
    int aY -> aY
    int aZ -> aZ
    int ba -> ba
    int bb -> bb
    boolean bc -> bc
    int bd -> bd
    int be -> be
    int bf -> bf
    int bg -> bg
    int bh -> bh
    int bi -> bi
    int bj -> bj
    int bk -> bk
    int bl -> bl
    boolean bm -> bm
    boolean bn -> bn
    boolean bo -> bo
    boolean bp -> bp
    boolean bq -> bq
    boolean br -> br
    java.util.ArrayList bs -> bs
    java.util.ArrayList bt -> bt
    java.util.ArrayList bu -> bu
    java.util.ArrayList bv -> bv
    android.bluetooth.BluetoothDevice bw -> bw
    int bx -> bx
    boolean by -> by
    boolean bz -> bz
    boolean bA -> bA
    com.neurosky.ble.TGBleManager$TGConnectEvent g -> g
    int h -> h
    byte[] bB -> bB
    boolean bC -> bC
    int bD -> bD
    int bE -> bE
    int bF -> bF
    int bG -> bG
    int bH -> bH
    int bI -> bI
    int bJ -> bJ
    int bK -> bK
    int bL -> bL
    int bM -> bM
    boolean bN -> bN
    boolean bO -> bO
    boolean bP -> bP
    java.util.ArrayList i -> i
    int bQ -> bQ
    boolean bR -> bR
    int bS -> bS
    boolean bT -> bT
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult j -> j
    long bU -> bU
    int bV -> bV
    int bW -> bW
    int bX -> bX
    int bY -> bY
    int bZ -> bZ
    boolean ekgSignalInit -> ekgSignalInit
    boolean ekgHistLookingForHeader -> ekgHistLookingForHeader
    boolean ekgHistFileOpen -> ekgHistFileOpen
    java.io.FileOutputStream ca -> ca
    java.io.FileOutputStream cb -> cb
    long cc -> cc
    long cd -> cd
    long ce -> ce
    int cf -> cf
    int cg -> cg
    java.lang.String ch -> ch
    java.lang.String ci -> ci
    java.lang.String cj -> cj
    java.io.File ck -> ck
    java.io.File cl -> cl
    java.io.File cm -> cm
    int cn -> cn
    boolean co -> co
    int cp -> cp
    int cq -> cq
    boolean cr -> cr
    long cs -> cs
    long ct -> ct
    byte[] cu -> cu
    long cv -> cv
    byte[] cw -> cw
    int k -> k
    boolean cx -> cx
    boolean cy -> cy
    java.lang.String cz -> cz
    java.lang.String cA -> cA
    java.lang.String cB -> cB
    java.io.FileOutputStream cC -> cC
    java.io.FileOutputStream cD -> cD
    boolean cE -> cE
    com.neurosky.ble.TGBleManagerCallback$TGekgResult l -> l
    boolean m -> m
    boolean n -> n
    com.neurosky.ble.TGBleManagerCallback$TGdownResult o -> o
    boolean p -> p
    boolean cF -> cF
    boolean cG -> cG
    int cH -> cH
    int cI -> cI
    int cJ -> cJ
    int cK -> cK
    int cL -> cL
    int cM -> cM
    int PHASE_UNKNOWN -> PHASE_UNKNOWN
    int PHASE_RESTLESS -> PHASE_RESTLESS
    int PHASE_LIGHT -> PHASE_LIGHT
    int PHASE_DEEP -> PHASE_DEEP
    int PHASE_WALK_AFTER_ONSET -> PHASE_WALK_AFTER_ONSET
    byte[] cN -> cN
    boolean cO -> cO
    boolean cP -> cP
    boolean cQ -> cQ
    java.lang.ThreadLocal df -> df
    java.lang.Thread cR -> cR
    int cS -> cS
    int cT -> cT
    int cU -> cU
    int cV -> cV
    android.bluetooth.BluetoothAdapter$LeScanCallback cW -> cW
    android.bluetooth.BluetoothGattCallback cX -> cX
    int getVersion() -> getVersion
    java.lang.String getProductID() -> getProductID
    java.lang.String getAdvName() -> getAdvName
    java.lang.String getHwModel() -> getHwModel
    java.lang.String getHwManufacturer() -> getHwManufacturer
    java.lang.String getHwSerialNumber() -> getHwSerialNumber
    java.lang.String getHwVersion() -> getHwVersion
    java.lang.String getFwVersion() -> getFwVersion
    java.lang.String getSwVersion() -> getSwVersion
    java.lang.String getSdkVersion() -> getSdkVersion
    java.lang.String getBondToken() -> getBondToken
    java.lang.String getMfgId() -> getMfgId
    java.lang.String getConnectionID() -> getConnectionID
    com.neurosky.ble.TGBleManager$TGConnectEvent getConnectEvent() -> getConnectEvent
    int getBatteryLevel() -> getBatteryLevel
    boolean getFemale() -> getFemale
    int getAge() -> getAge
    int getBirthDay() -> getBirthDay
    int getBirthMonth() -> getBirthMonth
    int getBirthYear() -> getBirthYear
    int getHeight() -> getHeight
    int getWeight() -> getWeight
    boolean getBandOnRight() -> getBandOnRight
    boolean getBandLocation() -> getBandLocation
    int getWalkingStepLength() -> getWalkingStepLength
    int walkingStepLength() -> walkingStepLength
    int getRunningStepLength() -> getRunningStepLength
    int runningStepLength() -> runningStepLength
    int getGoalDurationHour() -> getGoalDurationHour
    int getGoalDurationMinutes() -> getGoalDurationMinutes
    int getGoalDurationSecond() -> getGoalDurationSecond
    int goalDurationHour() -> goalDurationHour
    int goalDurationMinutes() -> goalDurationMinutes
    int goalDurationSecond() -> goalDurationSecond
    int getGoalSteps() -> getGoalSteps
    int getAlarmHour() -> getAlarmHour
    int getAlarmMinute() -> getAlarmMinute
    int getAlarmRepeat() -> getAlarmRepeat
    boolean getDisplayImperialUnits() -> getDisplayImperialUnits
    boolean getDisplayTime24Hour() -> getDisplayTime24Hour
    int getFinalHRV() -> getFinalHRV
    void H() -> H
    void setBirthYear(int) -> setBirthYear
    void setBirthMonth(int) -> setBirthMonth
    void setBirthDay(int) -> setBirthDay
    void setFemale(boolean) -> setFemale
    void setDisplayImperialUnits(boolean) -> setDisplayImperialUnits
    void setDisplayTime24Hour(boolean) -> setDisplayTime24Hour
    void setHeight(int) -> setHeight
    void setWeight(int) -> setWeight
    void setBandOnRight(boolean) -> setBandOnRight
    void setBandLocation(boolean) -> setBandLocation
    void setWalkingStepLength(int) -> setWalkingStepLength
    void setRunningStepLength(int) -> setRunningStepLength
    void setGoalDurationHour(int) -> setGoalDurationHour
    void setGoalDurationMinute(int) -> setGoalDurationMinute
    void setGoalDurationSecond(int) -> setGoalDurationSecond
    void setGoalSteps(int) -> setGoalSteps
    void setAlarmHour(int) -> setAlarmHour
    void setAlarmMinute(int) -> setAlarmMinute
    void setAlarmRepeat(int) -> setAlarmRepeat
    com.neurosky.ble.TGBleManager getInstance() -> getInstance
    boolean initTGBleManager(android.content.Context,android.bluetooth.BluetoothAdapter,com.neurosky.ble.TGBleManagerCallback) -> initTGBleManager
    boolean initTGBleManager(android.content.Context,android.bluetooth.BluetoothAdapter,android.os.Handler) -> initTGBleManager
    void enableLogging() -> enableLogging
    void stopLogging() -> stopLogging
    void redirectLoggingToFile() -> redirectLoggingToFile
    void diagnosticFileEnabled() -> diagnosticFileEnabled
    void diagnosticFilesDisabled(boolean) -> diagnosticFilesDisabled
    void a(java.io.File) -> a
    boolean setupTGBleManager(boolean) -> setupTGBleManager
    void candidateScan(java.lang.String[]) -> candidateScan
    java.util.ArrayList candidateFound() -> candidateFound
    void candidateStopScan() -> candidateStopScan
    void candidateConnect(android.bluetooth.BluetoothDevice) -> candidateConnect
    void candidateReConnect(android.bluetooth.BluetoothDevice) -> candidateReConnect
    void candidateSetTimeConnect(android.bluetooth.BluetoothDevice,int) -> candidateSetTimeConnect
    void tryConnect(java.lang.String[]) -> tryConnect
    void disconnect() -> disconnect
    void close() -> close
    void tryBond() -> tryBond
    java.lang.String I() -> I
    void takeBond() -> takeBond
    void adoptBond(java.lang.String,java.lang.String) -> adoptBond
    void releaseBond() -> releaseBond
    void enableSyncFilter() -> enableSyncFilter
    void disableSyncFilter() -> disableSyncFilter
    boolean startSyncData() -> startSyncData
    java.lang.Object getPedometorSession() -> getPedometorSession
    boolean startRealTimeEKG() -> startRealTimeEKG
    void stopRealTimeEKG() -> stopRealTimeEKG
    boolean askCurrentCount() -> askCurrentCount
    boolean startRealTimeSport() -> startRealTimeSport
    void stopRealTimeSport() -> stopRealTimeSport
    void enableFWfilter() -> enableFWfilter
    void disableFWfilter() -> disableFWfilter
    boolean fwDown(java.lang.String,java.lang.String) -> fwDown
    boolean fwDown() -> fwDown
    boolean eraseData() -> eraseData
    boolean b(java.lang.String) -> b
    boolean isTaskExecutorFree() -> isTaskExecutorFree
    boolean setAlgoHistoryFileName(java.lang.String) -> setAlgoHistoryFileName
    boolean deleteStressHistoryFile() -> deleteStressHistoryFile
    int getStressRecordNum() -> getStressRecordNum
    void J() -> J
    boolean K() -> K
    boolean L() -> L
    void a(java.util.concurrent.Callable) -> a
    void M() -> M
    boolean N() -> N
    java.lang.String O() -> O
    byte P() -> P
    java.lang.String b(int) -> b
    void a(byte) -> a
    void a(byte,byte,byte,byte,byte) -> a
    void a(byte,byte,byte,byte,byte,byte,byte,byte,byte) -> a
    void a(byte[]) -> a
    void b(byte[]) -> b
    void setStressParameters(java.lang.String,boolean,int,int,int,java.lang.String) -> setStressParameters
    void setStressOutputInterval(int) -> setStressOutputInterval
    void Q() -> Q
    void sleepInitAnalysis() -> sleepInitAnalysis
    void sleepAddData(java.util.Date,int) -> sleepAddData
    void sleepSetInterval(int,boolean) -> sleepSetInterval
    void sleepRequestAnalysis(java.util.Date,java.util.Date) -> sleepRequestAnalysis
    java.lang.Object getSleepSession() -> getSleepSession
    boolean a(int,int) -> a
    void a(android.bluetooth.BluetoothGattCharacteristic) -> a
    void b(android.bluetooth.BluetoothGattCharacteristic) -> b
    void a(android.bluetooth.BluetoothGattCharacteristic,boolean) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void resetBand() -> resetBand
    void enableVBM() -> enableVBM
    void disableVBM() -> disableVBM
    void setCarrierProfile(int) -> setCarrierProfile
    int a(com.neurosky.ble.TGBleManager) -> a
    int a() -> a
    boolean b() -> b
    byte[] b(com.neurosky.ble.TGBleManager) -> b
    void a(com.neurosky.ble.TGBleManager,byte) -> a
    void a(int) -> a
    boolean c() -> c
    com.neurosky.ble.ConfigProfile c(com.neurosky.ble.TGBleManager) -> c
    boolean d(com.neurosky.ble.TGBleManager) -> d
    int d() -> d
    int e() -> e
    int f() -> f
    void a(com.neurosky.ble.TGBleManager,boolean) -> a
    android.bluetooth.BluetoothGattCharacteristic e(com.neurosky.ble.TGBleManager) -> e
    void a(com.neurosky.ble.TGBleManager,java.util.concurrent.Callable) -> a
    android.bluetooth.BluetoothGattCharacteristic f(com.neurosky.ble.TGBleManager) -> f
    boolean g(com.neurosky.ble.TGBleManager) -> g
    com.neurosky.ble.TGBleManagerCallback h(com.neurosky.ble.TGBleManager) -> h
    boolean i(com.neurosky.ble.TGBleManager) -> i
    java.util.ArrayList j(com.neurosky.ble.TGBleManager) -> j
    java.util.ArrayList k(com.neurosky.ble.TGBleManager) -> k
    java.util.ArrayList l(com.neurosky.ble.TGBleManager) -> l
    boolean m(com.neurosky.ble.TGBleManager) -> m
    java.util.ArrayList n(com.neurosky.ble.TGBleManager) -> n
    com.neurosky.ble.BleCandidate o(com.neurosky.ble.TGBleManager) -> o
    boolean p(com.neurosky.ble.TGBleManager) -> p
    android.bluetooth.BluetoothAdapter q(com.neurosky.ble.TGBleManager) -> q
    android.bluetooth.BluetoothAdapter$LeScanCallback r(com.neurosky.ble.TGBleManager) -> r
    void b(com.neurosky.ble.TGBleManager,boolean) -> b
    void c(com.neurosky.ble.TGBleManager,boolean) -> c
    android.bluetooth.BluetoothDevice s(com.neurosky.ble.TGBleManager) -> s
    android.bluetooth.BluetoothGatt t(com.neurosky.ble.TGBleManager) -> t
    void a(com.neurosky.ble.TGBleManager,int) -> a
    void u(com.neurosky.ble.TGBleManager) -> u
    void a(com.neurosky.ble.TGBleManager,android.bluetooth.BluetoothGattCharacteristic) -> a
    void d(com.neurosky.ble.TGBleManager,boolean) -> d
    android.bluetooth.BluetoothGattCharacteristic v(com.neurosky.ble.TGBleManager) -> v
    void b(com.neurosky.ble.TGBleManager,android.bluetooth.BluetoothGattCharacteristic) -> b
    boolean a(com.neurosky.ble.TGBleManager,int,int) -> a
    void e(com.neurosky.ble.TGBleManager,boolean) -> e
    boolean w(com.neurosky.ble.TGBleManager) -> w
    int g() -> g
    void a(boolean) -> a
    void x(com.neurosky.ble.TGBleManager) -> x
    int h() -> h
    int i() -> i
    int j() -> j
    int k() -> k
    int l() -> l
    boolean m() -> m
    byte[] a(long) -> a
    int n() -> n
    int o() -> o
    int p() -> p
    byte y(com.neurosky.ble.TGBleManager) -> y
    boolean q() -> q
    boolean r() -> r
    boolean s() -> s
    void c(com.neurosky.ble.TGBleManager,android.bluetooth.BluetoothGattCharacteristic) -> c
    void f(com.neurosky.ble.TGBleManager,boolean) -> f
    boolean z(com.neurosky.ble.TGBleManager) -> z
    int t() -> t
    int u() -> u
    int v() -> v
    int w() -> w
    void a(com.neurosky.ble.TGBleManager,android.bluetooth.BluetoothDevice) -> a
    boolean A(com.neurosky.ble.TGBleManager) -> A
    void a(com.neurosky.ble.TGBleManager,android.bluetooth.BluetoothGatt) -> a
    android.bluetooth.BluetoothGattCallback B(com.neurosky.ble.TGBleManager) -> B
    boolean C(com.neurosky.ble.TGBleManager) -> C
    java.lang.String x() -> x
    java.lang.String y() -> y
    void D(com.neurosky.ble.TGBleManager) -> D
    void g(com.neurosky.ble.TGBleManager,boolean) -> g
    android.bluetooth.BluetoothGattCharacteristic E(com.neurosky.ble.TGBleManager) -> E
    byte[] F(com.neurosky.ble.TGBleManager) -> F
    java.lang.String z() -> z
    void G(com.neurosky.ble.TGBleManager) -> G
    android.bluetooth.BluetoothGattCharacteristic H(com.neurosky.ble.TGBleManager) -> H
    void a(com.neurosky.ble.TGBleManager,android.bluetooth.BluetoothGattCharacteristic,boolean) -> a
    void a(com.neurosky.ble.TGBleManager,byte,byte,byte,byte,byte) -> a
    boolean I(com.neurosky.ble.TGBleManager) -> I
    android.bluetooth.BluetoothGattCharacteristic J(com.neurosky.ble.TGBleManager) -> J
    boolean K(com.neurosky.ble.TGBleManager) -> K
    int L(com.neurosky.ble.TGBleManager) -> L
    int M(com.neurosky.ble.TGBleManager) -> M
    int N(com.neurosky.ble.TGBleManager) -> N
    int O(com.neurosky.ble.TGBleManager) -> O
    int P(com.neurosky.ble.TGBleManager) -> P
    boolean Q(com.neurosky.ble.TGBleManager) -> Q
    boolean R(com.neurosky.ble.TGBleManager) -> R
    int S(com.neurosky.ble.TGBleManager) -> S
    android.bluetooth.BluetoothGattCharacteristic T(com.neurosky.ble.TGBleManager) -> T
    java.util.Date A() -> A
    java.util.Date B() -> B
    long U(com.neurosky.ble.TGBleManager) -> U
    int V(com.neurosky.ble.TGBleManager) -> V
    int W(com.neurosky.ble.TGBleManager) -> W
    int X(com.neurosky.ble.TGBleManager) -> X
    int Y(com.neurosky.ble.TGBleManager) -> Y
    int Z(com.neurosky.ble.TGBleManager) -> Z
    long aa(com.neurosky.ble.TGBleManager) -> aa
    long ab(com.neurosky.ble.TGBleManager) -> ab
    long ac(com.neurosky.ble.TGBleManager) -> ac
    long ad(com.neurosky.ble.TGBleManager) -> ad
    void h(com.neurosky.ble.TGBleManager,boolean) -> h
    int ae(com.neurosky.ble.TGBleManager) -> ae
    int af(com.neurosky.ble.TGBleManager) -> af
    int ag(com.neurosky.ble.TGBleManager) -> ag
    int ah(com.neurosky.ble.TGBleManager) -> ah
    void i(com.neurosky.ble.TGBleManager,boolean) -> i
    void j(com.neurosky.ble.TGBleManager,boolean) -> j
    android.bluetooth.BluetoothGattCharacteristic ai(com.neurosky.ble.TGBleManager) -> ai
    boolean aj(com.neurosky.ble.TGBleManager) -> aj
    java.io.FileOutputStream ak(com.neurosky.ble.TGBleManager) -> ak
    java.io.FileOutputStream al(com.neurosky.ble.TGBleManager) -> al
    void k(com.neurosky.ble.TGBleManager,boolean) -> k
    boolean am(com.neurosky.ble.TGBleManager) -> am
    boolean an(com.neurosky.ble.TGBleManager) -> an
    boolean ao(com.neurosky.ble.TGBleManager) -> ao
    java.lang.reflect.Method ap(com.neurosky.ble.TGBleManager) -> ap
    java.lang.Object aq(com.neurosky.ble.TGBleManager) -> aq
    java.lang.String C() -> C
    java.lang.String[] a(com.neurosky.ble.TGBleManager,java.lang.String) -> a
    java.lang.String D() -> D
    android.bluetooth.BluetoothGattCharacteristic ar(com.neurosky.ble.TGBleManager) -> ar
    long a(java.lang.String) -> a
    void a(com.neurosky.ble.TGBleManager,byte,long,long) -> a
    int E() -> E
    int F() -> F
    boolean a(com.neurosky.ble.TGBleManager,byte[],java.lang.String[],java.lang.String[]) -> a
    java.util.Timer as(com.neurosky.ble.TGBleManager) -> as
    void l(com.neurosky.ble.TGBleManager,boolean) -> l
    int at(com.neurosky.ble.TGBleManager) -> at
    void b(com.neurosky.ble.TGBleManager,int) -> b
    void a(com.neurosky.ble.TGBleManager,byte[]) -> a
    void b(com.neurosky.ble.TGBleManager,byte[]) -> b
    void c(com.neurosky.ble.TGBleManager,byte[]) -> c
    void d(com.neurosky.ble.TGBleManager,byte[]) -> d
    boolean G() -> G
    java.io.FileOutputStream au(com.neurosky.ble.TGBleManager) -> au
    java.lang.reflect.Method av(com.neurosky.ble.TGBleManager) -> av
    java.lang.reflect.Method aw(com.neurosky.ble.TGBleManager) -> aw
    java.lang.Object ax(com.neurosky.ble.TGBleManager) -> ax
    java.lang.reflect.Method ay(com.neurosky.ble.TGBleManager) -> ay
com.neurosky.ble.TGBleManager$TGBusyStatus -> com.neurosky.ble.TGBleManager$TGBusyStatus:
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_FREE -> BUSY_STATUS_FREE
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_CONNECT -> BUSY_STATUS_CONNECT
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_BOND -> BUSY_STATUS_BOND
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_PROFILE -> BUSY_STATUS_PROFILE
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_GOALS -> BUSY_STATUS_GOALS
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_BATTERY -> BUSY_STATUS_BATTERY
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_SYNC -> BUSY_STATUS_SYNC
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_REALTIME -> BUSY_STATUS_REALTIME
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_SPORTS -> BUSY_STATUS_SPORTS
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_CURRENTCOUNT -> BUSY_STATUS_CURRENTCOUNT
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_FIRMWARE -> BUSY_STATUS_FIRMWARE
    com.neurosky.ble.TGBleManager$TGBusyStatus BUSY_STATUS_ERASE -> BUSY_STATUS_ERASE
    int a -> a
    com.neurosky.ble.TGBleManager$TGBusyStatus[] b -> b
    int getStatus() -> getStatus
    com.neurosky.ble.TGBleManager$TGBusyStatus[] values() -> values
    com.neurosky.ble.TGBleManager$TGBusyStatus valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManager$TGConnectEvent -> com.neurosky.ble.TGBleManager$TGConnectEvent:
    com.neurosky.ble.TGBleManager$TGConnectEvent Connect_Event_FailedSecurityNotInPlace -> Connect_Event_FailedSecurityNotInPlace
    com.neurosky.ble.TGBleManager$TGConnectEvent Connect_Event_Connected -> Connect_Event_Connected
    com.neurosky.ble.TGBleManager$TGConnectEvent Connect_Event_Bonded -> Connect_Event_Bonded
    com.neurosky.ble.TGBleManager$TGConnectEvent[] a -> a
    com.neurosky.ble.TGBleManager$TGConnectEvent[] values() -> values
    com.neurosky.ble.TGBleManager$TGConnectEvent valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback -> com.neurosky.ble.TGBleManagerCallback:
    void dataReceived(int,java.lang.Object) -> dataReceived
    void exceptionMessage(int) -> exceptionMessage
    void bleDidSendUserConfig(int) -> bleDidSendUserConfig
    void bleDidSendAlarmGoals(int) -> bleDidSendAlarmGoals
    void batteryLevel(int) -> batteryLevel
    void candidateFound(android.bluetooth.BluetoothDevice,int,java.lang.String) -> candidateFound
    void bleDidConnect() -> bleDidConnect
    void bleDidDisconnect() -> bleDidDisconnect
    void bleLostConnect() -> bleLostConnect
    void bleDidAbortConnect() -> bleDidAbortConnect
    void potentialBond(java.lang.String,java.lang.String,java.lang.String) -> potentialBond
    void bleDidBond(int) -> bleDidBond
    void transferInProgress(boolean) -> transferInProgress
    void transferPercent(int) -> transferPercent
    void transferReport(int,int,int,int,int,int,int,int,int) -> transferReport
    void pedometryRecord(java.util.Date,int,int,int,int,int,int,int,int,int,int,int) -> pedometryRecord
    void ekgStarting(java.util.Date,int,boolean,java.lang.String) -> ekgStarting
    void ekgStop(int,int) -> ekgStop
    void ekgSample(int) -> ekgSample
    void sleepRecord(java.util.Date,int,int) -> sleepRecord
    void fatBurnRecord(java.util.Date,int,int,int) -> fatBurnRecord
    void diagEventRecord(java.util.Date,int) -> diagEventRecord
    void currentCount(java.util.Date,int,int,int,int,int,int,int) -> currentCount
    void eraseComplete(int) -> eraseComplete
    void fwUpdateInProgress(boolean) -> fwUpdateInProgress
    void fwUpdatePercent(int) -> fwUpdatePercent
    void fwUpdateReport(int,int,int,int) -> fwUpdateReport
    void sleepResults(int,java.util.Date,java.util.Date,int,int,int,int,int,int,int,int,int) -> sleepResults
    void sleepSmoothData(int,java.util.Date[],int[]) -> sleepSmoothData
com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent -> com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent:
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleUnexpectedEvent -> TGBleUnexpectedEvent
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleTestingEvent -> TGBleTestingEvent
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleUserAgeHasBecomeNegative_BirthDateIsNOTcorrect -> TGBleUserAgeHasBecomeNegative_BirthDateIsNOTcorrect
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleUserAgeIsTooLarge_BirthDateIsNOTcorrect -> TGBleUserAgeIsTooLarge_BirthDateIsNOTcorrect
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleUserBirthDateRejected_AgeOutOfRange -> TGBleUserBirthDateRejected_AgeOutOfRange
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleFailedOperationInProgress -> TGBleFailedOperationInProgress
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleStepGoalRejected_OutOfRange -> TGBleStepGoalRejected_OutOfRange
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleCurrentCountTimedOut -> TGBleCurrentCountTimedOut
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleDepricatedMethodIsUsed -> TGBleDepricatedMethodIsUsed
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleConfigurationModeCanNotBeChanged -> TGBleConfigurationModeCanNotBeChanged
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleFailedSecurityNotInplace -> TGBleFailedSecurityNotInplace
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleConnectFailedSuspectKeyMismatch -> TGBleConnectFailedSuspectKeyMismatch
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleConnectionFail -> TGBleConnectionFail
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleBluetoothModuleError -> TGBleBluetoothModuleError
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleFailedOtherOperationInProgress -> TGBleFailedOtherOperationInProgress
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleCurrentCountRequestTimedOut -> TGBleCurrentCountRequestTimedOut
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleAlgorithmInitialzeFailed -> TGBleAlgorithmInitialzeFailed
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleHistoryCorruptErased -> TGBleHistoryCorruptErased
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleReInitializedNeedAlarmAndGoalCheck -> TGBleReInitializedNeedAlarmAndGoalCheck
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleNonRepeatingAlarmMayBeStaleCheckAlarmConfiguration -> TGBleNonRepeatingAlarmMayBeStaleCheckAlarmConfiguration
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBlePossilbleResetDetect -> TGBlePossilbleResetDetect
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent TGBleNewConnectionEstablished -> TGBleNewConnectionEstablished
    int a -> a
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent[] b -> b
    int getCode() -> getCode
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGBleExceptionEvent valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback$TGbondResult -> com.neurosky.ble.TGBleManagerCallback$TGbondResult:
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultError -> TGbondResultError
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultTokenAccepted -> TGbondResultTokenAccepted
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorBondedNoMatch -> TGbondResultErrorBondedNoMatch
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorBadTokenFormat -> TGbondResultErrorBadTokenFormat
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorTimeOut -> TGbondResultErrorTimeOut
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorNoConnection -> TGbondResultErrorNoConnection
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorReadTimeOut -> TGbondResultErrorReadTimeOut
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorReadBackTimeOut -> TGbondResultErrorReadBackTimeOut
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorWriteFail -> TGbondResultErrorWriteFail
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorTargetIsAlreadyBonded -> TGbondResultErrorTargetIsAlreadyBonded
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondAppErrorNoPotentialBondDelegate -> TGbondAppErrorNoPotentialBondDelegate
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultTokenReleased -> TGbondResultTokenReleased
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorUnSupportedHardware -> TGbondResultErrorUnSupportedHardware
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorTargetHasWrongSN -> TGbondResultErrorTargetHasWrongSN
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorPairingRejected -> TGbondResultErrorPairingRejected
    com.neurosky.ble.TGBleManagerCallback$TGbondResult TGbondResultErrorSecurityMismatch -> TGbondResultErrorSecurityMismatch
    int a -> a
    com.neurosky.ble.TGBleManagerCallback$TGbondResult[] b -> b
    int getCode() -> getCode
    com.neurosky.ble.TGBleManagerCallback$TGbondResult[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGbondResult valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback$TGdownResult -> com.neurosky.ble.TGBleManagerCallback$TGdownResult:
    com.neurosky.ble.TGBleManagerCallback$TGdownResult TGdownResultNormal -> TGdownResultNormal
    com.neurosky.ble.TGBleManagerCallback$TGdownResult TGdownResultError -> TGdownResultError
    com.neurosky.ble.TGBleManagerCallback$TGdownResult TGdownResultDisconnect -> TGdownResultDisconnect
    com.neurosky.ble.TGBleManagerCallback$TGdownResult TGdownResultNoFileFound -> TGdownResultNoFileFound
    com.neurosky.ble.TGBleManagerCallback$TGdownResult TGdownResultBatteryTooLowForDownload -> TGdownResultBatteryTooLowForDownload
    com.neurosky.ble.TGBleManagerCallback$TGdownResult TGdownResultDisconnectWriteFailed -> TGdownResultDisconnectWriteFailed
    com.neurosky.ble.TGBleManagerCallback$TGdownResult TGdownResultWriteFailed -> TGdownResultWriteFailed
    com.neurosky.ble.TGBleManagerCallback$TGdownResult TGdownResultWriteTimeOut -> TGdownResultWriteTimeOut
    com.neurosky.ble.TGBleManagerCallback$TGdownResult TGdownResultErrorInvalidImageFile -> TGdownResultErrorInvalidImageFile
    int a -> a
    com.neurosky.ble.TGBleManagerCallback$TGdownResult[] b -> b
    int getCode() -> getCode
    com.neurosky.ble.TGBleManagerCallback$TGdownResult[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGdownResult valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback$TGekgResult -> com.neurosky.ble.TGBleManagerCallback$TGekgResult:
    com.neurosky.ble.TGBleManagerCallback$TGekgResult TGekgTerminatedNormally -> TGekgTerminatedNormally
    com.neurosky.ble.TGBleManagerCallback$TGekgResult TGekgTerminatedNoData -> TGekgTerminatedNoData
    com.neurosky.ble.TGBleManagerCallback$TGekgResult TGekgTerminatedDataStopped -> TGekgTerminatedDataStopped
    com.neurosky.ble.TGBleManagerCallback$TGekgResult TGekgTerminatedLostConnection -> TGekgTerminatedLostConnection
    int a -> a
    com.neurosky.ble.TGBleManagerCallback$TGekgResult[] b -> b
    int getCode() -> getCode
    com.neurosky.ble.TGBleManagerCallback$TGekgResult[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGekgResult valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback$TGeraseResult -> com.neurosky.ble.TGBleManagerCallback$TGeraseResult:
    com.neurosky.ble.TGBleManagerCallback$TGeraseResult TGeraseResultNormal -> TGeraseResultNormal
    com.neurosky.ble.TGBleManagerCallback$TGeraseResult TGeraseResultError -> TGeraseResultError
    int a -> a
    com.neurosky.ble.TGBleManagerCallback$TGeraseResult[] b -> b
    int getCode() -> getCode
    com.neurosky.ble.TGBleManagerCallback$TGeraseResult[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGeraseResult valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType -> com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType:
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType TG_ACT_MOT_MVT_TYPE_UNKNOWN -> TG_ACT_MOT_MVT_TYPE_UNKNOWN
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType TG_ACT_MOT_MVT_TYPE_WALKING -> TG_ACT_MOT_MVT_TYPE_WALKING
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType TG_ACT_MOT_MVT_TYPE_RUNNING -> TG_ACT_MOT_MVT_TYPE_RUNNING
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType TG_ACT_MOT_MVT_TYPE_reservedA -> TG_ACT_MOT_MVT_TYPE_reservedA
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType TG_ACT_MOT_MVT_TYPE_reservedB -> TG_ACT_MOT_MVT_TYPE_reservedB
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType TG_ACT_MOT_MVT_TYPE_reservedC -> TG_ACT_MOT_MVT_TYPE_reservedC
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType TG_ACT_MOT_MVT_TYPE_reservedD -> TG_ACT_MOT_MVT_TYPE_reservedD
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType TG_ACT_MOT_MVT_TYPE_SEDENTARY -> TG_ACT_MOT_MVT_TYPE_SEDENTARY
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType[] a -> a
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGpedometryActivityType valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback$TGsendResult -> com.neurosky.ble.TGBleManagerCallback$TGsendResult:
    com.neurosky.ble.TGBleManagerCallback$TGsendResult TGSendUnexpectedEvent -> TGSendUnexpectedEvent
    com.neurosky.ble.TGBleManagerCallback$TGsendResult TGSendSuccess -> TGSendSuccess
    com.neurosky.ble.TGBleManagerCallback$TGsendResult TGSendFailedNoAcknowledgement -> TGSendFailedNoAcknowledgement
    com.neurosky.ble.TGBleManagerCallback$TGsendResult TGSendFailedDisconnected -> TGSendFailedDisconnected
    com.neurosky.ble.TGBleManagerCallback$TGsendResult TGSendSuccessTEST -> TGSendSuccessTEST
    int a -> a
    com.neurosky.ble.TGBleManagerCallback$TGsendResult[] b -> b
    int getCode() -> getCode
    com.neurosky.ble.TGBleManagerCallback$TGsendResult[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGsendResult valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback$TGsleepInitReason -> com.neurosky.ble.TGBleManagerCallback$TGsleepInitReason:
    com.neurosky.ble.TGBleManagerCallback$TGsleepInitReason TGsleepWakeButton -> TGsleepWakeButton
    com.neurosky.ble.TGBleManagerCallback$TGsleepInitReason TGsleepSleepButton -> TGsleepSleepButton
    com.neurosky.ble.TGBleManagerCallback$TGsleepInitReason TGsleepDailyReset -> TGsleepDailyReset
    com.neurosky.ble.TGBleManagerCallback$TGsleepInitReason TGsleepErase -> TGsleepErase
    com.neurosky.ble.TGBleManagerCallback$TGsleepInitReason TGsleepInitialized -> TGsleepInitialized
    int a -> a
    com.neurosky.ble.TGBleManagerCallback$TGsleepInitReason[] b -> b
    int getCode() -> getCode
    com.neurosky.ble.TGBleManagerCallback$TGsleepInitReason[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGsleepInitReason valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback$TGsleepPhaseType -> com.neurosky.ble.TGBleManagerCallback$TGsleepPhaseType:
    com.neurosky.ble.TGBleManagerCallback$TGsleepPhaseType TTG_ACT_MOT_SLEEP_PHASE_UNKNOWN -> TTG_ACT_MOT_SLEEP_PHASE_UNKNOWN
    com.neurosky.ble.TGBleManagerCallback$TGsleepPhaseType TG_ACT_MOT_SLEEP_PHASE_RESTLESS -> TG_ACT_MOT_SLEEP_PHASE_RESTLESS
    com.neurosky.ble.TGBleManagerCallback$TGsleepPhaseType TG_ACT_MOT_SLEEP_PHASE_LIGHT -> TG_ACT_MOT_SLEEP_PHASE_LIGHT
    com.neurosky.ble.TGBleManagerCallback$TGsleepPhaseType TG_ACT_MOT_SLEEP_PHASE_DEEP -> TG_ACT_MOT_SLEEP_PHASE_DEEP
    com.neurosky.ble.TGBleManagerCallback$TGsleepPhaseType TG_ACT_MOT_SLEEP_PHASE_WALK_AFTER_ONSET -> TG_ACT_MOT_SLEEP_PHASE_WALK_AFTER_ONSET
    com.neurosky.ble.TGBleManagerCallback$TGsleepPhaseType[] a -> a
    com.neurosky.ble.TGBleManagerCallback$TGsleepPhaseType[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGsleepPhaseType valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback$TGsleepResult -> com.neurosky.ble.TGBleManagerCallback$TGsleepResult:
    com.neurosky.ble.TGBleManagerCallback$TGsleepResult TGsleepResultNotValid -> TGsleepResultNotValid
    com.neurosky.ble.TGBleManagerCallback$TGsleepResult TGsleepResultValid -> TGsleepResultValid
    com.neurosky.ble.TGBleManagerCallback$TGsleepResult TGsleepResultInsufficientData -> TGsleepResultInsufficientData
    com.neurosky.ble.TGBleManagerCallback$TGsleepResult TGsleepResultNegativeTime -> TGsleepResultNegativeTime
    com.neurosky.ble.TGBleManagerCallback$TGsleepResult TGsleepResultMoreThan48hours -> TGsleepResultMoreThan48hours
    com.neurosky.ble.TGBleManagerCallback$TGsleepResult TGsleepResultAnalysisInProgress -> TGsleepResultAnalysisInProgress
    int a -> a
    com.neurosky.ble.TGBleManagerCallback$TGsleepResult[] b -> b
    int getCode() -> getCode
    com.neurosky.ble.TGBleManagerCallback$TGsleepResult[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGsleepResult valueOf(java.lang.String) -> valueOf
com.neurosky.ble.TGBleManagerCallback$TGsyncResult -> com.neurosky.ble.TGBleManagerCallback$TGsyncResult:
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult TGsyncResultNormal -> TGsyncResultNormal
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult TGsyncResultError -> TGsyncResultError
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult TGsyncResultDisconnect -> TGsyncResultDisconnect
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult TGsyncResultErrorFirmwareNotCompatible -> TGsyncResultErrorFirmwareNotCompatible
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult TGsyncResultErrorTimeOut -> TGsyncResultErrorTimeOut
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult TGsyncResultErrorBlankData -> TGsyncResultErrorBlankData
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult TGsyncResultErrorDataLost -> TGsyncResultErrorDataLost
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult TGsyncResultErrorFlashCorrupt -> TGsyncResultErrorFlashCorrupt
    int a -> a
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult[] b -> b
    int getCode() -> getCode
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult[] values() -> values
    com.neurosky.ble.TGBleManagerCallback$TGsyncResult valueOf(java.lang.String) -> valueOf
com.neurosky.ble.a -> com.neurosky.ble.a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.neurosky.ble.b -> com.neurosky.ble.b:
    java.lang.Object initialValue() -> initialValue
com.neurosky.ble.c -> com.neurosky.ble.c:
    com.neurosky.ble.TGBleManager a -> a
    void run() -> run
com.neurosky.ble.d -> com.neurosky.ble.d:
    com.neurosky.ble.TGBleManager a -> a
    void onLeScan(android.bluetooth.BluetoothDevice,int,byte[]) -> onLeScan
com.neurosky.ble.e -> com.neurosky.ble.e:
    com.neurosky.ble.TGBleManager a -> a
    void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int) -> onConnectionStateChange
    void onServicesDiscovered(android.bluetooth.BluetoothGatt,int) -> onServicesDiscovered
    void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int) -> onCharacteristicRead
    void onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int) -> onDescriptorWrite
    void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic) -> onCharacteristicChanged
    void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int) -> onCharacteristicWrite
    void onReadRemoteRssi(android.bluetooth.BluetoothGatt,int,int) -> onReadRemoteRssi
com.neurosky.ble.f -> com.neurosky.ble.f:
    com.neurosky.ble.TGBleManager a -> a
    void run() -> run
com.neurosky.ble.g -> com.neurosky.ble.g:
    int a -> a
    com.neurosky.ble.TGBleManager b -> b
    java.util.HashMap c -> c
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.neurosky.ble.h -> com.neurosky.ble.h:
    byte[] a -> a
    int b -> b
    com.neurosky.ble.TGBleManager c -> c
    void run() -> run
com.neurosky.ble.i -> com.neurosky.ble.i:
    com.neurosky.ble.TGBleManager a -> a
    java.lang.Object call() -> call
com.neurosky.ble.j -> com.neurosky.ble.j:
    java.lang.String a -> a
    com.neurosky.ble.TGBleManager b -> b
    java.lang.Object call() -> call
com.neurosky.ble.k -> com.neurosky.ble.k:
    android.bluetooth.BluetoothDevice a -> a
    boolean b -> b
    int c -> c
    com.neurosky.ble.TGBleManager d -> d
    java.lang.String a() -> a
    java.lang.Object call() -> call
com.neurosky.ble.l -> com.neurosky.ble.l:
    com.neurosky.ble.TGBleManager a -> a
    java.lang.String a() -> a
    java.lang.Object call() -> call
com.neurosky.ble.m -> com.neurosky.ble.m:
    com.neurosky.ble.TGBleManager a -> a
    java.lang.Object call() -> call
    com.neurosky.ble.TGBleManager a(com.neurosky.ble.m) -> a
com.neurosky.ble.n -> com.neurosky.ble.n:
    com.neurosky.ble.m a -> a
    void run() -> run
com.neurosky.ble.o -> com.neurosky.ble.o:
    com.neurosky.ble.TGBleManager a -> a
    java.lang.String a() -> a
    java.lang.Object call() -> call
com.neurosky.ble.p -> com.neurosky.ble.p:
    com.neurosky.ble.TGBleManagerCallback$TGsendResult a -> a
    android.bluetooth.BluetoothGattCharacteristic b -> b
    int c -> c
    com.neurosky.ble.TGBleManager d -> d
    java.lang.String a() -> a
    java.lang.Object call() -> call
com.neurosky.ble.q -> com.neurosky.ble.q:
    com.neurosky.ble.TGBleManagerCallback$TGsendResult a -> a
    android.bluetooth.BluetoothGattCharacteristic b -> b
    com.neurosky.ble.TGBleManager c -> c
    java.lang.String a() -> a
    java.lang.Object call() -> call
com.neurosky.ble.r -> com.neurosky.ble.r:
    com.neurosky.ble.TGBleManager a -> a
    java.lang.String a() -> a
    java.lang.Object call() -> call
com.neurosky.ble.s -> com.neurosky.ble.s:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    com.neurosky.ble.TGBleManager d -> d
    java.lang.String a() -> a
    java.lang.Object call() -> call
com.neurosky.thinkgear.HeartFitnessLevel -> com.neurosky.thinkgear.HeartFitnessLevel:
    java.lang.String a -> a
    java.lang.String getHeartFitnessLevel(int,java.lang.String,int) -> getHeartFitnessLevel
com.neurosky.thinkgear.HeartRateAcceleration -> com.neurosky.thinkgear.HeartRateAcceleration:
    long a -> a
    java.util.List b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int[] g -> g
    int[] h -> h
    int[] getAcceleration(int,int) -> getAcceleration
com.quintic.libota.BluetoothLeInterface -> com.quintic.libota.BluetoothLeInterface:
    android.bluetooth.BluetoothGatt mBluetoothGatt -> mBluetoothGatt
    android.bluetooth.BluetoothGattCharacteristic mWriteCharacteristic -> mWriteCharacteristic
    android.bluetooth.BluetoothGattCharacteristic mReadCharacteristic -> mReadCharacteristic
    android.bluetooth.BluetoothGattCharacteristic mNotifyCharacteristic -> mNotifyCharacteristic
    boolean bleInterfaceInit() -> bleInterfaceInit
    boolean bleInterfaceInit(android.bluetooth.BluetoothGatt) -> bleInterfaceInit
    boolean writeCharacteristic(byte[]) -> writeCharacteristic
    boolean readCharacteristic() -> readCharacteristic
    boolean setCharacteristicNotification(boolean) -> setCharacteristicNotification
    boolean writeDescripter(android.bluetooth.BluetoothGattDescriptor,byte[]) -> writeDescripter
    boolean writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic,byte[]) -> writeCharacteristic
    boolean readCharacteristic(android.bluetooth.BluetoothGattCharacteristic) -> readCharacteristic
    boolean setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean) -> setCharacteristicNotification
    boolean writeCharacteristic(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,byte[]) -> writeCharacteristic
    boolean readCharacteristic(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic) -> readCharacteristic
    boolean setCharacteristicNotification(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,boolean) -> setCharacteristicNotification
    boolean writeDescripter(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,byte[]) -> writeDescripter
com.quintic.libota.bleGlobalVariables -> com.quintic.libota.bleGlobalVariables:
    java.lang.String QuinticOtaService -> QuinticOtaService
    java.lang.String QuinticQppService -> QuinticQppService
    java.lang.String otaWriteCharacteristic -> otaWriteCharacteristic
    java.lang.String otaNotifyCharacteristic -> otaNotifyCharacteristic
    java.lang.String qppWriteCharacteristic -> qppWriteCharacteristic
    java.lang.String qppDescripter -> qppDescripter
    java.util.UUID UUID_QUINTIC_OTA_SERVICE -> UUID_QUINTIC_OTA_SERVICE
    java.util.UUID UUID_QUINTIC_QPP_SERVICE -> UUID_QUINTIC_QPP_SERVICE
    java.util.UUID UUID_OTA_WRITE_CHARACTERISTIC -> UUID_OTA_WRITE_CHARACTERISTIC
    java.util.UUID UUID_OTA_NOTIFY_CHARACTERISTIC -> UUID_OTA_NOTIFY_CHARACTERISTIC
    java.util.UUID UUID_QPP_WRITE_CHARACTERISTIC -> UUID_QPP_WRITE_CHARACTERISTIC
    java.util.UUID UUID_QPP_DESCRIPTER -> UUID_QPP_DESCRIPTER
com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg -> com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg:
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg OTA_NOTI_LENGTH_L -> OTA_NOTI_LENGTH_L
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg OTA_NOTI_LENGTH_H -> OTA_NOTI_LENGTH_H
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg OTA_NOTI_CMD -> OTA_NOTI_CMD
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg OTA_NOTI_RESULT -> OTA_NOTI_RESULT
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg OTA_NOTI_RCVED_LENGTH_L -> OTA_NOTI_RCVED_LENGTH_L
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg OTA_NOTI_RCVED_LENGTH_H -> OTA_NOTI_RCVED_LENGTH_H
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg OTA_NOTI_RCVED_CS_L -> OTA_NOTI_RCVED_CS_L
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg OTA_NOTI_RCVED_CS_H -> OTA_NOTI_RCVED_CS_H
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg[] ENUM$VALUES -> ENUM$VALUES
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg[] values() -> values
    com.quintic.libota.bleGlobalVariables$OtaNotiDataPkg valueOf(java.lang.String) -> valueOf
com.quintic.libota.bleGlobalVariables$otaCmd -> com.quintic.libota.bleGlobalVariables$otaCmd:
    com.quintic.libota.bleGlobalVariables$otaCmd OTA_CMD_META_DATA -> OTA_CMD_META_DATA
    com.quintic.libota.bleGlobalVariables$otaCmd OTA_CMD_BRICK_DATA -> OTA_CMD_BRICK_DATA
    com.quintic.libota.bleGlobalVariables$otaCmd OTA_CMD_DATA_VERIFY -> OTA_CMD_DATA_VERIFY
    com.quintic.libota.bleGlobalVariables$otaCmd OTA_CMD_EXECUTION_NEW_CODE -> OTA_CMD_EXECUTION_NEW_CODE
    com.quintic.libota.bleGlobalVariables$otaCmd[] ENUM$VALUES -> ENUM$VALUES
    com.quintic.libota.bleGlobalVariables$otaCmd[] values() -> values
    com.quintic.libota.bleGlobalVariables$otaCmd valueOf(java.lang.String) -> valueOf
com.quintic.libota.bleGlobalVariables$otaResult -> com.quintic.libota.bleGlobalVariables$otaResult:
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_SUCCESS -> OTA_RESULT_SUCCESS
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_PKT_CHECKSUM_ERROR -> OTA_RESULT_PKT_CHECKSUM_ERROR
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_PKT_LEN_ERROR -> OTA_RESULT_PKT_LEN_ERROR
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_DEVICE_NOT_SUPPORT_OTA -> OTA_RESULT_DEVICE_NOT_SUPPORT_OTA
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_FW_SIZE_ERROR -> OTA_RESULT_FW_SIZE_ERROR
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_FW_VERIFY_ERROR -> OTA_RESULT_FW_VERIFY_ERROR
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_INVALID_ARGUMENT -> OTA_RESULT_INVALID_ARGUMENT
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_OPEN_FIRMWAREFILE_ERROR -> OTA_RESULT_OPEN_FIRMWAREFILE_ERROR
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_SEND_META_ERROR -> OTA_RESULT_SEND_META_ERROR
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_RECEIVED_INVALID_PACKET -> OTA_RESULT_RECEIVED_INVALID_PACKET
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_META_RESPONSE_TIMEOUT -> OTA_RESULT_META_RESPONSE_TIMEOUT
    com.quintic.libota.bleGlobalVariables$otaResult OTA_RESULT_DATA_RESPONSE_TIMEOUT -> OTA_RESULT_DATA_RESPONSE_TIMEOUT
    com.quintic.libota.bleGlobalVariables$otaResult[] ENUM$VALUES -> ENUM$VALUES
    com.quintic.libota.bleGlobalVariables$otaResult[] values() -> values
    com.quintic.libota.bleGlobalVariables$otaResult valueOf(java.lang.String) -> valueOf
com.quintic.libota.otaManager -> com.quintic.libota.otaManager:
    java.lang.String TAG -> TAG
    com.quintic.libota.BluetoothLeInterface mOtaIntf -> mOtaIntf
    int mStartOffset -> mStartOffset
    int mPercent -> mPercent
    java.util.concurrent.Semaphore semp -> semp
    int mTimeout -> mTimeout
    int mPacketSize -> mPacketSize
    boolean mShouldStop -> mShouldStop
    java.lang.String mFilePath -> mFilePath
    int mByteRate -> mByteRate
    int mElapsedTime -> mElapsedTime
    com.quintic.libota.bleGlobalVariables$otaResult mRetValue -> mRetValue
    java.lang.Runnable updateRunnable -> updateRunnable
    int[] $SWITCH_TABLE$com$quintic$libota$bleGlobalVariables$otaCmd -> $SWITCH_TABLE$com$quintic$libota$bleGlobalVariables$otaCmd
    void otaPrintBytes(byte[],java.lang.String) -> otaPrintBytes
    byte cmdToValue(com.quintic.libota.bleGlobalVariables$otaCmd) -> cmdToValue
    com.quintic.libota.bleGlobalVariables$otaCmd valueToCmd(int) -> valueToCmd
    boolean otaWrite(byte[]) -> otaWrite
    boolean otaSendPacket(com.quintic.libota.bleGlobalVariables$otaCmd,short,byte[],int) -> otaSendPacket
    int otaSendMetaData(java.io.FileInputStream) -> otaSendMetaData
    int otaSendBrickData(java.io.FileInputStream,int) -> otaSendBrickData
    boolean otaSendVerifyCmd() -> otaSendVerifyCmd
    void otaSendResetCmd() -> otaSendResetCmd
    void releaseSemaphore(java.util.concurrent.Semaphore) -> releaseSemaphore
    boolean waitSemaphore(java.util.concurrent.Semaphore) -> waitSemaphore
    void setOffset(int) -> setOffset
    int getOffset() -> getOffset
    void notifyVerifyCmdDone() -> notifyVerifyCmdDone
    boolean waitVerifyCmdDone() -> waitVerifyCmdDone
    void notifyWriteDataCompleted() -> notifyWriteDataCompleted
    boolean waitWriteDataCompleted() -> waitWriteDataCompleted
    void notifyReadDataCompleted() -> notifyReadDataCompleted
    boolean waitReadDataCompleted() -> waitReadDataCompleted
    void otaGetResult(byte[]) -> otaGetResult
    boolean shouldStopUpdate() -> shouldStopUpdate
    void serErrorCode(com.quintic.libota.bleGlobalVariables$otaResult) -> serErrorCode
    com.quintic.libota.bleGlobalVariables$otaResult otaStart(java.lang.String,com.quintic.libota.BluetoothLeInterface) -> otaStart
    void otaUpdateProcess(java.lang.String) -> otaUpdateProcess
    com.quintic.libota.bleGlobalVariables$otaResult otaGetProcess(int[]) -> otaGetProcess
    void otaStop() -> otaStop
    void access$0(com.quintic.libota.otaManager,java.lang.String) -> access$0
    int[] $SWITCH_TABLE$com$quintic$libota$bleGlobalVariables$otaCmd() -> $SWITCH_TABLE$com$quintic$libota$bleGlobalVariables$otaCmd
com.quintic.libota.otaManager$1 -> com.quintic.libota.otaManager$1:
    com.quintic.libota.otaManager this$0 -> this$0
    void run() -> run
com.sun.activation.registries.LineTokenizer -> com.sun.activation.registries.LineTokenizer:
    int currentPosition -> currentPosition
    int maxPosition -> maxPosition
    java.lang.String str -> str
    java.util.Vector stack -> stack
    java.lang.String singles -> singles
    void skipWhiteSpace() -> skipWhiteSpace
    boolean hasMoreTokens() -> hasMoreTokens
    java.lang.String nextToken() -> nextToken
    void pushToken(java.lang.String) -> pushToken
com.sun.activation.registries.LogSupport -> com.sun.activation.registries.LogSupport:
    boolean debug -> debug
    java.util.logging.Logger logger -> logger
    java.util.logging.Level level -> level
    void log(java.lang.String) -> log
    void log(java.lang.String,java.lang.Throwable) -> log
    boolean isLoggable() -> isLoggable
com.sun.activation.registries.MailcapFile -> com.sun.activation.registries.MailcapFile:
    java.util.Map type_hash -> type_hash
    java.util.Map fallback_hash -> fallback_hash
    java.util.Map native_commands -> native_commands
    boolean addReverse -> addReverse
    java.util.Map getMailcapList(java.lang.String) -> getMailcapList
    java.util.Map getMailcapFallbackList(java.lang.String) -> getMailcapFallbackList
    java.lang.String[] getMimeTypes() -> getMimeTypes
    java.lang.String[] getNativeCommands(java.lang.String) -> getNativeCommands
    java.util.Map mergeResults(java.util.Map,java.util.Map) -> mergeResults
    void appendToMailcap(java.lang.String) -> appendToMailcap
    void parse(java.io.Reader) -> parse
    void parseLine(java.lang.String) -> parseLine
    void reportParseError(int,int,java.lang.String) -> reportParseError
    void reportParseError(int,int,int,java.lang.String) -> reportParseError
    void reportParseError(int,int,int,int,java.lang.String) -> reportParseError
com.sun.activation.registries.MailcapParseException -> com.sun.activation.registries.MailcapParseException:
com.sun.activation.registries.MailcapTokenizer -> com.sun.activation.registries.MailcapTokenizer:
    int UNKNOWN_TOKEN -> UNKNOWN_TOKEN
    int START_TOKEN -> START_TOKEN
    int STRING_TOKEN -> STRING_TOKEN
    int EOI_TOKEN -> EOI_TOKEN
    int SLASH_TOKEN -> SLASH_TOKEN
    int SEMICOLON_TOKEN -> SEMICOLON_TOKEN
    int EQUALS_TOKEN -> EQUALS_TOKEN
    java.lang.String data -> data
    int dataIndex -> dataIndex
    int dataLength -> dataLength
    int currentToken -> currentToken
    java.lang.String currentTokenValue -> currentTokenValue
    boolean isAutoquoting -> isAutoquoting
    char autoquoteChar -> autoquoteChar
    void setIsAutoquoting(boolean) -> setIsAutoquoting
    int getCurrentToken() -> getCurrentToken
    java.lang.String nameForToken(int) -> nameForToken
    java.lang.String getCurrentTokenValue() -> getCurrentTokenValue
    int nextToken() -> nextToken
    void processStringToken() -> processStringToken
    void processAutoquoteToken() -> processAutoquoteToken
    boolean isSpecialChar(char) -> isSpecialChar
    boolean isControlChar(char) -> isControlChar
    boolean isWhiteSpaceChar(char) -> isWhiteSpaceChar
    boolean isStringTokenChar(char) -> isStringTokenChar
    java.lang.String fixEscapeSequences(java.lang.String) -> fixEscapeSequences
com.sun.activation.registries.MimeTypeEntry -> com.sun.activation.registries.MimeTypeEntry:
    java.lang.String type -> type
    java.lang.String extension -> extension
    java.lang.String getMIMEType() -> getMIMEType
    java.lang.String getFileExtension() -> getFileExtension
    java.lang.String toString() -> toString
com.sun.activation.registries.MimeTypeFile -> com.sun.activation.registries.MimeTypeFile:
    java.lang.String fname -> fname
    java.util.Hashtable type_hash -> type_hash
    com.sun.activation.registries.MimeTypeEntry getMimeTypeEntry(java.lang.String) -> getMimeTypeEntry
    java.lang.String getMIMETypeString(java.lang.String) -> getMIMETypeString
    void appendToRegistry(java.lang.String) -> appendToRegistry
    void parse(java.io.BufferedReader) -> parse
    void parseEntry(java.lang.String) -> parseEntry
com.sun.mail.dsn.DeliveryStatus -> com.sun.mail.dsn.DeliveryStatus:
    boolean debug -> debug
    javax.mail.internet.InternetHeaders messageDSN -> messageDSN
    javax.mail.internet.InternetHeaders[] recipientDSN -> recipientDSN
    javax.mail.internet.InternetHeaders getMessageDSN() -> getMessageDSN
    void setMessageDSN(javax.mail.internet.InternetHeaders) -> setMessageDSN
    int getRecipientDSNCount() -> getRecipientDSNCount
    javax.mail.internet.InternetHeaders getRecipientDSN(int) -> getRecipientDSN
    void addRecipientDSN(javax.mail.internet.InternetHeaders) -> addRecipientDSN
    void writeTo(java.io.OutputStream) -> writeTo
    void writeInternetHeaders(javax.mail.internet.InternetHeaders,com.sun.mail.util.LineOutputStream) -> writeInternetHeaders
    java.lang.String toString() -> toString
com.sun.mail.dsn.MessageHeaders -> com.sun.mail.dsn.MessageHeaders:
    int getSize() -> getSize
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getContentStream() -> getContentStream
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
com.sun.mail.dsn.MultipartReport -> com.sun.mail.dsn.MultipartReport:
    boolean constructed -> constructed
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    javax.mail.internet.MimeBodyPart getTextBodyPart() -> getTextBodyPart
    void setTextBodyPart(javax.mail.internet.MimeBodyPart) -> setTextBodyPart
    com.sun.mail.dsn.DeliveryStatus getDeliveryStatus() -> getDeliveryStatus
    void setDeliveryStatus(com.sun.mail.dsn.DeliveryStatus) -> setDeliveryStatus
    javax.mail.internet.MimeMessage getReturnedMessage() -> getReturnedMessage
    void setReturnedMessage(javax.mail.internet.MimeMessage) -> setReturnedMessage
    void setBodyPart(javax.mail.BodyPart,int) -> setBodyPart
    void setSubType(java.lang.String) -> setSubType
    boolean removeBodyPart(javax.mail.BodyPart) -> removeBodyPart
    void removeBodyPart(int) -> removeBodyPart
    void addBodyPart(javax.mail.BodyPart) -> addBodyPart
    void addBodyPart(javax.mail.BodyPart,int) -> addBodyPart
com.sun.mail.dsn.message_deliverystatus -> com.sun.mail.dsn.message_deliverystatus:
    javax.activation.ActivationDataFlavor ourDataFlavor -> ourDataFlavor
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.dsn.multipart_report -> com.sun.mail.dsn.multipart_report:
    javax.activation.ActivationDataFlavor myDF -> myDF
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.dsn.text_rfc822headers -> com.sun.mail.dsn.text_rfc822headers:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor myDFs -> myDFs
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    java.lang.Object getStringContent(javax.activation.DataSource) -> getStringContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
    java.lang.String getCharset(java.lang.String) -> getCharset
com.sun.mail.handlers.message_rfc822 -> com.sun.mail.handlers.message_rfc822:
    javax.activation.ActivationDataFlavor ourDataFlavor -> ourDataFlavor
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.handlers.multipart_mixed -> com.sun.mail.handlers.multipart_mixed:
    javax.activation.ActivationDataFlavor myDF -> myDF
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.handlers.text_html -> com.sun.mail.handlers.text_html:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor getDF() -> getDF
com.sun.mail.handlers.text_plain -> com.sun.mail.handlers.text_plain:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor getDF() -> getDF
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
    java.lang.String getCharset(java.lang.String) -> getCharset
com.sun.mail.handlers.text_xml -> com.sun.mail.handlers.text_xml:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor getDF() -> getDF
com.sun.mail.iap.AString -> com.sun.mail.iap.AString:
    byte[] bytes -> bytes
com.sun.mail.iap.Argument -> com.sun.mail.iap.Argument:
    java.util.Vector items -> items
    void append(com.sun.mail.iap.Argument) -> append
    void writeString(java.lang.String) -> writeString
    void writeString(java.lang.String,java.lang.String) -> writeString
    void writeBytes(byte[]) -> writeBytes
    void writeBytes(java.io.ByteArrayOutputStream) -> writeBytes
    void writeBytes(com.sun.mail.iap.Literal) -> writeBytes
    void writeAtom(java.lang.String) -> writeAtom
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeArgument(com.sun.mail.iap.Argument) -> writeArgument
    void write(com.sun.mail.iap.Protocol) -> write
    void astring(byte[],com.sun.mail.iap.Protocol) -> astring
    void literal(byte[],com.sun.mail.iap.Protocol) -> literal
    void literal(java.io.ByteArrayOutputStream,com.sun.mail.iap.Protocol) -> literal
    void literal(com.sun.mail.iap.Literal,com.sun.mail.iap.Protocol) -> literal
    java.io.OutputStream startLiteral(com.sun.mail.iap.Protocol,int) -> startLiteral
com.sun.mail.iap.Atom -> com.sun.mail.iap.Atom:
    java.lang.String string -> string
com.sun.mail.iap.BadCommandException -> com.sun.mail.iap.BadCommandException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.iap.ByteArray -> com.sun.mail.iap.ByteArray:
    byte[] bytes -> bytes
    int start -> start
    int count -> count
    byte[] getBytes() -> getBytes
    byte[] getNewBytes() -> getNewBytes
    int getStart() -> getStart
    int getCount() -> getCount
    void setCount(int) -> setCount
    java.io.ByteArrayInputStream toByteArrayInputStream() -> toByteArrayInputStream
    void grow(int) -> grow
com.sun.mail.iap.CommandFailedException -> com.sun.mail.iap.CommandFailedException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.iap.ConnectionException -> com.sun.mail.iap.ConnectionException:
    com.sun.mail.iap.Protocol p -> p
    long serialVersionUID -> serialVersionUID
    com.sun.mail.iap.Protocol getProtocol() -> getProtocol
com.sun.mail.iap.Literal -> com.sun.mail.iap.Literal:
    int size() -> size
    void writeTo(java.io.OutputStream) -> writeTo
com.sun.mail.iap.LiteralException -> com.sun.mail.iap.LiteralException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.iap.ParsingException -> com.sun.mail.iap.ParsingException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.iap.Protocol -> com.sun.mail.iap.Protocol:
    java.lang.String host -> host
    java.net.Socket socket -> socket
    boolean debug -> debug
    boolean quote -> quote
    java.io.PrintStream out -> out
    java.util.Properties props -> props
    java.lang.String prefix -> prefix
    boolean connected -> connected
    com.sun.mail.util.TraceInputStream traceInput -> traceInput
    com.sun.mail.iap.ResponseInputStream input -> input
    com.sun.mail.util.TraceOutputStream traceOutput -> traceOutput
    java.io.DataOutputStream output -> output
    int tagCounter -> tagCounter
    java.util.Vector handlers -> handlers
    long timestamp -> timestamp
    byte[] CRLF -> CRLF
    void initStreams(java.io.PrintStream) -> initStreams
    long getTimestamp() -> getTimestamp
    void addResponseHandler(com.sun.mail.iap.ResponseHandler) -> addResponseHandler
    void removeResponseHandler(com.sun.mail.iap.ResponseHandler) -> removeResponseHandler
    void notifyResponseHandlers(com.sun.mail.iap.Response[]) -> notifyResponseHandlers
    void processGreeting(com.sun.mail.iap.Response) -> processGreeting
    com.sun.mail.iap.ResponseInputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    boolean supportsNonSyncLiterals() -> supportsNonSyncLiterals
    com.sun.mail.iap.Response readResponse() -> readResponse
    com.sun.mail.iap.ByteArray getResponseBuffer() -> getResponseBuffer
    java.lang.String writeCommand(java.lang.String,com.sun.mail.iap.Argument) -> writeCommand
    com.sun.mail.iap.Response[] command(java.lang.String,com.sun.mail.iap.Argument) -> command
    void handleResult(com.sun.mail.iap.Response) -> handleResult
    void simpleCommand(java.lang.String,com.sun.mail.iap.Argument) -> simpleCommand
    void startTLS(java.lang.String) -> startTLS
    void disconnect() -> disconnect
    void finalize() -> finalize
com.sun.mail.iap.ProtocolException -> com.sun.mail.iap.ProtocolException:
    com.sun.mail.iap.Response response -> response
    long serialVersionUID -> serialVersionUID
    com.sun.mail.iap.Response getResponse() -> getResponse
com.sun.mail.iap.Response -> com.sun.mail.iap.Response:
    int index -> index
    int pindex -> pindex
    int size -> size
    byte[] buffer -> buffer
    int type -> type
    java.lang.String tag -> tag
    int increment -> increment
    int TAG_MASK -> TAG_MASK
    int CONTINUATION -> CONTINUATION
    int TAGGED -> TAGGED
    int UNTAGGED -> UNTAGGED
    int TYPE_MASK -> TYPE_MASK
    int OK -> OK
    int NO -> NO
    int BAD -> BAD
    int BYE -> BYE
    int SYNTHETIC -> SYNTHETIC
    com.sun.mail.iap.Response byeResponse(java.lang.Exception) -> byeResponse
    void parse() -> parse
    void skipSpaces() -> skipSpaces
    void skipToken() -> skipToken
    void skip(int) -> skip
    byte peekByte() -> peekByte
    byte readByte() -> readByte
    java.lang.String readAtom() -> readAtom
    java.lang.String readAtom(char) -> readAtom
    java.lang.String readString(char) -> readString
    java.lang.String[] readStringList() -> readStringList
    int readNumber() -> readNumber
    long readLong() -> readLong
    java.lang.String readString() -> readString
    java.io.ByteArrayInputStream readBytes() -> readBytes
    com.sun.mail.iap.ByteArray readByteArray() -> readByteArray
    java.lang.String readAtomString() -> readAtomString
    java.lang.Object parseString(boolean,boolean) -> parseString
    int getType() -> getType
    boolean isContinuation() -> isContinuation
    boolean isTagged() -> isTagged
    boolean isUnTagged() -> isUnTagged
    boolean isOK() -> isOK
    boolean isNO() -> isNO
    boolean isBAD() -> isBAD
    boolean isBYE() -> isBYE
    boolean isSynthetic() -> isSynthetic
    java.lang.String getTag() -> getTag
    java.lang.String getRest() -> getRest
    void reset() -> reset
    java.lang.String toString() -> toString
com.sun.mail.iap.ResponseHandler -> com.sun.mail.iap.ResponseHandler:
    void handleResponse(com.sun.mail.iap.Response) -> handleResponse
com.sun.mail.iap.ResponseInputStream -> com.sun.mail.iap.ResponseInputStream:
    int minIncrement -> minIncrement
    int maxIncrement -> maxIncrement
    int incrementSlop -> incrementSlop
    java.io.BufferedInputStream bin -> bin
    com.sun.mail.iap.ByteArray readResponse() -> readResponse
    com.sun.mail.iap.ByteArray readResponse(com.sun.mail.iap.ByteArray) -> readResponse
com.sun.mail.imap.ACL -> com.sun.mail.imap.ACL:
    java.lang.String name -> name
    com.sun.mail.imap.Rights rights -> rights
    java.lang.String getName() -> getName
    void setRights(com.sun.mail.imap.Rights) -> setRights
    com.sun.mail.imap.Rights getRights() -> getRights
    java.lang.Object clone() -> clone
com.sun.mail.imap.AppendUID -> com.sun.mail.imap.AppendUID:
    long uidvalidity -> uidvalidity
    long uid -> uid
com.sun.mail.imap.DefaultFolder -> com.sun.mail.imap.DefaultFolder:
    java.lang.String getName() -> getName
    javax.mail.Folder getParent() -> getParent
    javax.mail.Folder[] list(java.lang.String) -> list
    javax.mail.Folder[] listSubscribed(java.lang.String) -> listSubscribed
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void appendMessages(javax.mail.Message[]) -> appendMessages
    javax.mail.Message[] expunge() -> expunge
com.sun.mail.imap.DefaultFolder$1 -> com.sun.mail.imap.DefaultFolder$1:
    com.sun.mail.imap.DefaultFolder this$0 -> this$0
    java.lang.String val$pattern -> val$pattern
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.DefaultFolder$2 -> com.sun.mail.imap.DefaultFolder$2:
    com.sun.mail.imap.DefaultFolder this$0 -> this$0
    java.lang.String val$pattern -> val$pattern
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPBodyPart -> com.sun.mail.imap.IMAPBodyPart:
    com.sun.mail.imap.IMAPMessage message -> message
    com.sun.mail.imap.protocol.BODYSTRUCTURE bs -> bs
    java.lang.String sectionId -> sectionId
    java.lang.String type -> type
    java.lang.String description -> description
    boolean headersLoaded -> headersLoaded
    void updateHeaders() -> updateHeaders
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getContentStream() -> getContentStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setContent(javax.mail.Multipart) -> setContent
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    void loadHeaders() -> loadHeaders
com.sun.mail.imap.IMAPFolder -> com.sun.mail.imap.IMAPFolder:
    java.lang.String fullName -> fullName
    java.lang.String name -> name
    int type -> type
    char separator -> separator
    javax.mail.Flags availableFlags -> availableFlags
    javax.mail.Flags permanentFlags -> permanentFlags
    boolean exists -> exists
    boolean isNamespace -> isNamespace
    java.lang.String[] attributes -> attributes
    com.sun.mail.imap.protocol.IMAPProtocol protocol -> protocol
    java.util.Vector messageCache -> messageCache
    java.lang.Object messageCacheLock -> messageCacheLock
    java.util.Hashtable uidTable -> uidTable
    char UNKNOWN_SEPARATOR -> UNKNOWN_SEPARATOR
    boolean opened -> opened
    boolean reallyClosed -> reallyClosed
    int RUNNING -> RUNNING
    int IDLE -> IDLE
    int ABORTING -> ABORTING
    int idleState -> idleState
    int total -> total
    int recent -> recent
    int realTotal -> realTotal
    long uidvalidity -> uidvalidity
    long uidnext -> uidnext
    boolean doExpungeNotification -> doExpungeNotification
    com.sun.mail.imap.protocol.Status cachedStatus -> cachedStatus
    long cachedStatusTime -> cachedStatusTime
    boolean debug -> debug
    java.io.PrintStream out -> out
    boolean connectionPoolDebug -> connectionPoolDebug
    boolean $assertionsDisabled -> $assertionsDisabled
    void checkExists() -> checkExists
    void checkClosed() -> checkClosed
    void checkOpened() -> checkOpened
    void checkRange(int) -> checkRange
    void checkFlags(javax.mail.Flags) -> checkFlags
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    javax.mail.Folder getParent() -> getParent
    boolean exists() -> exists
    int findName(com.sun.mail.imap.protocol.ListInfo[],java.lang.String) -> findName
    javax.mail.Folder[] list(java.lang.String) -> list
    javax.mail.Folder[] listSubscribed(java.lang.String) -> listSubscribed
    javax.mail.Folder[] doList(java.lang.String,boolean) -> doList
    char getSeparator() -> getSeparator
    int getType() -> getType
    boolean isSubscribed() -> isSubscribed
    void setSubscribed(boolean) -> setSubscribed
    boolean create(int) -> create
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void open(int) -> open
    void fetch(javax.mail.Message[],javax.mail.FetchProfile) -> fetch
    void setFlags(javax.mail.Message[],javax.mail.Flags,boolean) -> setFlags
    void close(boolean) -> close
    void forceClose() -> forceClose
    void close(boolean,boolean) -> close
    void cleanup(boolean) -> cleanup
    boolean isOpen() -> isOpen
    javax.mail.Flags getPermanentFlags() -> getPermanentFlags
    int getMessageCount() -> getMessageCount
    int getNewMessageCount() -> getNewMessageCount
    int getUnreadMessageCount() -> getUnreadMessageCount
    int getDeletedMessageCount() -> getDeletedMessageCount
    com.sun.mail.imap.protocol.Status getStatus() -> getStatus
    javax.mail.Message getMessage(int) -> getMessage
    void appendMessages(javax.mail.Message[]) -> appendMessages
    com.sun.mail.imap.AppendUID[] appendUIDMessages(javax.mail.Message[]) -> appendUIDMessages
    javax.mail.Message[] addMessages(javax.mail.Message[]) -> addMessages
    void copyMessages(javax.mail.Message[],javax.mail.Folder) -> copyMessages
    javax.mail.Message[] expunge() -> expunge
    javax.mail.Message[] expunge(javax.mail.Message[]) -> expunge
    javax.mail.Message[] search(javax.mail.search.SearchTerm) -> search
    javax.mail.Message[] search(javax.mail.search.SearchTerm,javax.mail.Message[]) -> search
    long getUIDValidity() -> getUIDValidity
    long getUIDNext() -> getUIDNext
    javax.mail.Message getMessageByUID(long) -> getMessageByUID
    javax.mail.Message[] getMessagesByUID(long,long) -> getMessagesByUID
    javax.mail.Message[] getMessagesByUID(long[]) -> getMessagesByUID
    long getUID(javax.mail.Message) -> getUID
    javax.mail.Quota[] getQuota() -> getQuota
    void setQuota(javax.mail.Quota) -> setQuota
    com.sun.mail.imap.ACL[] getACL() -> getACL
    void addACL(com.sun.mail.imap.ACL) -> addACL
    void removeACL(java.lang.String) -> removeACL
    void addRights(com.sun.mail.imap.ACL) -> addRights
    void removeRights(com.sun.mail.imap.ACL) -> removeRights
    com.sun.mail.imap.Rights[] listRights(java.lang.String) -> listRights
    com.sun.mail.imap.Rights myRights() -> myRights
    void setACL(com.sun.mail.imap.ACL,char) -> setACL
    java.lang.String[] getAttributes() -> getAttributes
    void idle() -> idle
    void waitIfIdle() -> waitIfIdle
    void handleResponse(com.sun.mail.iap.Response) -> handleResponse
    void handleResponses(com.sun.mail.iap.Response[]) -> handleResponses
    com.sun.mail.imap.protocol.IMAPProtocol getStoreProtocol() -> getStoreProtocol
    void throwClosedException(com.sun.mail.iap.ConnectionException) -> throwClosedException
    com.sun.mail.imap.protocol.IMAPProtocol getProtocol() -> getProtocol
    java.lang.Object doCommand(com.sun.mail.imap.IMAPFolder$ProtocolCommand) -> doCommand
    java.lang.Object doOptionalCommand(java.lang.String,com.sun.mail.imap.IMAPFolder$ProtocolCommand) -> doOptionalCommand
    java.lang.Object doCommandIgnoreFailure(com.sun.mail.imap.IMAPFolder$ProtocolCommand) -> doCommandIgnoreFailure
    java.lang.Object doProtocolCommand(com.sun.mail.imap.IMAPFolder$ProtocolCommand) -> doProtocolCommand
    void releaseStoreProtocol(com.sun.mail.imap.protocol.IMAPProtocol) -> releaseStoreProtocol
    void releaseProtocol(boolean) -> releaseProtocol
    void keepConnectionAlive(boolean) -> keepConnectionAlive
    com.sun.mail.imap.IMAPMessage getMessageBySeqNumber(int) -> getMessageBySeqNumber
    boolean isDirectory() -> isDirectory
    com.sun.mail.imap.protocol.Status access$0(com.sun.mail.imap.IMAPFolder) -> access$0
    int access$1(com.sun.mail.imap.IMAPFolder) -> access$1
    void access$2(com.sun.mail.imap.IMAPFolder,int) -> access$2
com.sun.mail.imap.IMAPFolder$1 -> com.sun.mail.imap.IMAPFolder$1:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.String val$lname -> val$lname
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$10 -> com.sun.mail.imap.IMAPFolder$10:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    javax.mail.Flags val$f -> val$f
    java.util.Date val$dd -> val$dd
    com.sun.mail.imap.MessageLiteral val$mos -> val$mos
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$11 -> com.sun.mail.imap.IMAPFolder$11:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    javax.mail.Flags val$f -> val$f
    java.util.Date val$dd -> val$dd
    com.sun.mail.imap.MessageLiteral val$mos -> val$mos
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$12 -> com.sun.mail.imap.IMAPFolder$12:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$13 -> com.sun.mail.imap.IMAPFolder$13:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    javax.mail.Quota val$quota -> val$quota
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$14 -> com.sun.mail.imap.IMAPFolder$14:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$15 -> com.sun.mail.imap.IMAPFolder$15:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.String val$name -> val$name
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$16 -> com.sun.mail.imap.IMAPFolder$16:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.String val$name -> val$name
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$17 -> com.sun.mail.imap.IMAPFolder$17:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$18 -> com.sun.mail.imap.IMAPFolder$18:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    char val$mod -> val$mod
    com.sun.mail.imap.ACL val$acl -> val$acl
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$19 -> com.sun.mail.imap.IMAPFolder$19:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$2 -> com.sun.mail.imap.IMAPFolder$2:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    boolean val$subscribed -> val$subscribed
    char val$c -> val$c
    java.lang.String val$pattern -> val$pattern
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$3 -> com.sun.mail.imap.IMAPFolder$3:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$4 -> com.sun.mail.imap.IMAPFolder$4:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.String val$lname -> val$lname
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$5 -> com.sun.mail.imap.IMAPFolder$5:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    boolean val$subscribe -> val$subscribe
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$6 -> com.sun.mail.imap.IMAPFolder$6:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    int val$type -> val$type
    char val$sep -> val$sep
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$7 -> com.sun.mail.imap.IMAPFolder$7:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$8 -> com.sun.mail.imap.IMAPFolder$8:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$9 -> com.sun.mail.imap.IMAPFolder$9:
    com.sun.mail.imap.IMAPFolder this$0 -> this$0
    javax.mail.Folder val$f -> val$f
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPFolder$FetchProfileItem -> com.sun.mail.imap.IMAPFolder$FetchProfileItem:
    com.sun.mail.imap.IMAPFolder$FetchProfileItem HEADERS -> HEADERS
    com.sun.mail.imap.IMAPFolder$FetchProfileItem SIZE -> SIZE
com.sun.mail.imap.IMAPFolder$ProtocolCommand -> com.sun.mail.imap.IMAPFolder$ProtocolCommand:
    java.lang.Object doCommand(com.sun.mail.imap.protocol.IMAPProtocol) -> doCommand
com.sun.mail.imap.IMAPInputStream -> com.sun.mail.imap.IMAPInputStream:
    com.sun.mail.imap.IMAPMessage msg -> msg
    java.lang.String section -> section
    int pos -> pos
    int blksize -> blksize
    int max -> max
    byte[] buf -> buf
    int bufcount -> bufcount
    int bufpos -> bufpos
    boolean peek -> peek
    com.sun.mail.iap.ByteArray readbuf -> readbuf
    int slop -> slop
    void forceCheckExpunged() -> forceCheckExpunged
    void fill() -> fill
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int available() -> available
    void checkSeen() -> checkSeen
com.sun.mail.imap.IMAPMessage -> com.sun.mail.imap.IMAPMessage:
    com.sun.mail.imap.protocol.BODYSTRUCTURE bs -> bs
    com.sun.mail.imap.protocol.ENVELOPE envelope -> envelope
    java.util.Date receivedDate -> receivedDate
    int size -> size
    boolean peek -> peek
    int seqnum -> seqnum
    long uid -> uid
    java.lang.String sectionId -> sectionId
    java.lang.String type -> type
    java.lang.String subject -> subject
    java.lang.String description -> description
    boolean headersLoaded -> headersLoaded
    java.util.Hashtable loadedHeaders -> loadedHeaders
    java.lang.String EnvelopeCmd -> EnvelopeCmd
    com.sun.mail.imap.protocol.IMAPProtocol getProtocol() -> getProtocol
    boolean isREV1() -> isREV1
    java.lang.Object getMessageCacheLock() -> getMessageCacheLock
    int getSequenceNumber() -> getSequenceNumber
    void setSequenceNumber(int) -> setSequenceNumber
    void setMessageNumber(int) -> setMessageNumber
    long getUID() -> getUID
    void setUID(long) -> setUID
    void setExpunged(boolean) -> setExpunged
    void checkExpunged() -> checkExpunged
    void forceCheckExpunged() -> forceCheckExpunged
    int getFetchBlockSize() -> getFetchBlockSize
    javax.mail.Address[] getFrom() -> getFrom
    void setFrom(javax.mail.Address) -> setFrom
    void addFrom(javax.mail.Address[]) -> addFrom
    javax.mail.Address getSender() -> getSender
    void setSender(javax.mail.Address) -> setSender
    javax.mail.Address[] getRecipients(javax.mail.Message$RecipientType) -> getRecipients
    void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> setRecipients
    void addRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> addRecipients
    javax.mail.Address[] getReplyTo() -> getReplyTo
    void setReplyTo(javax.mail.Address[]) -> setReplyTo
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String,java.lang.String) -> setSubject
    java.util.Date getSentDate() -> getSentDate
    void setSentDate(java.util.Date) -> setSentDate
    java.util.Date getReceivedDate() -> getReceivedDate
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    java.lang.String getInReplyTo() -> getInReplyTo
    java.lang.String getContentType() -> getContentType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    void setContentID(java.lang.String) -> setContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    java.lang.String getMessageID() -> getMessageID
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getContentStream() -> getContentStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    javax.mail.Flags getFlags() -> getFlags
    boolean isSet(javax.mail.Flags$Flag) -> isSet
    void setFlags(javax.mail.Flags,boolean) -> setFlags
    void setPeek(boolean) -> setPeek
    boolean getPeek() -> getPeek
    void invalidateHeaders() -> invalidateHeaders
    void fetch(com.sun.mail.imap.IMAPFolder,javax.mail.Message[],javax.mail.FetchProfile) -> fetch
    void loadEnvelope() -> loadEnvelope
    java.lang.String craftHeaderCmd(com.sun.mail.imap.protocol.IMAPProtocol,java.lang.String[]) -> craftHeaderCmd
    void loadBODYSTRUCTURE() -> loadBODYSTRUCTURE
    void loadHeaders() -> loadHeaders
    void loadFlags() -> loadFlags
    boolean areHeadersLoaded() -> areHeadersLoaded
    void setHeadersLoaded(boolean) -> setHeadersLoaded
    boolean isHeaderLoaded(java.lang.String) -> isHeaderLoaded
    void setHeaderLoaded(java.lang.String) -> setHeaderLoaded
    java.lang.String toSection(java.lang.String) -> toSection
    javax.mail.internet.InternetAddress[] aaclone(javax.mail.internet.InternetAddress[]) -> aaclone
    javax.mail.Flags _getFlags() -> _getFlags
    com.sun.mail.imap.protocol.ENVELOPE _getEnvelope() -> _getEnvelope
    com.sun.mail.imap.protocol.BODYSTRUCTURE _getBodyStructure() -> _getBodyStructure
    void _setFlags(javax.mail.Flags) -> _setFlags
    javax.mail.Session _getSession() -> _getSession
    com.sun.mail.imap.protocol.ENVELOPE access$0(com.sun.mail.imap.IMAPMessage) -> access$0
    javax.mail.Flags access$1(com.sun.mail.imap.IMAPMessage) -> access$1
    com.sun.mail.imap.protocol.BODYSTRUCTURE access$2(com.sun.mail.imap.IMAPMessage) -> access$2
    boolean access$3(com.sun.mail.imap.IMAPMessage) -> access$3
    int access$4(com.sun.mail.imap.IMAPMessage) -> access$4
    boolean access$5(com.sun.mail.imap.IMAPMessage,java.lang.String) -> access$5
com.sun.mail.imap.IMAPMessage$1FetchProfileCondition -> com.sun.mail.imap.IMAPMessage$1FetchProfileCondition:
    boolean needEnvelope -> needEnvelope
    boolean needFlags -> needFlags
    boolean needBodyStructure -> needBodyStructure
    boolean needUID -> needUID
    boolean needHeaders -> needHeaders
    boolean needSize -> needSize
    java.lang.String[] hdrs -> hdrs
    boolean test(com.sun.mail.imap.IMAPMessage) -> test
com.sun.mail.imap.IMAPMultipartDataSource -> com.sun.mail.imap.IMAPMultipartDataSource:
    java.util.Vector parts -> parts
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
com.sun.mail.imap.IMAPNestedMessage -> com.sun.mail.imap.IMAPNestedMessage:
    com.sun.mail.imap.IMAPMessage msg -> msg
    com.sun.mail.imap.protocol.IMAPProtocol getProtocol() -> getProtocol
    boolean isREV1() -> isREV1
    java.lang.Object getMessageCacheLock() -> getMessageCacheLock
    int getSequenceNumber() -> getSequenceNumber
    void checkExpunged() -> checkExpunged
    boolean isExpunged() -> isExpunged
    int getFetchBlockSize() -> getFetchBlockSize
    int getSize() -> getSize
    void setFlags(javax.mail.Flags,boolean) -> setFlags
com.sun.mail.imap.IMAPSSLStore -> com.sun.mail.imap.IMAPSSLStore:
com.sun.mail.imap.IMAPStore -> com.sun.mail.imap.IMAPStore:
    int RESPONSE -> RESPONSE
    java.lang.String name -> name
    int defaultPort -> defaultPort
    boolean isSSL -> isSSL
    int port -> port
    int blksize -> blksize
    int statusCacheTimeout -> statusCacheTimeout
    int appendBufferSize -> appendBufferSize
    int minIdleTime -> minIdleTime
    java.lang.String host -> host
    java.lang.String user -> user
    java.lang.String password -> password
    java.lang.String proxyAuthUser -> proxyAuthUser
    java.lang.String authorizationID -> authorizationID
    java.lang.String saslRealm -> saslRealm
    com.sun.mail.imap.protocol.Namespaces namespaces -> namespaces
    boolean disableAuthLogin -> disableAuthLogin
    boolean disableAuthPlain -> disableAuthPlain
    boolean enableStartTLS -> enableStartTLS
    boolean enableSASL -> enableSASL
    java.lang.String[] saslMechanisms -> saslMechanisms
    boolean forcePasswordRefresh -> forcePasswordRefresh
    boolean enableImapEvents -> enableImapEvents
    boolean connected -> connected
    java.io.PrintStream out -> out
    com.sun.mail.imap.IMAPStore$ConnectionPool pool -> pool
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String) -> protocolConnect
    void login(com.sun.mail.imap.protocol.IMAPProtocol,java.lang.String,java.lang.String) -> login
    void setUsername(java.lang.String) -> setUsername
    void setPassword(java.lang.String) -> setPassword
    com.sun.mail.imap.protocol.IMAPProtocol getProtocol(com.sun.mail.imap.IMAPFolder) -> getProtocol
    com.sun.mail.imap.protocol.IMAPProtocol getStoreProtocol() -> getStoreProtocol
    boolean allowReadOnlySelect() -> allowReadOnlySelect
    boolean hasSeparateStoreConnection() -> hasSeparateStoreConnection
    boolean getConnectionPoolDebug() -> getConnectionPoolDebug
    boolean isConnectionPoolFull() -> isConnectionPoolFull
    void releaseProtocol(com.sun.mail.imap.IMAPFolder,com.sun.mail.imap.protocol.IMAPProtocol) -> releaseProtocol
    void releaseStoreProtocol(com.sun.mail.imap.protocol.IMAPProtocol) -> releaseStoreProtocol
    void emptyConnectionPool(boolean) -> emptyConnectionPool
    void timeoutConnections() -> timeoutConnections
    int getFetchBlockSize() -> getFetchBlockSize
    javax.mail.Session getSession() -> getSession
    int getStatusCacheTimeout() -> getStatusCacheTimeout
    int getAppendBufferSize() -> getAppendBufferSize
    int getMinIdleTime() -> getMinIdleTime
    boolean hasCapability(java.lang.String) -> hasCapability
    boolean isConnected() -> isConnected
    void close() -> close
    void finalize() -> finalize
    void cleanup() -> cleanup
    void cleanup(boolean) -> cleanup
    javax.mail.Folder getDefaultFolder() -> getDefaultFolder
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    javax.mail.Folder getFolder(javax.mail.URLName) -> getFolder
    javax.mail.Folder[] getPersonalNamespaces() -> getPersonalNamespaces
    javax.mail.Folder[] getUserNamespaces(java.lang.String) -> getUserNamespaces
    javax.mail.Folder[] getSharedNamespaces() -> getSharedNamespaces
    com.sun.mail.imap.protocol.Namespaces getNamespaces() -> getNamespaces
    javax.mail.Folder[] namespaceToFolders(com.sun.mail.imap.protocol.Namespaces$Namespace[],java.lang.String) -> namespaceToFolders
    javax.mail.Quota[] getQuota(java.lang.String) -> getQuota
    void setQuota(javax.mail.Quota) -> setQuota
    void checkConnected() -> checkConnected
    void handleResponse(com.sun.mail.iap.Response) -> handleResponse
    void idle() -> idle
    void waitIfIdle() -> waitIfIdle
    void handleResponseCode(com.sun.mail.iap.Response) -> handleResponseCode
com.sun.mail.imap.IMAPStore$ConnectionPool -> com.sun.mail.imap.IMAPStore$ConnectionPool:
    java.util.Vector authenticatedConnections -> authenticatedConnections
    java.util.Vector folders -> folders
    boolean separateStoreConnection -> separateStoreConnection
    boolean storeConnectionInUse -> storeConnectionInUse
    long clientTimeoutInterval -> clientTimeoutInterval
    long serverTimeoutInterval -> serverTimeoutInterval
    long lastTimePruned -> lastTimePruned
    int poolSize -> poolSize
    long pruningInterval -> pruningInterval
    boolean debug -> debug
    int RUNNING -> RUNNING
    int IDLE -> IDLE
    int ABORTING -> ABORTING
    int idleState -> idleState
    com.sun.mail.imap.protocol.IMAPProtocol idleProtocol -> idleProtocol
    void access$0(com.sun.mail.imap.IMAPStore$ConnectionPool,long) -> access$0
    void access$1(com.sun.mail.imap.IMAPStore$ConnectionPool,boolean) -> access$1
    void access$2(com.sun.mail.imap.IMAPStore$ConnectionPool,int) -> access$2
    boolean access$3(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$3
    int access$4(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$4
    void access$5(com.sun.mail.imap.IMAPStore$ConnectionPool,long) -> access$5
    long access$6(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$6
    void access$7(com.sun.mail.imap.IMAPStore$ConnectionPool,long) -> access$7
    long access$8(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$8
    void access$9(com.sun.mail.imap.IMAPStore$ConnectionPool,boolean) -> access$9
    java.util.Vector access$10(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$10
    boolean access$11(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$11
    boolean access$12(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$12
    java.util.Vector access$13(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$13
    void access$14(com.sun.mail.imap.IMAPStore$ConnectionPool,java.util.Vector) -> access$14
    void access$15(com.sun.mail.imap.IMAPStore$ConnectionPool,boolean) -> access$15
    long access$16(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$16
    long access$17(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$17
    void access$18(com.sun.mail.imap.IMAPStore$ConnectionPool,com.sun.mail.imap.protocol.IMAPProtocol) -> access$18
    int access$19(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$19
    void access$20(com.sun.mail.imap.IMAPStore$ConnectionPool,int) -> access$20
    com.sun.mail.imap.protocol.IMAPProtocol access$21(com.sun.mail.imap.IMAPStore$ConnectionPool) -> access$21
com.sun.mail.imap.LengthCounter -> com.sun.mail.imap.LengthCounter:
    int size -> size
    byte[] buf -> buf
    int maxsize -> maxsize
    void write(int) -> write
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    int getSize() -> getSize
    byte[] getBytes() -> getBytes
com.sun.mail.imap.MessageLiteral -> com.sun.mail.imap.MessageLiteral:
    javax.mail.Message msg -> msg
    int msgSize -> msgSize
    byte[] buf -> buf
    int size() -> size
    void writeTo(java.io.OutputStream) -> writeTo
com.sun.mail.imap.Rights -> com.sun.mail.imap.Rights:
    boolean[] rights -> rights
    void add(com.sun.mail.imap.Rights$Right) -> add
    void add(com.sun.mail.imap.Rights) -> add
    void remove(com.sun.mail.imap.Rights$Right) -> remove
    void remove(com.sun.mail.imap.Rights) -> remove
    boolean contains(com.sun.mail.imap.Rights$Right) -> contains
    boolean contains(com.sun.mail.imap.Rights) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.sun.mail.imap.Rights$Right[] getRights() -> getRights
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
com.sun.mail.imap.Rights$Right -> com.sun.mail.imap.Rights$Right:
    com.sun.mail.imap.Rights$Right[] cache -> cache
    com.sun.mail.imap.Rights$Right LOOKUP -> LOOKUP
    com.sun.mail.imap.Rights$Right READ -> READ
    com.sun.mail.imap.Rights$Right KEEP_SEEN -> KEEP_SEEN
    com.sun.mail.imap.Rights$Right WRITE -> WRITE
    com.sun.mail.imap.Rights$Right INSERT -> INSERT
    com.sun.mail.imap.Rights$Right POST -> POST
    com.sun.mail.imap.Rights$Right CREATE -> CREATE
    com.sun.mail.imap.Rights$Right DELETE -> DELETE
    com.sun.mail.imap.Rights$Right ADMINISTER -> ADMINISTER
    char right -> right
    com.sun.mail.imap.Rights$Right getInstance(char) -> getInstance
    java.lang.String toString() -> toString
com.sun.mail.imap.Utility -> com.sun.mail.imap.Utility:
    com.sun.mail.imap.protocol.MessageSet[] toMessageSet(javax.mail.Message[],com.sun.mail.imap.Utility$Condition) -> toMessageSet
    com.sun.mail.imap.protocol.UIDSet[] toUIDSet(javax.mail.Message[]) -> toUIDSet
com.sun.mail.imap.Utility$Condition -> com.sun.mail.imap.Utility$Condition:
    boolean test(com.sun.mail.imap.IMAPMessage) -> test
com.sun.mail.imap.protocol.BASE64MailboxDecoder -> com.sun.mail.imap.protocol.BASE64MailboxDecoder:
    char[] pem_array -> pem_array
    byte[] pem_convert_array -> pem_convert_array
    java.lang.String decode(java.lang.String) -> decode
    int base64decode(char[],int,java.text.CharacterIterator) -> base64decode
com.sun.mail.imap.protocol.BASE64MailboxEncoder -> com.sun.mail.imap.protocol.BASE64MailboxEncoder:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    boolean started -> started
    java.io.Writer out -> out
    char[] pem_array -> pem_array
    java.lang.String encode(java.lang.String) -> encode
    void write(int) -> write
    void flush() -> flush
    void encode() -> encode
com.sun.mail.imap.protocol.BODY -> com.sun.mail.imap.protocol.BODY:
    char[] name -> name
    int msgno -> msgno
    com.sun.mail.iap.ByteArray data -> data
    java.lang.String section -> section
    int origin -> origin
    com.sun.mail.iap.ByteArray getByteArray() -> getByteArray
    java.io.ByteArrayInputStream getByteArrayInputStream() -> getByteArrayInputStream
com.sun.mail.imap.protocol.BODYSTRUCTURE -> com.sun.mail.imap.protocol.BODYSTRUCTURE:
    char[] name -> name
    int msgno -> msgno
    java.lang.String type -> type
    java.lang.String subtype -> subtype
    java.lang.String encoding -> encoding
    int lines -> lines
    int size -> size
    java.lang.String disposition -> disposition
    java.lang.String id -> id
    java.lang.String description -> description
    java.lang.String md5 -> md5
    java.lang.String attachment -> attachment
    javax.mail.internet.ParameterList cParams -> cParams
    javax.mail.internet.ParameterList dParams -> dParams
    java.lang.String[] language -> language
    com.sun.mail.imap.protocol.BODYSTRUCTURE[] bodies -> bodies
    com.sun.mail.imap.protocol.ENVELOPE envelope -> envelope
    int SINGLE -> SINGLE
    int MULTI -> MULTI
    int NESTED -> NESTED
    int processedType -> processedType
    boolean parseDebug -> parseDebug
    boolean isMulti() -> isMulti
    boolean isSingle() -> isSingle
    boolean isNested() -> isNested
    javax.mail.internet.ParameterList parseParameters(com.sun.mail.iap.Response) -> parseParameters
    void parseBodyExtension(com.sun.mail.iap.Response) -> parseBodyExtension
com.sun.mail.imap.protocol.ENVELOPE -> com.sun.mail.imap.protocol.ENVELOPE:
    char[] name -> name
    int msgno -> msgno
    java.util.Date date -> date
    java.lang.String subject -> subject
    javax.mail.internet.InternetAddress[] from -> from
    javax.mail.internet.InternetAddress[] sender -> sender
    javax.mail.internet.InternetAddress[] replyTo -> replyTo
    javax.mail.internet.InternetAddress[] to -> to
    javax.mail.internet.InternetAddress[] cc -> cc
    javax.mail.internet.InternetAddress[] bcc -> bcc
    java.lang.String inReplyTo -> inReplyTo
    java.lang.String messageId -> messageId
    javax.mail.internet.MailDateFormat mailDateFormat -> mailDateFormat
    javax.mail.internet.InternetAddress[] parseAddressList(com.sun.mail.iap.Response) -> parseAddressList
com.sun.mail.imap.protocol.FLAGS -> com.sun.mail.imap.protocol.FLAGS:
    char[] name -> name
    int msgno -> msgno
    long serialVersionUID -> serialVersionUID
com.sun.mail.imap.protocol.FetchResponse -> com.sun.mail.imap.protocol.FetchResponse:
    com.sun.mail.imap.protocol.Item[] items -> items
    char[] HEADER -> HEADER
    char[] TEXT -> TEXT
    int getItemCount() -> getItemCount
    com.sun.mail.imap.protocol.Item getItem(int) -> getItem
    com.sun.mail.imap.protocol.Item getItem(java.lang.Class) -> getItem
    com.sun.mail.imap.protocol.Item getItem(com.sun.mail.iap.Response[],int,java.lang.Class) -> getItem
    void parse() -> parse
    boolean match(char[]) -> match
com.sun.mail.imap.protocol.IMAPAddress -> com.sun.mail.imap.protocol.IMAPAddress:
    boolean group -> group
    javax.mail.internet.InternetAddress[] grouplist -> grouplist
    java.lang.String groupname -> groupname
    long serialVersionUID -> serialVersionUID
    boolean isEndOfGroup() -> isEndOfGroup
    boolean isGroup() -> isGroup
    javax.mail.internet.InternetAddress[] getGroup(boolean) -> getGroup
com.sun.mail.imap.protocol.IMAPProtocol -> com.sun.mail.imap.protocol.IMAPProtocol:
    boolean connected -> connected
    boolean rev1 -> rev1
    boolean authenticated -> authenticated
    java.util.Map capabilities -> capabilities
    java.util.List authmechs -> authmechs
    java.lang.String[] searchCharsets -> searchCharsets
    java.lang.String name -> name
    com.sun.mail.imap.protocol.SaslAuthenticator saslAuthenticator -> saslAuthenticator
    com.sun.mail.iap.ByteArray ba -> ba
    byte[] CRLF -> CRLF
    java.lang.String idleTag -> idleTag
    byte[] DONE -> DONE
    void capability() -> capability
    void setCapabilities(com.sun.mail.iap.Response) -> setCapabilities
    void parseCapabilities(com.sun.mail.iap.Response) -> parseCapabilities
    void processGreeting(com.sun.mail.iap.Response) -> processGreeting
    boolean isAuthenticated() -> isAuthenticated
    boolean isREV1() -> isREV1
    boolean supportsNonSyncLiterals() -> supportsNonSyncLiterals
    com.sun.mail.iap.Response readResponse() -> readResponse
    boolean hasCapability(java.lang.String) -> hasCapability
    java.util.Map getCapabilities() -> getCapabilities
    void disconnect() -> disconnect
    void noop() -> noop
    void logout() -> logout
    void login(java.lang.String,java.lang.String) -> login
    void authlogin(java.lang.String,java.lang.String) -> authlogin
    void authplain(java.lang.String,java.lang.String,java.lang.String) -> authplain
    void sasllogin(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sasllogin
    java.io.OutputStream getIMAPOutputStream() -> getIMAPOutputStream
    void proxyauth(java.lang.String) -> proxyauth
    void startTLS() -> startTLS
    com.sun.mail.imap.protocol.MailboxInfo select(java.lang.String) -> select
    com.sun.mail.imap.protocol.MailboxInfo examine(java.lang.String) -> examine
    com.sun.mail.imap.protocol.Status status(java.lang.String,java.lang.String[]) -> status
    void create(java.lang.String) -> create
    void delete(java.lang.String) -> delete
    void rename(java.lang.String,java.lang.String) -> rename
    void subscribe(java.lang.String) -> subscribe
    void unsubscribe(java.lang.String) -> unsubscribe
    com.sun.mail.imap.protocol.ListInfo[] list(java.lang.String,java.lang.String) -> list
    com.sun.mail.imap.protocol.ListInfo[] lsub(java.lang.String,java.lang.String) -> lsub
    com.sun.mail.imap.protocol.ListInfo[] doList(java.lang.String,java.lang.String,java.lang.String) -> doList
    void append(java.lang.String,javax.mail.Flags,java.util.Date,com.sun.mail.iap.Literal) -> append
    com.sun.mail.imap.AppendUID appenduid(java.lang.String,javax.mail.Flags,java.util.Date,com.sun.mail.iap.Literal) -> appenduid
    com.sun.mail.imap.AppendUID appenduid(java.lang.String,javax.mail.Flags,java.util.Date,com.sun.mail.iap.Literal,boolean) -> appenduid
    com.sun.mail.imap.AppendUID getAppendUID(com.sun.mail.iap.Response) -> getAppendUID
    void check() -> check
    void close() -> close
    void expunge() -> expunge
    void uidexpunge(com.sun.mail.imap.protocol.UIDSet[]) -> uidexpunge
    com.sun.mail.imap.protocol.BODYSTRUCTURE fetchBodyStructure(int) -> fetchBodyStructure
    com.sun.mail.imap.protocol.BODY peekBody(int,java.lang.String) -> peekBody
    com.sun.mail.imap.protocol.BODY fetchBody(int,java.lang.String) -> fetchBody
    com.sun.mail.imap.protocol.BODY fetchBody(int,java.lang.String,boolean) -> fetchBody
    com.sun.mail.imap.protocol.BODY peekBody(int,java.lang.String,int,int) -> peekBody
    com.sun.mail.imap.protocol.BODY fetchBody(int,java.lang.String,int,int) -> fetchBody
    com.sun.mail.imap.protocol.BODY peekBody(int,java.lang.String,int,int,com.sun.mail.iap.ByteArray) -> peekBody
    com.sun.mail.imap.protocol.BODY fetchBody(int,java.lang.String,int,int,com.sun.mail.iap.ByteArray) -> fetchBody
    com.sun.mail.imap.protocol.BODY fetchBody(int,java.lang.String,int,int,boolean,com.sun.mail.iap.ByteArray) -> fetchBody
    com.sun.mail.iap.ByteArray getResponseBuffer() -> getResponseBuffer
    com.sun.mail.imap.protocol.RFC822DATA fetchRFC822(int,java.lang.String) -> fetchRFC822
    javax.mail.Flags fetchFlags(int) -> fetchFlags
    com.sun.mail.imap.protocol.UID fetchUID(int) -> fetchUID
    com.sun.mail.imap.protocol.UID fetchSequenceNumber(long) -> fetchSequenceNumber
    com.sun.mail.imap.protocol.UID[] fetchSequenceNumbers(long,long) -> fetchSequenceNumbers
    com.sun.mail.imap.protocol.UID[] fetchSequenceNumbers(long[]) -> fetchSequenceNumbers
    com.sun.mail.iap.Response[] fetch(com.sun.mail.imap.protocol.MessageSet[],java.lang.String) -> fetch
    com.sun.mail.iap.Response[] fetch(int,int,java.lang.String) -> fetch
    com.sun.mail.iap.Response[] fetch(int,java.lang.String) -> fetch
    com.sun.mail.iap.Response[] fetch(java.lang.String,java.lang.String,boolean) -> fetch
    void copy(com.sun.mail.imap.protocol.MessageSet[],java.lang.String) -> copy
    void copy(int,int,java.lang.String) -> copy
    void copy(java.lang.String,java.lang.String) -> copy
    void storeFlags(com.sun.mail.imap.protocol.MessageSet[],javax.mail.Flags,boolean) -> storeFlags
    void storeFlags(int,int,javax.mail.Flags,boolean) -> storeFlags
    void storeFlags(int,javax.mail.Flags,boolean) -> storeFlags
    void storeFlags(java.lang.String,javax.mail.Flags,boolean) -> storeFlags
    java.lang.String createFlagList(javax.mail.Flags) -> createFlagList
    int[] search(com.sun.mail.imap.protocol.MessageSet[],javax.mail.search.SearchTerm) -> search
    int[] search(javax.mail.search.SearchTerm) -> search
    int[] search(java.lang.String,javax.mail.search.SearchTerm) -> search
    int[] issueSearch(java.lang.String,javax.mail.search.SearchTerm,java.lang.String) -> issueSearch
    com.sun.mail.imap.protocol.Namespaces namespace() -> namespace
    javax.mail.Quota[] getQuotaRoot(java.lang.String) -> getQuotaRoot
    javax.mail.Quota[] getQuota(java.lang.String) -> getQuota
    void setQuota(javax.mail.Quota) -> setQuota
    javax.mail.Quota parseQuota(com.sun.mail.iap.Response) -> parseQuota
    void setACL(java.lang.String,char,com.sun.mail.imap.ACL) -> setACL
    void deleteACL(java.lang.String,java.lang.String) -> deleteACL
    com.sun.mail.imap.ACL[] getACL(java.lang.String) -> getACL
    com.sun.mail.imap.Rights[] listRights(java.lang.String,java.lang.String) -> listRights
    com.sun.mail.imap.Rights myRights(java.lang.String) -> myRights
    void idleStart() -> idleStart
    com.sun.mail.iap.Response readIdleResponse() -> readIdleResponse
    boolean processIdleResponse(com.sun.mail.iap.Response) -> processIdleResponse
    void idleAbort() -> idleAbort
com.sun.mail.imap.protocol.IMAPResponse -> com.sun.mail.imap.protocol.IMAPResponse:
    java.lang.String key -> key
    int number -> number
    java.lang.String[] readSimpleList() -> readSimpleList
    java.lang.String getKey() -> getKey
    boolean keyEquals(java.lang.String) -> keyEquals
    int getNumber() -> getNumber
    com.sun.mail.imap.protocol.IMAPResponse readResponse(com.sun.mail.iap.Protocol) -> readResponse
com.sun.mail.imap.protocol.IMAPSaslAuthenticator -> com.sun.mail.imap.protocol.IMAPSaslAuthenticator:
    com.sun.mail.imap.protocol.IMAPProtocol pr -> pr
    java.lang.String name -> name
    java.util.Properties props -> props
    boolean debug -> debug
    java.io.PrintStream out -> out
    java.lang.String host -> host
    boolean authenticate(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> authenticate
    boolean access$0(com.sun.mail.imap.protocol.IMAPSaslAuthenticator) -> access$0
    java.io.PrintStream access$1(com.sun.mail.imap.protocol.IMAPSaslAuthenticator) -> access$1
com.sun.mail.imap.protocol.IMAPSaslAuthenticator$1 -> com.sun.mail.imap.protocol.IMAPSaslAuthenticator$1:
    com.sun.mail.imap.protocol.IMAPSaslAuthenticator this$0 -> this$0
    java.lang.String val$u0 -> val$u0
    java.lang.String val$p0 -> val$p0
    java.lang.String val$r0 -> val$r0
    void handle(javax.security.auth.callback.Callback[]) -> handle
com.sun.mail.imap.protocol.INTERNALDATE -> com.sun.mail.imap.protocol.INTERNALDATE:
    char[] name -> name
    int msgno -> msgno
    java.util.Date date -> date
    javax.mail.internet.MailDateFormat mailDateFormat -> mailDateFormat
    java.text.SimpleDateFormat df -> df
    java.util.Date getDate() -> getDate
    java.lang.String format(java.util.Date) -> format
com.sun.mail.imap.protocol.Item -> com.sun.mail.imap.protocol.Item:
com.sun.mail.imap.protocol.ListInfo -> com.sun.mail.imap.protocol.ListInfo:
    java.lang.String name -> name
    char separator -> separator
    boolean hasInferiors -> hasInferiors
    boolean canOpen -> canOpen
    int changeState -> changeState
    java.lang.String[] attrs -> attrs
    int CHANGED -> CHANGED
    int UNCHANGED -> UNCHANGED
    int INDETERMINATE -> INDETERMINATE
com.sun.mail.imap.protocol.MailboxInfo -> com.sun.mail.imap.protocol.MailboxInfo:
    javax.mail.Flags availableFlags -> availableFlags
    javax.mail.Flags permanentFlags -> permanentFlags
    int total -> total
    int recent -> recent
    int first -> first
    long uidvalidity -> uidvalidity
    long uidnext -> uidnext
    int mode -> mode
com.sun.mail.imap.protocol.MessageSet -> com.sun.mail.imap.protocol.MessageSet:
    int start -> start
    int end -> end
    int size() -> size
    com.sun.mail.imap.protocol.MessageSet[] createMessageSets(int[]) -> createMessageSets
    java.lang.String toString(com.sun.mail.imap.protocol.MessageSet[]) -> toString
    int size(com.sun.mail.imap.protocol.MessageSet[]) -> size
com.sun.mail.imap.protocol.Namespaces -> com.sun.mail.imap.protocol.Namespaces:
    com.sun.mail.imap.protocol.Namespaces$Namespace[] personal -> personal
    com.sun.mail.imap.protocol.Namespaces$Namespace[] otherUsers -> otherUsers
    com.sun.mail.imap.protocol.Namespaces$Namespace[] shared -> shared
    com.sun.mail.imap.protocol.Namespaces$Namespace[] getNamespaces(com.sun.mail.iap.Response) -> getNamespaces
com.sun.mail.imap.protocol.Namespaces$Namespace -> com.sun.mail.imap.protocol.Namespaces$Namespace:
    java.lang.String prefix -> prefix
    char delimiter -> delimiter
com.sun.mail.imap.protocol.RFC822DATA -> com.sun.mail.imap.protocol.RFC822DATA:
    char[] name -> name
    int msgno -> msgno
    com.sun.mail.iap.ByteArray data -> data
    com.sun.mail.iap.ByteArray getByteArray() -> getByteArray
    java.io.ByteArrayInputStream getByteArrayInputStream() -> getByteArrayInputStream
com.sun.mail.imap.protocol.RFC822SIZE -> com.sun.mail.imap.protocol.RFC822SIZE:
    char[] name -> name
    int msgno -> msgno
    int size -> size
com.sun.mail.imap.protocol.SaslAuthenticator -> com.sun.mail.imap.protocol.SaslAuthenticator:
    boolean authenticate(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> authenticate
com.sun.mail.imap.protocol.SearchSequence -> com.sun.mail.imap.protocol.SearchSequence:
    java.lang.String[] monthTable -> monthTable
    java.util.Calendar cal -> cal
    com.sun.mail.iap.Argument generateSequence(javax.mail.search.SearchTerm,java.lang.String) -> generateSequence
    boolean isAscii(javax.mail.search.SearchTerm) -> isAscii
    boolean isAscii(java.lang.String) -> isAscii
    com.sun.mail.iap.Argument and(javax.mail.search.AndTerm,java.lang.String) -> and
    com.sun.mail.iap.Argument or(javax.mail.search.OrTerm,java.lang.String) -> or
    com.sun.mail.iap.Argument not(javax.mail.search.NotTerm,java.lang.String) -> not
    com.sun.mail.iap.Argument header(javax.mail.search.HeaderTerm,java.lang.String) -> header
    com.sun.mail.iap.Argument messageid(javax.mail.search.MessageIDTerm,java.lang.String) -> messageid
    com.sun.mail.iap.Argument flag(javax.mail.search.FlagTerm) -> flag
    com.sun.mail.iap.Argument from(java.lang.String,java.lang.String) -> from
    com.sun.mail.iap.Argument recipient(javax.mail.Message$RecipientType,java.lang.String,java.lang.String) -> recipient
    com.sun.mail.iap.Argument subject(javax.mail.search.SubjectTerm,java.lang.String) -> subject
    com.sun.mail.iap.Argument body(javax.mail.search.BodyTerm,java.lang.String) -> body
    com.sun.mail.iap.Argument size(javax.mail.search.SizeTerm) -> size
    java.lang.String toIMAPDate(java.util.Date) -> toIMAPDate
    com.sun.mail.iap.Argument sentdate(javax.mail.search.DateTerm) -> sentdate
    com.sun.mail.iap.Argument receiveddate(javax.mail.search.DateTerm) -> receiveddate
com.sun.mail.imap.protocol.Status -> com.sun.mail.imap.protocol.Status:
    java.lang.String mbox -> mbox
    int total -> total
    int recent -> recent
    long uidnext -> uidnext
    long uidvalidity -> uidvalidity
    int unseen -> unseen
    java.lang.String[] standardItems -> standardItems
    void add(com.sun.mail.imap.protocol.Status,com.sun.mail.imap.protocol.Status) -> add
com.sun.mail.imap.protocol.UID -> com.sun.mail.imap.protocol.UID:
    char[] name -> name
    int seqnum -> seqnum
    long uid -> uid
com.sun.mail.imap.protocol.UIDSet -> com.sun.mail.imap.protocol.UIDSet:
    long start -> start
    long end -> end
    long size() -> size
    com.sun.mail.imap.protocol.UIDSet[] createUIDSets(long[]) -> createUIDSets
    java.lang.String toString(com.sun.mail.imap.protocol.UIDSet[]) -> toString
    long size(com.sun.mail.imap.protocol.UIDSet[]) -> size
com.sun.mail.pop3.DefaultFolder -> com.sun.mail.pop3.DefaultFolder:
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    javax.mail.Folder getParent() -> getParent
    boolean exists() -> exists
    javax.mail.Folder[] list(java.lang.String) -> list
    char getSeparator() -> getSeparator
    int getType() -> getType
    boolean create(int) -> create
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    javax.mail.Folder getInbox() -> getInbox
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void open(int) -> open
    void close(boolean) -> close
    boolean isOpen() -> isOpen
    javax.mail.Flags getPermanentFlags() -> getPermanentFlags
    int getMessageCount() -> getMessageCount
    javax.mail.Message getMessage(int) -> getMessage
    void appendMessages(javax.mail.Message[]) -> appendMessages
    javax.mail.Message[] expunge() -> expunge
com.sun.mail.pop3.POP3Folder -> com.sun.mail.pop3.POP3Folder:
    java.lang.String name -> name
    com.sun.mail.pop3.Protocol port -> port
    int total -> total
    int size -> size
    boolean exists -> exists
    boolean opened -> opened
    java.util.Vector message_cache -> message_cache
    boolean doneUidl -> doneUidl
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    javax.mail.Folder getParent() -> getParent
    boolean exists() -> exists
    javax.mail.Folder[] list(java.lang.String) -> list
    char getSeparator() -> getSeparator
    int getType() -> getType
    boolean create(int) -> create
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void open(int) -> open
    void close(boolean) -> close
    boolean isOpen() -> isOpen
    javax.mail.Flags getPermanentFlags() -> getPermanentFlags
    int getMessageCount() -> getMessageCount
    javax.mail.Message getMessage(int) -> getMessage
    com.sun.mail.pop3.POP3Message createMessage(javax.mail.Folder,int) -> createMessage
    void appendMessages(javax.mail.Message[]) -> appendMessages
    javax.mail.Message[] expunge() -> expunge
    void fetch(javax.mail.Message[],javax.mail.FetchProfile) -> fetch
    java.lang.String getUID(javax.mail.Message) -> getUID
    int getSize() -> getSize
    int[] getSizes() -> getSizes
    java.io.InputStream listCommand() -> listCommand
    void finalize() -> finalize
    void checkOpen() -> checkOpen
    void checkClosed() -> checkClosed
    void checkReadable() -> checkReadable
    void checkWritable() -> checkWritable
    com.sun.mail.pop3.Protocol getProtocol() -> getProtocol
    void notifyMessageChangedListeners(int,javax.mail.Message) -> notifyMessageChangedListeners
com.sun.mail.pop3.POP3Message -> com.sun.mail.pop3.POP3Message:
    java.lang.String UNKNOWN -> UNKNOWN
    com.sun.mail.pop3.POP3Folder folder -> folder
    int hdrSize -> hdrSize
    int msgSize -> msgSize
    java.lang.String uid -> uid
    void setFlags(javax.mail.Flags,boolean) -> setFlags
    int getSize() -> getSize
    java.io.InputStream getContentStream() -> getContentStream
    void invalidate(boolean) -> invalidate
    java.io.InputStream top(int) -> top
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    void saveChanges() -> saveChanges
    void loadHeaders() -> loadHeaders
com.sun.mail.pop3.POP3SSLStore -> com.sun.mail.pop3.POP3SSLStore:
com.sun.mail.pop3.POP3Store -> com.sun.mail.pop3.POP3Store:
    java.lang.String name -> name
    int defaultPort -> defaultPort
    boolean isSSL -> isSSL
    com.sun.mail.pop3.Protocol port -> port
    com.sun.mail.pop3.POP3Folder portOwner -> portOwner
    java.lang.String host -> host
    int portNum -> portNum
    java.lang.String user -> user
    java.lang.String passwd -> passwd
    boolean rsetBeforeQuit -> rsetBeforeQuit
    boolean disableTop -> disableTop
    boolean forgetTopHeaders -> forgetTopHeaders
    java.lang.reflect.Constructor messageConstructor -> messageConstructor
    boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String) -> protocolConnect
    boolean isConnected() -> isConnected
    com.sun.mail.pop3.Protocol getPort(com.sun.mail.pop3.POP3Folder) -> getPort
    void closePort(com.sun.mail.pop3.POP3Folder) -> closePort
    void close() -> close
    javax.mail.Folder getDefaultFolder() -> getDefaultFolder
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    javax.mail.Folder getFolder(javax.mail.URLName) -> getFolder
    void finalize() -> finalize
    void checkConnected() -> checkConnected
com.sun.mail.pop3.Protocol -> com.sun.mail.pop3.Protocol:
    java.net.Socket socket -> socket
    java.io.DataInputStream input -> input
    java.io.PrintWriter output -> output
    int POP3_PORT -> POP3_PORT
    java.lang.String CRLF -> CRLF
    boolean debug -> debug
    java.io.PrintStream out -> out
    java.lang.String apopChallenge -> apopChallenge
    char[] digits -> digits
    void finalize() -> finalize
    java.lang.String login(java.lang.String,java.lang.String) -> login
    java.lang.String getDigest(java.lang.String) -> getDigest
    java.lang.String toHex(byte[]) -> toHex
    boolean quit() -> quit
    com.sun.mail.pop3.Status stat() -> stat
    int list(int) -> list
    java.io.InputStream list() -> list
    java.io.InputStream retr(int,int) -> retr
    java.io.InputStream top(int,int) -> top
    boolean dele(int) -> dele
    java.lang.String uidl(int) -> uidl
    boolean uidl(java.lang.String[]) -> uidl
    boolean noop() -> noop
    boolean rset() -> rset
    com.sun.mail.pop3.Response simpleCommand(java.lang.String) -> simpleCommand
    com.sun.mail.pop3.Response multilineCommand(java.lang.String,int) -> multilineCommand
com.sun.mail.pop3.Response -> com.sun.mail.pop3.Response:
    boolean ok -> ok
    java.lang.String data -> data
    java.io.InputStream bytes -> bytes
com.sun.mail.pop3.SharedByteArrayOutputStream -> com.sun.mail.pop3.SharedByteArrayOutputStream:
    java.io.InputStream toStream() -> toStream
com.sun.mail.pop3.Status -> com.sun.mail.pop3.Status:
    int total -> total
    int size -> size
com.sun.mail.smtp.DigestMD5 -> com.sun.mail.smtp.DigestMD5:
    java.io.PrintStream debugout -> debugout
    java.security.MessageDigest md5 -> md5
    java.lang.String uri -> uri
    java.lang.String clientResponse -> clientResponse
    char[] digits -> digits
    byte[] authClient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> authClient
    boolean authServer(java.lang.String) -> authServer
    java.util.Hashtable tokenize(java.lang.String) -> tokenize
    java.lang.String toHex(byte[]) -> toHex
com.sun.mail.smtp.SMTPAddressFailedException -> com.sun.mail.smtp.SMTPAddressFailedException:
    javax.mail.internet.InternetAddress addr -> addr
    java.lang.String cmd -> cmd
    int rc -> rc
    long serialVersionUID -> serialVersionUID
    javax.mail.internet.InternetAddress getAddress() -> getAddress
    java.lang.String getCommand() -> getCommand
    int getReturnCode() -> getReturnCode
com.sun.mail.smtp.SMTPAddressSucceededException -> com.sun.mail.smtp.SMTPAddressSucceededException:
    javax.mail.internet.InternetAddress addr -> addr
    java.lang.String cmd -> cmd
    int rc -> rc
    long serialVersionUID -> serialVersionUID
    javax.mail.internet.InternetAddress getAddress() -> getAddress
    java.lang.String getCommand() -> getCommand
    int getReturnCode() -> getReturnCode
com.sun.mail.smtp.SMTPMessage -> com.sun.mail.smtp.SMTPMessage:
    int NOTIFY_NEVER -> NOTIFY_NEVER
    int NOTIFY_SUCCESS -> NOTIFY_SUCCESS
    int NOTIFY_FAILURE -> NOTIFY_FAILURE
    int NOTIFY_DELAY -> NOTIFY_DELAY
    int RETURN_FULL -> RETURN_FULL
    int RETURN_HDRS -> RETURN_HDRS
    java.lang.String[] returnOptionString -> returnOptionString
    java.lang.String envelopeFrom -> envelopeFrom
    int notifyOptions -> notifyOptions
    int returnOption -> returnOption
    boolean sendPartial -> sendPartial
    boolean allow8bitMIME -> allow8bitMIME
    java.lang.String submitter -> submitter
    java.lang.String extension -> extension
    void setEnvelopeFrom(java.lang.String) -> setEnvelopeFrom
    java.lang.String getEnvelopeFrom() -> getEnvelopeFrom
    void setNotifyOptions(int) -> setNotifyOptions
    int getNotifyOptions() -> getNotifyOptions
    java.lang.String getDSNNotify() -> getDSNNotify
    void setReturnOption(int) -> setReturnOption
    int getReturnOption() -> getReturnOption
    java.lang.String getDSNRet() -> getDSNRet
    void setAllow8bitMIME(boolean) -> setAllow8bitMIME
    boolean getAllow8bitMIME() -> getAllow8bitMIME
    void setSendPartial(boolean) -> setSendPartial
    boolean getSendPartial() -> getSendPartial
    java.lang.String getSubmitter() -> getSubmitter
    void setSubmitter(java.lang.String) -> setSubmitter
    java.lang.String getMailExtension() -> getMailExtension
    void setMailExtension(java.lang.String) -> setMailExtension
com.sun.mail.smtp.SMTPOutputStream -> com.sun.mail.smtp.SMTPOutputStream:
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void ensureAtBOL() -> ensureAtBOL
com.sun.mail.smtp.SMTPSSLTransport -> com.sun.mail.smtp.SMTPSSLTransport:
com.sun.mail.smtp.SMTPSendFailedException -> com.sun.mail.smtp.SMTPSendFailedException:
    javax.mail.internet.InternetAddress addr -> addr
    java.lang.String cmd -> cmd
    int rc -> rc
    long serialVersionUID -> serialVersionUID
    java.lang.String getCommand() -> getCommand
    int getReturnCode() -> getReturnCode
com.sun.mail.smtp.SMTPTransport -> com.sun.mail.smtp.SMTPTransport:
    java.lang.String name -> name
    int defaultPort -> defaultPort
    boolean isSSL -> isSSL
    javax.mail.internet.MimeMessage message -> message
    javax.mail.Address[] addresses -> addresses
    javax.mail.Address[] validSentAddr -> validSentAddr
    javax.mail.Address[] validUnsentAddr -> validUnsentAddr
    javax.mail.Address[] invalidAddr -> invalidAddr
    boolean sendPartiallyFailed -> sendPartiallyFailed
    javax.mail.MessagingException exception -> exception
    com.sun.mail.smtp.SMTPOutputStream dataStream -> dataStream
    java.util.Hashtable extMap -> extMap
    boolean quitWait -> quitWait
    java.lang.String saslRealm -> saslRealm
    boolean reportSuccess -> reportSuccess
    boolean useStartTLS -> useStartTLS
    boolean useRset -> useRset
    java.io.PrintStream out -> out
    java.lang.String localHostName -> localHostName
    java.lang.String lastServerResponse -> lastServerResponse
    int lastReturnCode -> lastReturnCode
    java.lang.String[] ignoreList -> ignoreList
    byte[] CRLF -> CRLF
    java.lang.String UNKNOWN -> UNKNOWN
    com.sun.mail.smtp.DigestMD5 md5support -> md5support
    java.io.BufferedInputStream serverInput -> serverInput
    com.sun.mail.util.LineInputStream lineInputStream -> lineInputStream
    java.io.OutputStream serverOutput -> serverOutput
    java.net.Socket serverSocket -> serverSocket
    char[] hexchar -> hexchar
    boolean $assertionsDisabled -> $assertionsDisabled
    java.lang.String getLocalHost() -> getLocalHost
    void setLocalHost(java.lang.String) -> setLocalHost
    void connect(java.net.Socket) -> connect
    java.lang.String getSASLRealm() -> getSASLRealm
    void setSASLRealm(java.lang.String) -> setSASLRealm
    boolean getReportSuccess() -> getReportSuccess
    void setReportSuccess(boolean) -> setReportSuccess
    boolean getStartTLS() -> getStartTLS
    void setStartTLS(boolean) -> setStartTLS
    boolean getUseRset() -> getUseRset
    void setUseRset(boolean) -> setUseRset
    java.lang.String getLastServerResponse() -> getLastServerResponse
    int getLastReturnCode() -> getLastReturnCode
    com.sun.mail.smtp.DigestMD5 getMD5() -> getMD5
    boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String) -> protocolConnect
    void sendMessage(javax.mail.Message,javax.mail.Address[]) -> sendMessage
    void close() -> close
    void closeConnection() -> closeConnection
    boolean isConnected() -> isConnected
    void expandGroups() -> expandGroups
    boolean convertTo8Bit(javax.mail.internet.MimePart) -> convertTo8Bit
    boolean is8Bit(java.io.InputStream) -> is8Bit
    void finalize() -> finalize
    void helo(java.lang.String) -> helo
    boolean ehlo(java.lang.String) -> ehlo
    void mailFrom() -> mailFrom
    void rcptTo() -> rcptTo
    java.io.OutputStream data() -> data
    void finishData() -> finishData
    void startTLS() -> startTLS
    void openServer(java.lang.String,int) -> openServer
    void openServer() -> openServer
    void initStreams() -> initStreams
    void issueCommand(java.lang.String,int) -> issueCommand
    void issueSendCommand(java.lang.String,int) -> issueSendCommand
    int simpleCommand(java.lang.String) -> simpleCommand
    int simpleCommand(byte[]) -> simpleCommand
    void sendCommand(java.lang.String) -> sendCommand
    void sendCommand(byte[]) -> sendCommand
    int readServerResponse() -> readServerResponse
    void checkConnected() -> checkConnected
    boolean isNotLastLine(java.lang.String) -> isNotLastLine
    java.lang.String normalizeAddress(java.lang.String) -> normalizeAddress
    boolean supportsExtension(java.lang.String) -> supportsExtension
    java.lang.String getExtensionParameter(java.lang.String) -> getExtensionParameter
    boolean supportsAuthentication(java.lang.String) -> supportsAuthentication
    java.lang.String xtext(java.lang.String) -> xtext
com.sun.mail.util.ASCIIUtility -> com.sun.mail.util.ASCIIUtility:
    int parseInt(byte[],int,int,int) -> parseInt
    int parseInt(byte[],int,int) -> parseInt
    long parseLong(byte[],int,int,int) -> parseLong
    long parseLong(byte[],int,int) -> parseLong
    java.lang.String toString(byte[],int,int) -> toString
    java.lang.String toString(java.io.ByteArrayInputStream) -> toString
    byte[] getBytes(java.lang.String) -> getBytes
    byte[] getBytes(java.io.InputStream) -> getBytes
com.sun.mail.util.BASE64DecoderStream -> com.sun.mail.util.BASE64DecoderStream:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    int index -> index
    byte[] input_buffer -> input_buffer
    int input_pos -> input_pos
    int input_len -> input_len
    boolean ignoreErrors -> ignoreErrors
    char[] pem_array -> pem_array
    byte[] pem_convert_array -> pem_convert_array
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
    int decode(byte[],int,int) -> decode
    int getByte() -> getByte
    java.lang.String recentChars() -> recentChars
    byte[] decode(byte[]) -> decode
com.sun.mail.util.BASE64EncoderStream -> com.sun.mail.util.BASE64EncoderStream:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    byte[] outbuf -> outbuf
    int count -> count
    int bytesPerLine -> bytesPerLine
    int lineLimit -> lineLimit
    boolean noCRLF -> noCRLF
    byte[] newline -> newline
    char[] pem_array -> pem_array
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
    void encode() -> encode
    byte[] encode(byte[]) -> encode
    byte[] encode(byte[],int,int,byte[]) -> encode
    int encodedSize(int) -> encodedSize
com.sun.mail.util.BEncoderStream -> com.sun.mail.util.BEncoderStream:
    int encodedLength(byte[]) -> encodedLength
com.sun.mail.util.CRLFOutputStream -> com.sun.mail.util.CRLFOutputStream:
    int lastb -> lastb
    boolean atBOL -> atBOL
    byte[] newline -> newline
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeln() -> writeln
com.sun.mail.util.FolderClosedIOException -> com.sun.mail.util.FolderClosedIOException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
com.sun.mail.util.LineInputStream -> com.sun.mail.util.LineInputStream:
    char[] lineBuffer -> lineBuffer
    java.lang.String readLine() -> readLine
com.sun.mail.util.LineOutputStream -> com.sun.mail.util.LineOutputStream:
    byte[] newline -> newline
    void writeln(java.lang.String) -> writeln
    void writeln() -> writeln
com.sun.mail.util.MessageRemovedIOException -> com.sun.mail.util.MessageRemovedIOException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.util.QDecoderStream -> com.sun.mail.util.QDecoderStream:
    int read() -> read
com.sun.mail.util.QEncoderStream -> com.sun.mail.util.QEncoderStream:
    java.lang.String specials -> specials
    java.lang.String WORD_SPECIALS -> WORD_SPECIALS
    java.lang.String TEXT_SPECIALS -> TEXT_SPECIALS
    void write(int) -> write
    int encodedLength(byte[],boolean) -> encodedLength
com.sun.mail.util.QPDecoderStream -> com.sun.mail.util.QPDecoderStream:
    byte[] ba -> ba
    int spaces -> spaces
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
com.sun.mail.util.QPEncoderStream -> com.sun.mail.util.QPEncoderStream:
    int count -> count
    int bytesPerLine -> bytesPerLine
    boolean gotSpace -> gotSpace
    boolean gotCR -> gotCR
    char[] hex -> hex
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
    void outputCRLF() -> outputCRLF
    void output(int,boolean) -> output
com.sun.mail.util.SocketFetcher -> com.sun.mail.util.SocketFetcher:
    java.net.Socket getSocket(java.lang.String,int,java.util.Properties,java.lang.String,boolean) -> getSocket
    java.net.Socket getSocket(java.lang.String,int,java.util.Properties,java.lang.String) -> getSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.lang.String,int,int,javax.net.SocketFactory,boolean) -> createSocket
    javax.net.SocketFactory getSocketFactory(java.lang.String) -> getSocketFactory
    java.net.Socket startTLS(java.net.Socket) -> startTLS
    java.net.Socket startTLS(java.net.Socket,java.util.Properties,java.lang.String) -> startTLS
    void configureSSLSocket(java.net.Socket,java.util.Properties,java.lang.String) -> configureSSLSocket
    java.lang.String[] stringArray(java.lang.String) -> stringArray
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
com.sun.mail.util.SocketFetcher$1 -> com.sun.mail.util.SocketFetcher$1:
    java.lang.Object run() -> run
com.sun.mail.util.TraceInputStream -> com.sun.mail.util.TraceInputStream:
    boolean trace -> trace
    boolean quote -> quote
    java.io.OutputStream traceOut -> traceOut
    void setTrace(boolean) -> setTrace
    void setQuote(boolean) -> setQuote
    int read() -> read
    int read(byte[],int,int) -> read
    void writeByte(int) -> writeByte
com.sun.mail.util.TraceOutputStream -> com.sun.mail.util.TraceOutputStream:
    boolean trace -> trace
    boolean quote -> quote
    java.io.OutputStream traceOut -> traceOut
    void setTrace(boolean) -> setTrace
    void setQuote(boolean) -> setQuote
    void write(int) -> write
    void write(byte[],int,int) -> write
    void writeByte(int) -> writeByte
com.sun.mail.util.UUDecoderStream -> com.sun.mail.util.UUDecoderStream:
    java.lang.String name -> name
    int mode -> mode
    byte[] buffer -> buffer
    int bufsize -> bufsize
    int index -> index
    boolean gotPrefix -> gotPrefix
    boolean gotEnd -> gotEnd
    com.sun.mail.util.LineInputStream lin -> lin
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
    java.lang.String getName() -> getName
    int getMode() -> getMode
    void readPrefix() -> readPrefix
    boolean decode() -> decode
com.sun.mail.util.UUEncoderStream -> com.sun.mail.util.UUEncoderStream:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    boolean wrotePrefix -> wrotePrefix
    java.lang.String name -> name
    int mode -> mode
    void setNameMode(java.lang.String,int) -> setNameMode
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
    void writePrefix() -> writePrefix
    void writeSuffix() -> writeSuffix
    void encode() -> encode
com.tencent.mm.BuildConfig -> com.tencent.mm.BuildConfig:
    boolean DEBUG -> DEBUG
com.tencent.mm.algorithm.Base64 -> com.tencent.mm.algorithm.Base64:
    char[] a -> a
    int[] b -> b
    char[] encodeToChar(byte[],boolean) -> encodeToChar
    byte[] decode(char[]) -> decode
    byte[] decodeFast(char[]) -> decodeFast
    byte[] encodeToByte(byte[],boolean) -> encodeToByte
    byte[] decode(byte[]) -> decode
    byte[] decodeFast(byte[]) -> decodeFast
    java.lang.String encodeToString(byte[],boolean) -> encodeToString
    byte[] decode(java.lang.String) -> decode
    byte[] decodeFast(java.lang.String) -> decodeFast
com.tencent.mm.algorithm.LRUMap -> com.tencent.mm.algorithm.LRUMap:
    java.util.Map c -> c
    int d -> d
    int e -> e
    com.tencent.mm.algorithm.LRUMap$PreRemoveCallback f -> f
    int size() -> size
    void setMaxSize(int) -> setMaxSize
    void setPerDeleteSize(int) -> setPerDeleteSize
    boolean check(java.lang.Object) -> check
    boolean checkAndUpTime(java.lang.Object) -> checkAndUpTime
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getAndUptime(java.lang.Object) -> getAndUptime
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    void clear(com.tencent.mm.algorithm.LRUMap$OnClearListener) -> clear
    void update(java.lang.Object,java.lang.Object) -> update
com.tencent.mm.algorithm.LRUMap$1 -> com.tencent.mm.algorithm.LRUMap$1:
    com.tencent.mm.algorithm.LRUMap g -> g
    int compare(java.util.Map$Entry,java.util.Map$Entry) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.mm.algorithm.LRUMap$OnClearListener -> com.tencent.mm.algorithm.LRUMap$OnClearListener:
    void onClear(java.lang.Object,java.lang.Object) -> onClear
com.tencent.mm.algorithm.LRUMap$PreRemoveCallback -> com.tencent.mm.algorithm.LRUMap$PreRemoveCallback:
    void preRemoveCallback(java.lang.Object,java.lang.Object) -> preRemoveCallback
com.tencent.mm.algorithm.LRUMap$TimeVal -> com.tencent.mm.algorithm.LRUMap$TimeVal:
    java.lang.Object obj -> obj
    java.lang.Long t -> t
    com.tencent.mm.algorithm.LRUMap g -> g
    void UpTime() -> UpTime
com.tencent.mm.algorithm.MD5 -> com.tencent.mm.algorithm.MD5:
    java.lang.String getMessageDigest(byte[]) -> getMessageDigest
    byte[] getRawDigest(byte[]) -> getRawDigest
    java.lang.String getMD5(java.io.FileInputStream,int,int,int) -> getMD5
    java.lang.String getMD5(java.io.FileInputStream,int) -> getMD5
    java.lang.String getMD5(java.lang.String) -> getMD5
    java.lang.String getMD5(java.io.File) -> getMD5
    java.lang.String getMD5(java.io.File,int) -> getMD5
    java.lang.String getMD5(java.lang.String,int,int) -> getMD5
    java.lang.String getMD5(java.io.File,int,int) -> getMD5
com.tencent.mm.algorithm.TypeTransform -> com.tencent.mm.algorithm.TypeTransform:
    byte[] a(byte[]) -> a
    byte[] intToByteArrayLH(int) -> intToByteArrayLH
    byte[] longToByteArrayLH(long) -> longToByteArrayLH
    byte[] intToByteArrayHL(int) -> intToByteArrayHL
    byte[] longToByteArrayHL(long) -> longToByteArrayHL
    int byteArrayLHToInt(byte[]) -> byteArrayLHToInt
    int byteArrayLHToInt(byte[],int) -> byteArrayLHToInt
    long byteArrayLHToLong(byte[]) -> byteArrayLHToLong
    long byteArrayLHToLong(byte[],int) -> byteArrayLHToLong
    int byteArrayHLToInt(byte[]) -> byteArrayHLToInt
    int byteArrayHLToInt(byte[],int) -> byteArrayHLToInt
    long byteArrayHLToLong(byte[],int) -> byteArrayHLToLong
    long byteArrayHLToLong(byte[]) -> byteArrayHLToLong
com.tencent.mm.algorithm.UIN -> com.tencent.mm.algorithm.UIN:
    int h -> h
    int value() -> value
    int valueOf(java.lang.String) -> valueOf
    double doubleValue() -> doubleValue
    float floatValue() -> floatValue
    int intValue() -> intValue
    long longValue() -> longValue
    java.lang.String toString() -> toString
com.tencent.mm.platformtools.CnToSpell -> com.tencent.mm.platformtools.CnToSpell:
    java.lang.String getFullSpell(java.lang.String) -> getFullSpell
    java.lang.String getInitial(java.lang.String) -> getInitial
com.tencent.mm.platformtools.SpellMap -> com.tencent.mm.platformtools.SpellMap:
    java.lang.String getSpell(char) -> getSpell
    int a(char) -> a
    java.lang.String spellGetJni(int,int) -> spellGetJni
com.tencent.mm.sdk.Build -> com.tencent.mm.sdk.Build:
    int SDK_INT -> SDK_INT
    java.lang.String SDK_VERSION_NAME -> SDK_VERSION_NAME
    int TIMELINE_SUPPORTED_SDK_INT -> TIMELINE_SUPPORTED_SDK_INT
    int EMOJI_SUPPORTED_SDK_INT -> EMOJI_SUPPORTED_SDK_INT
    int MUSIC_DATA_URL_SUPPORTED_SDK_INT -> MUSIC_DATA_URL_SUPPORTED_SDK_INT
com.tencent.mm.sdk.ConstantsUI -> com.tencent.mm.sdk.ConstantsUI:
    java.lang.String PREF_FILE_PATH -> PREF_FILE_PATH
com.tencent.mm.sdk.ConstantsUI$Contact -> com.tencent.mm.sdk.ConstantsUI$Contact:
    java.lang.String KUser -> KUser
com.tencent.mm.sdk.MMAppMgr -> com.tencent.mm.sdk.MMAppMgr:
    void activate(boolean) -> activate
    android.content.SharedPreferences getSharedPreferences(android.content.Context,int) -> getSharedPreferences
    com.tencent.mm.sdk.plugin.IMMPluginAPI getPluginMgr(android.content.Context) -> getPluginMgr
com.tencent.mm.sdk.MMSharedPreferences -> com.tencent.mm.sdk.MMSharedPreferences:
    android.content.ContentResolver i -> i
    java.lang.String[] columns -> columns
    java.util.HashMap j -> j
    com.tencent.mm.sdk.MMSharedPreferences$REditor k -> k
    java.lang.Object getValue(java.lang.String) -> getValue
    java.util.Map getAll() -> getAll
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    android.content.SharedPreferences$Editor edit() -> edit
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
com.tencent.mm.sdk.MMSharedPreferences$REditor -> com.tencent.mm.sdk.MMSharedPreferences$REditor:
    java.util.Map l -> l
    java.util.Set m -> m
    boolean n -> n
    android.content.ContentResolver i -> i
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor clear() -> clear
    boolean commit() -> commit
    void apply() -> apply
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
com.tencent.mm.sdk.channel.ConstantsMMessage -> com.tencent.mm.sdk.channel.ConstantsMMessage:
    java.lang.String APP_PACKAGE -> APP_PACKAGE
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String CONTENT -> CONTENT
    java.lang.String CHECK_SUM -> CHECK_SUM
    java.lang.String ACTION_MESSAGE -> ACTION_MESSAGE
com.tencent.mm.sdk.channel.MMessage -> com.tencent.mm.sdk.channel.MMessage:
    boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> send
    void send(android.content.Context,java.lang.String,java.lang.String) -> send
    void send(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> send
com.tencent.mm.sdk.channel.MMessage$CallBack -> com.tencent.mm.sdk.channel.MMessage$CallBack:
    void handleMessage(android.content.Intent) -> handleMessage
com.tencent.mm.sdk.channel.MMessage$Receiver -> com.tencent.mm.sdk.channel.MMessage$Receiver:
    java.util.Map callbacks -> callbacks
    com.tencent.mm.sdk.channel.MMessage$CallBack o -> o
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void registerCallBack(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack) -> registerCallBack
    void unregisterCallBack(java.lang.String) -> unregisterCallBack
com.tencent.mm.sdk.channel.MMessageAct -> com.tencent.mm.sdk.channel.MMessageAct:
    boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> send
    boolean send(android.content.Context,java.lang.String,java.lang.String) -> send
    boolean send(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> send
    boolean sendToWx(android.content.Context,java.lang.String,android.os.Bundle) -> sendToWx
    boolean sendToWx(android.content.Context,java.lang.String) -> sendToWx
com.tencent.mm.sdk.channel.MMessageUtil -> com.tencent.mm.sdk.channel.MMessageUtil:
    byte[] a(java.lang.String,java.lang.String) -> a
com.tencent.mm.sdk.channel.package-info -> com.tencent.mm.sdk.channel.package-info:
com.tencent.mm.sdk.event.EventPoolFactory -> com.tencent.mm.sdk.event.EventPoolFactory:
    com.tencent.mm.sdk.event.EventPoolFactory$IEventPool impl -> impl
    void setImpl(com.tencent.mm.sdk.event.EventPoolFactory$IEventPool) -> setImpl
    com.tencent.mm.sdk.event.EventPoolFactory$IEventPool getImpl() -> getImpl
com.tencent.mm.sdk.event.EventPoolFactory$IEventPool -> com.tencent.mm.sdk.event.EventPoolFactory$IEventPool:
    boolean add(java.lang.String,com.tencent.mm.sdk.event.IListener) -> add
    boolean remove(java.lang.String,com.tencent.mm.sdk.event.IListener) -> remove
    void release(int) -> release
    void publish(com.tencent.mm.sdk.event.IEvent) -> publish
    void asyncPublish(com.tencent.mm.sdk.event.IEvent) -> asyncPublish
    void asyncPublish(com.tencent.mm.sdk.event.IEvent,android.os.Looper) -> asyncPublish
com.tencent.mm.sdk.event.IEvent -> com.tencent.mm.sdk.event.IEvent:
    int EVENT_SCOPE_TEMPL -> EVENT_SCOPE_TEMPL
    int EVENT_SCOPE_SESSION -> EVENT_SCOPE_SESSION
    int EVENT_SCOPE_APPLICATION -> EVENT_SCOPE_APPLICATION
    java.lang.String getId() -> getId
    java.lang.String getScope() -> getScope
    boolean isOrder() -> isOrder
    void oncomplete() -> oncomplete
com.tencent.mm.sdk.event.IListener -> com.tencent.mm.sdk.event.IListener:
    int priority -> priority
    int getPriority() -> getPriority
    boolean callback(com.tencent.mm.sdk.event.IEvent) -> callback
com.tencent.mm.sdk.openapi.BaseReq -> com.tencent.mm.sdk.openapi.BaseReq:
    java.lang.String transaction -> transaction
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.BaseResp -> com.tencent.mm.sdk.openapi.BaseResp:
    int errCode -> errCode
    java.lang.String errStr -> errStr
    java.lang.String transaction -> transaction
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.BaseResp$ErrCode -> com.tencent.mm.sdk.openapi.BaseResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
com.tencent.mm.sdk.openapi.ConstantsAPI -> com.tencent.mm.sdk.openapi.ConstantsAPI:
    java.lang.String ACTION_HANDLE_APP_REGISTER -> ACTION_HANDLE_APP_REGISTER
    java.lang.String ACTION_HANDLE_APP_UNREGISTER -> ACTION_HANDLE_APP_UNREGISTER
    java.lang.String ACTION_REFRESH_WXAPP -> ACTION_REFRESH_WXAPP
    int COMMAND_UNKNOWN -> COMMAND_UNKNOWN
    int COMMAND_SENDAUTH -> COMMAND_SENDAUTH
    int COMMAND_SENDMESSAGE_TO_WX -> COMMAND_SENDMESSAGE_TO_WX
    int COMMAND_GETMESSAGE_FROM_WX -> COMMAND_GETMESSAGE_FROM_WX
    int COMMAND_SHOWMESSAGE_FROM_WX -> COMMAND_SHOWMESSAGE_FROM_WX
    java.lang.String WX_TOKEN_KEY -> WX_TOKEN_KEY
    java.lang.String WX_TOKEN_VALUE -> WX_TOKEN_VALUE
com.tencent.mm.sdk.openapi.GetMessageFromWX -> com.tencent.mm.sdk.openapi.GetMessageFromWX:
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req -> com.tencent.mm.sdk.openapi.GetMessageFromWX$Req:
    java.lang.String username -> username
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp -> com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp:
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.IWXAPI -> com.tencent.mm.sdk.openapi.IWXAPI:
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq) -> sendReq
    boolean sendResp(com.tencent.mm.sdk.openapi.BaseResp) -> sendResp
com.tencent.mm.sdk.openapi.IWXAPIEventHandler -> com.tencent.mm.sdk.openapi.IWXAPIEventHandler:
    void onReq(com.tencent.mm.sdk.openapi.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.openapi.BaseResp) -> onResp
com.tencent.mm.sdk.openapi.SendAuth -> com.tencent.mm.sdk.openapi.SendAuth:
com.tencent.mm.sdk.openapi.SendAuth$Req -> com.tencent.mm.sdk.openapi.SendAuth$Req:
    java.lang.String scope -> scope
    java.lang.String state -> state
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.SendAuth$Resp -> com.tencent.mm.sdk.openapi.SendAuth$Resp:
    java.lang.String userName -> userName
    java.lang.String token -> token
    int expireDate -> expireDate
    java.lang.String state -> state
    java.lang.String resultUrl -> resultUrl
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.SendMessageToWX -> com.tencent.mm.sdk.openapi.SendMessageToWX:
com.tencent.mm.sdk.openapi.SendMessageToWX$Req -> com.tencent.mm.sdk.openapi.SendMessageToWX$Req:
    int WXSceneSession -> WXSceneSession
    int WXSceneTimeline -> WXSceneTimeline
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> message
    int scene -> scene
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp -> com.tencent.mm.sdk.openapi.SendMessageToWX$Resp:
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.ShowMessageFromWX -> com.tencent.mm.sdk.openapi.ShowMessageFromWX:
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req -> com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req:
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> message
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp -> com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXAPIFactory -> com.tencent.mm.sdk.openapi.WXAPIFactory:
    com.tencent.mm.sdk.openapi.WXAPIFactory p -> p
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String) -> createWXAPI
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean) -> createWXAPI
com.tencent.mm.sdk.openapi.WXApiImplV10 -> com.tencent.mm.sdk.openapi.WXApiImplV10:
    android.content.Context q -> q
    java.lang.String r -> r
    boolean s -> s
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq) -> sendReq
    boolean sendResp(com.tencent.mm.sdk.openapi.BaseResp) -> sendResp
    boolean a(java.lang.String) -> a
    boolean a(android.content.pm.Signature[]) -> a
    boolean a(byte[],byte[]) -> a
com.tencent.mm.sdk.openapi.WXAppExtendObject -> com.tencent.mm.sdk.openapi.WXAppExtendObject:
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXAppLaunchData -> com.tencent.mm.sdk.openapi.WXAppLaunchData:
    java.lang.String ACTION_HANDLE_WXAPPLAUNCH -> ACTION_HANDLE_WXAPPLAUNCH
    java.lang.String ACTION_HANDLE_WXAPP_RESULT -> ACTION_HANDLE_WXAPP_RESULT
    java.lang.String ACTION_HANDLE_WXAPP_SHOW -> ACTION_HANDLE_WXAPP_SHOW
    int launchType -> launchType
    java.lang.String message -> message
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder -> com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder:
    com.tencent.mm.sdk.openapi.WXAppLaunchData fromBundle(android.os.Bundle) -> fromBundle
    android.os.Bundle toBundle(com.tencent.mm.sdk.openapi.WXAppLaunchData) -> toBundle
com.tencent.mm.sdk.openapi.WXEmojiObject -> com.tencent.mm.sdk.openapi.WXEmojiObject:
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXFileObject -> com.tencent.mm.sdk.openapi.WXFileObject:
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXImageObject -> com.tencent.mm.sdk.openapi.WXImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void setImagePath(java.lang.String) -> setImagePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXMediaMessage -> com.tencent.mm.sdk.openapi.WXMediaMessage:
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder -> com.tencent.mm.sdk.openapi.WXMediaMessage$Builder:
    java.lang.String KEY_IDENTIFIER -> KEY_IDENTIFIER
    android.os.Bundle toBundle(com.tencent.mm.sdk.openapi.WXMediaMessage) -> toBundle
    com.tencent.mm.sdk.openapi.WXMediaMessage fromBundle(android.os.Bundle) -> fromBundle
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject -> com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXMusicObject -> com.tencent.mm.sdk.openapi.WXMusicObject:
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXTextObject -> com.tencent.mm.sdk.openapi.WXTextObject:
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXVideoObject -> com.tencent.mm.sdk.openapi.WXVideoObject:
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.WXWebpageObject -> com.tencent.mm.sdk.openapi.WXWebpageObject:
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.package-info -> com.tencent.mm.sdk.openapi.package-info:
com.tencent.mm.sdk.package-info -> com.tencent.mm.sdk.package-info:
com.tencent.mm.sdk.platformtools.AnimationHelperImpl21below -> com.tencent.mm.sdk.platformtools.AnimationHelperImpl21below:
    void cancelAnimation(android.view.View,android.view.animation.Animation) -> cancelAnimation
com.tencent.mm.sdk.platformtools.AnimationHelperImpl22 -> com.tencent.mm.sdk.platformtools.AnimationHelperImpl22:
    void cancelAnimation(android.view.View,android.view.animation.Animation) -> cancelAnimation
com.tencent.mm.sdk.platformtools.BackwardSupportUtil -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil:
    int ANDROID_API_LEVEL_16 -> ANDROID_API_LEVEL_16
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper:
    void cancelAnimation(android.view.View,android.view.animation.Animation) -> cancelAnimation
    void overridePendingTransition(android.app.Activity,int,int) -> overridePendingTransition
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper$IHelper -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper$IHelper:
    void cancelAnimation(android.view.View,android.view.animation.Animation) -> cancelAnimation
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory:
    android.graphics.Bitmap decodeFile(java.lang.String,float) -> decodeFile
    int fromDPToPix(android.content.Context,float) -> fromDPToPix
    android.graphics.Bitmap decodeStream(java.io.InputStream) -> decodeStream
    android.graphics.Bitmap decodeStream(java.io.InputStream,float) -> decodeStream
    java.lang.String getDisplayDensityType(android.content.Context) -> getDisplayDensityType
    android.graphics.Bitmap getBitmapFromURL(java.lang.String) -> getBitmapFromURL
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper:
    int getExifOrientation(java.lang.String) -> getExifOrientation
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory:
    void scrollToTop(android.widget.ListView) -> scrollToTop
    void scrollTo(android.widget.ListView,int) -> scrollTo
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll:
    void doScroll(android.widget.ListView) -> doScroll
    void doScroll(android.widget.ListView,int) -> doScroll
com.tencent.mm.sdk.platformtools.BluetoothUtil -> com.tencent.mm.sdk.platformtools.BluetoothUtil:
    boolean startBluetooth(android.media.AudioManager) -> startBluetooth
    void stopBluetooth(android.media.AudioManager) -> stopBluetooth
com.tencent.mm.sdk.platformtools.ChannelUtil -> com.tencent.mm.sdk.platformtools.ChannelUtil:
    int FLAG_UPDATE_EXTERNAL -> FLAG_UPDATE_EXTERNAL
    int FLAG_UPDATE_NOTIP -> FLAG_UPDATE_NOTIP
    int FLAG_NULL -> FLAG_NULL
    int channelId -> channelId
    java.lang.String profileDeviceType -> profileDeviceType
    int updateMode -> updateMode
    int buildRev -> buildRev
    java.lang.String marketURL -> marketURL
    boolean fullVersionInfo -> fullVersionInfo
    boolean shouldShowGprsAlert -> shouldShowGprsAlert
    void setupChannelId(android.content.Context) -> setupChannelId
    void loadProfile(android.content.Context) -> loadProfile
    java.lang.String formatVersion(android.content.Context,int) -> formatVersion
com.tencent.mm.sdk.platformtools.CharSequences -> com.tencent.mm.sdk.platformtools.CharSequences:
    java.lang.CharSequence forAsciiBytes(byte[]) -> forAsciiBytes
    java.lang.CharSequence forAsciiBytes(byte[],int,int) -> forAsciiBytes
    void a(int,int,int) -> a
    boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
    int compareToIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> compareToIgnoreCase
com.tencent.mm.sdk.platformtools.CharSequences$1 -> com.tencent.mm.sdk.platformtools.CharSequences$1:
    byte[] u -> u
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    java.lang.String toString() -> toString
com.tencent.mm.sdk.platformtools.CharSequences$2 -> com.tencent.mm.sdk.platformtools.CharSequences$2:
    byte[] u -> u
    int v -> v
    int w -> w
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    java.lang.String toString() -> toString
com.tencent.mm.sdk.platformtools.FilePathGenerator -> com.tencent.mm.sdk.platformtools.FilePathGenerator:
    int HASH_TYPE_HEAD_2_BYTE -> HASH_TYPE_HEAD_2_BYTE
    int HASH_TYPE_ALL_MD5 -> HASH_TYPE_ALL_MD5
    java.lang.String ANDROID_DIR_SEP -> ANDROID_DIR_SEP
    java.lang.String NO_MEDIA_FILENAME -> NO_MEDIA_FILENAME
    java.lang.String b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    java.lang.String genPath(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> genPath
    java.lang.String defGenPathWithOld(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> defGenPathWithOld
com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE -> com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE:
    com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE HEAD_2_BYTE -> HEAD_2_BYTE
    com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE ALL_MD5 -> ALL_MD5
    com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE[] x -> x
    com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE[] values() -> values
    com.tencent.mm.sdk.platformtools.FilePathGenerator$DIR_HASH_TYPE valueOf(java.lang.String) -> valueOf
com.tencent.mm.sdk.platformtools.FilesCopy -> com.tencent.mm.sdk.platformtools.FilesCopy:
    boolean copyFile(java.lang.String,java.lang.String) -> copyFile
    boolean copy(java.lang.String,java.lang.String,boolean) -> copy
    boolean copyAssets(android.content.Context,java.lang.String,java.lang.String) -> copyAssets
com.tencent.mm.sdk.platformtools.InetUtil -> com.tencent.mm.sdk.platformtools.InetUtil:
    java.util.regex.Pattern y -> y
    java.util.regex.Pattern z -> z
    java.util.regex.Pattern A -> A
    boolean isIPv4Address(java.lang.String) -> isIPv4Address
    boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
    boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    boolean isIPv6Address(java.lang.String) -> isIPv6Address
    java.net.InetAddress getByDottedAddress(java.lang.String) -> getByDottedAddress
com.tencent.mm.sdk.platformtools.JpegTools -> com.tencent.mm.sdk.platformtools.JpegTools:
    java.lang.String TAG -> TAG
    com.tencent.mm.sdk.platformtools.MBuf B -> B
    int C -> C
    boolean D -> D
    int ORIENTATION_UNDEFINED -> ORIENTATION_UNDEFINED
    int ORIENTATION_NORMAL -> ORIENTATION_NORMAL
    int ORIENTATION_FLIP_HORIZONTAL -> ORIENTATION_FLIP_HORIZONTAL
    int ORIENTATION_ROTATE_180 -> ORIENTATION_ROTATE_180
    int ORIENTATION_FLIP_VERTICAL -> ORIENTATION_FLIP_VERTICAL
    int ORIENTATION_TRANSPOSE -> ORIENTATION_TRANSPOSE
    int ORIENTATION_ROTATE_90 -> ORIENTATION_ROTATE_90
    int ORIENTATION_TRANSVERSE -> ORIENTATION_TRANSVERSE
    int ORIENTATION_ROTATE_270 -> ORIENTATION_ROTATE_270
    void a(int) -> a
    int parserJpeg() -> parserJpeg
    int getOreiValue() -> getOreiValue
    java.lang.String byte2HexString(byte) -> byte2HexString
com.tencent.mm.sdk.platformtools.KVConfig -> com.tencent.mm.sdk.platformtools.KVConfig:
    boolean E -> E
    java.util.Map parseIni(java.lang.String) -> parseIni
    java.util.Map parseXml(java.lang.String,java.lang.String,java.lang.String) -> parseXml
    void a(java.util.Map,java.lang.String,org.w3c.dom.Node,int) -> a
    void a(java.util.Map) -> a
com.tencent.mm.sdk.platformtools.LBSManager -> com.tencent.mm.sdk.platformtools.LBSManager:
    java.lang.String FILTER_GPS -> FILTER_GPS
    float INVALID_LAT -> INVALID_LAT
    float INVALID_LNG -> INVALID_LNG
    int INVALID_ACC -> INVALID_ACC
    int MM_SOURCE_HARDWARE -> MM_SOURCE_HARDWARE
    int MM_SOURCE_NET -> MM_SOURCE_NET
    int MM_SOURCE_REPORT_HARWARE -> MM_SOURCE_REPORT_HARWARE
    int MM_SOURCE_REPORT_NETWORK -> MM_SOURCE_REPORT_NETWORK
    com.tencent.mm.sdk.platformtools.LBSManager$LocationCache F -> F
    com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener G -> G
    android.location.LocationManager H -> H
    android.content.Context q -> q
    android.app.PendingIntent I -> I
    boolean J -> J
    boolean K -> K
    boolean L -> L
    boolean M -> M
    int N -> N
    com.tencent.mm.sdk.platformtools.MTimerHandler O -> O
    boolean a() -> a
    void start() -> start
    boolean isGpsEnable() -> isGpsEnable
    boolean isNetworkPrividerEnable() -> isNetworkPrividerEnable
    void removeGpsUpdate() -> removeGpsUpdate
    void requestGpsUpdate() -> requestGpsUpdate
    void requestGpsUpdate(int) -> requestGpsUpdate
    void removeListener() -> removeListener
    void b() -> b
    void resetForContinueGetLocation() -> resetForContinueGetLocation
    java.lang.String getTelLocation() -> getTelLocation
    java.lang.String getWIFILocation() -> getWIFILocation
    void setLocationCache(float,float,int,int) -> setLocationCache
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(com.tencent.mm.sdk.platformtools.LBSManager) -> a
com.tencent.mm.sdk.platformtools.LBSManager$1 -> com.tencent.mm.sdk.platformtools.LBSManager$1:
    com.tencent.mm.sdk.platformtools.LBSManager P -> P
    boolean onTimerExpired() -> onTimerExpired
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache -> com.tencent.mm.sdk.platformtools.LBSManager$LocationCache:
    float Q -> Q
    float R -> R
    int S -> S
    long time -> time
    int T -> T
com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener -> com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener:
    void onLocationGot(float,float,int,int,java.lang.String,java.lang.String,boolean) -> onLocationGot
com.tencent.mm.sdk.platformtools.LVBuffer -> com.tencent.mm.sdk.platformtools.LVBuffer:
    int LENGTH_ALLOC_PER_NEW -> LENGTH_ALLOC_PER_NEW
    int MAX_STRING_LENGTH -> MAX_STRING_LENGTH
    java.nio.ByteBuffer U -> U
    boolean V -> V
    int initParse(byte[]) -> initParse
    int getInt() -> getInt
    long getLong() -> getLong
    java.lang.String getString() -> getString
    boolean checkGetFinish() -> checkGetFinish
    int initBuild() -> initBuild
    int b(int) -> b
    int putInt(int) -> putInt
    int putLong(long) -> putLong
    int putString(java.lang.String) -> putString
    byte[] buildFinish() -> buildFinish
com.tencent.mm.sdk.platformtools.LocaleUtil -> com.tencent.mm.sdk.platformtools.LocaleUtil:
    java.lang.String LANGUAGE_DEFAULT -> LANGUAGE_DEFAULT
    java.lang.String LANGUAGE_KEY -> LANGUAGE_KEY
    java.lang.String TAIWAN -> TAIWAN
    java.lang.String HONGKONG -> HONGKONG
    java.lang.String CHINA -> CHINA
    java.lang.String ENGLISH -> ENGLISH
    java.lang.String THAI -> THAI
    java.lang.String INDONESIAN -> INDONESIAN
    java.lang.String VIETNAMESE -> VIETNAMESE
    java.lang.String PORTUGUESE -> PORTUGUESE
    java.lang.String SPANISH -> SPANISH
    java.lang.String RUSSIAN -> RUSSIAN
    java.lang.String ARABIC -> ARABIC
    java.lang.String HEBREW -> HEBREW
    java.lang.String POLISH -> POLISH
    java.lang.String HINDI -> HINDI
    java.lang.String JAPANESE -> JAPANESE
    java.lang.String ITALIAN -> ITALIAN
    java.lang.String KOREAN -> KOREAN
    java.lang.String MALAY -> MALAY
    java.lang.String TURKEY -> TURKEY
    boolean isLanguageSupported(java.lang.String) -> isLanguageSupported
    void updateApplicationResourceLocale(android.content.Context,java.util.Locale) -> updateApplicationResourceLocale
    java.util.Locale transLanguageToLocale(java.lang.String) -> transLanguageToLocale
    java.lang.String getCurrentCountryCode() -> getCurrentCountryCode
    java.lang.String d(java.lang.String) -> d
    java.lang.String getApplicationLanguage() -> getApplicationLanguage
    java.lang.String loadApplicationLanguage(android.content.SharedPreferences,android.content.Context) -> loadApplicationLanguage
    java.lang.String loadApplicationLanguageSettings(android.content.SharedPreferences,android.content.Context) -> loadApplicationLanguageSettings
    void saveApplicationLanguage(android.content.SharedPreferences,android.content.Context,java.lang.String) -> saveApplicationLanguage
com.tencent.mm.sdk.platformtools.Log -> com.tencent.mm.sdk.platformtools.Log:
    int LEVEL_VERBOSE -> LEVEL_VERBOSE
    int LEVEL_DEBUG -> LEVEL_DEBUG
    int LEVEL_INFO -> LEVEL_INFO
    int LEVEL_WARNING -> LEVEL_WARNING
    int LEVEL_ERROR -> LEVEL_ERROR
    int LEVEL_FATAL -> LEVEL_FATAL
    int LEVEL_NONE -> LEVEL_NONE
    int level -> level
    java.io.PrintStream W -> W
    byte[] X -> X
    java.lang.String Y -> Y
    void setOutputPath(java.lang.String,java.lang.String,java.lang.String,int) -> setOutputPath
    void setOutputStream(java.io.InputStream,java.io.OutputStream,java.lang.String,java.lang.String,int) -> setOutputStream
    void reset() -> reset
    void setLevel(int,boolean) -> setLevel
    int getLevel() -> getLevel
    void f(java.lang.String,java.lang.String) -> f
    void e(java.lang.String,java.lang.String) -> e
    void w(java.lang.String,java.lang.String) -> w
    void i(java.lang.String,java.lang.String) -> i
    void d(java.lang.String,java.lang.String) -> d
    void v(java.lang.String,java.lang.String) -> v
    void f(java.lang.String,java.lang.String,java.lang.Object[]) -> f
    void e(java.lang.String,java.lang.String,java.lang.Object[]) -> e
    void w(java.lang.String,java.lang.String,java.lang.Object[]) -> w
    void i(java.lang.String,java.lang.String,java.lang.Object[]) -> i
    void d(java.lang.String,java.lang.String,java.lang.Object[]) -> d
    void v(java.lang.String,java.lang.String,java.lang.Object[]) -> v
    java.lang.String getSysInfo() -> getSysInfo
com.tencent.mm.sdk.platformtools.Log$1 -> com.tencent.mm.sdk.platformtools.Log$1:
    java.lang.String Z -> Z
    void run() -> run
com.tencent.mm.sdk.platformtools.LogHelper -> com.tencent.mm.sdk.platformtools.LogHelper:
    java.text.SimpleDateFormat aa -> aa
    byte[] ab -> ab
    void writeToStream(java.io.PrintStream,byte[],java.lang.String,java.lang.String) -> writeToStream
    void initLogHeader(java.io.PrintStream,java.lang.String,java.lang.String,long,int) -> initLogHeader
com.tencent.mm.sdk.platformtools.MAlarmHandler -> com.tencent.mm.sdk.platformtools.MAlarmHandler:
    int ac -> ac
    int ad -> ad
    boolean ae -> ae
    long af -> af
    long ag -> ag
    java.util.Map ah -> ah
    com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack ai -> ai
    com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper aj -> aj
    boolean ak -> ak
    long NEXT_FIRE_INTERVAL -> NEXT_FIRE_INTERVAL
    void initAlarmBumper(com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper) -> initAlarmBumper
    void finalize() -> finalize
    long fire() -> fire
    void startTimer(long) -> startTimer
    void stopTimer() -> stopTimer
    boolean stopped() -> stopped
com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack -> com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack:
    boolean onTimerExpired() -> onTimerExpired
com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper -> com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper:
    void prepare() -> prepare
    void cancel() -> cancel
com.tencent.mm.sdk.platformtools.MBuf -> com.tencent.mm.sdk.platformtools.MBuf:
    java.nio.ByteBuffer al -> al
    void setBuffer(byte[]) -> setBuffer
    int getOffset() -> getOffset
    int getLen() -> getLen
    java.nio.ByteBuffer getBuffer() -> getBuffer
com.tencent.mm.sdk.platformtools.MMApplicationContext -> com.tencent.mm.sdk.platformtools.MMApplicationContext:
    android.content.Context q -> q
    java.lang.String am -> am
    void setContext(android.content.Context) -> setContext
    android.content.Context getContext() -> getContext
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getDefaultPreferencePath() -> getDefaultPreferencePath
com.tencent.mm.sdk.platformtools.MMEntryLock -> com.tencent.mm.sdk.platformtools.MMEntryLock:
    java.util.Set an -> an
    boolean lock(java.lang.String) -> lock
    void unlock(java.lang.String) -> unlock
    boolean isLocked(java.lang.String) -> isLocked
com.tencent.mm.sdk.platformtools.MMHandlerThread -> com.tencent.mm.sdk.platformtools.MMHandlerThread:
    android.os.HandlerThread ao -> ao
    android.os.Handler ap -> ap
    long mainThreadID -> mainThreadID
    void c() -> c
    android.os.Looper getLooper() -> getLooper
    android.os.Handler getWorkerHandler() -> getWorkerHandler
    int reset(com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread) -> reset
    int syncReset(com.tencent.mm.sdk.platformtools.MMHandlerThread$ResetCallback) -> syncReset
    int postToWorker(java.lang.Runnable) -> postToWorker
    int postAtFrontOfWorker(com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread) -> postAtFrontOfWorker
    void setMainThreadID(long) -> setMainThreadID
    boolean isMainThread() -> isMainThread
    void postToMainThread(java.lang.Runnable) -> postToMainThread
    void postToMainThreadDelayed(java.lang.Runnable,long) -> postToMainThreadDelayed
    android.os.HandlerThread a(com.tencent.mm.sdk.platformtools.MMHandlerThread) -> a
    void b(com.tencent.mm.sdk.platformtools.MMHandlerThread) -> b
    void a(java.lang.Runnable) -> a
com.tencent.mm.sdk.platformtools.MMHandlerThread$1 -> com.tencent.mm.sdk.platformtools.MMHandlerThread$1:
    com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread aq -> aq
    com.tencent.mm.sdk.platformtools.MMHandlerThread ar -> ar
    boolean onPostExecute() -> onPostExecute
    boolean doInBackground() -> doInBackground
com.tencent.mm.sdk.platformtools.MMHandlerThread$2 -> com.tencent.mm.sdk.platformtools.MMHandlerThread$2:
    com.tencent.mm.sdk.platformtools.MMHandlerThread$ResetCallback as -> as
    java.lang.Object at -> at
    com.tencent.mm.sdk.platformtools.MMHandlerThread ar -> ar
    boolean onPostExecute() -> onPostExecute
    boolean doInBackground() -> doInBackground
com.tencent.mm.sdk.platformtools.MMHandlerThread$3 -> com.tencent.mm.sdk.platformtools.MMHandlerThread$3:
    com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread aq -> aq
    com.tencent.mm.sdk.platformtools.MMHandlerThread ar -> ar
    void run() -> run
com.tencent.mm.sdk.platformtools.MMHandlerThread$3$1 -> com.tencent.mm.sdk.platformtools.MMHandlerThread$3$1:
    com.tencent.mm.sdk.platformtools.MMHandlerThread$3 au -> au
    void run() -> run
com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread -> com.tencent.mm.sdk.platformtools.MMHandlerThread$IWaitWorkThread:
    boolean doInBackground() -> doInBackground
    boolean onPostExecute() -> onPostExecute
com.tencent.mm.sdk.platformtools.MMHandlerThread$ResetCallback -> com.tencent.mm.sdk.platformtools.MMHandlerThread$ResetCallback:
    void callback() -> callback
com.tencent.mm.sdk.platformtools.MTimerHandler -> com.tencent.mm.sdk.platformtools.MTimerHandler:
    int ac -> ac
    int ad -> ad
    boolean av -> av
    long aw -> aw
    com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack ax -> ax
    int d() -> d
    void finalize() -> finalize
    void handleMessage(android.os.Message) -> handleMessage
    void startTimer(long) -> startTimer
    void stopTimer() -> stopTimer
    boolean stopped() -> stopped
com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack -> com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack:
    boolean onTimerExpired() -> onTimerExpired
com.tencent.mm.sdk.platformtools.NetStatusUtil -> com.tencent.mm.sdk.platformtools.NetStatusUtil:
    int NON_NETWORK -> NON_NETWORK
    int WIFI -> WIFI
    int UNINET -> UNINET
    int UNIWAP -> UNIWAP
    int WAP_3G -> WAP_3G
    int NET_3G -> NET_3G
    int CMWAP -> CMWAP
    int CMNET -> CMNET
    int CTWAP -> CTWAP
    int CTNET -> CTNET
    int MOBILE -> MOBILE
    int LTE -> LTE
    int POLICY_NONE -> POLICY_NONE
    int POLICY_REJECT_METERED_BACKGROUND -> POLICY_REJECT_METERED_BACKGROUND
    int TBACKGROUND_NOT_LIMITED -> TBACKGROUND_NOT_LIMITED
    int TBACKGROUND_PROCESS_LIMITED -> TBACKGROUND_PROCESS_LIMITED
    int TBACKGROUND_DATA_LIMITED -> TBACKGROUND_DATA_LIMITED
    int TBACKGROUND_WIFI_LIMITED -> TBACKGROUND_WIFI_LIMITED
    int NO_SIM_OPERATOR -> NO_SIM_OPERATOR
    void dumpNetStatus(android.content.Context) -> dumpNetStatus
    boolean isConnected(android.content.Context) -> isConnected
    java.lang.String getNetTypeString(android.content.Context) -> getNetTypeString
    int getNetType(android.content.Context) -> getNetType
    int getISPCode(android.content.Context) -> getISPCode
    java.lang.String getISPName(android.content.Context) -> getISPName
    int guessNetSpeed(android.content.Context) -> guessNetSpeed
    boolean is2G(android.content.Context) -> is2G
    boolean is4G(android.content.Context) -> is4G
    boolean isWap(android.content.Context) -> isWap
    boolean isWap(int) -> isWap
    boolean is2G(int) -> is2G
    boolean is4G(int) -> is4G
    boolean is3G(int) -> is3G
    boolean isMobile(android.content.Context) -> isMobile
    boolean isMobile(int) -> isMobile
    boolean is3G(android.content.Context) -> is3G
    boolean isWifi(android.content.Context) -> isWifi
    boolean isWifi(int) -> isWifi
    android.content.Intent a(android.content.Context,java.lang.String) -> a
    void startSettingItent(android.content.Context,int) -> startSettingItent
    int getWifiSleeepPolicy(android.content.Context) -> getWifiSleeepPolicy
    boolean isLimited(int) -> isLimited
    int getBackgroundLimitType(android.content.Context) -> getBackgroundLimitType
    boolean isRestrictBacground(android.content.Context) -> isRestrictBacground
    boolean isImmediatelyDestroyActivities(android.content.Context) -> isImmediatelyDestroyActivities
    boolean checkFromXml(int) -> checkFromXml
    boolean runRootCommand() -> runRootCommand
com.tencent.mm.sdk.platformtools.ObserverPool -> com.tencent.mm.sdk.platformtools.ObserverPool:
    java.util.HashMap ay -> ay
    boolean add(java.lang.String,com.tencent.mm.sdk.platformtools.ObserverPool$Listener) -> add
    boolean remove(java.lang.String,com.tencent.mm.sdk.platformtools.ObserverPool$Listener) -> remove
    boolean remove(java.lang.String) -> remove
    void release() -> release
    boolean publish(com.tencent.mm.sdk.platformtools.ObserverPool$Event) -> publish
    void asyncPublish(com.tencent.mm.sdk.platformtools.ObserverPool$Event) -> asyncPublish
    void asyncPublish(com.tencent.mm.sdk.platformtools.ObserverPool$Event,android.os.Looper) -> asyncPublish
    java.lang.String toString() -> toString
com.tencent.mm.sdk.platformtools.ObserverPool$1 -> com.tencent.mm.sdk.platformtools.ObserverPool$1:
    com.tencent.mm.sdk.platformtools.ObserverPool az -> az
    int compare(com.tencent.mm.sdk.platformtools.ObserverPool$Listener,com.tencent.mm.sdk.platformtools.ObserverPool$Listener) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.mm.sdk.platformtools.ObserverPool$2 -> com.tencent.mm.sdk.platformtools.ObserverPool$2:
    com.tencent.mm.sdk.platformtools.ObserverPool$Event aA -> aA
    com.tencent.mm.sdk.platformtools.ObserverPool az -> az
    void run() -> run
com.tencent.mm.sdk.platformtools.ObserverPool$Event -> com.tencent.mm.sdk.platformtools.ObserverPool$Event:
    int FLAG_ORDER_EXE -> FLAG_ORDER_EXE
    java.lang.String aB -> aB
    android.os.Bundle data -> data
    int aC -> aC
    java.lang.String getId() -> getId
    com.tencent.mm.sdk.platformtools.ObserverPool$Event setFlag(int) -> setFlag
    int getFlag() -> getFlag
    void onComplete() -> onComplete
com.tencent.mm.sdk.platformtools.ObserverPool$Listener -> com.tencent.mm.sdk.platformtools.ObserverPool$Listener:
    int priority -> priority
    int getPriority() -> getPriority
    boolean callback(com.tencent.mm.sdk.platformtools.ObserverPool$Event) -> callback
    int a(com.tencent.mm.sdk.platformtools.ObserverPool$Listener) -> a
com.tencent.mm.sdk.platformtools.PhoneStatusWatcher -> com.tencent.mm.sdk.platformtools.PhoneStatusWatcher:
    boolean aD -> aD
    android.telephony.TelephonyManager aE -> aE
    android.telephony.PhoneStateListener aF -> aF
    java.util.List aG -> aG
    void addPhoneCallListener(com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$PhoneCallListener) -> addPhoneCallListener
    void removePhoneCallListener(com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$PhoneCallListener) -> removePhoneCallListener
    void clearPhoneCallListener() -> clearPhoneCallListener
    boolean isCalling() -> isCalling
    void begin(android.content.Context) -> begin
    void end() -> end
    java.util.List a(com.tencent.mm.sdk.platformtools.PhoneStatusWatcher) -> a
    boolean a(boolean) -> a
com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$1 -> com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$1:
    com.tencent.mm.sdk.platformtools.PhoneStatusWatcher aH -> aH
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$PhoneCallListener -> com.tencent.mm.sdk.platformtools.PhoneStatusWatcher$PhoneCallListener:
    void onPhoneCall(int) -> onPhoneCall
com.tencent.mm.sdk.platformtools.PhoneUtil -> com.tencent.mm.sdk.platformtools.PhoneUtil:
    java.lang.String CELL_GSM -> CELL_GSM
    java.lang.String CELL_CDMA -> CELL_CDMA
    int aI -> aI
    java.lang.String getMacXml(java.util.List) -> getMacXml
    java.lang.String getCellXml(java.util.List) -> getCellXml
    void getSignalStrength(android.content.Context) -> getSignalStrength
    java.util.List getCellInfoList(android.content.Context) -> getCellInfoList
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo -> com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo:
    int MAX_CID -> MAX_CID
    int MAX_LAC -> MAX_LAC
    java.lang.String mcc -> mcc
    java.lang.String mnc -> mnc
    java.lang.String lac -> lac
    java.lang.String cellid -> cellid
    java.lang.String type -> type
    java.lang.String stationId -> stationId
    java.lang.String networkId -> networkId
    java.lang.String systemId -> systemId
    java.lang.String dbm -> dbm
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo -> com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo:
    java.lang.String mac -> mac
    java.lang.String dbm -> dbm
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl -> com.tencent.mm.sdk.platformtools.PhoneUtil16Impl:
    int aJ -> aJ
    int aK -> aK
    android.telephony.TelephonyManager aL -> aL
    android.telephony.PhoneStateListener aM -> aM
    void getSignalStrength(android.content.Context) -> getSignalStrength
    java.util.List getCellInfoList(android.content.Context) -> getCellInfoList
    int c(int) -> c
    android.telephony.TelephonyManager a(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl) -> a
    android.telephony.PhoneStateListener b(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl) -> b
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1 -> com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1:
    com.tencent.mm.sdk.platformtools.PhoneUtil16Impl aN -> aN
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl -> com.tencent.mm.sdk.platformtools.PhoneUtil20Impl:
    int aJ -> aJ
    int aK -> aK
    android.telephony.TelephonyManager aL -> aL
    int aO -> aO
    android.telephony.PhoneStateListener aM -> aM
    void getSignalStrength(android.content.Context) -> getSignalStrength
    java.util.List getCellInfoList(android.content.Context) -> getCellInfoList
    int a(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> a
    int d(int) -> d
    android.telephony.TelephonyManager b(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> b
    android.telephony.PhoneStateListener c(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> c
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1 -> com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1:
    com.tencent.mm.sdk.platformtools.PhoneUtil20Impl aP -> aP
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.tencent.mm.sdk.platformtools.QueueWorkerThread -> com.tencent.mm.sdk.platformtools.QueueWorkerThread:
    java.util.concurrent.LinkedBlockingQueue aQ -> aQ
    boolean aR -> aR
    int aS -> aS
    int priority -> priority
    java.lang.String name -> name
    java.lang.Object lock -> lock
    java.util.Vector aT -> aT
    android.os.Handler aU -> aU
    int getQueueSize() -> getQueueSize
    int add(com.tencent.mm.sdk.platformtools.QueueWorkerThread$ThreadObject) -> add
    boolean isDead() -> isDead
    void pause(boolean) -> pause
    java.lang.String a(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> a
    int b(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> b
    java.util.Vector c(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> c
    java.lang.Object d(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> d
    boolean e(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> e
    java.util.concurrent.LinkedBlockingQueue f(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> f
    android.os.Handler g(com.tencent.mm.sdk.platformtools.QueueWorkerThread) -> g
com.tencent.mm.sdk.platformtools.QueueWorkerThread$1 -> com.tencent.mm.sdk.platformtools.QueueWorkerThread$1:
    com.tencent.mm.sdk.platformtools.QueueWorkerThread aV -> aV
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.mm.sdk.platformtools.QueueWorkerThread$ThreadObject -> com.tencent.mm.sdk.platformtools.QueueWorkerThread$ThreadObject:
    boolean doInBackground() -> doInBackground
    boolean onPostExecute() -> onPostExecute
com.tencent.mm.sdk.platformtools.QueueWorkerThread$WorkerThread -> com.tencent.mm.sdk.platformtools.QueueWorkerThread$WorkerThread:
    int aW -> aW
    com.tencent.mm.sdk.platformtools.QueueWorkerThread aV -> aV
    void run() -> run
com.tencent.mm.sdk.platformtools.SemiXml -> com.tencent.mm.sdk.platformtools.SemiXml:
    java.lang.String MAGIC_HEAD -> MAGIC_HEAD
    java.lang.String encode(java.util.Map) -> encode
    java.util.Map decode(java.lang.String) -> decode
com.tencent.mm.sdk.platformtools.SensorController -> com.tencent.mm.sdk.platformtools.SensorController:
    float aX -> aX
    android.hardware.SensorManager aY -> aY
    float aZ -> aZ
    float ba -> ba
    com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack bb -> bb
    android.hardware.Sensor bc -> bc
    boolean bd -> bd
    boolean be -> be
    boolean bf -> bf
    void setSensorCallBack(com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack) -> setSensorCallBack
    void removeSensorCallBack() -> removeSensorCallBack
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    boolean isSensorEnable() -> isSensorEnable
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack -> com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack:
    void onSensorEvent(boolean) -> onSensorEvent
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition21below -> com.tencent.mm.sdk.platformtools.SmoothScrollToPosition21below:
    void doScroll(android.widget.ListView) -> doScroll
    void doScroll(android.widget.ListView,int) -> doScroll
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition22 -> com.tencent.mm.sdk.platformtools.SmoothScrollToPosition22:
    void doScroll(android.widget.ListView) -> doScroll
    void doScroll(android.widget.ListView,int) -> doScroll
com.tencent.mm.sdk.platformtools.SpecilApiUtil -> com.tencent.mm.sdk.platformtools.SpecilApiUtil:
    java.lang.String TAG -> TAG
    java.lang.String LINE_SEP_W -> LINE_SEP_W
    java.lang.String LINE_SEP -> LINE_SEP
    java.lang.String LINE_TRIM -> LINE_TRIM
    java.lang.CharSequence fixInAPI16(java.lang.CharSequence) -> fixInAPI16
    java.lang.String killsplitAPI16(java.lang.String) -> killsplitAPI16
com.tencent.mm.sdk.platformtools.SyncTask -> com.tencent.mm.sdk.platformtools.SyncTask:
    java.lang.Object result -> result
    java.lang.Object lock -> lock
    long bg -> bg
    long bh -> bh
    long bi -> bi
    java.lang.Runnable bj -> bj
    void setResult(java.lang.Object) -> setResult
    java.lang.Object exec(android.os.Handler) -> exec
    java.lang.Object run() -> run
    long a(com.tencent.mm.sdk.platformtools.SyncTask,long) -> a
    long a(com.tencent.mm.sdk.platformtools.SyncTask) -> a
com.tencent.mm.sdk.platformtools.SyncTask$1 -> com.tencent.mm.sdk.platformtools.SyncTask$1:
    com.tencent.mm.sdk.platformtools.SyncTask bk -> bk
    void run() -> run
com.tencent.mm.sdk.platformtools.SystemProperty -> com.tencent.mm.sdk.platformtools.SystemProperty:
    java.util.HashMap bl -> bl
    java.lang.String getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.String) -> setProperty
com.tencent.mm.sdk.platformtools.TimeLogger -> com.tencent.mm.sdk.platformtools.TimeLogger:
    java.lang.String bm -> bm
    java.lang.String bn -> bn
    boolean bo -> bo
    java.util.ArrayList bp -> bp
    java.util.ArrayList bq -> bq
    void reset(java.lang.String,java.lang.String) -> reset
    void reset() -> reset
    void addSplit(java.lang.String) -> addSplit
    void dumpToLog() -> dumpToLog
com.tencent.mm.sdk.platformtools.TrafficStats -> com.tencent.mm.sdk.platformtools.TrafficStats:
    long br -> br
    long bs -> bs
    long bt -> bt
    long bu -> bu
    long bv -> bv
    long bw -> bw
    long bx -> bx
    long by -> by
    java.lang.String DEV_FILE -> DEV_FILE
    java.lang.String GPRSLINE -> GPRSLINE
    java.lang.String WIFILINE -> WIFILINE
    long getWifiTx(long) -> getWifiTx
    long getWifiRx(long) -> getWifiRx
    long getMobileTx(long) -> getMobileTx
    long getMobileRx(long) -> getMobileRx
    long updateWifiTx(long) -> updateWifiTx
    long updateWifiRx(long) -> updateWifiRx
    long updateMobileTx(long) -> updateMobileTx
    long updateMobileRx(long) -> updateMobileRx
    void reset() -> reset
    void update() -> update
com.tencent.mm.sdk.platformtools.Util -> com.tencent.mm.sdk.platformtools.Util:
    int MAX_DECODE_PICTURE_SIZE -> MAX_DECODE_PICTURE_SIZE
    java.lang.String PHOTO_DEFAULT_EXT -> PHOTO_DEFAULT_EXT
    long MILLSECONDS_OF_SECOND -> MILLSECONDS_OF_SECOND
    long MILLSECONDS_OF_MINUTE -> MILLSECONDS_OF_MINUTE
    long MILLSECONDS_OF_HOUR -> MILLSECONDS_OF_HOUR
    long MILLSECONDS_OF_DAY -> MILLSECONDS_OF_DAY
    long SECOND_OF_MINUTE -> SECOND_OF_MINUTE
    long MINUTE_OF_HOUR -> MINUTE_OF_HOUR
    long MAX_32BIT_VALUE -> MAX_32BIT_VALUE
    int MIN_ACCOUNT_LENGTH -> MIN_ACCOUNT_LENGTH
    int MAX_ACCOUNT_LENGTH -> MAX_ACCOUNT_LENGTH
    int MIN_PASSWORD_LENGTH -> MIN_PASSWORD_LENGTH
    int MAX_PASSWORD_LENGTH -> MAX_PASSWORD_LENGTH
    int BIT_OF_KB -> BIT_OF_KB
    int BIT_OF_MB -> BIT_OF_MB
    int BYTE_OF_KB -> BYTE_OF_KB
    int BYTE_OF_MB -> BYTE_OF_MB
    int MASK_4BIT -> MASK_4BIT
    int MASK_8BIT -> MASK_8BIT
    int MASK_16BIT -> MASK_16BIT
    int MASK_32BIT -> MASK_32BIT
    int BEGIN_TIME -> BEGIN_TIME
    int END_TIME -> END_TIME
    int DAY -> DAY
    java.lang.String TAIWAN -> TAIWAN
    java.lang.String HONGKONG -> HONGKONG
    java.lang.String CHINA -> CHINA
    java.lang.String ENGLISH -> ENGLISH
    java.lang.String LANGUAGE_DEFAULT -> LANGUAGE_DEFAULT
    long[] bz -> bz
    java.util.TimeZone GMT -> GMT
    char[] bA -> bA
    char[] bB -> bB
    java.lang.String[] bC -> bC
    java.lang.String escapeSqlValue(java.lang.String) -> escapeSqlValue
    java.lang.String listToString(java.util.List,java.lang.String) -> listToString
    boolean isSDCardAvail() -> isSDCardAvail
    java.util.List stringsToList(java.lang.String[]) -> stringsToList
    int getIntRandom(int,int) -> getIntRandom
    byte[] getUuidRandom() -> getUuidRandom
    boolean isDayTimeNow() -> isDayTimeNow
    boolean isNightTime(int,int,int) -> isNightTime
    java.lang.String getTimeZoneOffset() -> getTimeZoneOffset
    java.lang.String getTimeZone() -> getTimeZone
    java.lang.String getTimeZoneDef() -> getTimeZoneDef
    java.lang.String formatUnixTime(long) -> formatUnixTime
    boolean isChinese(char) -> isChinese
    boolean isAlpha(char) -> isAlpha
    boolean isNum(char) -> isNum
    boolean isValidQQNum(java.lang.String) -> isValidQQNum
    boolean isValidEmail(java.lang.String) -> isValidEmail
    byte[] bmpToByteArray(android.graphics.Bitmap,boolean) -> bmpToByteArray
    boolean isValidAccount(java.lang.String) -> isValidAccount
    boolean isValidPassword(java.lang.String) -> isValidPassword
    android.graphics.BitmapFactory$Options getImageOptions(java.lang.String) -> getImageOptions
    void saveBitmapToImage(android.graphics.Bitmap,int,android.graphics.Bitmap$CompressFormat,java.lang.String,java.lang.String,boolean) -> saveBitmapToImage
    void saveBitmapToImage(android.graphics.Bitmap,int,android.graphics.Bitmap$CompressFormat,java.lang.String,boolean) -> saveBitmapToImage
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,boolean,float) -> getRoundedCornerBitmap
    java.lang.String getSizeKB(long) -> getSizeKB
    java.lang.String getSizeMB(long) -> getSizeMB
    java.lang.String dumpArray(java.lang.Object[]) -> dumpArray
    java.lang.String dumpHex(byte[]) -> dumpHex
    android.content.Intent getInstallPackIntent(java.lang.String,android.content.Context) -> getInstallPackIntent
    void installPack(java.lang.String,android.content.Context) -> installPack
    void shake(android.content.Context,boolean) -> shake
    android.media.MediaPlayer playSound(android.content.Context,int,boolean,android.media.MediaPlayer$OnCompletionListener) -> playSound
    android.media.MediaPlayer playSound(android.content.Context,int,android.media.MediaPlayer$OnCompletionListener) -> playSound
    void playSound(android.content.Context,int) -> playSound
    long nowSecond() -> nowSecond
    java.lang.String formatSecToMin(int) -> formatSecToMin
    long nowMilliSecond() -> nowMilliSecond
    long secondsToNow(long) -> secondsToNow
    long secondsToMilliSeconds(int) -> secondsToMilliSeconds
    long milliSecondsToNow(long) -> milliSecondsToNow
    long ticksToNow(long) -> ticksToNow
    long currentTicks() -> currentTicks
    long currentDayInMills() -> currentDayInMills
    long currentWeekInMills() -> currentWeekInMills
    long currentMonthInMills() -> currentMonthInMills
    long currentYearInMills() -> currentYearInMills
    int getSystemVersion(android.content.Context,int) -> getSystemVersion
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
    java.lang.String getLine1Number(android.content.Context) -> getLine1Number
    boolean isLockScreen(android.content.Context) -> isLockScreen
    boolean isTopActivity(android.content.Context) -> isTopActivity
    boolean isServiceRunning(android.content.Context,java.lang.String) -> isServiceRunning
    boolean isProcessRunning(android.content.Context,java.lang.String) -> isProcessRunning
    java.lang.String getTopActivityName(android.content.Context) -> getTopActivityName
    boolean isTopApplication(android.content.Context) -> isTopApplication
    boolean isIntentAvailable(android.content.Context,android.content.Intent) -> isIntentAvailable
    void freeBitmapMap(java.util.Map) -> freeBitmapMap
    void selectPicture(android.content.Context,int) -> selectPicture
    int nullAsNil(java.lang.Integer) -> nullAsNil
    long nullAsNil(java.lang.Long) -> nullAsNil
    java.lang.String nullAsNil(java.lang.String) -> nullAsNil
    boolean nullAsTrue(java.lang.Boolean) -> nullAsTrue
    boolean nullAsFalse(java.lang.Boolean) -> nullAsFalse
    int nullAs(java.lang.Integer,int) -> nullAs
    long nullAs(java.lang.Long,long) -> nullAs
    boolean nullAs(java.lang.Boolean,boolean) -> nullAs
    java.lang.String nullAs(java.lang.String,java.lang.String) -> nullAs
    int nullAsInt(java.lang.Object,int) -> nullAsInt
    boolean isNullOrNil(java.lang.String) -> isNullOrNil
    boolean isNullOrNil(byte[]) -> isNullOrNil
    int getSeconds(java.lang.String,int) -> getSeconds
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    int getHex(java.lang.String,int) -> getHex
    void writeToFile(java.lang.String,java.lang.String) -> writeToFile
    java.util.Map parseXml(java.lang.String,java.lang.String,java.lang.String) -> parseXml
    void a(java.util.Map,java.lang.String,org.w3c.dom.Node,int) -> a
    void transClickToSelect(android.view.View,android.view.View) -> transClickToSelect
    java.lang.String getCutPasswordMD5(java.lang.String) -> getCutPasswordMD5
    java.lang.String getFullPasswordMD5(java.lang.String) -> getFullPasswordMD5
    org.w3c.dom.Element getRootElementFromXML(byte[]) -> getRootElementFromXML
    java.lang.String convertStreamToString(java.io.InputStream) -> convertStreamToString
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    byte[] decodeHexString(java.lang.String) -> decodeHexString
    int guessHttpSendLength(int) -> guessHttpSendLength
    int guessHttpRecvLength(int) -> guessHttpRecvLength
    int guessHttpContinueRecvLength(int) -> guessHttpContinueRecvLength
    int guessTcpConnectLength() -> guessTcpConnectLength
    int guessTcpDisconnectLength() -> guessTcpDisconnectLength
    int guessTcpSendLength(int) -> guessTcpSendLength
    int guessTcpRecvLength(int) -> guessTcpRecvLength
    int[] splitToIntArray(java.lang.String) -> splitToIntArray
    int UnZipFolder(java.lang.String,java.lang.String) -> UnZipFolder
    java.lang.String getStack() -> getStack
    boolean checkSDCardFull() -> checkSDCardFull
    boolean isSDCardHaveEnoughSpace(long) -> isSDCardHaveEnoughSpace
    java.lang.String GetHostIp() -> GetHostIp
    boolean checkPermission(android.content.Context,java.lang.String) -> checkPermission
    boolean jump(android.content.Context,java.lang.String) -> jump
    java.lang.String escapeStringForXml(java.lang.String) -> escapeStringForXml
    java.lang.String processXml(java.lang.String) -> processXml
    java.lang.String expandEntities(java.lang.String) -> expandEntities
    int a(char[],int,int) -> a
    boolean isImgFile(java.lang.String) -> isImgFile
    java.lang.String mapToXml(java.lang.String,java.util.LinkedHashMap) -> mapToXml
    java.util.Map parseIni(java.lang.String) -> parseIni
    boolean deleteFile(java.lang.String) -> deleteFile
    void deleteOutOfDateFile(java.lang.String,java.lang.String,long) -> deleteOutOfDateFile
    byte[] readFromFile(java.lang.String) -> readFromFile
    boolean writeToFile(java.lang.String,byte[]) -> writeToFile
com.tencent.mm.sdk.platformtools.Util$1 -> com.tencent.mm.sdk.platformtools.Util$1:
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.tencent.mm.sdk.platformtools.Util$2 -> com.tencent.mm.sdk.platformtools.Util$2:
    android.view.View bD -> bD
    android.view.View bE -> bE
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.tencent.mm.sdk.platformtools.package-info -> com.tencent.mm.sdk.platformtools.package-info:
com.tencent.mm.sdk.plugin.BaseProfile -> com.tencent.mm.sdk.plugin.BaseProfile:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String[] INDEX_CREATE -> INDEX_CREATE
    java.lang.String COL_USERNAME -> COL_USERNAME
    java.lang.String COL_BINDQQ -> COL_BINDQQ
    java.lang.String COL_BINDMOBILE -> COL_BINDMOBILE
    java.lang.String COL_BINDEMAIL -> COL_BINDEMAIL
    java.lang.String COL_ALIAS -> COL_ALIAS
    java.lang.String COL_NICKNAME -> COL_NICKNAME
    java.lang.String COL_SIGNATURE -> COL_SIGNATURE
    java.lang.String COL_PROVINCE -> COL_PROVINCE
    java.lang.String COL_CITY -> COL_CITY
    java.lang.String COL_WEIBO -> COL_WEIBO
    java.lang.String COL_AVATAR -> COL_AVATAR
    java.lang.String field_username -> field_username
    long field_bindqq -> field_bindqq
    java.lang.String field_bindmobile -> field_bindmobile
    java.lang.String field_bindemail -> field_bindemail
    java.lang.String field_alias -> field_alias
    java.lang.String field_nickname -> field_nickname
    java.lang.String field_signature -> field_signature
    java.lang.String field_province -> field_province
    java.lang.String field_city -> field_city
    java.lang.String field_weibo -> field_weibo
    java.lang.String field_avatar -> field_avatar
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo initAutoDBInfo(java.lang.Class) -> initAutoDBInfo
    void convertFrom(android.database.Cursor) -> convertFrom
    android.content.ContentValues convertTo() -> convertTo
    void reset() -> reset
com.tencent.mm.sdk.plugin.IMMPluginAPI -> com.tencent.mm.sdk.plugin.IMMPluginAPI:
    java.lang.String getPluginKey(java.lang.String) -> getPluginKey
    boolean isPluginInstalled(java.lang.String) -> isPluginInstalled
    boolean installPlugin(java.lang.String) -> installPlugin
    com.tencent.mm.sdk.plugin.Profile getCurrentProfile(java.lang.String) -> getCurrentProfile
    void createQRCodeController(java.lang.String) -> createQRCodeController
    void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack) -> createQRCodeController
    void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> createQRCodeController
    boolean registerQRCodePattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> registerQRCodePattern
    void jumpToSettingView(java.lang.String,java.lang.String) -> jumpToSettingView
    void createMsgController(java.lang.String) -> createMsgController
    boolean registerPattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> registerPattern
    void jumpToChattingUI(java.lang.String,java.lang.String) -> jumpToChattingUI
    void jumpToBindQQ(java.lang.String) -> jumpToBindQQ
    void jumpToBindMobile(java.lang.String) -> jumpToBindMobile
    void jumpToBindEmail(java.lang.String) -> jumpToBindEmail
    void release() -> release
    boolean sendMsgNotify(java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class) -> sendMsgNotify
    boolean registerAutoMsg(java.lang.String,java.lang.String) -> registerAutoMsg
    boolean unregisterAutoMsg(java.lang.String,java.lang.String) -> unregisterAutoMsg
    boolean appendNetStat(int,int,int) -> appendNetStat
com.tencent.mm.sdk.plugin.MMPluginAPIImpl -> com.tencent.mm.sdk.plugin.MMPluginAPIImpl:
    android.content.Context q -> q
    com.tencent.mm.sdk.channel.MMessage$Receiver bF -> bF
    java.lang.String am -> am
    java.lang.String[] columns -> columns
    void release() -> release
    java.lang.Object e(java.lang.String) -> e
    boolean registerAutoMsg(java.lang.String,java.lang.String) -> registerAutoMsg
    boolean unregisterAutoMsg(java.lang.String,java.lang.String) -> unregisterAutoMsg
    boolean sendMsgNotify(java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class) -> sendMsgNotify
    java.lang.String getPluginKey(java.lang.String) -> getPluginKey
    boolean isPluginInstalled(java.lang.String) -> isPluginInstalled
    boolean installPlugin(java.lang.String) -> installPlugin
    void a(java.lang.String,java.lang.String,android.content.Intent) -> a
    void createQRCodeController(java.lang.String) -> createQRCodeController
    void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack) -> createQRCodeController
    void createQRCodeController(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> createQRCodeController
    boolean registerQRCodePattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> registerQRCodePattern
    void jumpToSettingView(java.lang.String,java.lang.String) -> jumpToSettingView
    void jumpToChattingUI(java.lang.String,java.lang.String) -> jumpToChattingUI
    com.tencent.mm.sdk.plugin.Profile getCurrentProfile(java.lang.String) -> getCurrentProfile
    void jumpToBindQQ(java.lang.String) -> jumpToBindQQ
    void jumpToBindMobile(java.lang.String) -> jumpToBindMobile
    void jumpToBindEmail(java.lang.String) -> jumpToBindEmail
    void createMsgController(java.lang.String) -> createMsgController
    boolean registerPattern(java.lang.String,com.tencent.mm.sdk.channel.MMessage$CallBack,java.lang.String) -> registerPattern
    boolean appendNetStat(int,int,int) -> appendNetStat
com.tencent.mm.sdk.plugin.MMPluginMsg -> com.tencent.mm.sdk.plugin.MMPluginMsg:
    long msgClientId -> msgClientId
    java.lang.String content -> content
    java.lang.String ACTION_AUTO_MSG -> ACTION_AUTO_MSG
    java.lang.String RECV_PKG -> RECV_PKG
    java.lang.String RECV_MSG -> RECV_MSG
    java.lang.String RECV_THUMB -> RECV_THUMB
    java.lang.String SEND_ID -> SEND_ID
    java.lang.String SEND_ERR_TYPE -> SEND_ERR_TYPE
    java.lang.String SEND_ERR_CODE -> SEND_ERR_CODE
    java.lang.String TYPE -> TYPE
    int TYPE_SEND_RET -> TYPE_SEND_RET
    int TYPE_RECV_MSG -> TYPE_RECV_MSG
    com.tencent.mm.sdk.openapi.WXAppExtendObject pluginMsgToWXAppExtendObject(com.tencent.mm.sdk.plugin.MMPluginMsg) -> pluginMsgToWXAppExtendObject
    com.tencent.mm.sdk.plugin.MMPluginMsg WXAppExtentObjectToPluginMsg(com.tencent.mm.sdk.openapi.WXAppExtendObject) -> WXAppExtentObjectToPluginMsg
    long sendMessage(android.content.Context,java.lang.String) -> sendMessage
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper -> com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper:
    int type -> type
    android.content.Intent intent -> intent
    boolean isSendRet() -> isSendRet
    boolean isRecvNew() -> isRecvNew
    java.lang.String getMsgContent() -> getMsgContent
    java.lang.Integer getSendErrCode() -> getSendErrCode
    java.lang.Integer getSendErrType() -> getSendErrType
    java.lang.Long getSendMsgId() -> getSendMsgId
com.tencent.mm.sdk.plugin.MMPluginOAuth -> com.tencent.mm.sdk.plugin.MMPluginOAuth:
    com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult bG -> bG
    android.content.Context q -> q
    java.lang.String bH -> bH
    java.lang.String bI -> bI
    android.os.Handler handler -> handler
    java.lang.String getAccessToken() -> getAccessToken
    java.lang.String getRequestToken() -> getRequestToken
    void start() -> start
    boolean start(android.os.Handler) -> start
    java.lang.String a(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> a
    void a(com.tencent.mm.sdk.plugin.MMPluginOAuth,java.lang.String) -> a
    com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult b(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> b
com.tencent.mm.sdk.plugin.MMPluginOAuth$1 -> com.tencent.mm.sdk.plugin.MMPluginOAuth$1:
    com.tencent.mm.sdk.plugin.MMPluginOAuth bJ -> bJ
    void run() -> run
com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult -> com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult:
    void onResult(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> onResult
    void onSessionTimeOut() -> onSessionTimeOut
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver -> com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver:
    java.util.Map ah -> ah
    com.tencent.mm.sdk.plugin.MMPluginOAuth bK -> bK
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void register(java.lang.String,com.tencent.mm.sdk.plugin.MMPluginOAuth) -> register
    void unregister(java.lang.String) -> unregister
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1 -> com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1:
    com.tencent.mm.sdk.plugin.MMPluginOAuth bL -> bL
    java.lang.String bM -> bM
    com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver bN -> bN
    void run() -> run
com.tencent.mm.sdk.plugin.MMPluginProviderConstants -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants:
    java.lang.String AUTHORITY -> AUTHORITY
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_INT -> TYPE_INT
    int TYPE_LONG -> TYPE_LONG
    int TYPE_STRING -> TYPE_STRING
    int TYPE_BOOLEAN -> TYPE_BOOLEAN
    int TYPE_FLOAT -> TYPE_FLOAT
    int TYPE_DOUBLE -> TYPE_DOUBLE
    java.lang.String PLUGIN_PACKAGE_PATTERN -> PLUGIN_PACKAGE_PATTERN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String API_KEY -> API_KEY
    java.lang.String REQUEST_TOKEN -> REQUEST_TOKEN
    java.lang.String ACCESS_TOKEN -> ACCESS_TOKEN
    java.lang.String SECRET -> SECRET
    java.lang.String ACTION_REQUEST_TOKEN -> ACTION_REQUEST_TOKEN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String KEY -> KEY
    java.lang.String TYPE -> TYPE
    java.lang.String VALUE -> VALUE
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent:
    java.lang.String AUTH_KEY -> AUTH_KEY
    java.lang.String NAME -> NAME
    java.lang.String PACKAGE -> PACKAGE
    java.lang.String REQUEST_TOKEN -> REQUEST_TOKEN
    java.lang.String ACCESS_TOKEN -> ACCESS_TOKEN
    java.lang.String PERMISSIONS -> PERMISSIONS
    java.lang.String ACTION_REQUEST_TOKEN -> ACTION_REQUEST_TOKEN
    java.lang.String ACTION_RESPONSE -> ACTION_RESPONSE
    java.lang.String ACTION_QRCODE_SCANNED -> ACTION_QRCODE_SCANNED
    java.lang.String PLUGIN_PACKAGE_PATTERN -> PLUGIN_PACKAGE_PATTERN
    java.lang.String APP_PACKAGE_PATTERN -> APP_PACKAGE_PATTERN
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver:
    int getType(java.lang.Object) -> getType
    boolean unresolveObj(android.content.ContentValues,java.lang.Object) -> unresolveObj
    java.lang.Object resolveObj(int,java.lang.String) -> resolveObj
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String KEY -> KEY
    java.lang.String TYPE -> TYPE
    java.lang.String VALUE -> VALUE
com.tencent.mm.sdk.plugin.MMPluginUtil -> com.tencent.mm.sdk.plugin.MMPluginUtil:
    com.tencent.mm.sdk.plugin.IMMPluginAPI queryPluginMgr(android.content.Context) -> queryPluginMgr
com.tencent.mm.sdk.plugin.Profile -> com.tencent.mm.sdk.plugin.Profile:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String[] columns -> columns
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo bO -> bO
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo getDBInfo() -> getDBInfo
com.tencent.mm.sdk.plugin.package-info -> com.tencent.mm.sdk.plugin.package-info:
com.tencent.mm.sdk.storage.ContentProviderDB -> com.tencent.mm.sdk.storage.ContentProviderDB:
    android.content.Context q -> q
    android.net.Uri getUriFromTable(java.lang.String) -> getUriFromTable
    android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String) -> query
    android.database.Cursor rawQuery(java.lang.String,java.lang.String[]) -> rawQuery
    boolean execSQL(java.lang.String,java.lang.String) -> execSQL
    long insert(java.lang.String,java.lang.String,android.content.ContentValues) -> insert
    int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    long replace(java.lang.String,java.lang.String,android.content.ContentValues) -> replace
    int delete(java.lang.String,java.lang.String,java.lang.String[]) -> delete
com.tencent.mm.sdk.storage.CursorFieldHelper -> com.tencent.mm.sdk.storage.CursorFieldHelper:
    java.util.Map bP -> bP
    java.util.Map bQ -> bQ
    java.util.Map bR -> bR
    java.lang.String type(java.lang.Class) -> type
    com.tencent.mm.sdk.storage.CursorFieldHelper$IGetMethod getter(java.lang.Class) -> getter
    com.tencent.mm.sdk.storage.CursorFieldHelper$ISetMethod setter(java.lang.Class) -> setter
    void keep_setBlob(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setBlob
    void keep_getBlob(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getBlob
    void keep_setShort(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setShort
    void keep_getShort(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getShort
    void keep_setBoolean(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setBoolean
    void keep_getBoolean(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getBoolean
    void keep_setInt(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setInt
    void keep_getInt(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getInt
    void keep_setFloat(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setFloat
    void keep_getFloat(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getFloat
    void keep_setDouble(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setDouble
    void keep_getDouble(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getDouble
    void keep_setLong(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setLong
    void keep_getLong(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getLong
    void keep_setString(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> keep_setString
    void keep_getString(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> keep_getString
com.tencent.mm.sdk.storage.CursorFieldHelper$1 -> com.tencent.mm.sdk.storage.CursorFieldHelper$1:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$10 -> com.tencent.mm.sdk.storage.CursorFieldHelper$10:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$11 -> com.tencent.mm.sdk.storage.CursorFieldHelper$11:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$12 -> com.tencent.mm.sdk.storage.CursorFieldHelper$12:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$13 -> com.tencent.mm.sdk.storage.CursorFieldHelper$13:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$14 -> com.tencent.mm.sdk.storage.CursorFieldHelper$14:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$15 -> com.tencent.mm.sdk.storage.CursorFieldHelper$15:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$16 -> com.tencent.mm.sdk.storage.CursorFieldHelper$16:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$17 -> com.tencent.mm.sdk.storage.CursorFieldHelper$17:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$18 -> com.tencent.mm.sdk.storage.CursorFieldHelper$18:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$19 -> com.tencent.mm.sdk.storage.CursorFieldHelper$19:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$2 -> com.tencent.mm.sdk.storage.CursorFieldHelper$2:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$20 -> com.tencent.mm.sdk.storage.CursorFieldHelper$20:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$21 -> com.tencent.mm.sdk.storage.CursorFieldHelper$21:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$22 -> com.tencent.mm.sdk.storage.CursorFieldHelper$22:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$23 -> com.tencent.mm.sdk.storage.CursorFieldHelper$23:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$24 -> com.tencent.mm.sdk.storage.CursorFieldHelper$24:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$25 -> com.tencent.mm.sdk.storage.CursorFieldHelper$25:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$26 -> com.tencent.mm.sdk.storage.CursorFieldHelper$26:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$27 -> com.tencent.mm.sdk.storage.CursorFieldHelper$27:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$28 -> com.tencent.mm.sdk.storage.CursorFieldHelper$28:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$3 -> com.tencent.mm.sdk.storage.CursorFieldHelper$3:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$4 -> com.tencent.mm.sdk.storage.CursorFieldHelper$4:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$5 -> com.tencent.mm.sdk.storage.CursorFieldHelper$5:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$6 -> com.tencent.mm.sdk.storage.CursorFieldHelper$6:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$7 -> com.tencent.mm.sdk.storage.CursorFieldHelper$7:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$8 -> com.tencent.mm.sdk.storage.CursorFieldHelper$8:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$9 -> com.tencent.mm.sdk.storage.CursorFieldHelper$9:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$IGetMethod -> com.tencent.mm.sdk.storage.CursorFieldHelper$IGetMethod:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.content.ContentValues) -> invoke
com.tencent.mm.sdk.storage.CursorFieldHelper$ISetMethod -> com.tencent.mm.sdk.storage.CursorFieldHelper$ISetMethod:
    void invoke(java.lang.reflect.Field,java.lang.Object,android.database.Cursor,int) -> invoke
com.tencent.mm.sdk.storage.IAutoDBItem -> com.tencent.mm.sdk.storage.IAutoDBItem:
    java.lang.String FIELD_PREFIX -> FIELD_PREFIX
    java.lang.String SYSTEM_ROWID_FIELD -> SYSTEM_ROWID_FIELD
    java.lang.String COL_ROWID -> COL_ROWID
    long systemRowid -> systemRowid
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo getDBInfo() -> getDBInfo
    void convertFrom(android.database.Cursor) -> convertFrom
    android.content.ContentValues convertTo() -> convertTo
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo initAutoDBInfo(java.lang.Class) -> initAutoDBInfo
    java.lang.String[] a(java.lang.reflect.Field[]) -> a
    java.util.Map b(java.lang.reflect.Field[]) -> b
    java.lang.String c(java.lang.reflect.Field[]) -> c
    java.lang.String getColName(java.lang.reflect.Field) -> getColName
    java.lang.reflect.Field[] getValidFields(java.lang.Class) -> getValidFields
    boolean checkIOEqual(android.content.ContentValues,android.database.Cursor) -> checkIOEqual
    android.database.Cursor getCursorForProjection(android.content.ContentValues,java.lang.String[]) -> getCursorForProjection
com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo -> com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo:
    java.lang.reflect.Field[] fields -> fields
    java.lang.String primaryKey -> primaryKey
    java.lang.String[] columns -> columns
    java.util.Map colsMap -> colsMap
    java.lang.String sql -> sql
com.tencent.mm.sdk.storage.ISQLiteDatabase -> com.tencent.mm.sdk.storage.ISQLiteDatabase:
    android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String) -> query
    android.database.Cursor rawQuery(java.lang.String,java.lang.String[]) -> rawQuery
    boolean execSQL(java.lang.String,java.lang.String) -> execSQL
    long insert(java.lang.String,java.lang.String,android.content.ContentValues) -> insert
    int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    long replace(java.lang.String,java.lang.String,android.content.ContentValues) -> replace
    int delete(java.lang.String,java.lang.String,java.lang.String[]) -> delete
com.tencent.mm.sdk.storage.MAutoDBFieldAnnotation -> com.tencent.mm.sdk.storage.MAutoDBFieldAnnotation:
    java.lang.String defValue() -> defValue
    int primaryKey() -> primaryKey
com.tencent.mm.sdk.storage.MAutoDBItem -> com.tencent.mm.sdk.storage.MAutoDBItem:
    void convertFrom(android.database.Cursor) -> convertFrom
    android.content.ContentValues convertTo() -> convertTo
com.tencent.mm.sdk.storage.MAutoStorage -> com.tencent.mm.sdk.storage.MAutoStorage:
    com.tencent.mm.sdk.storage.ISQLiteDatabase bS -> bS
    com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo bT -> bT
    java.lang.String bU -> bU
    java.lang.String getTableName() -> getTableName
    java.lang.String getPrimaryKey() -> getPrimaryKey
    java.lang.String getCreateSQLs(com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo,java.lang.String) -> getCreateSQLs
    java.util.List getUpdateSQLs(com.tencent.mm.sdk.storage.IAutoDBItem$MAutoDBInfo,java.lang.String,com.tencent.mm.sdk.storage.ISQLiteDatabase) -> getUpdateSQLs
    boolean insert(com.tencent.mm.sdk.storage.IAutoDBItem) -> insert
    boolean delete(com.tencent.mm.sdk.storage.IAutoDBItem,java.lang.String[]) -> delete
    boolean delete(long) -> delete
    boolean get(long,com.tencent.mm.sdk.storage.IAutoDBItem) -> get
    boolean get(com.tencent.mm.sdk.storage.IAutoDBItem,java.lang.String[]) -> get
    boolean update(long,com.tencent.mm.sdk.storage.IAutoDBItem) -> update
    boolean update(com.tencent.mm.sdk.storage.IAutoDBItem,java.lang.String[]) -> update
    boolean replace(com.tencent.mm.sdk.storage.IAutoDBItem) -> replace
    boolean a(android.content.ContentValues) -> a
    android.database.Cursor getAll() -> getAll
    int getCount() -> getCount
    android.database.Cursor rawQuery(java.lang.String,java.lang.String[]) -> rawQuery
    java.lang.StringBuilder a(android.content.ContentValues,java.lang.String[]) -> a
    java.lang.String[] a(java.lang.String[],android.content.ContentValues) -> a
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
com.tencent.mm.sdk.storage.MDBItem -> com.tencent.mm.sdk.storage.MDBItem:
    void convertFrom(android.database.Cursor) -> convertFrom
    android.content.ContentValues convertTo() -> convertTo
com.tencent.mm.sdk.storage.MStorage -> com.tencent.mm.sdk.storage.MStorage:
    com.tencent.mm.sdk.storage.MStorageEvent bV -> bV
    com.tencent.mm.sdk.storage.MStorageEvent bW -> bW
    void lock() -> lock
    void unlock() -> unlock
    void add(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange) -> add
    void addLoadedListener(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded) -> addLoadedListener
    void remove(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange) -> remove
    void removeLoadedListener(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded) -> removeLoadedListener
    void doNotify() -> doNotify
    void doNotify(java.lang.String) -> doNotify
    void a(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange,java.lang.String) -> a
    void a(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded) -> a
com.tencent.mm.sdk.storage.MStorage$1 -> com.tencent.mm.sdk.storage.MStorage$1:
    com.tencent.mm.sdk.storage.MStorage bX -> bX
    void processEvent(java.lang.Object,java.lang.Object) -> processEvent
com.tencent.mm.sdk.storage.MStorage$2 -> com.tencent.mm.sdk.storage.MStorage$2:
    com.tencent.mm.sdk.storage.MStorage bX -> bX
    void processEvent(java.lang.Object,java.lang.Object) -> processEvent
com.tencent.mm.sdk.storage.MStorage$IOnStorageChange -> com.tencent.mm.sdk.storage.MStorage$IOnStorageChange:
    void onNotifyChange(java.lang.String) -> onNotifyChange
com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded -> com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded:
    void onNotifyLoaded() -> onNotifyLoaded
com.tencent.mm.sdk.storage.MStorageEvent -> com.tencent.mm.sdk.storage.MStorageEvent:
    int bY -> bY
    java.util.Hashtable bZ -> bZ
    java.util.concurrent.CopyOnWriteArraySet ca -> ca
    void lock() -> lock
    void unlock() -> unlock
    boolean isLocked() -> isLocked
    void add(java.lang.Object,android.os.Looper) -> add
    void remove(java.lang.Object) -> remove
    void removeAll() -> removeAll
    java.util.Vector e() -> e
    boolean event(java.lang.Object) -> event
    void doNotify() -> doNotify
    void f() -> f
    void processEvent(java.lang.Object,java.lang.Object) -> processEvent
com.tencent.mm.sdk.storage.MStorageEvent$1 -> com.tencent.mm.sdk.storage.MStorageEvent$1:
    java.lang.Object cb -> cb
    java.lang.Object cc -> cc
    com.tencent.mm.sdk.storage.MStorageEvent cd -> cd
    void run() -> run
com.tencent.mm.sdk.storage.package-info -> com.tencent.mm.sdk.storage.package-info:
javax.activation.ActivationDataFlavor -> javax.activation.ActivationDataFlavor:
    java.lang.String mimeType -> mimeType
    javax.activation.MimeType mimeObject -> mimeObject
    java.lang.String humanPresentableName -> humanPresentableName
    java.lang.Class representationClass -> representationClass
    java.lang.String getMimeType() -> getMimeType
    java.lang.Class getRepresentationClass() -> getRepresentationClass
    java.lang.String getHumanPresentableName() -> getHumanPresentableName
    void setHumanPresentableName(java.lang.String) -> setHumanPresentableName
    boolean equals(myjava.awt.datatransfer.DataFlavor) -> equals
    boolean isMimeTypeEqual(java.lang.String) -> isMimeTypeEqual
    java.lang.String normalizeMimeTypeParameter(java.lang.String,java.lang.String) -> normalizeMimeTypeParameter
    java.lang.String normalizeMimeType(java.lang.String) -> normalizeMimeType
javax.activation.CommandInfo -> javax.activation.CommandInfo:
    java.lang.String verb -> verb
    java.lang.String className -> className
    java.lang.String getCommandName() -> getCommandName
    java.lang.String getCommandClass() -> getCommandClass
    java.lang.Object getCommandObject(javax.activation.DataHandler,java.lang.ClassLoader) -> getCommandObject
javax.activation.CommandMap -> javax.activation.CommandMap:
    javax.activation.CommandMap defaultCommandMap -> defaultCommandMap
    javax.activation.CommandMap getDefaultCommandMap() -> getDefaultCommandMap
    void setDefaultCommandMap(javax.activation.CommandMap) -> setDefaultCommandMap
    javax.activation.CommandInfo[] getPreferredCommands(java.lang.String) -> getPreferredCommands
    javax.activation.CommandInfo[] getPreferredCommands(java.lang.String,javax.activation.DataSource) -> getPreferredCommands
    javax.activation.CommandInfo[] getAllCommands(java.lang.String) -> getAllCommands
    javax.activation.CommandInfo[] getAllCommands(java.lang.String,javax.activation.DataSource) -> getAllCommands
    javax.activation.CommandInfo getCommand(java.lang.String,java.lang.String) -> getCommand
    javax.activation.CommandInfo getCommand(java.lang.String,java.lang.String,javax.activation.DataSource) -> getCommand
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String) -> createDataContentHandler
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String,javax.activation.DataSource) -> createDataContentHandler
    java.lang.String[] getMimeTypes() -> getMimeTypes
javax.activation.CommandObject -> javax.activation.CommandObject:
    void setCommandContext(java.lang.String,javax.activation.DataHandler) -> setCommandContext
javax.activation.DataContentHandler -> javax.activation.DataContentHandler:
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
javax.activation.DataContentHandlerFactory -> javax.activation.DataContentHandlerFactory:
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String) -> createDataContentHandler
javax.activation.DataHandler -> javax.activation.DataHandler:
    javax.activation.DataSource dataSource -> dataSource
    javax.activation.DataSource objDataSource -> objDataSource
    java.lang.Object object -> object
    java.lang.String objectMimeType -> objectMimeType
    javax.activation.CommandMap currentCommandMap -> currentCommandMap
    myjava.awt.datatransfer.DataFlavor[] emptyFlavors -> emptyFlavors
    myjava.awt.datatransfer.DataFlavor[] transferFlavors -> transferFlavors
    javax.activation.DataContentHandler dataContentHandler -> dataContentHandler
    javax.activation.DataContentHandler factoryDCH -> factoryDCH
    javax.activation.DataContentHandlerFactory factory -> factory
    javax.activation.DataContentHandlerFactory oldFactory -> oldFactory
    java.lang.String shortType -> shortType
    javax.activation.CommandMap getCommandMap() -> getCommandMap
    javax.activation.DataSource getDataSource() -> getDataSource
    java.lang.String getName() -> getName
    java.lang.String getContentType() -> getContentType
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.io.OutputStream getOutputStream() -> getOutputStream
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    boolean isDataFlavorSupported(myjava.awt.datatransfer.DataFlavor) -> isDataFlavorSupported
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor) -> getTransferData
    void setCommandMap(javax.activation.CommandMap) -> setCommandMap
    javax.activation.CommandInfo[] getPreferredCommands() -> getPreferredCommands
    javax.activation.CommandInfo[] getAllCommands() -> getAllCommands
    javax.activation.CommandInfo getCommand(java.lang.String) -> getCommand
    java.lang.Object getContent() -> getContent
    java.lang.Object getBean(javax.activation.CommandInfo) -> getBean
    javax.activation.DataContentHandler getDataContentHandler() -> getDataContentHandler
    java.lang.String getBaseType() -> getBaseType
    void setDataContentHandlerFactory(javax.activation.DataContentHandlerFactory) -> setDataContentHandlerFactory
    java.lang.Object access$0(javax.activation.DataHandler) -> access$0
    java.lang.String access$1(javax.activation.DataHandler) -> access$1
javax.activation.DataHandler$1 -> javax.activation.DataHandler$1:
    javax.activation.DataHandler this$0 -> this$0
    java.io.PipedOutputStream val$pos -> val$pos
    javax.activation.DataContentHandler val$fdch -> val$fdch
    void run() -> run
javax.activation.DataHandlerDataSource -> javax.activation.DataHandlerDataSource:
    javax.activation.DataHandler dataHandler -> dataHandler
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
javax.activation.DataSource -> javax.activation.DataSource:
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
javax.activation.DataSourceDataContentHandler -> javax.activation.DataSourceDataContentHandler:
    javax.activation.DataSource ds -> ds
    myjava.awt.datatransfer.DataFlavor[] transferFlavors -> transferFlavors
    javax.activation.DataContentHandler dch -> dch
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
javax.activation.FileDataSource -> javax.activation.FileDataSource:
    java.io.File _file -> _file
    javax.activation.FileTypeMap typeMap -> typeMap
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    java.io.File getFile() -> getFile
    void setFileTypeMap(javax.activation.FileTypeMap) -> setFileTypeMap
javax.activation.FileTypeMap -> javax.activation.FileTypeMap:
    javax.activation.FileTypeMap defaultMap -> defaultMap
    java.lang.String getContentType(java.io.File) -> getContentType
    java.lang.String getContentType(java.lang.String) -> getContentType
    void setDefaultFileTypeMap(javax.activation.FileTypeMap) -> setDefaultFileTypeMap
    javax.activation.FileTypeMap getDefaultFileTypeMap() -> getDefaultFileTypeMap
javax.activation.MailcapCommandMap -> javax.activation.MailcapCommandMap:
    com.sun.activation.registries.MailcapFile defDB -> defDB
    com.sun.activation.registries.MailcapFile[] DB -> DB
    int PROG -> PROG
    com.sun.activation.registries.MailcapFile loadResource(java.lang.String) -> loadResource
    void loadAllResources(java.util.List,java.lang.String) -> loadAllResources
    com.sun.activation.registries.MailcapFile loadFile(java.lang.String) -> loadFile
    javax.activation.CommandInfo[] getPreferredCommands(java.lang.String) -> getPreferredCommands
    void appendPrefCmdsToList(java.util.Map,java.util.List) -> appendPrefCmdsToList
    boolean checkForVerb(java.util.List,java.lang.String) -> checkForVerb
    javax.activation.CommandInfo[] getAllCommands(java.lang.String) -> getAllCommands
    void appendCmdsToList(java.util.Map,java.util.List) -> appendCmdsToList
    javax.activation.CommandInfo getCommand(java.lang.String,java.lang.String) -> getCommand
    void addMailcap(java.lang.String) -> addMailcap
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String) -> createDataContentHandler
    javax.activation.DataContentHandler getDataContentHandler(java.lang.String) -> getDataContentHandler
    java.lang.String[] getMimeTypes() -> getMimeTypes
    java.lang.String[] getNativeCommands(java.lang.String) -> getNativeCommands
javax.activation.MimeType -> javax.activation.MimeType:
    java.lang.String primaryType -> primaryType
    java.lang.String subType -> subType
    javax.activation.MimeTypeParameterList parameters -> parameters
    java.lang.String TSPECIALS -> TSPECIALS
    void parse(java.lang.String) -> parse
    java.lang.String getPrimaryType() -> getPrimaryType
    void setPrimaryType(java.lang.String) -> setPrimaryType
    java.lang.String getSubType() -> getSubType
    void setSubType(java.lang.String) -> setSubType
    javax.activation.MimeTypeParameterList getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void removeParameter(java.lang.String) -> removeParameter
    java.lang.String toString() -> toString
    java.lang.String getBaseType() -> getBaseType
    boolean match(javax.activation.MimeType) -> match
    boolean match(java.lang.String) -> match
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
    boolean isTokenChar(char) -> isTokenChar
    boolean isValidToken(java.lang.String) -> isValidToken
javax.activation.MimeTypeParameterList -> javax.activation.MimeTypeParameterList:
    java.util.Hashtable parameters -> parameters
    java.lang.String TSPECIALS -> TSPECIALS
    void parse(java.lang.String) -> parse
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    void remove(java.lang.String) -> remove
    java.util.Enumeration getNames() -> getNames
    java.lang.String toString() -> toString
    boolean isTokenChar(char) -> isTokenChar
    int skipWhiteSpace(java.lang.String,int) -> skipWhiteSpace
    java.lang.String quote(java.lang.String) -> quote
    java.lang.String unquote(java.lang.String) -> unquote
javax.activation.MimeTypeParseException -> javax.activation.MimeTypeParseException:
javax.activation.MimetypesFileTypeMap -> javax.activation.MimetypesFileTypeMap:
    com.sun.activation.registries.MimeTypeFile defDB -> defDB
    com.sun.activation.registries.MimeTypeFile[] DB -> DB
    int PROG -> PROG
    java.lang.String defaultType -> defaultType
    com.sun.activation.registries.MimeTypeFile loadResource(java.lang.String) -> loadResource
    void loadAllResources(java.util.Vector,java.lang.String) -> loadAllResources
    com.sun.activation.registries.MimeTypeFile loadFile(java.lang.String) -> loadFile
    void addMimeTypes(java.lang.String) -> addMimeTypes
    java.lang.String getContentType(java.io.File) -> getContentType
    java.lang.String getContentType(java.lang.String) -> getContentType
javax.activation.ObjectDataContentHandler -> javax.activation.ObjectDataContentHandler:
    myjava.awt.datatransfer.DataFlavor[] transferFlavors -> transferFlavors
    java.lang.Object obj -> obj
    java.lang.String mimeType -> mimeType
    javax.activation.DataContentHandler dch -> dch
    javax.activation.DataContentHandler getDCH() -> getDCH
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
javax.activation.SecuritySupport -> javax.activation.SecuritySupport:
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.io.InputStream getResourceAsStream(java.lang.Class,java.lang.String) -> getResourceAsStream
    java.net.URL[] getResources(java.lang.ClassLoader,java.lang.String) -> getResources
    java.net.URL[] getSystemResources(java.lang.String) -> getSystemResources
    java.io.InputStream openStream(java.net.URL) -> openStream
javax.activation.SecuritySupport$1 -> javax.activation.SecuritySupport$1:
    java.lang.Object run() -> run
javax.activation.SecuritySupport$2 -> javax.activation.SecuritySupport$2:
    java.lang.Class val$c -> val$c
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.activation.SecuritySupport$3 -> javax.activation.SecuritySupport$3:
    java.lang.ClassLoader val$cl -> val$cl
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.activation.SecuritySupport$4 -> javax.activation.SecuritySupport$4:
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.activation.SecuritySupport$5 -> javax.activation.SecuritySupport$5:
    java.net.URL val$url -> val$url
    java.lang.Object run() -> run
javax.activation.URLDataSource -> javax.activation.URLDataSource:
    java.net.URL url -> url
    java.net.URLConnection url_conn -> url_conn
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.net.URL getURL() -> getURL
javax.activation.UnsupportedDataTypeException -> javax.activation.UnsupportedDataTypeException:
javax.mail.Address -> javax.mail.Address:
    long serialVersionUID -> serialVersionUID
    java.lang.String getType() -> getType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
javax.mail.AuthenticationFailedException -> javax.mail.AuthenticationFailedException:
    long serialVersionUID -> serialVersionUID
javax.mail.Authenticator -> javax.mail.Authenticator:
    java.net.InetAddress requestingSite -> requestingSite
    int requestingPort -> requestingPort
    java.lang.String requestingProtocol -> requestingProtocol
    java.lang.String requestingPrompt -> requestingPrompt
    java.lang.String requestingUserName -> requestingUserName
    void reset() -> reset
    javax.mail.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String) -> requestPasswordAuthentication
    java.net.InetAddress getRequestingSite() -> getRequestingSite
    int getRequestingPort() -> getRequestingPort
    java.lang.String getRequestingProtocol() -> getRequestingProtocol
    java.lang.String getRequestingPrompt() -> getRequestingPrompt
    java.lang.String getDefaultUserName() -> getDefaultUserName
    javax.mail.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
javax.mail.BodyPart -> javax.mail.BodyPart:
    javax.mail.Multipart parent -> parent
    javax.mail.Multipart getParent() -> getParent
    void setParent(javax.mail.Multipart) -> setParent
javax.mail.EventQueue -> javax.mail.EventQueue:
    javax.mail.EventQueue$QueueElement head -> head
    javax.mail.EventQueue$QueueElement tail -> tail
    java.lang.Thread qThread -> qThread
    void enqueue(javax.mail.event.MailEvent,java.util.Vector) -> enqueue
    javax.mail.EventQueue$QueueElement dequeue() -> dequeue
    void run() -> run
    void stop() -> stop
javax.mail.EventQueue$QueueElement -> javax.mail.EventQueue$QueueElement:
    javax.mail.EventQueue$QueueElement next -> next
    javax.mail.EventQueue$QueueElement prev -> prev
    javax.mail.event.MailEvent event -> event
    java.util.Vector vector -> vector
javax.mail.FetchProfile -> javax.mail.FetchProfile:
    java.util.Vector specials -> specials
    java.util.Vector headers -> headers
    void add(javax.mail.FetchProfile$Item) -> add
    void add(java.lang.String) -> add
    boolean contains(javax.mail.FetchProfile$Item) -> contains
    boolean contains(java.lang.String) -> contains
    javax.mail.FetchProfile$Item[] getItems() -> getItems
    java.lang.String[] getHeaderNames() -> getHeaderNames
javax.mail.FetchProfile$Item -> javax.mail.FetchProfile$Item:
    javax.mail.FetchProfile$Item ENVELOPE -> ENVELOPE
    javax.mail.FetchProfile$Item CONTENT_INFO -> CONTENT_INFO
    javax.mail.FetchProfile$Item FLAGS -> FLAGS
    java.lang.String name -> name
javax.mail.Flags -> javax.mail.Flags:
    int system_flags -> system_flags
    java.util.Hashtable user_flags -> user_flags
    int ANSWERED_BIT -> ANSWERED_BIT
    int DELETED_BIT -> DELETED_BIT
    int DRAFT_BIT -> DRAFT_BIT
    int FLAGGED_BIT -> FLAGGED_BIT
    int RECENT_BIT -> RECENT_BIT
    int SEEN_BIT -> SEEN_BIT
    int USER_BIT -> USER_BIT
    long serialVersionUID -> serialVersionUID
    void add(javax.mail.Flags$Flag) -> add
    void add(java.lang.String) -> add
    void add(javax.mail.Flags) -> add
    void remove(javax.mail.Flags$Flag) -> remove
    void remove(java.lang.String) -> remove
    void remove(javax.mail.Flags) -> remove
    boolean contains(javax.mail.Flags$Flag) -> contains
    boolean contains(java.lang.String) -> contains
    boolean contains(javax.mail.Flags) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    javax.mail.Flags$Flag[] getSystemFlags() -> getSystemFlags
    java.lang.String[] getUserFlags() -> getUserFlags
    java.lang.Object clone() -> clone
javax.mail.Flags$Flag -> javax.mail.Flags$Flag:
    javax.mail.Flags$Flag ANSWERED -> ANSWERED
    javax.mail.Flags$Flag DELETED -> DELETED
    javax.mail.Flags$Flag DRAFT -> DRAFT
    javax.mail.Flags$Flag FLAGGED -> FLAGGED
    javax.mail.Flags$Flag RECENT -> RECENT
    javax.mail.Flags$Flag SEEN -> SEEN
    javax.mail.Flags$Flag USER -> USER
    int bit -> bit
    int access$0(javax.mail.Flags$Flag) -> access$0
javax.mail.Folder -> javax.mail.Folder:
    javax.mail.Store store -> store
    int mode -> mode
    int HOLDS_MESSAGES -> HOLDS_MESSAGES
    int HOLDS_FOLDERS -> HOLDS_FOLDERS
    int READ_ONLY -> READ_ONLY
    int READ_WRITE -> READ_WRITE
    java.util.Vector connectionListeners -> connectionListeners
    java.util.Vector folderListeners -> folderListeners
    java.util.Vector messageCountListeners -> messageCountListeners
    java.util.Vector messageChangedListeners -> messageChangedListeners
    javax.mail.EventQueue q -> q
    java.lang.Object qLock -> qLock
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    javax.mail.URLName getURLName() -> getURLName
    javax.mail.Store getStore() -> getStore
    javax.mail.Folder getParent() -> getParent
    boolean exists() -> exists
    javax.mail.Folder[] list(java.lang.String) -> list
    javax.mail.Folder[] listSubscribed(java.lang.String) -> listSubscribed
    javax.mail.Folder[] list() -> list
    javax.mail.Folder[] listSubscribed() -> listSubscribed
    char getSeparator() -> getSeparator
    int getType() -> getType
    boolean create(int) -> create
    boolean isSubscribed() -> isSubscribed
    void setSubscribed(boolean) -> setSubscribed
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void open(int) -> open
    void close(boolean) -> close
    boolean isOpen() -> isOpen
    int getMode() -> getMode
    javax.mail.Flags getPermanentFlags() -> getPermanentFlags
    int getMessageCount() -> getMessageCount
    int getNewMessageCount() -> getNewMessageCount
    int getUnreadMessageCount() -> getUnreadMessageCount
    int getDeletedMessageCount() -> getDeletedMessageCount
    javax.mail.Message getMessage(int) -> getMessage
    javax.mail.Message[] getMessages(int,int) -> getMessages
    javax.mail.Message[] getMessages(int[]) -> getMessages
    javax.mail.Message[] getMessages() -> getMessages
    void appendMessages(javax.mail.Message[]) -> appendMessages
    void fetch(javax.mail.Message[],javax.mail.FetchProfile) -> fetch
    void setFlags(javax.mail.Message[],javax.mail.Flags,boolean) -> setFlags
    void setFlags(int,int,javax.mail.Flags,boolean) -> setFlags
    void setFlags(int[],javax.mail.Flags,boolean) -> setFlags
    void copyMessages(javax.mail.Message[],javax.mail.Folder) -> copyMessages
    javax.mail.Message[] expunge() -> expunge
    javax.mail.Message[] search(javax.mail.search.SearchTerm) -> search
    javax.mail.Message[] search(javax.mail.search.SearchTerm,javax.mail.Message[]) -> search
    void addConnectionListener(javax.mail.event.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(javax.mail.event.ConnectionListener) -> removeConnectionListener
    void notifyConnectionListeners(int) -> notifyConnectionListeners
    void addFolderListener(javax.mail.event.FolderListener) -> addFolderListener
    void removeFolderListener(javax.mail.event.FolderListener) -> removeFolderListener
    void notifyFolderListeners(int) -> notifyFolderListeners
    void notifyFolderRenamedListeners(javax.mail.Folder) -> notifyFolderRenamedListeners
    void addMessageCountListener(javax.mail.event.MessageCountListener) -> addMessageCountListener
    void removeMessageCountListener(javax.mail.event.MessageCountListener) -> removeMessageCountListener
    void notifyMessageAddedListeners(javax.mail.Message[]) -> notifyMessageAddedListeners
    void notifyMessageRemovedListeners(boolean,javax.mail.Message[]) -> notifyMessageRemovedListeners
    void addMessageChangedListener(javax.mail.event.MessageChangedListener) -> addMessageChangedListener
    void removeMessageChangedListener(javax.mail.event.MessageChangedListener) -> removeMessageChangedListener
    void notifyMessageChangedListeners(int,javax.mail.Message) -> notifyMessageChangedListeners
    void queueEvent(javax.mail.event.MailEvent,java.util.Vector) -> queueEvent
    void terminateQueue() -> terminateQueue
    void finalize() -> finalize
    java.lang.String toString() -> toString
javax.mail.Folder$TerminatorEvent -> javax.mail.Folder$TerminatorEvent:
    long serialVersionUID -> serialVersionUID
    void dispatch(java.lang.Object) -> dispatch
javax.mail.FolderClosedException -> javax.mail.FolderClosedException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
javax.mail.FolderNotFoundException -> javax.mail.FolderNotFoundException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
javax.mail.Header -> javax.mail.Header:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
javax.mail.IllegalWriteException -> javax.mail.IllegalWriteException:
    long serialVersionUID -> serialVersionUID
javax.mail.Message -> javax.mail.Message:
    int msgnum -> msgnum
    boolean expunged -> expunged
    javax.mail.Folder folder -> folder
    javax.mail.Session session -> session
    javax.mail.Address[] getFrom() -> getFrom
    void setFrom() -> setFrom
    void setFrom(javax.mail.Address) -> setFrom
    void addFrom(javax.mail.Address[]) -> addFrom
    javax.mail.Address[] getRecipients(javax.mail.Message$RecipientType) -> getRecipients
    javax.mail.Address[] getAllRecipients() -> getAllRecipients
    void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> setRecipients
    void setRecipient(javax.mail.Message$RecipientType,javax.mail.Address) -> setRecipient
    void addRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> addRecipients
    void addRecipient(javax.mail.Message$RecipientType,javax.mail.Address) -> addRecipient
    javax.mail.Address[] getReplyTo() -> getReplyTo
    void setReplyTo(javax.mail.Address[]) -> setReplyTo
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    java.util.Date getSentDate() -> getSentDate
    void setSentDate(java.util.Date) -> setSentDate
    java.util.Date getReceivedDate() -> getReceivedDate
    javax.mail.Flags getFlags() -> getFlags
    boolean isSet(javax.mail.Flags$Flag) -> isSet
    void setFlags(javax.mail.Flags,boolean) -> setFlags
    void setFlag(javax.mail.Flags$Flag,boolean) -> setFlag
    int getMessageNumber() -> getMessageNumber
    void setMessageNumber(int) -> setMessageNumber
    javax.mail.Folder getFolder() -> getFolder
    boolean isExpunged() -> isExpunged
    void setExpunged(boolean) -> setExpunged
    javax.mail.Message reply(boolean) -> reply
    void saveChanges() -> saveChanges
    boolean match(javax.mail.search.SearchTerm) -> match
javax.mail.Message$RecipientType -> javax.mail.Message$RecipientType:
    javax.mail.Message$RecipientType TO -> TO
    javax.mail.Message$RecipientType CC -> CC
    javax.mail.Message$RecipientType BCC -> BCC
    java.lang.String type -> type
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
javax.mail.MessageAware -> javax.mail.MessageAware:
    javax.mail.MessageContext getMessageContext() -> getMessageContext
javax.mail.MessageContext -> javax.mail.MessageContext:
    javax.mail.Part part -> part
    javax.mail.Part getPart() -> getPart
    javax.mail.Message getMessage() -> getMessage
    javax.mail.Message getMessage(javax.mail.Part) -> getMessage
    javax.mail.Session getSession() -> getSession
javax.mail.MessageRemovedException -> javax.mail.MessageRemovedException:
    long serialVersionUID -> serialVersionUID
javax.mail.MessagingException -> javax.mail.MessagingException:
    java.lang.Exception next -> next
    long serialVersionUID -> serialVersionUID
    java.lang.Exception getNextException() -> getNextException
    java.lang.Throwable getCause() -> getCause
    boolean setNextException(java.lang.Exception) -> setNextException
    java.lang.String toString() -> toString
    java.lang.String superToString() -> superToString
javax.mail.MethodNotSupportedException -> javax.mail.MethodNotSupportedException:
    long serialVersionUID -> serialVersionUID
javax.mail.Multipart -> javax.mail.Multipart:
    java.util.Vector parts -> parts
    java.lang.String contentType -> contentType
    javax.mail.Part parent -> parent
    void setMultipartDataSource(javax.mail.MultipartDataSource) -> setMultipartDataSource
    java.lang.String getContentType() -> getContentType
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
    boolean removeBodyPart(javax.mail.BodyPart) -> removeBodyPart
    void removeBodyPart(int) -> removeBodyPart
    void addBodyPart(javax.mail.BodyPart) -> addBodyPart
    void addBodyPart(javax.mail.BodyPart,int) -> addBodyPart
    void writeTo(java.io.OutputStream) -> writeTo
    javax.mail.Part getParent() -> getParent
    void setParent(javax.mail.Part) -> setParent
javax.mail.MultipartDataSource -> javax.mail.MultipartDataSource:
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
javax.mail.NoSuchProviderException -> javax.mail.NoSuchProviderException:
    long serialVersionUID -> serialVersionUID
javax.mail.Part -> javax.mail.Part:
    java.lang.String ATTACHMENT -> ATTACHMENT
    java.lang.String INLINE -> INLINE
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    boolean isMimeType(java.lang.String) -> isMimeType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getInputStream() -> getInputStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    java.lang.Object getContent() -> getContent
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setText(java.lang.String) -> setText
    void setContent(javax.mail.Multipart) -> setContent
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
javax.mail.PasswordAuthentication -> javax.mail.PasswordAuthentication:
    java.lang.String userName -> userName
    java.lang.String password -> password
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
javax.mail.Provider -> javax.mail.Provider:
    javax.mail.Provider$Type type -> type
    java.lang.String protocol -> protocol
    java.lang.String className -> className
    java.lang.String vendor -> vendor
    java.lang.String version -> version
    javax.mail.Provider$Type getType() -> getType
    java.lang.String getProtocol() -> getProtocol
    java.lang.String getClassName() -> getClassName
    java.lang.String getVendor() -> getVendor
    java.lang.String getVersion() -> getVersion
    java.lang.String toString() -> toString
javax.mail.Provider$Type -> javax.mail.Provider$Type:
    javax.mail.Provider$Type STORE -> STORE
    javax.mail.Provider$Type TRANSPORT -> TRANSPORT
    java.lang.String type -> type
    java.lang.String toString() -> toString
javax.mail.Quota -> javax.mail.Quota:
    java.lang.String quotaRoot -> quotaRoot
    javax.mail.Quota$Resource[] resources -> resources
    void setResourceLimit(java.lang.String,long) -> setResourceLimit
javax.mail.Quota$Resource -> javax.mail.Quota$Resource:
    java.lang.String name -> name
    long usage -> usage
    long limit -> limit
javax.mail.QuotaAwareStore -> javax.mail.QuotaAwareStore:
    javax.mail.Quota[] getQuota(java.lang.String) -> getQuota
    void setQuota(javax.mail.Quota) -> setQuota
javax.mail.ReadOnlyFolderException -> javax.mail.ReadOnlyFolderException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
javax.mail.SendFailedException -> javax.mail.SendFailedException:
    javax.mail.Address[] invalid -> invalid
    javax.mail.Address[] validSent -> validSent
    javax.mail.Address[] validUnsent -> validUnsent
    long serialVersionUID -> serialVersionUID
    javax.mail.Address[] getValidSentAddresses() -> getValidSentAddresses
    javax.mail.Address[] getValidUnsentAddresses() -> getValidUnsentAddresses
    javax.mail.Address[] getInvalidAddresses() -> getInvalidAddresses
javax.mail.Service -> javax.mail.Service:
    javax.mail.Session session -> session
    javax.mail.URLName url -> url
    boolean debug -> debug
    boolean connected -> connected
    java.util.Vector connectionListeners -> connectionListeners
    javax.mail.EventQueue q -> q
    java.lang.Object qLock -> qLock
    void connect() -> connect
    void connect(java.lang.String,java.lang.String,java.lang.String) -> connect
    void connect(java.lang.String,java.lang.String) -> connect
    void connect(java.lang.String,int,java.lang.String,java.lang.String) -> connect
    boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String) -> protocolConnect
    boolean isConnected() -> isConnected
    void setConnected(boolean) -> setConnected
    void close() -> close
    javax.mail.URLName getURLName() -> getURLName
    void setURLName(javax.mail.URLName) -> setURLName
    void addConnectionListener(javax.mail.event.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(javax.mail.event.ConnectionListener) -> removeConnectionListener
    void notifyConnectionListeners(int) -> notifyConnectionListeners
    java.lang.String toString() -> toString
    void queueEvent(javax.mail.event.MailEvent,java.util.Vector) -> queueEvent
    void terminateQueue() -> terminateQueue
    void finalize() -> finalize
javax.mail.Service$TerminatorEvent -> javax.mail.Service$TerminatorEvent:
    long serialVersionUID -> serialVersionUID
    void dispatch(java.lang.Object) -> dispatch
javax.mail.Session -> javax.mail.Session:
    java.util.Properties props -> props
    javax.mail.Authenticator authenticator -> authenticator
    java.util.Hashtable authTable -> authTable
    boolean debug -> debug
    java.io.PrintStream out -> out
    java.util.Vector providers -> providers
    java.util.Hashtable providersByProtocol -> providersByProtocol
    java.util.Hashtable providersByClassName -> providersByClassName
    java.util.Properties addressMap -> addressMap
    javax.mail.Session defaultSession -> defaultSession
    javax.mail.Session getInstance(java.util.Properties,javax.mail.Authenticator) -> getInstance
    javax.mail.Session getInstance(java.util.Properties) -> getInstance
    javax.mail.Session getDefaultInstance(java.util.Properties,javax.mail.Authenticator) -> getDefaultInstance
    javax.mail.Session getDefaultInstance(java.util.Properties) -> getDefaultInstance
    void setDebug(boolean) -> setDebug
    boolean getDebug() -> getDebug
    void setDebugOut(java.io.PrintStream) -> setDebugOut
    java.io.PrintStream getDebugOut() -> getDebugOut
    javax.mail.Provider[] getProviders() -> getProviders
    javax.mail.Provider getProvider(java.lang.String) -> getProvider
    void setProvider(javax.mail.Provider) -> setProvider
    javax.mail.Store getStore() -> getStore
    javax.mail.Store getStore(java.lang.String) -> getStore
    javax.mail.Store getStore(javax.mail.URLName) -> getStore
    javax.mail.Store getStore(javax.mail.Provider) -> getStore
    javax.mail.Store getStore(javax.mail.Provider,javax.mail.URLName) -> getStore
    javax.mail.Folder getFolder(javax.mail.URLName) -> getFolder
    javax.mail.Transport getTransport() -> getTransport
    javax.mail.Transport getTransport(java.lang.String) -> getTransport
    javax.mail.Transport getTransport(javax.mail.URLName) -> getTransport
    javax.mail.Transport getTransport(javax.mail.Provider) -> getTransport
    javax.mail.Transport getTransport(javax.mail.Address) -> getTransport
    javax.mail.Transport getTransport(javax.mail.Provider,javax.mail.URLName) -> getTransport
    java.lang.Object getService(javax.mail.Provider,javax.mail.URLName) -> getService
    void setPasswordAuthentication(javax.mail.URLName,javax.mail.PasswordAuthentication) -> setPasswordAuthentication
    javax.mail.PasswordAuthentication getPasswordAuthentication(javax.mail.URLName) -> getPasswordAuthentication
    javax.mail.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String) -> requestPasswordAuthentication
    java.util.Properties getProperties() -> getProperties
    java.lang.String getProperty(java.lang.String) -> getProperty
    void loadProviders(java.lang.Class) -> loadProviders
    void loadProvidersFromStream(java.io.InputStream) -> loadProvidersFromStream
    void addProvider(javax.mail.Provider) -> addProvider
    void loadAddressMap(java.lang.Class) -> loadAddressMap
    void setProtocolForAddress(java.lang.String,java.lang.String) -> setProtocolForAddress
    void loadFile(java.lang.String,javax.mail.StreamLoader) -> loadFile
    void loadResource(java.lang.String,java.lang.Class,javax.mail.StreamLoader) -> loadResource
    void loadAllResources(java.lang.String,java.lang.Class,javax.mail.StreamLoader) -> loadAllResources
    void pr(java.lang.String) -> pr
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.io.InputStream getResourceAsStream(java.lang.Class,java.lang.String) -> getResourceAsStream
    java.net.URL[] getResources(java.lang.ClassLoader,java.lang.String) -> getResources
    java.net.URL[] getSystemResources(java.lang.String) -> getSystemResources
    java.io.InputStream openStream(java.net.URL) -> openStream
    void access$0(javax.mail.Session,java.io.InputStream) -> access$0
    java.util.Properties access$1(javax.mail.Session) -> access$1
javax.mail.Session$1 -> javax.mail.Session$1:
    javax.mail.Session this$0 -> this$0
    void load(java.io.InputStream) -> load
javax.mail.Session$2 -> javax.mail.Session$2:
    javax.mail.Session this$0 -> this$0
    void load(java.io.InputStream) -> load
javax.mail.Session$3 -> javax.mail.Session$3:
    java.lang.Object run() -> run
javax.mail.Session$4 -> javax.mail.Session$4:
    java.lang.Class val$c -> val$c
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.mail.Session$5 -> javax.mail.Session$5:
    java.lang.ClassLoader val$cl -> val$cl
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.mail.Session$6 -> javax.mail.Session$6:
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.mail.Session$7 -> javax.mail.Session$7:
    java.net.URL val$url -> val$url
    java.lang.Object run() -> run
javax.mail.Store -> javax.mail.Store:
    java.util.Vector storeListeners -> storeListeners
    java.util.Vector folderListeners -> folderListeners
    javax.mail.Folder getDefaultFolder() -> getDefaultFolder
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    javax.mail.Folder getFolder(javax.mail.URLName) -> getFolder
    javax.mail.Folder[] getPersonalNamespaces() -> getPersonalNamespaces
    javax.mail.Folder[] getUserNamespaces(java.lang.String) -> getUserNamespaces
    javax.mail.Folder[] getSharedNamespaces() -> getSharedNamespaces
    void addStoreListener(javax.mail.event.StoreListener) -> addStoreListener
    void removeStoreListener(javax.mail.event.StoreListener) -> removeStoreListener
    void notifyStoreListeners(int,java.lang.String) -> notifyStoreListeners
    void addFolderListener(javax.mail.event.FolderListener) -> addFolderListener
    void removeFolderListener(javax.mail.event.FolderListener) -> removeFolderListener
    void notifyFolderListeners(int,javax.mail.Folder) -> notifyFolderListeners
    void notifyFolderRenamedListeners(javax.mail.Folder,javax.mail.Folder) -> notifyFolderRenamedListeners
javax.mail.StoreClosedException -> javax.mail.StoreClosedException:
    javax.mail.Store store -> store
    long serialVersionUID -> serialVersionUID
    javax.mail.Store getStore() -> getStore
javax.mail.StreamLoader -> javax.mail.StreamLoader:
    void load(java.io.InputStream) -> load
javax.mail.Transport -> javax.mail.Transport:
    java.util.Vector transportListeners -> transportListeners
    void send(javax.mail.Message) -> send
    void send(javax.mail.Message,javax.mail.Address[]) -> send
    void send0(javax.mail.Message,javax.mail.Address[]) -> send0
    void sendMessage(javax.mail.Message,javax.mail.Address[]) -> sendMessage
    void addTransportListener(javax.mail.event.TransportListener) -> addTransportListener
    void removeTransportListener(javax.mail.event.TransportListener) -> removeTransportListener
    void notifyTransportListeners(int,javax.mail.Address[],javax.mail.Address[],javax.mail.Address[],javax.mail.Message) -> notifyTransportListeners
javax.mail.UIDFolder -> javax.mail.UIDFolder:
    long LASTUID -> LASTUID
    long getUIDValidity() -> getUIDValidity
    javax.mail.Message getMessageByUID(long) -> getMessageByUID
    javax.mail.Message[] getMessagesByUID(long,long) -> getMessagesByUID
    javax.mail.Message[] getMessagesByUID(long[]) -> getMessagesByUID
    long getUID(javax.mail.Message) -> getUID
javax.mail.UIDFolder$FetchProfileItem -> javax.mail.UIDFolder$FetchProfileItem:
    javax.mail.UIDFolder$FetchProfileItem UID -> UID
javax.mail.URLName -> javax.mail.URLName:
    java.lang.String fullURL -> fullURL
    java.lang.String protocol -> protocol
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String host -> host
    java.net.InetAddress hostAddress -> hostAddress
    boolean hostAddressKnown -> hostAddressKnown
    int port -> port
    java.lang.String file -> file
    java.lang.String ref -> ref
    int hashCode -> hashCode
    boolean doEncode -> doEncode
    java.util.BitSet dontNeedEncoding -> dontNeedEncoding
    int caseDiff -> caseDiff
    java.lang.String toString() -> toString
    void parseString(java.lang.String) -> parseString
    int getPort() -> getPort
    java.lang.String getProtocol() -> getProtocol
    java.lang.String getFile() -> getFile
    java.lang.String getRef() -> getRef
    java.lang.String getHost() -> getHost
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.net.URL getURL() -> getURL
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.net.InetAddress getHostAddress() -> getHostAddress
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String _encode(java.lang.String) -> _encode
    java.lang.String decode(java.lang.String) -> decode
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String,int) -> indexOfAny
javax.mail.Version -> javax.mail.Version:
    java.lang.String version -> version
javax.mail.event.ConnectionAdapter -> javax.mail.event.ConnectionAdapter:
    void opened(javax.mail.event.ConnectionEvent) -> opened
    void disconnected(javax.mail.event.ConnectionEvent) -> disconnected
    void closed(javax.mail.event.ConnectionEvent) -> closed
javax.mail.event.ConnectionEvent -> javax.mail.event.ConnectionEvent:
    int OPENED -> OPENED
    int DISCONNECTED -> DISCONNECTED
    int CLOSED -> CLOSED
    int type -> type
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.ConnectionListener -> javax.mail.event.ConnectionListener:
    void opened(javax.mail.event.ConnectionEvent) -> opened
    void disconnected(javax.mail.event.ConnectionEvent) -> disconnected
    void closed(javax.mail.event.ConnectionEvent) -> closed
javax.mail.event.FolderAdapter -> javax.mail.event.FolderAdapter:
    void folderCreated(javax.mail.event.FolderEvent) -> folderCreated
    void folderRenamed(javax.mail.event.FolderEvent) -> folderRenamed
    void folderDeleted(javax.mail.event.FolderEvent) -> folderDeleted
javax.mail.event.FolderEvent -> javax.mail.event.FolderEvent:
    int CREATED -> CREATED
    int DELETED -> DELETED
    int RENAMED -> RENAMED
    int type -> type
    javax.mail.Folder folder -> folder
    javax.mail.Folder newFolder -> newFolder
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    javax.mail.Folder getFolder() -> getFolder
    javax.mail.Folder getNewFolder() -> getNewFolder
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.FolderListener -> javax.mail.event.FolderListener:
    void folderCreated(javax.mail.event.FolderEvent) -> folderCreated
    void folderDeleted(javax.mail.event.FolderEvent) -> folderDeleted
    void folderRenamed(javax.mail.event.FolderEvent) -> folderRenamed
javax.mail.event.MailEvent -> javax.mail.event.MailEvent:
    long serialVersionUID -> serialVersionUID
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.MessageChangedEvent -> javax.mail.event.MessageChangedEvent:
    int FLAGS_CHANGED -> FLAGS_CHANGED
    int ENVELOPE_CHANGED -> ENVELOPE_CHANGED
    int type -> type
    javax.mail.Message msg -> msg
    long serialVersionUID -> serialVersionUID
    int getMessageChangeType() -> getMessageChangeType
    javax.mail.Message getMessage() -> getMessage
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.MessageChangedListener -> javax.mail.event.MessageChangedListener:
    void messageChanged(javax.mail.event.MessageChangedEvent) -> messageChanged
javax.mail.event.MessageCountAdapter -> javax.mail.event.MessageCountAdapter:
    void messagesAdded(javax.mail.event.MessageCountEvent) -> messagesAdded
    void messagesRemoved(javax.mail.event.MessageCountEvent) -> messagesRemoved
javax.mail.event.MessageCountEvent -> javax.mail.event.MessageCountEvent:
    int ADDED -> ADDED
    int REMOVED -> REMOVED
    int type -> type
    boolean removed -> removed
    javax.mail.Message[] msgs -> msgs
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    boolean isRemoved() -> isRemoved
    javax.mail.Message[] getMessages() -> getMessages
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.MessageCountListener -> javax.mail.event.MessageCountListener:
    void messagesAdded(javax.mail.event.MessageCountEvent) -> messagesAdded
    void messagesRemoved(javax.mail.event.MessageCountEvent) -> messagesRemoved
javax.mail.event.StoreEvent -> javax.mail.event.StoreEvent:
    int ALERT -> ALERT
    int NOTICE -> NOTICE
    int type -> type
    java.lang.String message -> message
    long serialVersionUID -> serialVersionUID
    int getMessageType() -> getMessageType
    java.lang.String getMessage() -> getMessage
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.StoreListener -> javax.mail.event.StoreListener:
    void notification(javax.mail.event.StoreEvent) -> notification
javax.mail.event.TransportAdapter -> javax.mail.event.TransportAdapter:
    void messageDelivered(javax.mail.event.TransportEvent) -> messageDelivered
    void messageNotDelivered(javax.mail.event.TransportEvent) -> messageNotDelivered
    void messagePartiallyDelivered(javax.mail.event.TransportEvent) -> messagePartiallyDelivered
javax.mail.event.TransportEvent -> javax.mail.event.TransportEvent:
    int MESSAGE_DELIVERED -> MESSAGE_DELIVERED
    int MESSAGE_NOT_DELIVERED -> MESSAGE_NOT_DELIVERED
    int MESSAGE_PARTIALLY_DELIVERED -> MESSAGE_PARTIALLY_DELIVERED
    int type -> type
    javax.mail.Address[] validSent -> validSent
    javax.mail.Address[] validUnsent -> validUnsent
    javax.mail.Address[] invalid -> invalid
    javax.mail.Message msg -> msg
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    javax.mail.Address[] getValidSentAddresses() -> getValidSentAddresses
    javax.mail.Address[] getValidUnsentAddresses() -> getValidUnsentAddresses
    javax.mail.Address[] getInvalidAddresses() -> getInvalidAddresses
    javax.mail.Message getMessage() -> getMessage
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.TransportListener -> javax.mail.event.TransportListener:
    void messageDelivered(javax.mail.event.TransportEvent) -> messageDelivered
    void messageNotDelivered(javax.mail.event.TransportEvent) -> messageNotDelivered
    void messagePartiallyDelivered(javax.mail.event.TransportEvent) -> messagePartiallyDelivered
javax.mail.internet.AddressException -> javax.mail.internet.AddressException:
    java.lang.String ref -> ref
    int pos -> pos
    long serialVersionUID -> serialVersionUID
    java.lang.String getRef() -> getRef
    int getPos() -> getPos
    java.lang.String toString() -> toString
javax.mail.internet.AsciiOutputStream -> javax.mail.internet.AsciiOutputStream:
    boolean breakOnNonAscii -> breakOnNonAscii
    int ascii -> ascii
    int non_ascii -> non_ascii
    int linelen -> linelen
    boolean longLine -> longLine
    boolean badEOL -> badEOL
    boolean checkEOL -> checkEOL
    int lastb -> lastb
    int ret -> ret
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void check(int) -> check
    int getAscii() -> getAscii
javax.mail.internet.ContentDisposition -> javax.mail.internet.ContentDisposition:
    java.lang.String disposition -> disposition
    javax.mail.internet.ParameterList list -> list
    java.lang.String getDisposition() -> getDisposition
    java.lang.String getParameter(java.lang.String) -> getParameter
    javax.mail.internet.ParameterList getParameterList() -> getParameterList
    void setDisposition(java.lang.String) -> setDisposition
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void setParameterList(javax.mail.internet.ParameterList) -> setParameterList
    java.lang.String toString() -> toString
javax.mail.internet.ContentType -> javax.mail.internet.ContentType:
    java.lang.String primaryType -> primaryType
    java.lang.String subType -> subType
    javax.mail.internet.ParameterList list -> list
    java.lang.String getPrimaryType() -> getPrimaryType
    java.lang.String getSubType() -> getSubType
    java.lang.String getBaseType() -> getBaseType
    java.lang.String getParameter(java.lang.String) -> getParameter
    javax.mail.internet.ParameterList getParameterList() -> getParameterList
    void setPrimaryType(java.lang.String) -> setPrimaryType
    void setSubType(java.lang.String) -> setSubType
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void setParameterList(javax.mail.internet.ParameterList) -> setParameterList
    java.lang.String toString() -> toString
    boolean match(javax.mail.internet.ContentType) -> match
    boolean match(java.lang.String) -> match
javax.mail.internet.HeaderTokenizer -> javax.mail.internet.HeaderTokenizer:
    java.lang.String string -> string
    boolean skipComments -> skipComments
    java.lang.String delimiters -> delimiters
    int currentPos -> currentPos
    int maxPos -> maxPos
    int nextPos -> nextPos
    int peekPos -> peekPos
    java.lang.String RFC822 -> RFC822
    java.lang.String MIME -> MIME
    javax.mail.internet.HeaderTokenizer$Token EOFToken -> EOFToken
    javax.mail.internet.HeaderTokenizer$Token next() -> next
    javax.mail.internet.HeaderTokenizer$Token peek() -> peek
    java.lang.String getRemainder() -> getRemainder
    javax.mail.internet.HeaderTokenizer$Token getNext() -> getNext
    int skipWhiteSpace() -> skipWhiteSpace
    java.lang.String filterToken(java.lang.String,int,int) -> filterToken
javax.mail.internet.HeaderTokenizer$Token -> javax.mail.internet.HeaderTokenizer$Token:
    int type -> type
    java.lang.String value -> value
    int ATOM -> ATOM
    int QUOTEDSTRING -> QUOTEDSTRING
    int COMMENT -> COMMENT
    int EOF -> EOF
    int getType() -> getType
    java.lang.String getValue() -> getValue
javax.mail.internet.InternetAddress -> javax.mail.internet.InternetAddress:
    java.lang.String address -> address
    java.lang.String personal -> personal
    java.lang.String encodedPersonal -> encodedPersonal
    long serialVersionUID -> serialVersionUID
    java.lang.String rfc822phrase -> rfc822phrase
    java.lang.String specialsNoDotNoAt -> specialsNoDotNoAt
    java.lang.String specialsNoDot -> specialsNoDot
    java.lang.Object clone() -> clone
    java.lang.String getType() -> getType
    void setAddress(java.lang.String) -> setAddress
    void setPersonal(java.lang.String,java.lang.String) -> setPersonal
    void setPersonal(java.lang.String) -> setPersonal
    java.lang.String getAddress() -> getAddress
    java.lang.String getPersonal() -> getPersonal
    java.lang.String toString() -> toString
    java.lang.String toUnicodeString() -> toUnicodeString
    java.lang.String quotePhrase(java.lang.String) -> quotePhrase
    java.lang.String unquote(java.lang.String) -> unquote
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString(javax.mail.Address[]) -> toString
    java.lang.String toString(javax.mail.Address[],int) -> toString
    int lengthOfFirstSegment(java.lang.String) -> lengthOfFirstSegment
    int lengthOfLastSegment(java.lang.String,int) -> lengthOfLastSegment
    javax.mail.internet.InternetAddress getLocalAddress(javax.mail.Session) -> getLocalAddress
    javax.mail.internet.InternetAddress[] parse(java.lang.String) -> parse
    javax.mail.internet.InternetAddress[] parse(java.lang.String,boolean) -> parse
    javax.mail.internet.InternetAddress[] parseHeader(java.lang.String,boolean) -> parseHeader
    javax.mail.internet.InternetAddress[] parse(java.lang.String,boolean,boolean) -> parse
    void validate() -> validate
    void checkAddress(java.lang.String,boolean,boolean) -> checkAddress
    boolean isSimple() -> isSimple
    boolean isGroup() -> isGroup
    javax.mail.internet.InternetAddress[] getGroup(boolean) -> getGroup
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String,int) -> indexOfAny
javax.mail.internet.InternetHeaders -> javax.mail.internet.InternetHeaders:
    java.util.List headers -> headers
    void load(java.io.InputStream) -> load
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
javax.mail.internet.InternetHeaders$InternetHeader -> javax.mail.internet.InternetHeaders$InternetHeader:
    java.lang.String line -> line
    java.lang.String getValue() -> getValue
javax.mail.internet.InternetHeaders$matchEnum -> javax.mail.internet.InternetHeaders$matchEnum:
    java.util.Iterator e -> e
    java.lang.String[] names -> names
    boolean match -> match
    boolean want_line -> want_line
    javax.mail.internet.InternetHeaders$InternetHeader next_header -> next_header
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
    javax.mail.internet.InternetHeaders$InternetHeader nextMatch() -> nextMatch
javax.mail.internet.MailDateFormat -> javax.mail.internet.MailDateFormat:
    long serialVersionUID -> serialVersionUID
    boolean debug -> debug
    java.util.TimeZone tz -> tz
    java.util.Calendar cal -> cal
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.util.Date parseDate(char[],java.text.ParsePosition,boolean) -> parseDate
    java.util.Date ourUTC(int,int,int,int,int,int,int,boolean) -> ourUTC
    void setCalendar(java.util.Calendar) -> setCalendar
    void setNumberFormat(java.text.NumberFormat) -> setNumberFormat
javax.mail.internet.MailDateParser -> javax.mail.internet.MailDateParser:
    int index -> index
    char[] orig -> orig
    void skipUntilNumber() -> skipUntilNumber
    void skipWhiteSpace() -> skipWhiteSpace
    int peekChar() -> peekChar
    void skipChar(char) -> skipChar
    boolean skipIfChar(char) -> skipIfChar
    int parseNumber() -> parseNumber
    int parseMonth() -> parseMonth
    int parseTimeZone() -> parseTimeZone
    int parseNumericTimeZone() -> parseNumericTimeZone
    int parseAlphaTimeZone() -> parseAlphaTimeZone
    int getIndex() -> getIndex
javax.mail.internet.MimeBodyPart -> javax.mail.internet.MimeBodyPart:
    boolean setDefaultTextCharset -> setDefaultTextCharset
    boolean setContentTypeFileName -> setContentTypeFileName
    boolean encodeFileName -> encodeFileName
    boolean decodeFileName -> decodeFileName
    boolean cacheMultipart -> cacheMultipart
    javax.activation.DataHandler dh -> dh
    byte[] content -> content
    java.io.InputStream contentStream -> contentStream
    javax.mail.internet.InternetHeaders headers -> headers
    java.lang.Object cachedContent -> cachedContent
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    boolean isMimeType(java.lang.String) -> isMimeType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    void setContentID(java.lang.String) -> setContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getContentStream() -> getContentStream
    java.io.InputStream getRawInputStream() -> getRawInputStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    java.lang.Object getContent() -> getContent
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setText(java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String,java.lang.String) -> setText
    void setContent(javax.mail.Multipart) -> setContent
    void attachFile(java.io.File) -> attachFile
    void attachFile(java.lang.String) -> attachFile
    void saveFile(java.io.File) -> saveFile
    void saveFile(java.lang.String) -> saveFile
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    void updateHeaders() -> updateHeaders
    boolean isMimeType(javax.mail.internet.MimePart,java.lang.String) -> isMimeType
    void setText(javax.mail.internet.MimePart,java.lang.String,java.lang.String,java.lang.String) -> setText
    java.lang.String getDisposition(javax.mail.internet.MimePart) -> getDisposition
    void setDisposition(javax.mail.internet.MimePart,java.lang.String) -> setDisposition
    java.lang.String getDescription(javax.mail.internet.MimePart) -> getDescription
    void setDescription(javax.mail.internet.MimePart,java.lang.String,java.lang.String) -> setDescription
    java.lang.String getFileName(javax.mail.internet.MimePart) -> getFileName
    void setFileName(javax.mail.internet.MimePart,java.lang.String) -> setFileName
    java.lang.String[] getContentLanguage(javax.mail.internet.MimePart) -> getContentLanguage
    void setContentLanguage(javax.mail.internet.MimePart,java.lang.String[]) -> setContentLanguage
    java.lang.String getEncoding(javax.mail.internet.MimePart) -> getEncoding
    void setEncoding(javax.mail.internet.MimePart,java.lang.String) -> setEncoding
    void updateHeaders(javax.mail.internet.MimePart) -> updateHeaders
    void invalidateContentHeaders(javax.mail.internet.MimePart) -> invalidateContentHeaders
    void writeTo(javax.mail.internet.MimePart,java.io.OutputStream,java.lang.String[]) -> writeTo
javax.mail.internet.MimeMessage -> javax.mail.internet.MimeMessage:
    javax.activation.DataHandler dh -> dh
    byte[] content -> content
    java.io.InputStream contentStream -> contentStream
    javax.mail.internet.InternetHeaders headers -> headers
    javax.mail.Flags flags -> flags
    boolean modified -> modified
    boolean saved -> saved
    java.lang.Object cachedContent -> cachedContent
    javax.mail.internet.MailDateFormat mailDateFormat -> mailDateFormat
    boolean strict -> strict
    javax.mail.Flags answeredFlag -> answeredFlag
    void initStrict() -> initStrict
    void parse(java.io.InputStream) -> parse
    javax.mail.Address[] getFrom() -> getFrom
    void setFrom(javax.mail.Address) -> setFrom
    void setFrom() -> setFrom
    void addFrom(javax.mail.Address[]) -> addFrom
    javax.mail.Address getSender() -> getSender
    void setSender(javax.mail.Address) -> setSender
    javax.mail.Address[] getRecipients(javax.mail.Message$RecipientType) -> getRecipients
    javax.mail.Address[] getAllRecipients() -> getAllRecipients
    void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> setRecipients
    void setRecipients(javax.mail.Message$RecipientType,java.lang.String) -> setRecipients
    void addRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> addRecipients
    void addRecipients(javax.mail.Message$RecipientType,java.lang.String) -> addRecipients
    javax.mail.Address[] getReplyTo() -> getReplyTo
    void setReplyTo(javax.mail.Address[]) -> setReplyTo
    javax.mail.Address[] getAddressHeader(java.lang.String) -> getAddressHeader
    void setAddressHeader(java.lang.String,javax.mail.Address[]) -> setAddressHeader
    void addAddressHeader(java.lang.String,javax.mail.Address[]) -> addAddressHeader
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    void setSubject(java.lang.String,java.lang.String) -> setSubject
    java.util.Date getSentDate() -> getSentDate
    void setSentDate(java.util.Date) -> setSentDate
    java.util.Date getReceivedDate() -> getReceivedDate
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    boolean isMimeType(java.lang.String) -> isMimeType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    void setContentID(java.lang.String) -> setContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    java.lang.String getMessageID() -> getMessageID
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.lang.String getHeaderName(javax.mail.Message$RecipientType) -> getHeaderName
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getContentStream() -> getContentStream
    java.io.InputStream getRawInputStream() -> getRawInputStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    java.lang.Object getContent() -> getContent
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setText(java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String,java.lang.String) -> setText
    void setContent(javax.mail.Multipart) -> setContent
    javax.mail.Message reply(boolean) -> reply
    javax.mail.Address[] eliminateDuplicates(java.util.Vector,javax.mail.Address[]) -> eliminateDuplicates
    void writeTo(java.io.OutputStream) -> writeTo
    void writeTo(java.io.OutputStream,java.lang.String[]) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    javax.mail.Flags getFlags() -> getFlags
    boolean isSet(javax.mail.Flags$Flag) -> isSet
    void setFlags(javax.mail.Flags,boolean) -> setFlags
    void saveChanges() -> saveChanges
    void updateMessageID() -> updateMessageID
    void updateHeaders() -> updateHeaders
    javax.mail.internet.InternetHeaders createInternetHeaders(java.io.InputStream) -> createInternetHeaders
    javax.mail.internet.MimeMessage createMimeMessage(javax.mail.Session) -> createMimeMessage
javax.mail.internet.MimeMessage$RecipientType -> javax.mail.internet.MimeMessage$RecipientType:
    long serialVersionUID -> serialVersionUID
    javax.mail.internet.MimeMessage$RecipientType NEWSGROUPS -> NEWSGROUPS
    java.lang.Object readResolve() -> readResolve
javax.mail.internet.MimeMultipart -> javax.mail.internet.MimeMultipart:
    boolean ignoreMissingEndBoundary -> ignoreMissingEndBoundary
    boolean ignoreMissingBoundaryParameter -> ignoreMissingBoundaryParameter
    boolean bmparse -> bmparse
    javax.activation.DataSource ds -> ds
    boolean parsed -> parsed
    boolean complete -> complete
    java.lang.String preamble -> preamble
    void setSubType(java.lang.String) -> setSubType
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
    javax.mail.BodyPart getBodyPart(java.lang.String) -> getBodyPart
    boolean removeBodyPart(javax.mail.BodyPart) -> removeBodyPart
    void removeBodyPart(int) -> removeBodyPart
    void addBodyPart(javax.mail.BodyPart) -> addBodyPart
    void addBodyPart(javax.mail.BodyPart,int) -> addBodyPart
    boolean isComplete() -> isComplete
    java.lang.String getPreamble() -> getPreamble
    void setPreamble(java.lang.String) -> setPreamble
    void updateHeaders() -> updateHeaders
    void writeTo(java.io.OutputStream) -> writeTo
    void parse() -> parse
    void parsebm() -> parsebm
    int readFully(java.io.InputStream,byte[],int,int) -> readFully
    void skipFully(java.io.InputStream,long) -> skipFully
    javax.mail.internet.InternetHeaders createInternetHeaders(java.io.InputStream) -> createInternetHeaders
    javax.mail.internet.MimeBodyPart createMimeBodyPart(javax.mail.internet.InternetHeaders,byte[]) -> createMimeBodyPart
    javax.mail.internet.MimeBodyPart createMimeBodyPart(java.io.InputStream) -> createMimeBodyPart
javax.mail.internet.MimePart -> javax.mail.internet.MimePart:
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    void setText(java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String,java.lang.String) -> setText
javax.mail.internet.MimePartDataSource -> javax.mail.internet.MimePartDataSource:
    javax.mail.internet.MimePart part -> part
    javax.mail.MessageContext context -> context
    boolean ignoreMultipartEncoding -> ignoreMultipartEncoding
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String restrictEncoding(java.lang.String,javax.mail.internet.MimePart) -> restrictEncoding
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    javax.mail.MessageContext getMessageContext() -> getMessageContext
javax.mail.internet.MimeUtility -> javax.mail.internet.MimeUtility:
    int ALL -> ALL
    boolean decodeStrict -> decodeStrict
    boolean encodeEolStrict -> encodeEolStrict
    boolean foldEncodedWords -> foldEncodedWords
    boolean foldText -> foldText
    java.lang.String defaultJavaCharset -> defaultJavaCharset
    java.lang.String defaultMIMECharset -> defaultMIMECharset
    java.util.Hashtable mime2java -> mime2java
    java.util.Hashtable java2mime -> java2mime
    int ALL_ASCII -> ALL_ASCII
    int MOSTLY_ASCII -> MOSTLY_ASCII
    int MOSTLY_NONASCII -> MOSTLY_NONASCII
    java.lang.String getEncoding(javax.activation.DataSource) -> getEncoding
    java.lang.String getEncoding(javax.activation.DataHandler) -> getEncoding
    java.io.InputStream decode(java.io.InputStream,java.lang.String) -> decode
    java.io.OutputStream encode(java.io.OutputStream,java.lang.String) -> encode
    java.io.OutputStream encode(java.io.OutputStream,java.lang.String,java.lang.String) -> encode
    java.lang.String encodeText(java.lang.String) -> encodeText
    java.lang.String encodeText(java.lang.String,java.lang.String,java.lang.String) -> encodeText
    java.lang.String decodeText(java.lang.String) -> decodeText
    java.lang.String encodeWord(java.lang.String) -> encodeWord
    java.lang.String encodeWord(java.lang.String,java.lang.String,java.lang.String) -> encodeWord
    java.lang.String encodeWord(java.lang.String,java.lang.String,java.lang.String,boolean) -> encodeWord
    void doEncode(java.lang.String,boolean,java.lang.String,int,java.lang.String,boolean,boolean,java.lang.StringBuffer) -> doEncode
    java.lang.String decodeWord(java.lang.String) -> decodeWord
    java.lang.String decodeInnerWords(java.lang.String) -> decodeInnerWords
    java.lang.String quote(java.lang.String,java.lang.String) -> quote
    java.lang.String fold(int,java.lang.String) -> fold
    java.lang.String unfold(java.lang.String) -> unfold
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String,int) -> indexOfAny
    java.lang.String javaCharset(java.lang.String) -> javaCharset
    java.lang.String mimeCharset(java.lang.String) -> mimeCharset
    java.lang.String getDefaultJavaCharset() -> getDefaultJavaCharset
    java.lang.String getDefaultMIMECharset() -> getDefaultMIMECharset
    void loadMappings(com.sun.mail.util.LineInputStream,java.util.Hashtable) -> loadMappings
    int checkAscii(java.lang.String) -> checkAscii
    int checkAscii(byte[]) -> checkAscii
    int checkAscii(java.io.InputStream,int,boolean) -> checkAscii
    boolean nonascii(int) -> nonascii
javax.mail.internet.MimeUtility$1NullInputStream -> javax.mail.internet.MimeUtility$1NullInputStream:
    int read() -> read
javax.mail.internet.NewsAddress -> javax.mail.internet.NewsAddress:
    java.lang.String newsgroup -> newsgroup
    java.lang.String host -> host
    long serialVersionUID -> serialVersionUID
    java.lang.String getType() -> getType
    void setNewsgroup(java.lang.String) -> setNewsgroup
    java.lang.String getNewsgroup() -> getNewsgroup
    void setHost(java.lang.String) -> setHost
    java.lang.String getHost() -> getHost
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString(javax.mail.Address[]) -> toString
    javax.mail.internet.NewsAddress[] parse(java.lang.String) -> parse
javax.mail.internet.ParameterList -> javax.mail.internet.ParameterList:
    java.util.Map list -> list
    java.util.Set multisegmentNames -> multisegmentNames
    java.util.Map slist -> slist
    java.lang.String lastName -> lastName
    boolean encodeParameters -> encodeParameters
    boolean decodeParameters -> decodeParameters
    boolean decodeParametersStrict -> decodeParametersStrict
    boolean applehack -> applehack
    char[] hex -> hex
    void putEncodedName(java.lang.String,java.lang.String) -> putEncodedName
    void combineMultisegmentNames(boolean) -> combineMultisegmentNames
    int size() -> size
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    void set(java.lang.String,java.lang.String,java.lang.String) -> set
    void remove(java.lang.String) -> remove
    java.util.Enumeration getNames() -> getNames
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String quote(java.lang.String) -> quote
    javax.mail.internet.ParameterList$Value encodeValue(java.lang.String,java.lang.String) -> encodeValue
    javax.mail.internet.ParameterList$Value decodeValue(java.lang.String) -> decodeValue
    java.lang.String decodeBytes(java.lang.String,java.lang.String) -> decodeBytes
    java.lang.String access$0(java.lang.String) -> access$0
javax.mail.internet.ParameterList$MultiValue -> javax.mail.internet.ParameterList$MultiValue:
    java.lang.String value -> value
javax.mail.internet.ParameterList$ParamEnum -> javax.mail.internet.ParameterList$ParamEnum:
    java.util.Iterator it -> it
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
javax.mail.internet.ParameterList$ToStringBuffer -> javax.mail.internet.ParameterList$ToStringBuffer:
    int used -> used
    java.lang.StringBuffer sb -> sb
    void addNV(java.lang.String,java.lang.String) -> addNV
    java.lang.String toString() -> toString
javax.mail.internet.ParameterList$Value -> javax.mail.internet.ParameterList$Value:
    java.lang.String value -> value
    java.lang.String charset -> charset
    java.lang.String encodedValue -> encodedValue
javax.mail.internet.ParseException -> javax.mail.internet.ParseException:
    long serialVersionUID -> serialVersionUID
javax.mail.internet.PreencodedMimeBodyPart -> javax.mail.internet.PreencodedMimeBodyPart:
    java.lang.String encoding -> encoding
    java.lang.String getEncoding() -> getEncoding
    void writeTo(java.io.OutputStream) -> writeTo
    void updateHeaders() -> updateHeaders
javax.mail.internet.SharedInputStream -> javax.mail.internet.SharedInputStream:
    long getPosition() -> getPosition
    java.io.InputStream newStream(long,long) -> newStream
javax.mail.internet.UniqueValue -> javax.mail.internet.UniqueValue:
    int id -> id
    java.lang.String getUniqueBoundaryValue() -> getUniqueBoundaryValue
    java.lang.String getUniqueMessageIDValue(javax.mail.Session) -> getUniqueMessageIDValue
    int getUniqueId() -> getUniqueId
javax.mail.search.AddressStringTerm -> javax.mail.search.AddressStringTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Address) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.AddressTerm -> javax.mail.search.AddressTerm:
    javax.mail.Address address -> address
    long serialVersionUID -> serialVersionUID
    javax.mail.Address getAddress() -> getAddress
    boolean match(javax.mail.Address) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.AndTerm -> javax.mail.search.AndTerm:
    javax.mail.search.SearchTerm[] terms -> terms
    long serialVersionUID -> serialVersionUID
    javax.mail.search.SearchTerm[] getTerms() -> getTerms
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.BodyTerm -> javax.mail.search.BodyTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean matchPart(javax.mail.Part) -> matchPart
    boolean equals(java.lang.Object) -> equals
javax.mail.search.ComparisonTerm -> javax.mail.search.ComparisonTerm:
    int LE -> LE
    int LT -> LT
    int EQ -> EQ
    int NE -> NE
    int GT -> GT
    int GE -> GE
    int comparison -> comparison
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.DateTerm -> javax.mail.search.DateTerm:
    java.util.Date date -> date
    long serialVersionUID -> serialVersionUID
    java.util.Date getDate() -> getDate
    int getComparison() -> getComparison
    boolean match(java.util.Date) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.FlagTerm -> javax.mail.search.FlagTerm:
    boolean set -> set
    javax.mail.Flags flags -> flags
    long serialVersionUID -> serialVersionUID
    javax.mail.Flags getFlags() -> getFlags
    boolean getTestSet() -> getTestSet
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.FromStringTerm -> javax.mail.search.FromStringTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.FromTerm -> javax.mail.search.FromTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.HeaderTerm -> javax.mail.search.HeaderTerm:
    java.lang.String headerName -> headerName
    long serialVersionUID -> serialVersionUID
    java.lang.String getHeaderName() -> getHeaderName
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.IntegerComparisonTerm -> javax.mail.search.IntegerComparisonTerm:
    int number -> number
    long serialVersionUID -> serialVersionUID
    int getNumber() -> getNumber
    int getComparison() -> getComparison
    boolean match(int) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.MessageIDTerm -> javax.mail.search.MessageIDTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.MessageNumberTerm -> javax.mail.search.MessageNumberTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.NotTerm -> javax.mail.search.NotTerm:
    javax.mail.search.SearchTerm term -> term
    long serialVersionUID -> serialVersionUID
    javax.mail.search.SearchTerm getTerm() -> getTerm
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.OrTerm -> javax.mail.search.OrTerm:
    javax.mail.search.SearchTerm[] terms -> terms
    long serialVersionUID -> serialVersionUID
    javax.mail.search.SearchTerm[] getTerms() -> getTerms
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.ReceivedDateTerm -> javax.mail.search.ReceivedDateTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.RecipientStringTerm -> javax.mail.search.RecipientStringTerm:
    javax.mail.Message$RecipientType type -> type
    long serialVersionUID -> serialVersionUID
    javax.mail.Message$RecipientType getRecipientType() -> getRecipientType
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.RecipientTerm -> javax.mail.search.RecipientTerm:
    javax.mail.Message$RecipientType type -> type
    long serialVersionUID -> serialVersionUID
    javax.mail.Message$RecipientType getRecipientType() -> getRecipientType
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.SearchException -> javax.mail.search.SearchException:
    long serialVersionUID -> serialVersionUID
javax.mail.search.SearchTerm -> javax.mail.search.SearchTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
javax.mail.search.SentDateTerm -> javax.mail.search.SentDateTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.SizeTerm -> javax.mail.search.SizeTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.StringTerm -> javax.mail.search.StringTerm:
    java.lang.String pattern -> pattern
    boolean ignoreCase -> ignoreCase
    long serialVersionUID -> serialVersionUID
    java.lang.String getPattern() -> getPattern
    boolean getIgnoreCase() -> getIgnoreCase
    boolean match(java.lang.String) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.SubjectTerm -> javax.mail.search.SubjectTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.util.ByteArrayDataSource -> javax.mail.util.ByteArrayDataSource:
    byte[] data -> data
    int len -> len
    java.lang.String type -> type
    java.lang.String name -> name
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
javax.mail.util.ByteArrayDataSource$DSByteArrayOutputStream -> javax.mail.util.ByteArrayDataSource$DSByteArrayOutputStream:
    byte[] getBuf() -> getBuf
    int getCount() -> getCount
javax.mail.util.SharedByteArrayInputStream -> javax.mail.util.SharedByteArrayInputStream:
    int start -> start
    long getPosition() -> getPosition
    java.io.InputStream newStream(long,long) -> newStream
javax.mail.util.SharedFileInputStream -> javax.mail.util.SharedFileInputStream:
    int defaultBufferSize -> defaultBufferSize
    java.io.RandomAccessFile in -> in
    int bufsize -> bufsize
    long bufpos -> bufpos
    long start -> start
    long datalen -> datalen
    boolean master -> master
    javax.mail.util.SharedFileInputStream$SharedFile sf -> sf
    void ensureOpen() -> ensureOpen
    void init(javax.mail.util.SharedFileInputStream$SharedFile,int) -> init
    void fill() -> fill
    int read() -> read
    int read1(byte[],int,int) -> read1
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    int in_available() -> in_available
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void close() -> close
    long getPosition() -> getPosition
    java.io.InputStream newStream(long,long) -> newStream
    void finalize() -> finalize
javax.mail.util.SharedFileInputStream$SharedFile -> javax.mail.util.SharedFileInputStream$SharedFile:
    int cnt -> cnt
    java.io.RandomAccessFile in -> in
    java.io.RandomAccessFile open() -> open
    void close() -> close
    void forceClose() -> forceClose
    void finalize() -> finalize
myjava.awt.datatransfer.DataFlavor -> a.a.a.a:
    long serialVersionUID -> serialVersionUID
    myjava.awt.datatransfer.DataFlavor plainTextFlavor -> plainTextFlavor
    myjava.awt.datatransfer.DataFlavor stringFlavor -> stringFlavor
    myjava.awt.datatransfer.DataFlavor javaFileListFlavor -> javaFileListFlavor
    java.lang.String javaJVMLocalObjectMimeType -> javaJVMLocalObjectMimeType
    java.lang.String javaRemoteObjectMimeType -> javaRemoteObjectMimeType
    java.lang.String javaSerializedObjectMimeType -> javaSerializedObjectMimeType
    java.lang.String[] sortedTextFlavors -> sortedTextFlavors
    myjava.awt.datatransfer.DataFlavor plainUnicodeFlavor -> plainUnicodeFlavor
    java.lang.String humanPresentableName -> humanPresentableName
    java.lang.Class representationClass -> representationClass
    myjava.awt.datatransfer.MimeTypeProcessor$MimeType mimeInfo -> mimeInfo
    myjava.awt.datatransfer.DataFlavor getTextPlainUnicodeFlavor() -> getTextPlainUnicodeFlavor
    java.lang.Class tryToLoadClass(java.lang.String,java.lang.ClassLoader) -> tryToLoadClass
    boolean isCharsetSupported(java.lang.String) -> isCharsetSupported
    void init(java.lang.String,java.lang.String,java.lang.ClassLoader) -> init
    java.lang.String getCharset() -> getCharset
    boolean isCharsetRequired() -> isCharsetRequired
    boolean isCharsetRedundant() -> isCharsetRedundant
    myjava.awt.datatransfer.MimeTypeProcessor$MimeType getMimeInfo() -> getMimeInfo
    java.lang.String getPrimaryType() -> getPrimaryType
    java.lang.String getSubType() -> getSubType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getHumanPresentableName() -> getHumanPresentableName
    void setHumanPresentableName(java.lang.String) -> setHumanPresentableName
    java.lang.Class getRepresentationClass() -> getRepresentationClass
    java.lang.Class getDefaultRepresentationClass() -> getDefaultRepresentationClass
    java.lang.String getDefaultRepresentationClassAsString() -> getDefaultRepresentationClassAsString
    boolean isRepresentationClassSerializable() -> isRepresentationClassSerializable
    boolean isRepresentationClassRemote() -> isRepresentationClassRemote
    boolean isRepresentationClassReader() -> isRepresentationClassReader
    boolean isRepresentationClassInputStream() -> isRepresentationClassInputStream
    boolean isRepresentationClassCharBuffer() -> isRepresentationClassCharBuffer
    boolean isRepresentationClassByteBuffer() -> isRepresentationClassByteBuffer
    java.lang.String normalizeMimeTypeParameter(java.lang.String,java.lang.String) -> normalizeMimeTypeParameter
    java.lang.String normalizeMimeType(java.lang.String) -> normalizeMimeType
    boolean isMimeTypeEqual(myjava.awt.datatransfer.DataFlavor) -> isMimeTypeEqual
    boolean isMimeTypeEqual(java.lang.String) -> isMimeTypeEqual
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    boolean isMimeTypeSerializedObject() -> isMimeTypeSerializedObject
    boolean equals(java.lang.Object) -> equals
    boolean equals(myjava.awt.datatransfer.DataFlavor) -> equals
    boolean equals(java.lang.String) -> equals
    boolean match(myjava.awt.datatransfer.DataFlavor) -> match
    int hashCode() -> hashCode
    java.lang.String getKeyInfo() -> getKeyInfo
    boolean isFlavorSerializedObjectType() -> isFlavorSerializedObjectType
    boolean isFlavorRemoteObjectType() -> isFlavorRemoteObjectType
    boolean isFlavorJavaFileListType() -> isFlavorJavaFileListType
    boolean isFlavorTextType() -> isFlavorTextType
    java.io.Reader getReaderForText(myjava.awt.datatransfer.Transferable) -> getReaderForText
    myjava.awt.datatransfer.DataFlavor selectBestTextFlavor(myjava.awt.datatransfer.DataFlavor[]) -> selectBestTextFlavor
    myjava.awt.datatransfer.DataFlavor selectBestFlavorWCharset(java.util.List) -> selectBestFlavorWCharset
    myjava.awt.datatransfer.DataFlavor selectBestByCharset(java.util.List) -> selectBestByCharset
    java.util.List selectBestByAlphabet(java.util.List) -> selectBestByAlphabet
    java.util.List getFlavors(java.util.List,java.lang.String[]) -> getFlavors
    myjava.awt.datatransfer.DataFlavor selectBestFlavorWOCharset(java.util.List) -> selectBestFlavorWOCharset
    java.util.List getFlavors(java.util.List,java.lang.Class) -> getFlavors
    java.util.List sortTextFlavorsByType(java.util.List) -> sortTextFlavorsByType
    java.util.List fetchTextFlavors(java.util.List,java.lang.String) -> fetchTextFlavors
    boolean isUnicodeFlavor() -> isUnicodeFlavor
    boolean isByteCodeFlavor() -> isByteCodeFlavor
myjava.awt.datatransfer.MimeTypeProcessor -> a.a.a.b:
    myjava.awt.datatransfer.MimeTypeProcessor instance -> a
    myjava.awt.datatransfer.MimeTypeProcessor$MimeType parse(java.lang.String) -> a
    java.lang.String assemble(myjava.awt.datatransfer.MimeTypeProcessor$MimeType) -> a
    void retrieveType(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> a
    void retrieveParams(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> b
    void retrieveParam(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> c
    java.lang.String retrieveQuoted(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> a
    java.lang.String retrieveToken(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> b
    int getNextMeaningfulIndex(java.lang.String,int) -> a
    boolean isTSpecialChar(char) -> a
    boolean isMeaningfulChar(char) -> b
myjava.awt.datatransfer.MimeTypeProcessor$MimeType -> a.a.a.c:
    java.lang.String primaryType -> a
    java.lang.String subType -> b
    java.util.Hashtable parameters -> c
    java.util.Hashtable systemParameters -> d
    boolean equals(myjava.awt.datatransfer.MimeTypeProcessor$MimeType) -> a
    java.lang.String getPrimaryType() -> a
    java.lang.String getSubType() -> b
    java.lang.String getFullType() -> c
    java.lang.String getParameter(java.lang.String) -> a
    void addParameter(java.lang.String,java.lang.String) -> a
    java.lang.Object clone() -> clone
    java.util.Hashtable access$0(myjava.awt.datatransfer.MimeTypeProcessor$MimeType) -> b
    void access$1(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.lang.String) -> a
    void access$2(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.lang.String) -> b
    void access$3(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.util.Hashtable) -> a
    void access$4(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.util.Hashtable) -> b
myjava.awt.datatransfer.MimeTypeProcessor$StringPosition -> a.a.a.d:
    int i -> a
myjava.awt.datatransfer.Transferable -> a.a.a.e:
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor) -> getTransferData
myjava.awt.datatransfer.UnsupportedFlavorException -> a.a.a.f:
org.achartengine.ChartFactory -> org.achartengine.ChartFactory:
    java.lang.String CHART -> CHART
    java.lang.String TITLE -> TITLE
    org.achartengine.GraphicalView getLineChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getLineChartView
    org.achartengine.GraphicalView getCubeLineChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,float) -> getCubeLineChartView
    org.achartengine.GraphicalView getScatterChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getScatterChartView
    org.achartengine.GraphicalView getBubbleChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getBubbleChartView
    org.achartengine.GraphicalView getTimeChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> getTimeChartView
    org.achartengine.GraphicalView getBarChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type) -> getBarChartView
    org.achartengine.GraphicalView getRangeBarChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type) -> getRangeBarChartView
    org.achartengine.GraphicalView getCombinedXYChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String[]) -> getCombinedXYChartView
    org.achartengine.GraphicalView getPieChartView(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DefaultRenderer) -> getPieChartView
    org.achartengine.GraphicalView getDialChartView(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DialRenderer) -> getDialChartView
    org.achartengine.GraphicalView getDoughnutChartView(android.content.Context,org.achartengine.model.MultipleCategorySeries,org.achartengine.renderer.DefaultRenderer) -> getDoughnutChartView
    android.content.Intent getLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getLineChartIntent
    android.content.Intent getCubicLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,float) -> getCubicLineChartIntent
    android.content.Intent getScatterChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getScatterChartIntent
    android.content.Intent getBubbleChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getBubbleChartIntent
    android.content.Intent getTimeChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> getTimeChartIntent
    android.content.Intent getBarChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type) -> getBarChartIntent
    android.content.Intent getLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> getLineChartIntent
    android.content.Intent getCubicLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,float,java.lang.String) -> getCubicLineChartIntent
    android.content.Intent getScatterChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> getScatterChartIntent
    android.content.Intent getBubbleChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> getBubbleChartIntent
    android.content.Intent getTimeChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String,java.lang.String) -> getTimeChartIntent
    android.content.Intent getBarChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type,java.lang.String) -> getBarChartIntent
    android.content.Intent getRangeBarChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type,java.lang.String) -> getRangeBarChartIntent
    android.content.Intent getCombinedXYChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String[],java.lang.String) -> getCombinedXYChartIntent
    android.content.Intent getPieChartIntent(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DefaultRenderer,java.lang.String) -> getPieChartIntent
    android.content.Intent getDoughnutChartIntent(android.content.Context,org.achartengine.model.MultipleCategorySeries,org.achartengine.renderer.DefaultRenderer,java.lang.String) -> getDoughnutChartIntent
    android.content.Intent getDialChartIntent(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DialRenderer,java.lang.String) -> getDialChartIntent
    void checkParameters(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> checkParameters
    void checkParameters(org.achartengine.model.CategorySeries,org.achartengine.renderer.DefaultRenderer) -> checkParameters
    void checkParameters(org.achartengine.model.MultipleCategorySeries,org.achartengine.renderer.DefaultRenderer) -> checkParameters
    boolean checkMultipleSeriesItems(org.achartengine.model.MultipleCategorySeries,int) -> checkMultipleSeriesItems
org.achartengine.GraphicalActivity -> org.achartengine.GraphicalActivity:
    org.achartengine.GraphicalView mView -> mView
    org.achartengine.chart.AbstractChart mChart -> mChart
    void onCreate(android.os.Bundle) -> onCreate
org.achartengine.GraphicalView -> org.achartengine.GraphicalView:
    org.achartengine.chart.AbstractChart mChart -> mChart
    org.achartengine.renderer.DefaultRenderer mRenderer -> mRenderer
    android.graphics.Rect mRect -> mRect
    android.os.Handler mHandler -> mHandler
    android.graphics.RectF mZoomR -> mZoomR
    android.graphics.Bitmap zoomInImage -> zoomInImage
    android.graphics.Bitmap zoomOutImage -> zoomOutImage
    android.graphics.Bitmap fitZoomImage -> fitZoomImage
    int zoomSize -> zoomSize
    int ZOOM_BUTTONS_COLOR -> ZOOM_BUTTONS_COLOR
    org.achartengine.tools.Zoom mZoomIn -> mZoomIn
    org.achartengine.tools.Zoom mZoomOut -> mZoomOut
    org.achartengine.tools.FitZoom mFitZoom -> mFitZoom
    android.graphics.Paint mPaint -> mPaint
    org.achartengine.ITouchHandler mTouchHandler -> mTouchHandler
    float oldX -> oldX
    float oldY -> oldY
    boolean mDrawn -> mDrawn
    org.achartengine.model.SeriesSelection getCurrentSeriesAndPoint() -> getCurrentSeriesAndPoint
    double[] toRealPoint(int) -> toRealPoint
    void onDraw(android.graphics.Canvas) -> onDraw
    void setZoomRate(float) -> setZoomRate
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    void zoomReset() -> zoomReset
    void addZoomListener(org.achartengine.tools.ZoomListener,boolean,boolean) -> addZoomListener
    void removeZoomListener(org.achartengine.tools.ZoomListener) -> removeZoomListener
    void addPanListener(org.achartengine.tools.PanListener) -> addPanListener
    void removePanListener(org.achartengine.tools.PanListener) -> removePanListener
    android.graphics.RectF getZoomRectangle() -> getZoomRectangle
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void repaint() -> repaint
    void repaint(int,int,int,int) -> repaint
    android.graphics.Bitmap toBitmap() -> toBitmap
org.achartengine.GraphicalView$1 -> org.achartengine.GraphicalView$1:
    org.achartengine.GraphicalView this$0 -> this$0
    void run() -> run
org.achartengine.GraphicalView$2 -> org.achartengine.GraphicalView$2:
    int val$left -> val$left
    int val$top -> val$top
    int val$right -> val$right
    int val$bottom -> val$bottom
    org.achartengine.GraphicalView this$0 -> this$0
    void run() -> run
org.achartengine.ITouchHandler -> org.achartengine.ITouchHandler:
    boolean handleTouch(android.view.MotionEvent) -> handleTouch
    void addZoomListener(org.achartengine.tools.ZoomListener) -> addZoomListener
    void removeZoomListener(org.achartengine.tools.ZoomListener) -> removeZoomListener
    void addPanListener(org.achartengine.tools.PanListener) -> addPanListener
    void removePanListener(org.achartengine.tools.PanListener) -> removePanListener
org.achartengine.TouchHandler -> org.achartengine.TouchHandler:
    org.achartengine.renderer.DefaultRenderer mRenderer -> mRenderer
    float oldX -> oldX
    float oldY -> oldY
    float oldX2 -> oldX2
    float oldY2 -> oldY2
    android.graphics.RectF zoomR -> zoomR
    org.achartengine.tools.Pan mPan -> mPan
    org.achartengine.tools.Zoom mPinchZoom -> mPinchZoom
    org.achartengine.GraphicalView graphicalView -> graphicalView
    boolean handleTouch(android.view.MotionEvent) -> handleTouch
    void applyZoom(float,int) -> applyZoom
    void addZoomListener(org.achartengine.tools.ZoomListener) -> addZoomListener
    void removeZoomListener(org.achartengine.tools.ZoomListener) -> removeZoomListener
    void addPanListener(org.achartengine.tools.PanListener) -> addPanListener
    void removePanListener(org.achartengine.tools.PanListener) -> removePanListener
org.achartengine.TouchHandlerOld -> org.achartengine.TouchHandlerOld:
    org.achartengine.renderer.DefaultRenderer mRenderer -> mRenderer
    float oldX -> oldX
    float oldY -> oldY
    android.graphics.RectF zoomR -> zoomR
    org.achartengine.tools.Pan mPan -> mPan
    org.achartengine.GraphicalView graphicalView -> graphicalView
    boolean handleTouch(android.view.MotionEvent) -> handleTouch
    void addZoomListener(org.achartengine.tools.ZoomListener) -> addZoomListener
    void removeZoomListener(org.achartengine.tools.ZoomListener) -> removeZoomListener
    void addPanListener(org.achartengine.tools.PanListener) -> addPanListener
    void removePanListener(org.achartengine.tools.PanListener) -> removePanListener
org.achartengine.chart.AbstractChart -> org.achartengine.chart.AbstractChart:
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    void drawBackground(org.achartengine.renderer.DefaultRenderer,android.graphics.Canvas,int,int,int,int,android.graphics.Paint,boolean,int) -> drawBackground
    int drawLegend(android.graphics.Canvas,org.achartengine.renderer.DefaultRenderer,java.lang.String[],int,int,int,int,int,int,android.graphics.Paint,boolean) -> drawLegend
    void drawString(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint) -> drawString
    boolean getExceed(float,org.achartengine.renderer.DefaultRenderer,int,int) -> getExceed
    boolean isVertical(org.achartengine.renderer.DefaultRenderer) -> isVertical
    java.lang.String getLabel(java.text.NumberFormat,double) -> getLabel
    float[] calculateDrawPoints(float,float,float,float,int,int) -> calculateDrawPoints
    void drawPath(android.graphics.Canvas,java.util.List,android.graphics.Paint,boolean) -> drawPath
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> drawPath
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    java.lang.String getFitText(java.lang.String,float,android.graphics.Paint) -> getFitText
    int getLegendSize(org.achartengine.renderer.DefaultRenderer,int,float) -> getLegendSize
    void drawLabel(android.graphics.Canvas,java.lang.String,org.achartengine.renderer.DefaultRenderer,java.util.List,int,int,float,float,float,float,int,int,int,android.graphics.Paint,boolean,boolean) -> drawLabel
    boolean isNullValue(double) -> isNullValue
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> getSeriesAndPointForScreenCoordinate
org.achartengine.chart.BarChart -> org.achartengine.chart.BarChart:
    java.lang.String TYPE -> TYPE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    org.achartengine.chart.BarChart$Type mType -> mType
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    void drawBar(android.graphics.Canvas,float,float,float,float,float,int,int,android.graphics.Paint) -> drawBar
    void drawBar(android.graphics.Canvas,float,float,float,float,int,int,android.graphics.Paint) -> drawBar
    int getGradientPartialColor(int,int,float) -> getGradientPartialColor
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,java.util.List,int,int) -> drawChartValuesText
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    float getHalfDiffX(java.util.List,int,int) -> getHalfDiffX
    float getCoeficient() -> getCoeficient
    boolean isRenderNullValues() -> isRenderNullValues
    double getDefaultMinimum() -> getDefaultMinimum
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.BarChart$Type -> org.achartengine.chart.BarChart$Type:
    org.achartengine.chart.BarChart$Type DEFAULT -> DEFAULT
    org.achartengine.chart.BarChart$Type STACKED -> STACKED
    org.achartengine.chart.BarChart$Type[] $VALUES -> $VALUES
    org.achartengine.chart.BarChart$Type[] values() -> values
    org.achartengine.chart.BarChart$Type valueOf(java.lang.String) -> valueOf
org.achartengine.chart.BubbleChart -> org.achartengine.chart.BubbleChart:
    java.lang.String TYPE -> TYPE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    int MIN_BUBBLE_SIZE -> MIN_BUBBLE_SIZE
    int MAX_BUBBLE_SIZE -> MAX_BUBBLE_SIZE
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> drawCircle
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.ClickableArea -> org.achartengine.chart.ClickableArea:
    android.graphics.RectF rect -> rect
    double x -> x
    double y -> y
    android.graphics.RectF getRect() -> getRect
    double getX() -> getX
    double getY() -> getY
org.achartengine.chart.CombinedXYChart -> org.achartengine.chart.CombinedXYChart:
    org.achartengine.chart.XYChart[] mCharts -> mCharts
    java.lang.Class[] xyChartTypes -> xyChartTypes
    org.achartengine.chart.XYChart getXYChart(java.lang.String) -> getXYChart
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> drawSeries
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.CubicLineChart -> org.achartengine.chart.CubicLineChart:
    java.lang.String TYPE -> TYPE
    float firstMultiplier -> firstMultiplier
    float secondMultiplier -> secondMultiplier
    org.achartengine.model.Point p1 -> p1
    org.achartengine.model.Point p2 -> p2
    org.achartengine.model.Point p3 -> p3
    void drawPath(android.graphics.Canvas,java.util.List,android.graphics.Paint,boolean) -> drawPath
    void calc(java.util.List,org.achartengine.model.Point,int,int,float) -> calc
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.DialChart -> org.achartengine.chart.DialChart:
    int NEEDLE_RADIUS -> NEEDLE_RADIUS
    org.achartengine.renderer.DialRenderer mRenderer -> mRenderer
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    double getAngleForValue(double,double,double,double,double) -> getAngleForValue
    void drawTicks(android.graphics.Canvas,double,double,double,double,int,int,double,double,double,android.graphics.Paint,boolean) -> drawTicks
    void drawNeedle(android.graphics.Canvas,double,int,int,double,boolean,android.graphics.Paint) -> drawNeedle
org.achartengine.chart.DoughnutChart -> org.achartengine.chart.DoughnutChart:
    org.achartengine.model.MultipleCategorySeries mDataset -> mDataset
    int mStep -> mStep
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
org.achartengine.chart.LineChart -> org.achartengine.chart.LineChart:
    java.lang.String TYPE -> TYPE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    org.achartengine.chart.ScatterChart pointsChart -> pointsChart
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> setDatasetRenderer
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> isRenderPoints
    org.achartengine.chart.ScatterChart getPointsChart() -> getPointsChart
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.LineChart$1 -> org.achartengine.chart.LineChart$1:
    int[] $SwitchMap$org$achartengine$renderer$XYSeriesRenderer$FillOutsideLine$Type -> $SwitchMap$org$achartengine$renderer$XYSeriesRenderer$FillOutsideLine$Type
org.achartengine.chart.PieChart -> org.achartengine.chart.PieChart:
    org.achartengine.chart.PieMapper mPieMapper -> mPieMapper
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> getSeriesAndPointForScreenCoordinate
org.achartengine.chart.PieMapper -> org.achartengine.chart.PieMapper:
    java.util.List mPieSegmentList -> mPieSegmentList
    int mPieChartRadius -> mPieChartRadius
    int mCenterX -> mCenterX
    int mCenterY -> mCenterY
    void setDimensions(int,int,int) -> setDimensions
    boolean areAllSegmentPresent(int) -> areAllSegmentPresent
    void addPieSegment(int,float,float,float) -> addPieSegment
    void clearPieSegments() -> clearPieSegments
    double getAngle(org.achartengine.model.Point) -> getAngle
    boolean isOnPieChart(org.achartengine.model.Point) -> isOnPieChart
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> getSeriesAndPointForScreenCoordinate
org.achartengine.chart.PieSegment -> org.achartengine.chart.PieSegment:
    float mStartAngle -> mStartAngle
    float mEndAngle -> mEndAngle
    int mDataIndex -> mDataIndex
    float mValue -> mValue
    boolean isInSegment(double) -> isInSegment
    float getStartAngle() -> getStartAngle
    float getEndAngle() -> getEndAngle
    int getDataIndex() -> getDataIndex
    float getValue() -> getValue
    java.lang.String toString() -> toString
org.achartengine.chart.PointStyle -> org.achartengine.chart.PointStyle:
    org.achartengine.chart.PointStyle X -> X
    org.achartengine.chart.PointStyle CIRCLE -> CIRCLE
    org.achartengine.chart.PointStyle TRIANGLE -> TRIANGLE
    org.achartengine.chart.PointStyle SQUARE -> SQUARE
    org.achartengine.chart.PointStyle DIAMOND -> DIAMOND
    org.achartengine.chart.PointStyle POINT -> POINT
    java.lang.String mName -> mName
    org.achartengine.chart.PointStyle[] $VALUES -> $VALUES
    org.achartengine.chart.PointStyle[] values() -> values
    org.achartengine.chart.PointStyle valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
    org.achartengine.chart.PointStyle getPointStyleForName(java.lang.String) -> getPointStyleForName
    int getIndexForName(java.lang.String) -> getIndexForName
org.achartengine.chart.RangeBarChart -> org.achartengine.chart.RangeBarChart:
    java.lang.String TYPE -> TYPE
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,java.util.List,int,int) -> drawChartValuesText
    float getCoeficient() -> getCoeficient
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.RangeStackedBarChart -> org.achartengine.chart.RangeStackedBarChart:
    java.lang.String TYPE -> TYPE
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.RoundChart -> org.achartengine.chart.RoundChart:
    int SHAPE_WIDTH -> SHAPE_WIDTH
    org.achartengine.model.CategorySeries mDataset -> mDataset
    org.achartengine.renderer.DefaultRenderer mRenderer -> mRenderer
    int NO_VALUE -> NO_VALUE
    int mCenterX -> mCenterX
    int mCenterY -> mCenterY
    void drawTitle(android.graphics.Canvas,int,int,int,android.graphics.Paint) -> drawTitle
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    org.achartengine.renderer.DefaultRenderer getRenderer() -> getRenderer
    int getCenterX() -> getCenterX
    int getCenterY() -> getCenterY
    void setCenterX(int) -> setCenterX
    void setCenterY(int) -> setCenterY
org.achartengine.chart.ScatterChart -> org.achartengine.chart.ScatterChart:
    java.lang.String TYPE -> TYPE
    float SIZE -> SIZE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    float size -> size
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> setDatasetRenderer
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    void drawX(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawX
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawCircle
    void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> drawTriangle
    void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawSquare
    void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> drawDiamond
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.ScatterChart$1 -> org.achartengine.chart.ScatterChart$1:
    int[] $SwitchMap$org$achartengine$chart$PointStyle -> $SwitchMap$org$achartengine$chart$PointStyle
org.achartengine.chart.TimeChart -> org.achartengine.chart.TimeChart:
    java.lang.String TYPE -> TYPE
    long DAY -> DAY
    java.lang.String mDateFormat -> mDateFormat
    java.lang.Double mStartPoint -> mStartPoint
    java.lang.String getDateFormat() -> getDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> drawXLabels
    java.text.DateFormat getDateFormat(double,double) -> getDateFormat
    java.lang.String getChartType() -> getChartType
    java.util.List getXLabels(double,double,int) -> getXLabels
org.achartengine.chart.XYChart -> org.achartengine.chart.XYChart:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> mDataset
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> mRenderer
    float mScale -> mScale
    float mTranslate -> mTranslate
    org.achartengine.model.Point mCenter -> mCenter
    android.graphics.Rect mScreenR -> mScreenR
    java.util.Map mCalcRange -> mCalcRange
    java.util.Map clickableAreas -> clickableAreas
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> setDatasetRenderer
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    java.util.List getXLabels(double,double,int) -> getXLabels
    java.util.Map getYLabels(double[],double[],int) -> getYLabels
    android.graphics.Rect getScreenR() -> getScreenR
    void setScreenR(android.graphics.Rect) -> setScreenR
    java.util.List getValidLabels(java.util.List) -> getValidLabels
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> drawSeries
    void setStroke(android.graphics.Paint$Cap,android.graphics.Paint$Join,float,android.graphics.Paint$Style,android.graphics.PathEffect,android.graphics.Paint) -> setStroke
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,java.util.List,int,int) -> drawChartValuesText
    void drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,float) -> drawText
    void transform(android.graphics.Canvas,float,boolean) -> transform
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> drawXLabels
    void drawYLabels(java.util.Map,android.graphics.Canvas,android.graphics.Paint,int,int,int,int,double[],double[]) -> drawYLabels
    void drawXTextLabels(java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,boolean,int,int,int,double,double,double) -> drawXTextLabels
    org.achartengine.renderer.XYMultipleSeriesRenderer getRenderer() -> getRenderer
    org.achartengine.model.XYMultipleSeriesDataset getDataset() -> getDataset
    double[] getCalcRange(int) -> getCalcRange
    void setCalcRange(double[],int) -> setCalcRange
    double[] toRealPoint(float,float) -> toRealPoint
    double[] toScreenPoint(double[]) -> toScreenPoint
    int getLabelLinePos(android.graphics.Paint$Align) -> getLabelLinePos
    double[] toRealPoint(float,float,int) -> toRealPoint
    double[] toScreenPoint(double[],int) -> toScreenPoint
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> getSeriesAndPointForScreenCoordinate
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    boolean isRenderNullValues() -> isRenderNullValues
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> isRenderPoints
    double getDefaultMinimum() -> getDefaultMinimum
    org.achartengine.chart.ScatterChart getPointsChart() -> getPointsChart
    java.lang.String getChartType() -> getChartType
org.achartengine.model.CategorySeries -> org.achartengine.model.CategorySeries:
    java.lang.String mTitle -> mTitle
    java.util.List mCategories -> mCategories
    java.util.List mValues -> mValues
    java.lang.String getTitle() -> getTitle
    void add(double) -> add
    void add(java.lang.String,double) -> add
    void set(int,java.lang.String,double) -> set
    void remove(int) -> remove
    void clear() -> clear
    double getValue(int) -> getValue
    java.lang.String getCategory(int) -> getCategory
    int getItemCount() -> getItemCount
    org.achartengine.model.XYSeries toXYSeries() -> toXYSeries
org.achartengine.model.MultipleCategorySeries -> org.achartengine.model.MultipleCategorySeries:
    java.lang.String mTitle -> mTitle
    java.util.List mCategories -> mCategories
    java.util.List mTitles -> mTitles
    java.util.List mValues -> mValues
    void add(java.lang.String[],double[]) -> add
    void add(java.lang.String,java.lang.String[],double[]) -> add
    void remove(int) -> remove
    void clear() -> clear
    double[] getValues(int) -> getValues
    java.lang.String getCategory(int) -> getCategory
    int getCategoriesCount() -> getCategoriesCount
    int getItemCount(int) -> getItemCount
    java.lang.String[] getTitles(int) -> getTitles
    org.achartengine.model.XYSeries toXYSeries() -> toXYSeries
org.achartengine.model.Point -> org.achartengine.model.Point:
    float mX -> mX
    float mY -> mY
    float getX() -> getX
    float getY() -> getY
    void setX(float) -> setX
    void setY(float) -> setY
org.achartengine.model.RangeCategorySeries -> org.achartengine.model.RangeCategorySeries:
    java.util.List mMaxValues -> mMaxValues
    void add(double,double) -> add
    void add(java.lang.String,double,double) -> add
    void remove(int) -> remove
    void clear() -> clear
    double getMinimumValue(int) -> getMinimumValue
    double getMaximumValue(int) -> getMaximumValue
    org.achartengine.model.XYSeries toXYSeries() -> toXYSeries
org.achartengine.model.SeriesSelection -> org.achartengine.model.SeriesSelection:
    int mSeriesIndex -> mSeriesIndex
    int mPointIndex -> mPointIndex
    double mXValue -> mXValue
    double mValue -> mValue
    int getSeriesIndex() -> getSeriesIndex
    int getPointIndex() -> getPointIndex
    double getXValue() -> getXValue
    double getValue() -> getValue
org.achartengine.model.TimeSeries -> org.achartengine.model.TimeSeries:
    void add(java.util.Date,double) -> add
    double getPadding() -> getPadding
org.achartengine.model.XYMultipleSeriesDataset -> org.achartengine.model.XYMultipleSeriesDataset:
    java.util.List mSeries -> mSeries
    void addSeries(org.achartengine.model.XYSeries) -> addSeries
    void addSeries(int,org.achartengine.model.XYSeries) -> addSeries
    void addAllSeries(java.util.List) -> addAllSeries
    void removeSeries(int) -> removeSeries
    void removeSeries(org.achartengine.model.XYSeries) -> removeSeries
    void clear() -> clear
    org.achartengine.model.XYSeries getSeriesAt(int) -> getSeriesAt
    int getSeriesCount() -> getSeriesCount
    org.achartengine.model.XYSeries[] getSeries() -> getSeries
org.achartengine.model.XYSeries -> org.achartengine.model.XYSeries:
    java.lang.String mTitle -> mTitle
    org.achartengine.util.IndexXYMap mXY -> mXY
    double mMinX -> mMinX
    double mMaxX -> mMaxX
    double mMinY -> mMinY
    double mMaxY -> mMaxY
    int mScaleNumber -> mScaleNumber
    double PADDING -> PADDING
    java.util.List mAnnotations -> mAnnotations
    org.achartengine.util.IndexXYMap mStringXY -> mStringXY
    int getScaleNumber() -> getScaleNumber
    void initRange() -> initRange
    void updateRange(double,double) -> updateRange
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void add(double,double) -> add
    void add(int,double,double) -> add
    double getPadding() -> getPadding
    void remove(int) -> remove
    void clear() -> clear
    double getX(int) -> getX
    double getY(int) -> getY
    void addAnnotation(java.lang.String,double,double) -> addAnnotation
    void removeAnnotation(int) -> removeAnnotation
    double getAnnotationX(int) -> getAnnotationX
    double getAnnotationY(int) -> getAnnotationY
    int getAnnotationCount() -> getAnnotationCount
    java.lang.String getAnnotationAt(int) -> getAnnotationAt
    java.util.SortedMap getRange(double,double,boolean) -> getRange
    int getIndexForKey(double) -> getIndexForKey
    int getItemCount() -> getItemCount
    double getMinX() -> getMinX
    double getMinY() -> getMinY
    double getMaxX() -> getMaxX
    double getMaxY() -> getMaxY
org.achartengine.model.XYValueSeries -> org.achartengine.model.XYValueSeries:
    java.util.List mValue -> mValue
    double mMinValue -> mMinValue
    double mMaxValue -> mMaxValue
    void add(double,double,double) -> add
    void initRange() -> initRange
    void updateRange(double) -> updateRange
    void add(double,double) -> add
    void remove(int) -> remove
    void clear() -> clear
    double getValue(int) -> getValue
    double getMinValue() -> getMinValue
    double getMaxValue() -> getMaxValue
org.achartengine.renderer.BasicStroke -> org.achartengine.renderer.BasicStroke:
    org.achartengine.renderer.BasicStroke SOLID -> SOLID
    org.achartengine.renderer.BasicStroke DASHED -> DASHED
    org.achartengine.renderer.BasicStroke DOTTED -> DOTTED
    android.graphics.Paint$Cap mCap -> mCap
    android.graphics.Paint$Join mJoin -> mJoin
    float mMiter -> mMiter
    float[] mIntervals -> mIntervals
    float mPhase -> mPhase
    android.graphics.Paint$Cap getCap() -> getCap
    android.graphics.Paint$Join getJoin() -> getJoin
    float getMiter() -> getMiter
    float[] getIntervals() -> getIntervals
    float getPhase() -> getPhase
org.achartengine.renderer.DefaultRenderer -> org.achartengine.renderer.DefaultRenderer:
    java.lang.String mChartTitle -> mChartTitle
    float mChartTitleTextSize -> mChartTitleTextSize
    int NO_COLOR -> NO_COLOR
    int BACKGROUND_COLOR -> BACKGROUND_COLOR
    int TEXT_COLOR -> TEXT_COLOR
    android.graphics.Typeface REGULAR_TEXT_FONT -> REGULAR_TEXT_FONT
    java.lang.String mTextTypefaceName -> mTextTypefaceName
    int mTextTypefaceStyle -> mTextTypefaceStyle
    android.graphics.Typeface mTextTypeface -> mTextTypeface
    int mBackgroundColor -> mBackgroundColor
    boolean mApplyBackgroundColor -> mApplyBackgroundColor
    boolean mShowAxes -> mShowAxes
    int mAxesColor -> mAxesColor
    boolean mShowLabels -> mShowLabels
    int mLabelsColor -> mLabelsColor
    float mLabelsTextSize -> mLabelsTextSize
    boolean mShowLegend -> mShowLegend
    float mLegendTextSize -> mLegendTextSize
    boolean mFitLegend -> mFitLegend
    boolean mShowGridX -> mShowGridX
    boolean mShowGridY -> mShowGridY
    boolean mShowCustomTextGrid -> mShowCustomTextGrid
    java.util.List mRenderers -> mRenderers
    boolean mAntialiasing -> mAntialiasing
    int mLegendHeight -> mLegendHeight
    int[] mMargins -> mMargins
    float mScale -> mScale
    boolean mPanEnabled -> mPanEnabled
    boolean mZoomEnabled -> mZoomEnabled
    boolean mZoomButtonsVisible -> mZoomButtonsVisible
    float mZoomRate -> mZoomRate
    boolean mExternalZoomEnabled -> mExternalZoomEnabled
    float mOriginalScale -> mOriginalScale
    boolean mClickEnabled -> mClickEnabled
    int selectableBuffer -> selectableBuffer
    boolean mDisplayValues -> mDisplayValues
    boolean mInScroll -> mInScroll
    float mStartAngle -> mStartAngle
    java.lang.String getChartTitle() -> getChartTitle
    void setChartTitle(java.lang.String) -> setChartTitle
    float getChartTitleTextSize() -> getChartTitleTextSize
    void setChartTitleTextSize(float) -> setChartTitleTextSize
    void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> addSeriesRenderer
    void addSeriesRenderer(int,org.achartengine.renderer.SimpleSeriesRenderer) -> addSeriesRenderer
    void removeSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> removeSeriesRenderer
    void removeAllRenderers() -> removeAllRenderers
    org.achartengine.renderer.SimpleSeriesRenderer getSeriesRendererAt(int) -> getSeriesRendererAt
    int getSeriesRendererCount() -> getSeriesRendererCount
    org.achartengine.renderer.SimpleSeriesRenderer[] getSeriesRenderers() -> getSeriesRenderers
    int getBackgroundColor() -> getBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    boolean isApplyBackgroundColor() -> isApplyBackgroundColor
    void setApplyBackgroundColor(boolean) -> setApplyBackgroundColor
    int getAxesColor() -> getAxesColor
    void setAxesColor(int) -> setAxesColor
    int getLabelsColor() -> getLabelsColor
    void setLabelsColor(int) -> setLabelsColor
    float getLabelsTextSize() -> getLabelsTextSize
    void setLabelsTextSize(float) -> setLabelsTextSize
    boolean isShowAxes() -> isShowAxes
    void setShowAxes(boolean) -> setShowAxes
    boolean isShowLabels() -> isShowLabels
    void setShowLabels(boolean) -> setShowLabels
    boolean isShowGridX() -> isShowGridX
    boolean isShowGridY() -> isShowGridY
    void setShowGridX(boolean) -> setShowGridX
    void setShowGridY(boolean) -> setShowGridY
    void setShowGrid(boolean) -> setShowGrid
    boolean isShowCustomTextGrid() -> isShowCustomTextGrid
    void setShowCustomTextGrid(boolean) -> setShowCustomTextGrid
    boolean isShowLegend() -> isShowLegend
    void setShowLegend(boolean) -> setShowLegend
    boolean isFitLegend() -> isFitLegend
    void setFitLegend(boolean) -> setFitLegend
    java.lang.String getTextTypefaceName() -> getTextTypefaceName
    int getTextTypefaceStyle() -> getTextTypefaceStyle
    android.graphics.Typeface getTextTypeface() -> getTextTypeface
    float getLegendTextSize() -> getLegendTextSize
    void setLegendTextSize(float) -> setLegendTextSize
    void setTextTypeface(java.lang.String,int) -> setTextTypeface
    void setTextTypeface(android.graphics.Typeface) -> setTextTypeface
    boolean isAntialiasing() -> isAntialiasing
    void setAntialiasing(boolean) -> setAntialiasing
    float getScale() -> getScale
    float getOriginalScale() -> getOriginalScale
    void setScale(float) -> setScale
    boolean isZoomEnabled() -> isZoomEnabled
    void setZoomEnabled(boolean) -> setZoomEnabled
    boolean isZoomButtonsVisible() -> isZoomButtonsVisible
    void setZoomButtonsVisible(boolean) -> setZoomButtonsVisible
    boolean isExternalZoomEnabled() -> isExternalZoomEnabled
    void setExternalZoomEnabled(boolean) -> setExternalZoomEnabled
    float getZoomRate() -> getZoomRate
    boolean isPanEnabled() -> isPanEnabled
    void setPanEnabled(boolean) -> setPanEnabled
    void setZoomRate(float) -> setZoomRate
    boolean isClickEnabled() -> isClickEnabled
    void setClickEnabled(boolean) -> setClickEnabled
    int getSelectableBuffer() -> getSelectableBuffer
    void setSelectableBuffer(int) -> setSelectableBuffer
    int getLegendHeight() -> getLegendHeight
    void setLegendHeight(int) -> setLegendHeight
    int[] getMargins() -> getMargins
    void setMargins(int[]) -> setMargins
    boolean isInScroll() -> isInScroll
    void setInScroll(boolean) -> setInScroll
    float getStartAngle() -> getStartAngle
    void setStartAngle(float) -> setStartAngle
    boolean isDisplayValues() -> isDisplayValues
    void setDisplayValues(boolean) -> setDisplayValues
org.achartengine.renderer.DialRenderer -> org.achartengine.renderer.DialRenderer:
    double mAngleMin -> mAngleMin
    double mAngleMax -> mAngleMax
    double mMinValue -> mMinValue
    double mMaxValue -> mMaxValue
    double mMinorTickSpacing -> mMinorTickSpacing
    double mMajorTickSpacing -> mMajorTickSpacing
    java.util.List mVisualTypes -> mVisualTypes
    double getAngleMin() -> getAngleMin
    void setAngleMin(double) -> setAngleMin
    double getAngleMax() -> getAngleMax
    void setAngleMax(double) -> setAngleMax
    double getMinValue() -> getMinValue
    void setMinValue(double) -> setMinValue
    boolean isMinValueSet() -> isMinValueSet
    double getMaxValue() -> getMaxValue
    void setMaxValue(double) -> setMaxValue
    boolean isMaxValueSet() -> isMaxValueSet
    double getMinorTicksSpacing() -> getMinorTicksSpacing
    void setMinorTicksSpacing(double) -> setMinorTicksSpacing
    double getMajorTicksSpacing() -> getMajorTicksSpacing
    void setMajorTicksSpacing(double) -> setMajorTicksSpacing
    org.achartengine.renderer.DialRenderer$Type getVisualTypeForIndex(int) -> getVisualTypeForIndex
    void setVisualTypes(org.achartengine.renderer.DialRenderer$Type[]) -> setVisualTypes
org.achartengine.renderer.DialRenderer$Type -> org.achartengine.renderer.DialRenderer$Type:
    org.achartengine.renderer.DialRenderer$Type NEEDLE -> NEEDLE
    org.achartengine.renderer.DialRenderer$Type ARROW -> ARROW
    org.achartengine.renderer.DialRenderer$Type[] $VALUES -> $VALUES
    org.achartengine.renderer.DialRenderer$Type[] values() -> values
    org.achartengine.renderer.DialRenderer$Type valueOf(java.lang.String) -> valueOf
org.achartengine.renderer.SimpleSeriesRenderer -> org.achartengine.renderer.SimpleSeriesRenderer:
    int mColor -> mColor
    boolean mDisplayChartValues -> mDisplayChartValues
    int mDisplayChartValuesDistance -> mDisplayChartValuesDistance
    float mChartValuesTextSize -> mChartValuesTextSize
    android.graphics.Paint$Align mChartValuesTextAlign -> mChartValuesTextAlign
    float mChartValuesSpacing -> mChartValuesSpacing
    org.achartengine.renderer.BasicStroke mStroke -> mStroke
    boolean mGradientEnabled -> mGradientEnabled
    double mGradientStartValue -> mGradientStartValue
    int mGradientStartColor -> mGradientStartColor
    double mGradientStopValue -> mGradientStopValue
    int mGradientStopColor -> mGradientStopColor
    boolean mShowLegendItem -> mShowLegendItem
    java.text.NumberFormat mChartValuesFormat -> mChartValuesFormat
    boolean mHighlighted -> mHighlighted
    boolean mDisplayBoundingPoints -> mDisplayBoundingPoints
    int getColor() -> getColor
    void setColor(int) -> setColor
    boolean isDisplayChartValues() -> isDisplayChartValues
    void setDisplayChartValues(boolean) -> setDisplayChartValues
    int getDisplayChartValuesDistance() -> getDisplayChartValuesDistance
    void setDisplayChartValuesDistance(int) -> setDisplayChartValuesDistance
    float getChartValuesTextSize() -> getChartValuesTextSize
    void setChartValuesTextSize(float) -> setChartValuesTextSize
    android.graphics.Paint$Align getChartValuesTextAlign() -> getChartValuesTextAlign
    void setChartValuesTextAlign(android.graphics.Paint$Align) -> setChartValuesTextAlign
    float getChartValuesSpacing() -> getChartValuesSpacing
    void setChartValuesSpacing(float) -> setChartValuesSpacing
    org.achartengine.renderer.BasicStroke getStroke() -> getStroke
    void setStroke(org.achartengine.renderer.BasicStroke) -> setStroke
    boolean isGradientEnabled() -> isGradientEnabled
    void setGradientEnabled(boolean) -> setGradientEnabled
    double getGradientStartValue() -> getGradientStartValue
    int getGradientStartColor() -> getGradientStartColor
    void setGradientStart(double,int) -> setGradientStart
    double getGradientStopValue() -> getGradientStopValue
    int getGradientStopColor() -> getGradientStopColor
    void setGradientStop(double,int) -> setGradientStop
    boolean isShowLegendItem() -> isShowLegendItem
    void setShowLegendItem(boolean) -> setShowLegendItem
    boolean isHighlighted() -> isHighlighted
    void setHighlighted(boolean) -> setHighlighted
    boolean isDisplayBoundingPoints() -> isDisplayBoundingPoints
    void setDisplayBoundingPoints(boolean) -> setDisplayBoundingPoints
    java.text.NumberFormat getChartValuesFormat() -> getChartValuesFormat
    void setChartValuesFormat(java.text.NumberFormat) -> setChartValuesFormat
org.achartengine.renderer.XYMultipleSeriesRenderer -> org.achartengine.renderer.XYMultipleSeriesRenderer:
    java.lang.String mXTitle -> mXTitle
    java.lang.String[] mYTitle -> mYTitle
    float mAxisTitleTextSize -> mAxisTitleTextSize
    double[] mMinX -> mMinX
    double[] mMaxX -> mMaxX
    double[] mMinY -> mMinY
    double[] mMaxY -> mMaxY
    int mXLabels -> mXLabels
    int mYLabels -> mYLabels
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation mOrientation -> mOrientation
    java.util.Map mXTextLabels -> mXTextLabels
    java.util.Map mYTextLabels -> mYTextLabels
    boolean mPanXEnabled -> mPanXEnabled
    boolean mPanYEnabled -> mPanYEnabled
    boolean mZoomXEnabled -> mZoomXEnabled
    boolean mZoomYEnabled -> mZoomYEnabled
    double mBarSpacing -> mBarSpacing
    int mMarginsColor -> mMarginsColor
    double[] mPanLimits -> mPanLimits
    double[] mZoomLimits -> mZoomLimits
    float mXLabelsAngle -> mXLabelsAngle
    float mYLabelsAngle -> mYLabelsAngle
    java.util.Map initialRange -> initialRange
    float mPointSize -> mPointSize
    int mGridColor -> mGridColor
    int scalesCount -> scalesCount
    android.graphics.Paint$Align xLabelsAlign -> xLabelsAlign
    android.graphics.Paint$Align[] yLabelsAlign -> yLabelsAlign
    float mXLabelsPadding -> mXLabelsPadding
    float mYLabelsPadding -> mYLabelsPadding
    float mYLabelsVerticalPadding -> mYLabelsVerticalPadding
    android.graphics.Paint$Align[] yAxisAlign -> yAxisAlign
    int mXLabelsColor -> mXLabelsColor
    int[] mYLabelsColor -> mYLabelsColor
    boolean mXRoundedLabels -> mXRoundedLabels
    java.text.NumberFormat mLabelFormat -> mLabelFormat
    float mBarWidth -> mBarWidth
    double mZoomInLimitX -> mZoomInLimitX
    double mZoomInLimitY -> mZoomInLimitY
    void initAxesRange(int) -> initAxesRange
    void initAxesRangeForScale(int) -> initAxesRangeForScale
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation getOrientation() -> getOrientation
    void setOrientation(org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation) -> setOrientation
    java.lang.String getXTitle() -> getXTitle
    void setXTitle(java.lang.String) -> setXTitle
    java.lang.String getYTitle() -> getYTitle
    java.lang.String getYTitle(int) -> getYTitle
    void setYTitle(java.lang.String) -> setYTitle
    void setYTitle(java.lang.String,int) -> setYTitle
    float getAxisTitleTextSize() -> getAxisTitleTextSize
    void setAxisTitleTextSize(float) -> setAxisTitleTextSize
    double getXAxisMin() -> getXAxisMin
    void setXAxisMin(double) -> setXAxisMin
    boolean isMinXSet() -> isMinXSet
    double getXAxisMax() -> getXAxisMax
    void setXAxisMax(double) -> setXAxisMax
    boolean isMaxXSet() -> isMaxXSet
    double getYAxisMin() -> getYAxisMin
    void setYAxisMin(double) -> setYAxisMin
    boolean isMinYSet() -> isMinYSet
    double getYAxisMax() -> getYAxisMax
    void setYAxisMax(double) -> setYAxisMax
    boolean isMaxYSet() -> isMaxYSet
    double getXAxisMin(int) -> getXAxisMin
    void setXAxisMin(double,int) -> setXAxisMin
    boolean isMinXSet(int) -> isMinXSet
    double getXAxisMax(int) -> getXAxisMax
    void setXAxisMax(double,int) -> setXAxisMax
    boolean isMaxXSet(int) -> isMaxXSet
    double getYAxisMin(int) -> getYAxisMin
    void setYAxisMin(double,int) -> setYAxisMin
    boolean isMinYSet(int) -> isMinYSet
    double getYAxisMax(int) -> getYAxisMax
    void setYAxisMax(double,int) -> setYAxisMax
    boolean isMaxYSet(int) -> isMaxYSet
    int getXLabels() -> getXLabels
    void setXLabels(int) -> setXLabels
    void addTextLabel(double,java.lang.String) -> addTextLabel
    void addXTextLabel(double,java.lang.String) -> addXTextLabel
    void removeXTextLabel(double) -> removeXTextLabel
    java.lang.String getXTextLabel(java.lang.Double) -> getXTextLabel
    java.lang.Double[] getXTextLabelLocations() -> getXTextLabelLocations
    void clearTextLabels() -> clearTextLabels
    void clearXTextLabels() -> clearXTextLabels
    boolean isXRoundedLabels() -> isXRoundedLabels
    void setXRoundedLabels(boolean) -> setXRoundedLabels
    void addYTextLabel(double,java.lang.String) -> addYTextLabel
    void removeYTextLabel(double) -> removeYTextLabel
    void addYTextLabel(double,java.lang.String,int) -> addYTextLabel
    void removeYTextLabel(double,int) -> removeYTextLabel
    java.lang.String getYTextLabel(java.lang.Double) -> getYTextLabel
    java.lang.String getYTextLabel(java.lang.Double,int) -> getYTextLabel
    java.lang.Double[] getYTextLabelLocations() -> getYTextLabelLocations
    java.lang.Double[] getYTextLabelLocations(int) -> getYTextLabelLocations
    void clearYTextLabels() -> clearYTextLabels
    void clearYTextLabels(int) -> clearYTextLabels
    int getYLabels() -> getYLabels
    void setYLabels(int) -> setYLabels
    void setDisplayChartValues(boolean) -> setDisplayChartValues
    void setChartValuesTextSize(float) -> setChartValuesTextSize
    float getBarWidth() -> getBarWidth
    void setBarWidth(float) -> setBarWidth
    boolean isPanEnabled() -> isPanEnabled
    boolean isPanXEnabled() -> isPanXEnabled
    boolean isPanYEnabled() -> isPanYEnabled
    void setPanEnabled(boolean,boolean) -> setPanEnabled
    void setPanEnabled(boolean) -> setPanEnabled
    boolean isZoomEnabled() -> isZoomEnabled
    boolean isZoomXEnabled() -> isZoomXEnabled
    boolean isZoomYEnabled() -> isZoomYEnabled
    void setZoomEnabled(boolean,boolean) -> setZoomEnabled
    double getBarsSpacing() -> getBarsSpacing
    double getBarSpacing() -> getBarSpacing
    void setBarSpacing(double) -> setBarSpacing
    int getMarginsColor() -> getMarginsColor
    void setMarginsColor(int) -> setMarginsColor
    int getGridColor() -> getGridColor
    void setGridColor(int) -> setGridColor
    double[] getPanLimits() -> getPanLimits
    void setPanLimits(double[]) -> setPanLimits
    double[] getZoomLimits() -> getZoomLimits
    void setZoomLimits(double[]) -> setZoomLimits
    float getXLabelsAngle() -> getXLabelsAngle
    void setXLabelsAngle(float) -> setXLabelsAngle
    float getYLabelsAngle() -> getYLabelsAngle
    void setYLabelsAngle(float) -> setYLabelsAngle
    float getPointSize() -> getPointSize
    void setPointSize(float) -> setPointSize
    void setRange(double[]) -> setRange
    void setRange(double[],int) -> setRange
    boolean isInitialRangeSet() -> isInitialRangeSet
    boolean isInitialRangeSet(int) -> isInitialRangeSet
    double[] getInitialRange() -> getInitialRange
    double[] getInitialRange(int) -> getInitialRange
    void setInitialRange(double[]) -> setInitialRange
    void setInitialRange(double[],int) -> setInitialRange
    int getXLabelsColor() -> getXLabelsColor
    int getYLabelsColor(int) -> getYLabelsColor
    void setXLabelsColor(int) -> setXLabelsColor
    void setYLabelsColor(int,int) -> setYLabelsColor
    android.graphics.Paint$Align getXLabelsAlign() -> getXLabelsAlign
    void setXLabelsAlign(android.graphics.Paint$Align) -> setXLabelsAlign
    android.graphics.Paint$Align getYLabelsAlign(int) -> getYLabelsAlign
    void setYLabelsAlign(android.graphics.Paint$Align) -> setYLabelsAlign
    android.graphics.Paint$Align getYAxisAlign(int) -> getYAxisAlign
    void setYAxisAlign(android.graphics.Paint$Align,int) -> setYAxisAlign
    void setYLabelsAlign(android.graphics.Paint$Align,int) -> setYLabelsAlign
    float getXLabelsPadding() -> getXLabelsPadding
    void setXLabelsPadding(float) -> setXLabelsPadding
    float getYLabelsPadding() -> getYLabelsPadding
    void setYLabelsVerticalPadding(float) -> setYLabelsVerticalPadding
    float getYLabelsVerticalPadding() -> getYLabelsVerticalPadding
    void setYLabelsPadding(float) -> setYLabelsPadding
    java.text.NumberFormat getLabelFormat() -> getLabelFormat
    void setLabelFormat(java.text.NumberFormat) -> setLabelFormat
    double getZoomInLimitX() -> getZoomInLimitX
    void setZoomInLimitX(double) -> setZoomInLimitX
    double getZoomInLimitY() -> getZoomInLimitY
    void setZoomInLimitY(double) -> setZoomInLimitY
    int getScalesCount() -> getScalesCount
org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation -> org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation:
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> HORIZONTAL
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation VERTICAL -> VERTICAL
    int mAngle -> mAngle
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] $VALUES -> $VALUES
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] values() -> values
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation valueOf(java.lang.String) -> valueOf
    int getAngle() -> getAngle
org.achartengine.renderer.XYSeriesRenderer -> org.achartengine.renderer.XYSeriesRenderer:
    boolean mFillPoints -> mFillPoints
    java.util.List mFillBelowLine -> mFillBelowLine
    org.achartengine.chart.PointStyle mPointStyle -> mPointStyle
    float mPointStrokeWidth -> mPointStrokeWidth
    float mLineWidth -> mLineWidth
    boolean isFillBelowLine() -> isFillBelowLine
    void setFillBelowLine(boolean) -> setFillBelowLine
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine[] getFillOutsideLine() -> getFillOutsideLine
    void addFillOutsideLine(org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine) -> addFillOutsideLine
    boolean isFillPoints() -> isFillPoints
    void setFillPoints(boolean) -> setFillPoints
    void setFillBelowLineColor(int) -> setFillBelowLineColor
    org.achartengine.chart.PointStyle getPointStyle() -> getPointStyle
    void setPointStyle(org.achartengine.chart.PointStyle) -> setPointStyle
    float getPointStrokeWidth() -> getPointStrokeWidth
    void setPointStrokeWidth(float) -> setPointStrokeWidth
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine -> org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine:
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type mType -> mType
    int mColor -> mColor
    int[] mFillRange -> mFillRange
    int getColor() -> getColor
    void setColor(int) -> setColor
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type getType() -> getType
    int[] getFillRange() -> getFillRange
    void setFillRange(int[]) -> setFillRange
org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type -> org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type:
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type NONE -> NONE
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BOUNDS_ALL -> BOUNDS_ALL
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BOUNDS_BELOW -> BOUNDS_BELOW
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BOUNDS_ABOVE -> BOUNDS_ABOVE
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BELOW -> BELOW
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type ABOVE -> ABOVE
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type[] $VALUES -> $VALUES
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type[] values() -> values
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type valueOf(java.lang.String) -> valueOf
org.achartengine.tools.AbstractTool -> org.achartengine.tools.AbstractTool:
    org.achartengine.chart.AbstractChart mChart -> mChart
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> mRenderer
    double[] getRange(int) -> getRange
    void checkRange(double[],int) -> checkRange
    void setXRange(double,double,int) -> setXRange
    void setYRange(double,double,int) -> setYRange
org.achartengine.tools.FitZoom -> org.achartengine.tools.FitZoom:
    void apply() -> apply
org.achartengine.tools.Pan -> org.achartengine.tools.Pan:
    java.util.List mPanListeners -> mPanListeners
    boolean limitsReachedX -> limitsReachedX
    boolean limitsReachedY -> limitsReachedY
    void apply(float,float,float,float) -> apply
    double getAxisRatio(double[]) -> getAxisRatio
    void notifyPanListeners() -> notifyPanListeners
    void addPanListener(org.achartengine.tools.PanListener) -> addPanListener
    void removePanListener(org.achartengine.tools.PanListener) -> removePanListener
org.achartengine.tools.PanListener -> org.achartengine.tools.PanListener:
    void panApplied() -> panApplied
org.achartengine.tools.Zoom -> org.achartengine.tools.Zoom:
    boolean mZoomIn -> mZoomIn
    float mZoomRate -> mZoomRate
    java.util.List mZoomListeners -> mZoomListeners
    boolean limitsReachedX -> limitsReachedX
    boolean limitsReachedY -> limitsReachedY
    int ZOOM_AXIS_XY -> ZOOM_AXIS_XY
    int ZOOM_AXIS_X -> ZOOM_AXIS_X
    int ZOOM_AXIS_Y -> ZOOM_AXIS_Y
    void setZoomRate(float) -> setZoomRate
    void apply(int) -> apply
    void notifyZoomListeners(org.achartengine.tools.ZoomEvent) -> notifyZoomListeners
    void notifyZoomResetListeners() -> notifyZoomResetListeners
    void addZoomListener(org.achartengine.tools.ZoomListener) -> addZoomListener
    void removeZoomListener(org.achartengine.tools.ZoomListener) -> removeZoomListener
org.achartengine.tools.ZoomEvent -> org.achartengine.tools.ZoomEvent:
    boolean mZoomIn -> mZoomIn
    float mZoomRate -> mZoomRate
    boolean isZoomIn() -> isZoomIn
    float getZoomRate() -> getZoomRate
org.achartengine.tools.ZoomListener -> org.achartengine.tools.ZoomListener:
    void zoomApplied(org.achartengine.tools.ZoomEvent) -> zoomApplied
    void zoomReset() -> zoomReset
org.achartengine.util.IndexXYMap -> org.achartengine.util.IndexXYMap:
    java.util.List indexList -> indexList
    double maxXDifference -> maxXDifference
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put(int,java.lang.Object,java.lang.Object) -> put
    void updateMaxXDifference() -> updateMaxXDifference
    double getMaxXDifference() -> getMaxXDifference
    void clear() -> clear
    java.lang.Object getXByIndex(int) -> getXByIndex
    java.lang.Object getYByIndex(int) -> getYByIndex
    org.achartengine.util.XYEntry getByIndex(int) -> getByIndex
    org.achartengine.util.XYEntry removeByIndex(int) -> removeByIndex
    int getIndexForKey(java.lang.Object) -> getIndexForKey
org.achartengine.util.MathHelper -> org.achartengine.util.MathHelper:
    double NULL_VALUE -> NULL_VALUE
    java.text.NumberFormat FORMAT -> FORMAT
    double[] minmax(java.util.List) -> minmax
    java.util.List getLabels(double,double,int) -> getLabels
    double[] computeLabels(double,double,int) -> computeLabels
    double roundUp(double) -> roundUp
org.achartengine.util.XYEntry -> org.achartengine.util.XYEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.apache.commons.codec.BinaryDecoder -> org.apache.commons.codec.BinaryDecoder:
    byte[] decode(byte[]) -> decode
org.apache.commons.codec.BinaryEncoder -> org.apache.commons.codec.BinaryEncoder:
    byte[] encode(byte[]) -> encode
org.apache.commons.codec.CharEncoding -> org.apache.commons.codec.CharEncoding:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
org.apache.commons.codec.Charsets -> org.apache.commons.codec.Charsets:
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_16 -> UTF_16
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset toCharset(java.nio.charset.Charset) -> toCharset
    java.nio.charset.Charset toCharset(java.lang.String) -> toCharset
org.apache.commons.codec.Decoder -> org.apache.commons.codec.Decoder:
    java.lang.Object decode(java.lang.Object) -> decode
org.apache.commons.codec.DecoderException -> org.apache.commons.codec.DecoderException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.codec.Encoder -> org.apache.commons.codec.Encoder:
    java.lang.Object encode(java.lang.Object) -> encode
org.apache.commons.codec.EncoderException -> org.apache.commons.codec.EncoderException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.codec.StringDecoder -> org.apache.commons.codec.StringDecoder:
    java.lang.String decode(java.lang.String) -> decode
org.apache.commons.codec.StringEncoder -> org.apache.commons.codec.StringEncoder:
    java.lang.String encode(java.lang.String) -> encode
org.apache.commons.codec.StringEncoderComparator -> org.apache.commons.codec.StringEncoderComparator:
    org.apache.commons.codec.StringEncoder stringEncoder -> stringEncoder
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.codec.binary.Base32 -> org.apache.commons.codec.binary.Base32:
    int BITS_PER_ENCODED_BYTE -> BITS_PER_ENCODED_BYTE
    int BYTES_PER_ENCODED_BLOCK -> BYTES_PER_ENCODED_BLOCK
    int BYTES_PER_UNENCODED_BLOCK -> BYTES_PER_UNENCODED_BLOCK
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    byte[] DECODE_TABLE -> DECODE_TABLE
    byte[] ENCODE_TABLE -> ENCODE_TABLE
    byte[] HEX_DECODE_TABLE -> HEX_DECODE_TABLE
    byte[] HEX_ENCODE_TABLE -> HEX_ENCODE_TABLE
    int MASK_5BITS -> MASK_5BITS
    int decodeSize -> decodeSize
    byte[] decodeTable -> decodeTable
    int encodeSize -> encodeSize
    byte[] encodeTable -> encodeTable
    byte[] lineSeparator -> lineSeparator
    void decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> decode
    void encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> encode
    boolean isInAlphabet(byte) -> isInAlphabet
org.apache.commons.codec.binary.Base32InputStream -> org.apache.commons.codec.binary.Base32InputStream:
org.apache.commons.codec.binary.Base32OutputStream -> org.apache.commons.codec.binary.Base32OutputStream:
org.apache.commons.codec.binary.Base64 -> org.apache.commons.codec.binary.Base64:
    int BITS_PER_ENCODED_BYTE -> BITS_PER_ENCODED_BYTE
    int BYTES_PER_UNENCODED_BLOCK -> BYTES_PER_UNENCODED_BLOCK
    int BYTES_PER_ENCODED_BLOCK -> BYTES_PER_ENCODED_BLOCK
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    byte[] STANDARD_ENCODE_TABLE -> STANDARD_ENCODE_TABLE
    byte[] URL_SAFE_ENCODE_TABLE -> URL_SAFE_ENCODE_TABLE
    byte[] DECODE_TABLE -> DECODE_TABLE
    int MASK_6BITS -> MASK_6BITS
    byte[] encodeTable -> encodeTable
    byte[] decodeTable -> decodeTable
    byte[] lineSeparator -> lineSeparator
    int decodeSize -> decodeSize
    int encodeSize -> encodeSize
    boolean isUrlSafe() -> isUrlSafe
    void encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> encode
    void decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> decode
    boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    boolean isBase64(byte) -> isBase64
    boolean isBase64(java.lang.String) -> isBase64
    boolean isBase64(byte[]) -> isBase64
    byte[] encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64String(byte[]) -> encodeBase64String
    byte[] encodeBase64URLSafe(byte[]) -> encodeBase64URLSafe
    java.lang.String encodeBase64URLSafeString(byte[]) -> encodeBase64URLSafeString
    byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    byte[] encodeBase64(byte[],boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean,int) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    byte[] decodeBase64(byte[]) -> decodeBase64
    java.math.BigInteger decodeInteger(byte[]) -> decodeInteger
    byte[] encodeInteger(java.math.BigInteger) -> encodeInteger
    byte[] toIntegerBytes(java.math.BigInteger) -> toIntegerBytes
    boolean isInAlphabet(byte) -> isInAlphabet
org.apache.commons.codec.binary.Base64InputStream -> org.apache.commons.codec.binary.Base64InputStream:
org.apache.commons.codec.binary.Base64OutputStream -> org.apache.commons.codec.binary.Base64OutputStream:
org.apache.commons.codec.binary.BaseNCodec -> org.apache.commons.codec.binary.BaseNCodec:
    int EOF -> EOF
    int MIME_CHUNK_SIZE -> MIME_CHUNK_SIZE
    int PEM_CHUNK_SIZE -> PEM_CHUNK_SIZE
    int DEFAULT_BUFFER_RESIZE_FACTOR -> DEFAULT_BUFFER_RESIZE_FACTOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int MASK_8BITS -> MASK_8BITS
    byte PAD_DEFAULT -> PAD_DEFAULT
    byte PAD -> PAD
    int unencodedBlockSize -> unencodedBlockSize
    int encodedBlockSize -> encodedBlockSize
    int lineLength -> lineLength
    int chunkSeparatorLength -> chunkSeparatorLength
    boolean hasData(org.apache.commons.codec.binary.BaseNCodec$Context) -> hasData
    int available(org.apache.commons.codec.binary.BaseNCodec$Context) -> available
    int getDefaultBufferSize() -> getDefaultBufferSize
    byte[] resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context) -> resizeBuffer
    byte[] ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context) -> ensureBufferSize
    int readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> readResults
    boolean isWhiteSpace(byte) -> isWhiteSpace
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encodeToString(byte[]) -> encodeToString
    java.lang.String encodeAsString(byte[]) -> encodeAsString
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(byte[]) -> decode
    byte[] encode(byte[]) -> encode
    void encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> encode
    void decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> decode
    boolean isInAlphabet(byte) -> isInAlphabet
    boolean isInAlphabet(byte[],boolean) -> isInAlphabet
    boolean isInAlphabet(java.lang.String) -> isInAlphabet
    boolean containsAlphabetOrPad(byte[]) -> containsAlphabetOrPad
    long getEncodedLength(byte[]) -> getEncodedLength
org.apache.commons.codec.binary.BaseNCodec$Context -> org.apache.commons.codec.binary.BaseNCodec$Context:
    int ibitWorkArea -> ibitWorkArea
    long lbitWorkArea -> lbitWorkArea
    byte[] buffer -> buffer
    int pos -> pos
    int readPos -> readPos
    boolean eof -> eof
    int currentLinePos -> currentLinePos
    int modulus -> modulus
    java.lang.String toString() -> toString
org.apache.commons.codec.binary.BaseNCodecInputStream -> org.apache.commons.codec.binary.BaseNCodecInputStream:
    org.apache.commons.codec.binary.BaseNCodec baseNCodec -> baseNCodec
    boolean doEncode -> doEncode
    byte[] singleByte -> singleByte
    org.apache.commons.codec.binary.BaseNCodec$Context context -> context
    int available() -> available
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
org.apache.commons.codec.binary.BaseNCodecOutputStream -> org.apache.commons.codec.binary.BaseNCodecOutputStream:
    boolean doEncode -> doEncode
    org.apache.commons.codec.binary.BaseNCodec baseNCodec -> baseNCodec
    byte[] singleByte -> singleByte
    org.apache.commons.codec.binary.BaseNCodec$Context context -> context
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush(boolean) -> flush
    void flush() -> flush
    void close() -> close
org.apache.commons.codec.binary.BinaryCodec -> org.apache.commons.codec.binary.BinaryCodec:
    char[] EMPTY_CHAR_ARRAY -> EMPTY_CHAR_ARRAY
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    int BIT_0 -> BIT_0
    int BIT_1 -> BIT_1
    int BIT_2 -> BIT_2
    int BIT_3 -> BIT_3
    int BIT_4 -> BIT_4
    int BIT_5 -> BIT_5
    int BIT_6 -> BIT_6
    int BIT_7 -> BIT_7
    int[] BITS -> BITS
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(byte[]) -> decode
    byte[] toByteArray(java.lang.String) -> toByteArray
    byte[] fromAscii(char[]) -> fromAscii
    byte[] fromAscii(byte[]) -> fromAscii
    boolean isEmpty(byte[]) -> isEmpty
    byte[] toAsciiBytes(byte[]) -> toAsciiBytes
    char[] toAsciiChars(byte[]) -> toAsciiChars
    java.lang.String toAsciiString(byte[]) -> toAsciiString
org.apache.commons.codec.binary.Hex -> org.apache.commons.codec.binary.Hex:
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String DEFAULT_CHARSET_NAME -> DEFAULT_CHARSET_NAME
    char[] DIGITS_LOWER -> DIGITS_LOWER
    char[] DIGITS_UPPER -> DIGITS_UPPER
    java.nio.charset.Charset charset -> charset
    byte[] decodeHex(char[]) -> decodeHex
    char[] encodeHex(byte[]) -> encodeHex
    char[] encodeHex(byte[],boolean) -> encodeHex
    char[] encodeHex(byte[],char[]) -> encodeHex
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    int toDigit(char,int) -> toDigit
    byte[] decode(byte[]) -> decode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getCharsetName() -> getCharsetName
    java.lang.String toString() -> toString
org.apache.commons.codec.binary.StringUtils -> org.apache.commons.codec.binary.StringUtils:
    byte[] getBytes(java.lang.String,java.nio.charset.Charset) -> getBytes
    byte[] getBytesIso8859_1(java.lang.String) -> getBytesIso8859_1
    byte[] getBytesUnchecked(java.lang.String,java.lang.String) -> getBytesUnchecked
    byte[] getBytesUsAscii(java.lang.String) -> getBytesUsAscii
    byte[] getBytesUtf16(java.lang.String) -> getBytesUtf16
    byte[] getBytesUtf16Be(java.lang.String) -> getBytesUtf16Be
    byte[] getBytesUtf16Le(java.lang.String) -> getBytesUtf16Le
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    java.lang.IllegalStateException newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException) -> newIllegalStateException
    java.lang.String newString(byte[],java.nio.charset.Charset) -> newString
    java.lang.String newString(byte[],java.lang.String) -> newString
    java.lang.String newStringIso8859_1(byte[]) -> newStringIso8859_1
    java.lang.String newStringUsAscii(byte[]) -> newStringUsAscii
    java.lang.String newStringUtf16(byte[]) -> newStringUtf16
    java.lang.String newStringUtf16Be(byte[]) -> newStringUtf16Be
    java.lang.String newStringUtf16Le(byte[]) -> newStringUtf16Le
    java.lang.String newStringUtf8(byte[]) -> newStringUtf8
org.apache.commons.codec.digest.B64 -> org.apache.commons.codec.digest.B64:
    java.lang.String B64T -> B64T
    void b64from24bit(byte,byte,byte,int,java.lang.StringBuilder) -> b64from24bit
    java.lang.String getRandomSalt(int) -> getRandomSalt
org.apache.commons.codec.digest.Crypt -> org.apache.commons.codec.digest.Crypt:
    java.lang.String crypt(byte[]) -> crypt
    java.lang.String crypt(byte[],java.lang.String) -> crypt
    java.lang.String crypt(java.lang.String) -> crypt
    java.lang.String crypt(java.lang.String,java.lang.String) -> crypt
org.apache.commons.codec.digest.DigestUtils -> org.apache.commons.codec.digest.DigestUtils:
    int STREAM_BUFFER_LENGTH -> STREAM_BUFFER_LENGTH
    byte[] digest(java.security.MessageDigest,java.io.InputStream) -> digest
    java.security.MessageDigest getDigest(java.lang.String) -> getDigest
    java.security.MessageDigest getMd2Digest() -> getMd2Digest
    java.security.MessageDigest getMd5Digest() -> getMd5Digest
    java.security.MessageDigest getSha1Digest() -> getSha1Digest
    java.security.MessageDigest getSha256Digest() -> getSha256Digest
    java.security.MessageDigest getSha384Digest() -> getSha384Digest
    java.security.MessageDigest getSha512Digest() -> getSha512Digest
    java.security.MessageDigest getShaDigest() -> getShaDigest
    byte[] md2(byte[]) -> md2
    byte[] md2(java.io.InputStream) -> md2
    byte[] md2(java.lang.String) -> md2
    java.lang.String md2Hex(byte[]) -> md2Hex
    java.lang.String md2Hex(java.io.InputStream) -> md2Hex
    java.lang.String md2Hex(java.lang.String) -> md2Hex
    byte[] md5(byte[]) -> md5
    byte[] md5(java.io.InputStream) -> md5
    byte[] md5(java.lang.String) -> md5
    java.lang.String md5Hex(byte[]) -> md5Hex
    java.lang.String md5Hex(java.io.InputStream) -> md5Hex
    java.lang.String md5Hex(java.lang.String) -> md5Hex
    byte[] sha(byte[]) -> sha
    byte[] sha(java.io.InputStream) -> sha
    byte[] sha(java.lang.String) -> sha
    byte[] sha1(byte[]) -> sha1
    byte[] sha1(java.io.InputStream) -> sha1
    byte[] sha1(java.lang.String) -> sha1
    java.lang.String sha1Hex(byte[]) -> sha1Hex
    java.lang.String sha1Hex(java.io.InputStream) -> sha1Hex
    java.lang.String sha1Hex(java.lang.String) -> sha1Hex
    byte[] sha256(byte[]) -> sha256
    byte[] sha256(java.io.InputStream) -> sha256
    byte[] sha256(java.lang.String) -> sha256
    java.lang.String sha256Hex(byte[]) -> sha256Hex
    java.lang.String sha256Hex(java.io.InputStream) -> sha256Hex
    java.lang.String sha256Hex(java.lang.String) -> sha256Hex
    byte[] sha384(byte[]) -> sha384
    byte[] sha384(java.io.InputStream) -> sha384
    byte[] sha384(java.lang.String) -> sha384
    java.lang.String sha384Hex(byte[]) -> sha384Hex
    java.lang.String sha384Hex(java.io.InputStream) -> sha384Hex
    java.lang.String sha384Hex(java.lang.String) -> sha384Hex
    byte[] sha512(byte[]) -> sha512
    byte[] sha512(java.io.InputStream) -> sha512
    byte[] sha512(java.lang.String) -> sha512
    java.lang.String sha512Hex(byte[]) -> sha512Hex
    java.lang.String sha512Hex(java.io.InputStream) -> sha512Hex
    java.lang.String sha512Hex(java.lang.String) -> sha512Hex
    java.lang.String shaHex(byte[]) -> shaHex
    java.lang.String shaHex(java.io.InputStream) -> shaHex
    java.lang.String shaHex(java.lang.String) -> shaHex
    java.security.MessageDigest updateDigest(java.security.MessageDigest,byte[]) -> updateDigest
    java.security.MessageDigest updateDigest(java.security.MessageDigest,java.io.InputStream) -> updateDigest
    java.security.MessageDigest updateDigest(java.security.MessageDigest,java.lang.String) -> updateDigest
org.apache.commons.codec.digest.Md5Crypt -> org.apache.commons.codec.digest.Md5Crypt:
    java.lang.String APR1_PREFIX -> APR1_PREFIX
    int BLOCKSIZE -> BLOCKSIZE
    java.lang.String MD5_PREFIX -> MD5_PREFIX
    int ROUNDS -> ROUNDS
    java.lang.String apr1Crypt(byte[]) -> apr1Crypt
    java.lang.String apr1Crypt(byte[],java.lang.String) -> apr1Crypt
    java.lang.String apr1Crypt(java.lang.String) -> apr1Crypt
    java.lang.String apr1Crypt(java.lang.String,java.lang.String) -> apr1Crypt
    java.lang.String md5Crypt(byte[]) -> md5Crypt
    java.lang.String md5Crypt(byte[],java.lang.String) -> md5Crypt
    java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String) -> md5Crypt
org.apache.commons.codec.digest.MessageDigestAlgorithms -> org.apache.commons.codec.digest.MessageDigestAlgorithms:
    java.lang.String MD2 -> MD2
    java.lang.String MD5 -> MD5
    java.lang.String SHA_1 -> SHA_1
    java.lang.String SHA_256 -> SHA_256
    java.lang.String SHA_384 -> SHA_384
    java.lang.String SHA_512 -> SHA_512
org.apache.commons.codec.digest.Sha2Crypt -> org.apache.commons.codec.digest.Sha2Crypt:
    int ROUNDS_DEFAULT -> ROUNDS_DEFAULT
    int ROUNDS_MAX -> ROUNDS_MAX
    int ROUNDS_MIN -> ROUNDS_MIN
    java.lang.String ROUNDS_PREFIX -> ROUNDS_PREFIX
    int SHA256_BLOCKSIZE -> SHA256_BLOCKSIZE
    java.lang.String SHA256_PREFIX -> SHA256_PREFIX
    int SHA512_BLOCKSIZE -> SHA512_BLOCKSIZE
    java.lang.String SHA512_PREFIX -> SHA512_PREFIX
    java.util.regex.Pattern SALT_PATTERN -> SALT_PATTERN
    java.lang.String sha256Crypt(byte[]) -> sha256Crypt
    java.lang.String sha256Crypt(byte[],java.lang.String) -> sha256Crypt
    java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String) -> sha2Crypt
    java.lang.String sha512Crypt(byte[]) -> sha512Crypt
    java.lang.String sha512Crypt(byte[],java.lang.String) -> sha512Crypt
org.apache.commons.codec.digest.UnixCrypt -> org.apache.commons.codec.digest.UnixCrypt:
    int[] CON_SALT -> CON_SALT
    int[] COV2CHAR -> COV2CHAR
    char[] SALT_CHARS -> SALT_CHARS
    boolean[] SHIFT2 -> SHIFT2
    int[][] SKB -> SKB
    int[][] SPTRANS -> SPTRANS
    java.lang.String crypt(byte[]) -> crypt
    java.lang.String crypt(byte[],java.lang.String) -> crypt
    java.lang.String crypt(java.lang.String) -> crypt
    java.lang.String crypt(java.lang.String,java.lang.String) -> crypt
    int[] body(int[],int,int) -> body
    int byteToUnsigned(byte) -> byteToUnsigned
    int dEncrypt(int,int,int,int,int,int[]) -> dEncrypt
    int[] desSetKey(byte[]) -> desSetKey
    int fourBytesToInt(byte[],int) -> fourBytesToInt
    int hPermOp(int,int,int) -> hPermOp
    void intToFourBytes(int,byte[],int) -> intToFourBytes
    void permOp(int,int,int,int,int[]) -> permOp
org.apache.commons.codec.language.AbstractCaverphone -> org.apache.commons.codec.language.AbstractCaverphone:
    java.lang.Object encode(java.lang.Object) -> encode
    boolean isEncodeEqual(java.lang.String,java.lang.String) -> isEncodeEqual
org.apache.commons.codec.language.Caverphone -> org.apache.commons.codec.language.Caverphone:
    org.apache.commons.codec.language.Caverphone2 encoder -> encoder
    java.lang.String caverphone(java.lang.String) -> caverphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isCaverphoneEqual(java.lang.String,java.lang.String) -> isCaverphoneEqual
org.apache.commons.codec.language.Caverphone1 -> org.apache.commons.codec.language.Caverphone1:
    java.lang.String SIX_1 -> SIX_1
    java.lang.String encode(java.lang.String) -> encode
org.apache.commons.codec.language.Caverphone2 -> org.apache.commons.codec.language.Caverphone2:
    java.lang.String TEN_1 -> TEN_1
    java.lang.String encode(java.lang.String) -> encode
org.apache.commons.codec.language.ColognePhonetic -> org.apache.commons.codec.language.ColognePhonetic:
    char[] AEIJOUY -> AEIJOUY
    char[] SCZ -> SCZ
    char[] WFPV -> WFPV
    char[] GKQ -> GKQ
    char[] CKQ -> CKQ
    char[] AHKLOQRUX -> AHKLOQRUX
    char[] SZ -> SZ
    char[] AHOUKQX -> AHOUKQX
    char[] TDX -> TDX
    char[][] PREPROCESS_MAP -> PREPROCESS_MAP
    boolean arrayContains(char[],char) -> arrayContains
    java.lang.String colognePhonetic(java.lang.String) -> colognePhonetic
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isEncodeEqual(java.lang.String,java.lang.String) -> isEncodeEqual
    java.lang.String preprocess(java.lang.String) -> preprocess
org.apache.commons.codec.language.ColognePhonetic$CologneBuffer -> org.apache.commons.codec.language.ColognePhonetic$CologneBuffer:
    char[] data -> data
    int length -> length
    org.apache.commons.codec.language.ColognePhonetic this$0 -> this$0
    char[] copyData(int,int) -> copyData
    int length() -> length
    java.lang.String toString() -> toString
org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer -> org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer:
    org.apache.commons.codec.language.ColognePhonetic this$0 -> this$0
    void addLeft(char) -> addLeft
    char[] copyData(int,int) -> copyData
    char getNextChar() -> getNextChar
    int getNextPos() -> getNextPos
    char removeNext() -> removeNext
org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer -> org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer:
    org.apache.commons.codec.language.ColognePhonetic this$0 -> this$0
    void addRight(char) -> addRight
    char[] copyData(int,int) -> copyData
org.apache.commons.codec.language.DoubleMetaphone -> org.apache.commons.codec.language.DoubleMetaphone:
    java.lang.String VOWELS -> VOWELS
    java.lang.String[] SILENT_START -> SILENT_START
    java.lang.String[] L_R_N_M_B_H_F_V_W_SPACE -> L_R_N_M_B_H_F_V_W_SPACE
    java.lang.String[] ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER -> ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER
    java.lang.String[] L_T_K_S_N_M_B_Z -> L_T_K_S_N_M_B_Z
    int maxCodeLen -> maxCodeLen
    java.lang.String doubleMetaphone(java.lang.String) -> doubleMetaphone
    java.lang.String doubleMetaphone(java.lang.String,boolean) -> doubleMetaphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String) -> isDoubleMetaphoneEqual
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean) -> isDoubleMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
    int handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleAEIOUY
    int handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleC
    int handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleCC
    int handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleCH
    int handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleD
    int handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleG
    int handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleGH
    int handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleH
    int handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleJ
    int handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleL
    int handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleP
    int handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleR
    int handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleS
    int handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleSC
    int handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleT
    int handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleW
    int handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleX
    int handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleZ
    boolean conditionC0(java.lang.String,int) -> conditionC0
    boolean conditionCH0(java.lang.String,int) -> conditionCH0
    boolean conditionCH1(java.lang.String,int) -> conditionCH1
    boolean conditionL0(java.lang.String,int) -> conditionL0
    boolean conditionM0(java.lang.String,int) -> conditionM0
    boolean isSlavoGermanic(java.lang.String) -> isSlavoGermanic
    boolean isVowel(char) -> isVowel
    boolean isSilentStart(java.lang.String) -> isSilentStart
    java.lang.String cleanInput(java.lang.String) -> cleanInput
    char charAt(java.lang.String,int) -> charAt
    boolean contains(java.lang.String,int,int,java.lang.String[]) -> contains
org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult -> org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult:
    java.lang.StringBuilder primary -> primary
    java.lang.StringBuilder alternate -> alternate
    int maxLength -> maxLength
    org.apache.commons.codec.language.DoubleMetaphone this$0 -> this$0
    void append(char) -> append
    void append(char,char) -> append
    void appendPrimary(char) -> appendPrimary
    void appendAlternate(char) -> appendAlternate
    void append(java.lang.String) -> append
    void append(java.lang.String,java.lang.String) -> append
    void appendPrimary(java.lang.String) -> appendPrimary
    void appendAlternate(java.lang.String) -> appendAlternate
    java.lang.String getPrimary() -> getPrimary
    java.lang.String getAlternate() -> getAlternate
    boolean isComplete() -> isComplete
org.apache.commons.codec.language.MatchRatingApproachEncoder -> org.apache.commons.codec.language.MatchRatingApproachEncoder:
    java.lang.String SPACE -> SPACE
    java.lang.String EMPTY -> EMPTY
    int ONE -> ONE
    int TWO -> TWO
    int THREE -> THREE
    int FOUR -> FOUR
    int FIVE -> FIVE
    int SIX -> SIX
    int SEVEN -> SEVEN
    int EIGHT -> EIGHT
    int ELEVEN -> ELEVEN
    int TWELVE -> TWELVE
    java.lang.String PLAIN_ASCII -> PLAIN_ASCII
    java.lang.String UNICODE -> UNICODE
    java.lang.String[] DOUBLE_CONSONANT -> DOUBLE_CONSONANT
    java.lang.String cleanName(java.lang.String) -> cleanName
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String getFirst3Last3(java.lang.String) -> getFirst3Last3
    int getMinRating(int) -> getMinRating
    boolean isEncodeEquals(java.lang.String,java.lang.String) -> isEncodeEquals
    boolean isVowel(java.lang.String) -> isVowel
    int leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String) -> leftToRightThenRightToLeftProcessing
    java.lang.String removeAccents(java.lang.String) -> removeAccents
    java.lang.String removeDoubleConsonants(java.lang.String) -> removeDoubleConsonants
    java.lang.String removeVowels(java.lang.String) -> removeVowels
org.apache.commons.codec.language.Metaphone -> org.apache.commons.codec.language.Metaphone:
    java.lang.String VOWELS -> VOWELS
    java.lang.String FRONTV -> FRONTV
    java.lang.String VARSON -> VARSON
    int maxCodeLen -> maxCodeLen
    java.lang.String metaphone(java.lang.String) -> metaphone
    boolean isVowel(java.lang.StringBuilder,int) -> isVowel
    boolean isPreviousChar(java.lang.StringBuilder,int,char) -> isPreviousChar
    boolean isNextChar(java.lang.StringBuilder,int,char) -> isNextChar
    boolean regionMatch(java.lang.StringBuilder,int,java.lang.String) -> regionMatch
    boolean isLastChar(int,int) -> isLastChar
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isMetaphoneEqual(java.lang.String,java.lang.String) -> isMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
org.apache.commons.codec.language.Nysiis -> org.apache.commons.codec.language.Nysiis:
    char[] CHARS_A -> CHARS_A
    char[] CHARS_AF -> CHARS_AF
    char[] CHARS_C -> CHARS_C
    char[] CHARS_FF -> CHARS_FF
    char[] CHARS_G -> CHARS_G
    char[] CHARS_N -> CHARS_N
    char[] CHARS_NN -> CHARS_NN
    char[] CHARS_S -> CHARS_S
    char[] CHARS_SSS -> CHARS_SSS
    java.util.regex.Pattern PAT_MAC -> PAT_MAC
    java.util.regex.Pattern PAT_KN -> PAT_KN
    java.util.regex.Pattern PAT_K -> PAT_K
    java.util.regex.Pattern PAT_PH_PF -> PAT_PH_PF
    java.util.regex.Pattern PAT_SCH -> PAT_SCH
    java.util.regex.Pattern PAT_EE_IE -> PAT_EE_IE
    java.util.regex.Pattern PAT_DT_ETC -> PAT_DT_ETC
    char SPACE -> SPACE
    int TRUE_LENGTH -> TRUE_LENGTH
    boolean strict -> strict
    boolean isVowel(char) -> isVowel
    char[] transcodeRemaining(char,char,char,char) -> transcodeRemaining
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isStrict() -> isStrict
    java.lang.String nysiis(java.lang.String) -> nysiis
org.apache.commons.codec.language.RefinedSoundex -> org.apache.commons.codec.language.RefinedSoundex:
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    char[] soundexMapping -> soundexMapping
    org.apache.commons.codec.language.RefinedSoundex US_ENGLISH -> US_ENGLISH
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    char getMappingCode(char) -> getMappingCode
    java.lang.String soundex(java.lang.String) -> soundex
org.apache.commons.codec.language.Soundex -> org.apache.commons.codec.language.Soundex:
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    org.apache.commons.codec.language.Soundex US_ENGLISH -> US_ENGLISH
    int maxLength -> maxLength
    char[] soundexMapping -> soundexMapping
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    char getMappingCode(java.lang.String,int) -> getMappingCode
    int getMaxLength() -> getMaxLength
    char[] getSoundexMapping() -> getSoundexMapping
    char map(char) -> map
    void setMaxLength(int) -> setMaxLength
    java.lang.String soundex(java.lang.String) -> soundex
org.apache.commons.codec.language.SoundexUtils -> org.apache.commons.codec.language.SoundexUtils:
    java.lang.String clean(java.lang.String) -> clean
    int difference(org.apache.commons.codec.StringEncoder,java.lang.String,java.lang.String) -> difference
    int differenceEncoded(java.lang.String,java.lang.String) -> differenceEncoded
org.apache.commons.codec.language.bm.BeiderMorseEncoder -> org.apache.commons.codec.language.bm.BeiderMorseEncoder:
    org.apache.commons.codec.language.bm.PhoneticEngine engine -> engine
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    org.apache.commons.codec.language.bm.NameType getNameType() -> getNameType
    org.apache.commons.codec.language.bm.RuleType getRuleType() -> getRuleType
    boolean isConcat() -> isConcat
    void setConcat(boolean) -> setConcat
    void setNameType(org.apache.commons.codec.language.bm.NameType) -> setNameType
    void setRuleType(org.apache.commons.codec.language.bm.RuleType) -> setRuleType
    void setMaxPhonemes(int) -> setMaxPhonemes
org.apache.commons.codec.language.bm.Lang -> org.apache.commons.codec.language.bm.Lang:
    java.util.Map Langs -> Langs
    java.lang.String LANGUAGE_RULES_RN -> LANGUAGE_RULES_RN
    org.apache.commons.codec.language.bm.Languages languages -> languages
    java.util.List rules -> rules
    org.apache.commons.codec.language.bm.Lang instance(org.apache.commons.codec.language.bm.NameType) -> instance
    org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages) -> loadFromResource
    java.lang.String guessLanguage(java.lang.String) -> guessLanguage
    org.apache.commons.codec.language.bm.Languages$LanguageSet guessLanguages(java.lang.String) -> guessLanguages
org.apache.commons.codec.language.bm.Lang$1 -> org.apache.commons.codec.language.bm.Lang$1:
org.apache.commons.codec.language.bm.Lang$LangRule -> org.apache.commons.codec.language.bm.Lang$LangRule:
    boolean acceptOnMatch -> acceptOnMatch
    java.util.Set languages -> languages
    java.util.regex.Pattern pattern -> pattern
    boolean matches(java.lang.String) -> matches
    boolean access$100(org.apache.commons.codec.language.bm.Lang$LangRule) -> access$100
    java.util.Set access$200(org.apache.commons.codec.language.bm.Lang$LangRule) -> access$200
org.apache.commons.codec.language.bm.Languages -> org.apache.commons.codec.language.bm.Languages:
    java.lang.String ANY -> ANY
    java.util.Map LANGUAGES -> LANGUAGES
    java.util.Set languages -> languages
    org.apache.commons.codec.language.bm.Languages$LanguageSet NO_LANGUAGES -> NO_LANGUAGES
    org.apache.commons.codec.language.bm.Languages$LanguageSet ANY_LANGUAGE -> ANY_LANGUAGE
    org.apache.commons.codec.language.bm.Languages getInstance(org.apache.commons.codec.language.bm.NameType) -> getInstance
    org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String) -> getInstance
    java.lang.String langResourceName(org.apache.commons.codec.language.bm.NameType) -> langResourceName
    java.util.Set getLanguages() -> getLanguages
org.apache.commons.codec.language.bm.Languages$1 -> org.apache.commons.codec.language.bm.Languages$1:
    boolean contains(java.lang.String) -> contains
    java.lang.String getAny() -> getAny
    boolean isEmpty() -> isEmpty
    boolean isSingleton() -> isSingleton
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> restrictTo
    java.lang.String toString() -> toString
org.apache.commons.codec.language.bm.Languages$2 -> org.apache.commons.codec.language.bm.Languages$2:
    boolean contains(java.lang.String) -> contains
    java.lang.String getAny() -> getAny
    boolean isEmpty() -> isEmpty
    boolean isSingleton() -> isSingleton
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> restrictTo
    java.lang.String toString() -> toString
org.apache.commons.codec.language.bm.Languages$LanguageSet -> org.apache.commons.codec.language.bm.Languages$LanguageSet:
    org.apache.commons.codec.language.bm.Languages$LanguageSet from(java.util.Set) -> from
    boolean contains(java.lang.String) -> contains
    java.lang.String getAny() -> getAny
    boolean isEmpty() -> isEmpty
    boolean isSingleton() -> isSingleton
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> restrictTo
org.apache.commons.codec.language.bm.Languages$SomeLanguages -> org.apache.commons.codec.language.bm.Languages$SomeLanguages:
    java.util.Set languages -> languages
    boolean contains(java.lang.String) -> contains
    java.lang.String getAny() -> getAny
    java.util.Set getLanguages() -> getLanguages
    boolean isEmpty() -> isEmpty
    boolean isSingleton() -> isSingleton
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> restrictTo
    java.lang.String toString() -> toString
org.apache.commons.codec.language.bm.NameType -> org.apache.commons.codec.language.bm.NameType:
    org.apache.commons.codec.language.bm.NameType ASHKENAZI -> ASHKENAZI
    org.apache.commons.codec.language.bm.NameType GENERIC -> GENERIC
    org.apache.commons.codec.language.bm.NameType SEPHARDIC -> SEPHARDIC
    java.lang.String name -> name
    org.apache.commons.codec.language.bm.NameType[] $VALUES -> $VALUES
    org.apache.commons.codec.language.bm.NameType[] values() -> values
    org.apache.commons.codec.language.bm.NameType valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> getName
org.apache.commons.codec.language.bm.PhoneticEngine -> org.apache.commons.codec.language.bm.PhoneticEngine:
    java.util.Map NAME_PREFIXES -> NAME_PREFIXES
    int DEFAULT_MAX_PHONEMES -> DEFAULT_MAX_PHONEMES
    org.apache.commons.codec.language.bm.Lang lang -> lang
    org.apache.commons.codec.language.bm.NameType nameType -> nameType
    org.apache.commons.codec.language.bm.RuleType ruleType -> ruleType
    boolean concat -> concat
    int maxPhonemes -> maxPhonemes
    java.lang.CharSequence cacheSubSequence(java.lang.CharSequence) -> cacheSubSequence
    java.lang.String join(java.lang.Iterable,java.lang.String) -> join
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.List) -> applyFinalRules
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet) -> encode
    org.apache.commons.codec.language.bm.Lang getLang() -> getLang
    org.apache.commons.codec.language.bm.NameType getNameType() -> getNameType
    org.apache.commons.codec.language.bm.RuleType getRuleType() -> getRuleType
    boolean isConcat() -> isConcat
    int getMaxPhonemes() -> getMaxPhonemes
org.apache.commons.codec.language.bm.PhoneticEngine$1 -> org.apache.commons.codec.language.bm.PhoneticEngine$1:
    java.lang.CharSequence val$cached -> val$cached
    java.lang.CharSequence[][] val$cache -> val$cache
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
org.apache.commons.codec.language.bm.PhoneticEngine$2 -> org.apache.commons.codec.language.bm.PhoneticEngine$2:
    int[] $SwitchMap$org$apache$commons$codec$language$bm$NameType -> $SwitchMap$org$apache$commons$codec$language$bm$NameType
org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder -> org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder:
    java.util.Set phonemes -> phonemes
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder empty(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> empty
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder append(java.lang.CharSequence) -> append
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int) -> apply
    java.util.Set getPhonemes() -> getPhonemes
    java.lang.String makeString() -> makeString
org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication -> org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication:
    java.util.List finalRules -> finalRules
    java.lang.CharSequence input -> input
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder phonemeBuilder -> phonemeBuilder
    int i -> i
    int maxPhonemes -> maxPhonemes
    boolean found -> found
    int getI() -> getI
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder getPhonemeBuilder() -> getPhonemeBuilder
    org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication invoke() -> invoke
    boolean isFound() -> isFound
org.apache.commons.codec.language.bm.ResourceConstants -> org.apache.commons.codec.language.bm.ResourceConstants:
    java.lang.String CMT -> CMT
    java.lang.String ENCODING -> ENCODING
    java.lang.String EXT_CMT_END -> EXT_CMT_END
    java.lang.String EXT_CMT_START -> EXT_CMT_START
org.apache.commons.codec.language.bm.Rule -> org.apache.commons.codec.language.bm.Rule:
    org.apache.commons.codec.language.bm.Rule$RPattern ALL_STRINGS_RMATCHER -> ALL_STRINGS_RMATCHER
    java.lang.String ALL -> ALL
    java.lang.String DOUBLE_QUOTE -> DOUBLE_QUOTE
    java.lang.String HASH_INCLUDE -> HASH_INCLUDE
    java.util.Map RULES -> RULES
    org.apache.commons.codec.language.bm.Rule$RPattern lContext -> lContext
    java.lang.String pattern -> pattern
    org.apache.commons.codec.language.bm.Rule$PhonemeExpr phoneme -> phoneme
    org.apache.commons.codec.language.bm.Rule$RPattern rContext -> rContext
    boolean contains(java.lang.CharSequence,char) -> contains
    java.lang.String createResourceName(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String) -> createResourceName
    java.util.Scanner createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String) -> createScanner
    java.util.Scanner createScanner(java.lang.String) -> createScanner
    boolean endsWith(java.lang.CharSequence,java.lang.CharSequence) -> endsWith
    java.util.List getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages$LanguageSet) -> getInstance
    java.util.List getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String) -> getInstance
    org.apache.commons.codec.language.bm.Rule$Phoneme parsePhoneme(java.lang.String) -> parsePhoneme
    org.apache.commons.codec.language.bm.Rule$PhonemeExpr parsePhonemeExpr(java.lang.String) -> parsePhonemeExpr
    java.util.List parseRules(java.util.Scanner,java.lang.String) -> parseRules
    org.apache.commons.codec.language.bm.Rule$RPattern pattern(java.lang.String) -> pattern
    boolean startsWith(java.lang.CharSequence,java.lang.CharSequence) -> startsWith
    java.lang.String stripQuotes(java.lang.String) -> stripQuotes
    org.apache.commons.codec.language.bm.Rule$RPattern getLContext() -> getLContext
    java.lang.String getPattern() -> getPattern
    org.apache.commons.codec.language.bm.Rule$PhonemeExpr getPhoneme() -> getPhoneme
    org.apache.commons.codec.language.bm.Rule$RPattern getRContext() -> getRContext
    boolean patternAndContextMatches(java.lang.CharSequence,int) -> patternAndContextMatches
    boolean access$100(java.lang.CharSequence,java.lang.CharSequence) -> access$100
    boolean access$200(java.lang.CharSequence,java.lang.CharSequence) -> access$200
    boolean access$300(java.lang.CharSequence,char) -> access$300
org.apache.commons.codec.language.bm.Rule$1 -> org.apache.commons.codec.language.bm.Rule$1:
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$10 -> org.apache.commons.codec.language.bm.Rule$10:
    java.util.regex.Pattern pattern -> pattern
    java.lang.String val$regex -> val$regex
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$2 -> org.apache.commons.codec.language.bm.Rule$2:
    int myLine -> myLine
    java.lang.String loc -> loc
    int val$cLine -> val$cLine
    java.lang.String val$location -> val$location
    java.lang.String toString() -> toString
org.apache.commons.codec.language.bm.Rule$3 -> org.apache.commons.codec.language.bm.Rule$3:
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$4 -> org.apache.commons.codec.language.bm.Rule$4:
    java.lang.String val$content -> val$content
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$5 -> org.apache.commons.codec.language.bm.Rule$5:
    java.lang.String val$content -> val$content
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$6 -> org.apache.commons.codec.language.bm.Rule$6:
    java.lang.String val$content -> val$content
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$7 -> org.apache.commons.codec.language.bm.Rule$7:
    java.lang.String val$bContent -> val$bContent
    boolean val$shouldMatch -> val$shouldMatch
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$8 -> org.apache.commons.codec.language.bm.Rule$8:
    java.lang.String val$bContent -> val$bContent
    boolean val$shouldMatch -> val$shouldMatch
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$9 -> org.apache.commons.codec.language.bm.Rule$9:
    java.lang.String val$bContent -> val$bContent
    boolean val$shouldMatch -> val$shouldMatch
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$Phoneme -> org.apache.commons.codec.language.bm.Rule$Phoneme:
    java.util.Comparator COMPARATOR -> COMPARATOR
    java.lang.CharSequence phonemeText -> phonemeText
    org.apache.commons.codec.language.bm.Languages$LanguageSet languages -> languages
    org.apache.commons.codec.language.bm.Rule$Phoneme append(java.lang.CharSequence) -> append
    org.apache.commons.codec.language.bm.Languages$LanguageSet getLanguages() -> getLanguages
    java.lang.Iterable getPhonemes() -> getPhonemes
    java.lang.CharSequence getPhonemeText() -> getPhonemeText
    org.apache.commons.codec.language.bm.Rule$Phoneme join(org.apache.commons.codec.language.bm.Rule$Phoneme) -> join
    java.lang.CharSequence access$000(org.apache.commons.codec.language.bm.Rule$Phoneme) -> access$000
org.apache.commons.codec.language.bm.Rule$Phoneme$1 -> org.apache.commons.codec.language.bm.Rule$Phoneme$1:
    int compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.codec.language.bm.Rule$PhonemeExpr -> org.apache.commons.codec.language.bm.Rule$PhonemeExpr:
    java.lang.Iterable getPhonemes() -> getPhonemes
org.apache.commons.codec.language.bm.Rule$PhonemeList -> org.apache.commons.codec.language.bm.Rule$PhonemeList:
    java.util.List phonemes -> phonemes
    java.util.List getPhonemes() -> getPhonemes
    java.lang.Iterable getPhonemes() -> getPhonemes
org.apache.commons.codec.language.bm.Rule$RPattern -> org.apache.commons.codec.language.bm.Rule$RPattern:
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.RuleType -> org.apache.commons.codec.language.bm.RuleType:
    org.apache.commons.codec.language.bm.RuleType APPROX -> APPROX
    org.apache.commons.codec.language.bm.RuleType EXACT -> EXACT
    org.apache.commons.codec.language.bm.RuleType RULES -> RULES
    java.lang.String name -> name
    org.apache.commons.codec.language.bm.RuleType[] $VALUES -> $VALUES
    org.apache.commons.codec.language.bm.RuleType[] values() -> values
    org.apache.commons.codec.language.bm.RuleType valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> getName
org.apache.commons.codec.net.BCodec -> org.apache.commons.codec.net.BCodec:
    java.nio.charset.Charset charset -> charset
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.nio.charset.Charset) -> encode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getDefaultCharset() -> getDefaultCharset
org.apache.commons.codec.net.QCodec -> org.apache.commons.codec.net.QCodec:
    java.nio.charset.Charset charset -> charset
    java.util.BitSet PRINTABLE_CHARS -> PRINTABLE_CHARS
    byte BLANK -> BLANK
    byte UNDERSCORE -> UNDERSCORE
    boolean encodeBlanks -> encodeBlanks
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.nio.charset.Charset) -> encode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getDefaultCharset() -> getDefaultCharset
    boolean isEncodeBlanks() -> isEncodeBlanks
    void setEncodeBlanks(boolean) -> setEncodeBlanks
org.apache.commons.codec.net.QuotedPrintableCodec -> org.apache.commons.codec.net.QuotedPrintableCodec:
    java.nio.charset.Charset charset -> charset
    java.util.BitSet PRINTABLE_CHARS -> PRINTABLE_CHARS
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    byte TAB -> TAB
    byte SPACE -> SPACE
    void encodeQuotedPrintable(int,java.io.ByteArrayOutputStream) -> encodeQuotedPrintable
    byte[] encodeQuotedPrintable(java.util.BitSet,byte[]) -> encodeQuotedPrintable
    byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.nio.charset.Charset) -> decode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String encode(java.lang.String,java.nio.charset.Charset) -> encode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
org.apache.commons.codec.net.RFC1522Codec -> org.apache.commons.codec.net.RFC1522Codec:
    char SEP -> SEP
    java.lang.String POSTFIX -> POSTFIX
    java.lang.String PREFIX -> PREFIX
    java.lang.String encodeText(java.lang.String,java.nio.charset.Charset) -> encodeText
    java.lang.String encodeText(java.lang.String,java.lang.String) -> encodeText
    java.lang.String decodeText(java.lang.String) -> decodeText
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
org.apache.commons.codec.net.URLCodec -> org.apache.commons.codec.net.URLCodec:
    int RADIX -> RADIX
    java.lang.String charset -> charset
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    java.util.BitSet WWW_FORM_URL -> WWW_FORM_URL
    byte[] encodeUrl(java.util.BitSet,byte[]) -> encodeUrl
    byte[] decodeUrl(byte[]) -> decodeUrl
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String getEncoding() -> getEncoding
org.apache.commons.codec.net.Utils -> org.apache.commons.codec.net.Utils:
    int digit16(byte) -> digit16
org.apache.commons.lang.ArrayUtils -> org.apache.commons.lang.ArrayUtils:
    java.lang.Object[] EMPTY_OBJECT_ARRAY -> EMPTY_OBJECT_ARRAY
    java.lang.Class[] EMPTY_CLASS_ARRAY -> EMPTY_CLASS_ARRAY
    java.lang.String[] EMPTY_STRING_ARRAY -> EMPTY_STRING_ARRAY
    long[] EMPTY_LONG_ARRAY -> EMPTY_LONG_ARRAY
    java.lang.Long[] EMPTY_LONG_OBJECT_ARRAY -> EMPTY_LONG_OBJECT_ARRAY
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    java.lang.Integer[] EMPTY_INTEGER_OBJECT_ARRAY -> EMPTY_INTEGER_OBJECT_ARRAY
    short[] EMPTY_SHORT_ARRAY -> EMPTY_SHORT_ARRAY
    java.lang.Short[] EMPTY_SHORT_OBJECT_ARRAY -> EMPTY_SHORT_OBJECT_ARRAY
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    java.lang.Byte[] EMPTY_BYTE_OBJECT_ARRAY -> EMPTY_BYTE_OBJECT_ARRAY
    double[] EMPTY_DOUBLE_ARRAY -> EMPTY_DOUBLE_ARRAY
    java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY -> EMPTY_DOUBLE_OBJECT_ARRAY
    float[] EMPTY_FLOAT_ARRAY -> EMPTY_FLOAT_ARRAY
    java.lang.Float[] EMPTY_FLOAT_OBJECT_ARRAY -> EMPTY_FLOAT_OBJECT_ARRAY
    boolean[] EMPTY_BOOLEAN_ARRAY -> EMPTY_BOOLEAN_ARRAY
    java.lang.Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY -> EMPTY_BOOLEAN_OBJECT_ARRAY
    char[] EMPTY_CHAR_ARRAY -> EMPTY_CHAR_ARRAY
    java.lang.Character[] EMPTY_CHARACTER_OBJECT_ARRAY -> EMPTY_CHARACTER_OBJECT_ARRAY
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    java.lang.Class class$java$lang$Object -> class$java$lang$Object
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    int hashCode(java.lang.Object) -> hashCode
    boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
    java.util.Map toMap(java.lang.Object[]) -> toMap
    java.lang.Object[] clone(java.lang.Object[]) -> clone
    long[] clone(long[]) -> clone
    int[] clone(int[]) -> clone
    short[] clone(short[]) -> clone
    char[] clone(char[]) -> clone
    byte[] clone(byte[]) -> clone
    double[] clone(double[]) -> clone
    float[] clone(float[]) -> clone
    boolean[] clone(boolean[]) -> clone
    java.lang.Object[] subarray(java.lang.Object[],int,int) -> subarray
    long[] subarray(long[],int,int) -> subarray
    int[] subarray(int[],int,int) -> subarray
    short[] subarray(short[],int,int) -> subarray
    char[] subarray(char[],int,int) -> subarray
    byte[] subarray(byte[],int,int) -> subarray
    double[] subarray(double[],int,int) -> subarray
    float[] subarray(float[],int,int) -> subarray
    boolean[] subarray(boolean[],int,int) -> subarray
    boolean isSameLength(java.lang.Object[],java.lang.Object[]) -> isSameLength
    boolean isSameLength(long[],long[]) -> isSameLength
    boolean isSameLength(int[],int[]) -> isSameLength
    boolean isSameLength(short[],short[]) -> isSameLength
    boolean isSameLength(char[],char[]) -> isSameLength
    boolean isSameLength(byte[],byte[]) -> isSameLength
    boolean isSameLength(double[],double[]) -> isSameLength
    boolean isSameLength(float[],float[]) -> isSameLength
    boolean isSameLength(boolean[],boolean[]) -> isSameLength
    int getLength(java.lang.Object) -> getLength
    boolean isSameType(java.lang.Object,java.lang.Object) -> isSameType
    void reverse(java.lang.Object[]) -> reverse
    void reverse(long[]) -> reverse
    void reverse(int[]) -> reverse
    void reverse(short[]) -> reverse
    void reverse(char[]) -> reverse
    void reverse(byte[]) -> reverse
    void reverse(double[]) -> reverse
    void reverse(float[]) -> reverse
    void reverse(boolean[]) -> reverse
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    int indexOf(java.lang.Object[],java.lang.Object,int) -> indexOf
    int lastIndexOf(java.lang.Object[],java.lang.Object) -> lastIndexOf
    int lastIndexOf(java.lang.Object[],java.lang.Object,int) -> lastIndexOf
    boolean contains(java.lang.Object[],java.lang.Object) -> contains
    int indexOf(long[],long) -> indexOf
    int indexOf(long[],long,int) -> indexOf
    int lastIndexOf(long[],long) -> lastIndexOf
    int lastIndexOf(long[],long,int) -> lastIndexOf
    boolean contains(long[],long) -> contains
    int indexOf(int[],int) -> indexOf
    int indexOf(int[],int,int) -> indexOf
    int lastIndexOf(int[],int) -> lastIndexOf
    int lastIndexOf(int[],int,int) -> lastIndexOf
    boolean contains(int[],int) -> contains
    int indexOf(short[],short) -> indexOf
    int indexOf(short[],short,int) -> indexOf
    int lastIndexOf(short[],short) -> lastIndexOf
    int lastIndexOf(short[],short,int) -> lastIndexOf
    boolean contains(short[],short) -> contains
    int indexOf(char[],char) -> indexOf
    int indexOf(char[],char,int) -> indexOf
    int lastIndexOf(char[],char) -> lastIndexOf
    int lastIndexOf(char[],char,int) -> lastIndexOf
    boolean contains(char[],char) -> contains
    int indexOf(byte[],byte) -> indexOf
    int indexOf(byte[],byte,int) -> indexOf
    int lastIndexOf(byte[],byte) -> lastIndexOf
    int lastIndexOf(byte[],byte,int) -> lastIndexOf
    boolean contains(byte[],byte) -> contains
    int indexOf(double[],double) -> indexOf
    int indexOf(double[],double,double) -> indexOf
    int indexOf(double[],double,int) -> indexOf
    int indexOf(double[],double,int,double) -> indexOf
    int lastIndexOf(double[],double) -> lastIndexOf
    int lastIndexOf(double[],double,double) -> lastIndexOf
    int lastIndexOf(double[],double,int) -> lastIndexOf
    int lastIndexOf(double[],double,int,double) -> lastIndexOf
    boolean contains(double[],double) -> contains
    boolean contains(double[],double,double) -> contains
    int indexOf(float[],float) -> indexOf
    int indexOf(float[],float,int) -> indexOf
    int lastIndexOf(float[],float) -> lastIndexOf
    int lastIndexOf(float[],float,int) -> lastIndexOf
    boolean contains(float[],float) -> contains
    int indexOf(boolean[],boolean) -> indexOf
    int indexOf(boolean[],boolean,int) -> indexOf
    int lastIndexOf(boolean[],boolean) -> lastIndexOf
    int lastIndexOf(boolean[],boolean,int) -> lastIndexOf
    boolean contains(boolean[],boolean) -> contains
    char[] toPrimitive(java.lang.Character[]) -> toPrimitive
    char[] toPrimitive(java.lang.Character[],char) -> toPrimitive
    java.lang.Character[] toObject(char[]) -> toObject
    long[] toPrimitive(java.lang.Long[]) -> toPrimitive
    long[] toPrimitive(java.lang.Long[],long) -> toPrimitive
    java.lang.Long[] toObject(long[]) -> toObject
    int[] toPrimitive(java.lang.Integer[]) -> toPrimitive
    int[] toPrimitive(java.lang.Integer[],int) -> toPrimitive
    java.lang.Integer[] toObject(int[]) -> toObject
    short[] toPrimitive(java.lang.Short[]) -> toPrimitive
    short[] toPrimitive(java.lang.Short[],short) -> toPrimitive
    java.lang.Short[] toObject(short[]) -> toObject
    byte[] toPrimitive(java.lang.Byte[]) -> toPrimitive
    byte[] toPrimitive(java.lang.Byte[],byte) -> toPrimitive
    java.lang.Byte[] toObject(byte[]) -> toObject
    double[] toPrimitive(java.lang.Double[]) -> toPrimitive
    double[] toPrimitive(java.lang.Double[],double) -> toPrimitive
    java.lang.Double[] toObject(double[]) -> toObject
    float[] toPrimitive(java.lang.Float[]) -> toPrimitive
    float[] toPrimitive(java.lang.Float[],float) -> toPrimitive
    java.lang.Float[] toObject(float[]) -> toObject
    boolean[] toPrimitive(java.lang.Boolean[]) -> toPrimitive
    boolean[] toPrimitive(java.lang.Boolean[],boolean) -> toPrimitive
    java.lang.Boolean[] toObject(boolean[]) -> toObject
    boolean isEmpty(java.lang.Object[]) -> isEmpty
    boolean isEmpty(long[]) -> isEmpty
    boolean isEmpty(int[]) -> isEmpty
    boolean isEmpty(short[]) -> isEmpty
    boolean isEmpty(char[]) -> isEmpty
    boolean isEmpty(byte[]) -> isEmpty
    boolean isEmpty(double[]) -> isEmpty
    boolean isEmpty(float[]) -> isEmpty
    boolean isEmpty(boolean[]) -> isEmpty
    java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[]) -> addAll
    boolean[] addAll(boolean[],boolean[]) -> addAll
    char[] addAll(char[],char[]) -> addAll
    byte[] addAll(byte[],byte[]) -> addAll
    short[] addAll(short[],short[]) -> addAll
    int[] addAll(int[],int[]) -> addAll
    long[] addAll(long[],long[]) -> addAll
    float[] addAll(float[],float[]) -> addAll
    double[] addAll(double[],double[]) -> addAll
    java.lang.Object[] add(java.lang.Object[],java.lang.Object) -> add
    boolean[] add(boolean[],boolean) -> add
    byte[] add(byte[],byte) -> add
    char[] add(char[],char) -> add
    double[] add(double[],double) -> add
    float[] add(float[],float) -> add
    int[] add(int[],int) -> add
    long[] add(long[],long) -> add
    short[] add(short[],short) -> add
    java.lang.Object copyArrayGrow1(java.lang.Object,java.lang.Class) -> copyArrayGrow1
    java.lang.Object[] add(java.lang.Object[],int,java.lang.Object) -> add
    boolean[] add(boolean[],int,boolean) -> add
    char[] add(char[],int,char) -> add
    byte[] add(byte[],int,byte) -> add
    short[] add(short[],int,short) -> add
    int[] add(int[],int,int) -> add
    long[] add(long[],int,long) -> add
    float[] add(float[],int,float) -> add
    double[] add(double[],int,double) -> add
    java.lang.Object add(java.lang.Object,int,java.lang.Object,java.lang.Class) -> add
    java.lang.Object[] remove(java.lang.Object[],int) -> remove
    java.lang.Object[] removeElement(java.lang.Object[],java.lang.Object) -> removeElement
    boolean[] remove(boolean[],int) -> remove
    boolean[] removeElement(boolean[],boolean) -> removeElement
    byte[] remove(byte[],int) -> remove
    byte[] removeElement(byte[],byte) -> removeElement
    char[] remove(char[],int) -> remove
    char[] removeElement(char[],char) -> removeElement
    double[] remove(double[],int) -> remove
    double[] removeElement(double[],double) -> removeElement
    float[] remove(float[],int) -> remove
    float[] removeElement(float[],float) -> removeElement
    int[] remove(int[],int) -> remove
    int[] removeElement(int[],int) -> removeElement
    long[] remove(long[],int) -> remove
    long[] removeElement(long[],long) -> removeElement
    short[] remove(short[],int) -> remove
    short[] removeElement(short[],short) -> removeElement
    java.lang.Object remove(java.lang.Object,int) -> remove
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.lang.BitField -> org.apache.commons.lang.BitField:
    int _mask -> _mask
    int _shift_count -> _shift_count
    int getValue(int) -> getValue
    short getShortValue(short) -> getShortValue
    int getRawValue(int) -> getRawValue
    short getShortRawValue(short) -> getShortRawValue
    boolean isSet(int) -> isSet
    boolean isAllSet(int) -> isAllSet
    int setValue(int,int) -> setValue
    short setShortValue(short,short) -> setShortValue
    int clear(int) -> clear
    short clearShort(short) -> clearShort
    byte clearByte(byte) -> clearByte
    int set(int) -> set
    short setShort(short) -> setShort
    byte setByte(byte) -> setByte
    int setBoolean(int,boolean) -> setBoolean
    short setShortBoolean(short,boolean) -> setShortBoolean
    byte setByteBoolean(byte,boolean) -> setByteBoolean
org.apache.commons.lang.BooleanUtils -> org.apache.commons.lang.BooleanUtils:
    java.lang.Boolean negate(java.lang.Boolean) -> negate
    boolean isTrue(java.lang.Boolean) -> isTrue
    boolean isFalse(java.lang.Boolean) -> isFalse
    java.lang.Boolean toBooleanObject(boolean) -> toBooleanObject
    boolean toBoolean(java.lang.Boolean) -> toBoolean
    boolean toBooleanDefaultIfNull(java.lang.Boolean,boolean) -> toBooleanDefaultIfNull
    boolean toBoolean(int) -> toBoolean
    java.lang.Boolean toBooleanObject(int) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.Integer) -> toBooleanObject
    boolean toBoolean(int,int,int) -> toBoolean
    boolean toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toBoolean
    java.lang.Boolean toBooleanObject(int,int,int,int) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toBooleanObject
    int toInteger(boolean) -> toInteger
    java.lang.Integer toIntegerObject(boolean) -> toIntegerObject
    java.lang.Integer toIntegerObject(java.lang.Boolean) -> toIntegerObject
    int toInteger(boolean,int,int) -> toInteger
    int toInteger(java.lang.Boolean,int,int,int) -> toInteger
    java.lang.Integer toIntegerObject(boolean,java.lang.Integer,java.lang.Integer) -> toIntegerObject
    java.lang.Integer toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toIntegerObject
    java.lang.Boolean toBooleanObject(java.lang.String) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> toBooleanObject
    boolean toBoolean(java.lang.String) -> toBoolean
    boolean toBoolean(java.lang.String,java.lang.String,java.lang.String) -> toBoolean
    java.lang.String toStringTrueFalse(java.lang.Boolean) -> toStringTrueFalse
    java.lang.String toStringOnOff(java.lang.Boolean) -> toStringOnOff
    java.lang.String toStringYesNo(java.lang.Boolean) -> toStringYesNo
    java.lang.String toString(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String) -> toString
    java.lang.String toStringTrueFalse(boolean) -> toStringTrueFalse
    java.lang.String toStringOnOff(boolean) -> toStringOnOff
    java.lang.String toStringYesNo(boolean) -> toStringYesNo
    java.lang.String toString(boolean,java.lang.String,java.lang.String) -> toString
    boolean xor(boolean[]) -> xor
    java.lang.Boolean xor(java.lang.Boolean[]) -> xor
org.apache.commons.lang.CharEncoding -> org.apache.commons.lang.CharEncoding:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
    boolean isSupported(java.lang.String) -> isSupported
org.apache.commons.lang.CharRange -> org.apache.commons.lang.CharRange:
    long serialVersionUID -> serialVersionUID
    char start -> start
    char end -> end
    boolean negated -> negated
    java.lang.String iToString -> iToString
    char getStart() -> getStart
    char getEnd() -> getEnd
    boolean isNegated() -> isNegated
    boolean contains(char) -> contains
    boolean contains(org.apache.commons.lang.CharRange) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.CharSet -> org.apache.commons.lang.CharSet:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.CharSet EMPTY -> EMPTY
    org.apache.commons.lang.CharSet ASCII_ALPHA -> ASCII_ALPHA
    org.apache.commons.lang.CharSet ASCII_ALPHA_LOWER -> ASCII_ALPHA_LOWER
    org.apache.commons.lang.CharSet ASCII_ALPHA_UPPER -> ASCII_ALPHA_UPPER
    org.apache.commons.lang.CharSet ASCII_NUMERIC -> ASCII_NUMERIC
    java.util.Map COMMON -> COMMON
    java.util.Set set -> set
    org.apache.commons.lang.CharSet getInstance(java.lang.String) -> getInstance
    void add(java.lang.String) -> add
    org.apache.commons.lang.CharRange[] getCharRanges() -> getCharRanges
    boolean contains(char) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.CharSetUtils -> org.apache.commons.lang.CharSetUtils:
    org.apache.commons.lang.CharSet evaluateSet(java.lang.String[]) -> evaluateSet
    java.lang.String squeeze(java.lang.String,java.lang.String) -> squeeze
    java.lang.String squeeze(java.lang.String,java.lang.String[]) -> squeeze
    int count(java.lang.String,java.lang.String) -> count
    int count(java.lang.String,java.lang.String[]) -> count
    java.lang.String keep(java.lang.String,java.lang.String) -> keep
    java.lang.String keep(java.lang.String,java.lang.String[]) -> keep
    java.lang.String delete(java.lang.String,java.lang.String) -> delete
    java.lang.String delete(java.lang.String,java.lang.String[]) -> delete
    java.lang.String modify(java.lang.String,java.lang.String[],boolean) -> modify
    java.lang.String translate(java.lang.String,java.lang.String,java.lang.String) -> translate
org.apache.commons.lang.CharUtils -> org.apache.commons.lang.CharUtils:
    java.lang.String CHAR_STRING -> CHAR_STRING
    java.lang.String[] CHAR_STRING_ARRAY -> CHAR_STRING_ARRAY
    java.lang.Character[] CHAR_ARRAY -> CHAR_ARRAY
    char LF -> LF
    char CR -> CR
    java.lang.Character toCharacterObject(char) -> toCharacterObject
    java.lang.Character toCharacterObject(java.lang.String) -> toCharacterObject
    char toChar(java.lang.Character) -> toChar
    char toChar(java.lang.Character,char) -> toChar
    char toChar(java.lang.String) -> toChar
    char toChar(java.lang.String,char) -> toChar
    int toIntValue(char) -> toIntValue
    int toIntValue(char,int) -> toIntValue
    int toIntValue(java.lang.Character) -> toIntValue
    int toIntValue(java.lang.Character,int) -> toIntValue
    java.lang.String toString(char) -> toString
    java.lang.String toString(java.lang.Character) -> toString
    java.lang.String unicodeEscaped(char) -> unicodeEscaped
    java.lang.String unicodeEscaped(java.lang.Character) -> unicodeEscaped
    boolean isAscii(char) -> isAscii
    boolean isAsciiPrintable(char) -> isAsciiPrintable
    boolean isAsciiControl(char) -> isAsciiControl
    boolean isAsciiAlpha(char) -> isAsciiAlpha
    boolean isAsciiAlphaUpper(char) -> isAsciiAlphaUpper
    boolean isAsciiAlphaLower(char) -> isAsciiAlphaLower
    boolean isAsciiNumeric(char) -> isAsciiNumeric
    boolean isAsciiAlphanumeric(char) -> isAsciiAlphanumeric
org.apache.commons.lang.ClassUtils -> org.apache.commons.lang.ClassUtils:
    char PACKAGE_SEPARATOR_CHAR -> PACKAGE_SEPARATOR_CHAR
    java.lang.String PACKAGE_SEPARATOR -> PACKAGE_SEPARATOR
    char INNER_CLASS_SEPARATOR_CHAR -> INNER_CLASS_SEPARATOR_CHAR
    java.lang.String INNER_CLASS_SEPARATOR -> INNER_CLASS_SEPARATOR
    java.util.Map primitiveWrapperMap -> primitiveWrapperMap
    java.util.Map abbreviationMap -> abbreviationMap
    java.lang.Class class$java$lang$Boolean -> class$java$lang$Boolean
    java.lang.Class class$java$lang$Byte -> class$java$lang$Byte
    java.lang.Class class$java$lang$Character -> class$java$lang$Character
    java.lang.Class class$java$lang$Short -> class$java$lang$Short
    java.lang.Class class$java$lang$Integer -> class$java$lang$Integer
    java.lang.Class class$java$lang$Long -> class$java$lang$Long
    java.lang.Class class$java$lang$Double -> class$java$lang$Double
    java.lang.Class class$java$lang$Float -> class$java$lang$Float
    java.lang.Class class$org$apache$commons$lang$ClassUtils -> class$org$apache$commons$lang$ClassUtils
    java.lang.String getShortClassName(java.lang.Object,java.lang.String) -> getShortClassName
    java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    java.lang.String getShortClassName(java.lang.String) -> getShortClassName
    java.lang.String getPackageName(java.lang.Object,java.lang.String) -> getPackageName
    java.lang.String getPackageName(java.lang.Class) -> getPackageName
    java.lang.String getPackageName(java.lang.String) -> getPackageName
    java.util.List getAllSuperclasses(java.lang.Class) -> getAllSuperclasses
    java.util.List getAllInterfaces(java.lang.Class) -> getAllInterfaces
    java.util.List convertClassNamesToClasses(java.util.List) -> convertClassNamesToClasses
    java.util.List convertClassesToClassNames(java.util.List) -> convertClassesToClassNames
    boolean isAssignable(java.lang.Class[],java.lang.Class[]) -> isAssignable
    boolean isAssignable(java.lang.Class,java.lang.Class) -> isAssignable
    java.lang.Class primitiveToWrapper(java.lang.Class) -> primitiveToWrapper
    java.lang.Class[] primitivesToWrappers(java.lang.Class[]) -> primitivesToWrappers
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean) -> getClass
    java.lang.Class getClass(java.lang.ClassLoader,java.lang.String) -> getClass
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.Class getClass(java.lang.String,boolean) -> getClass
    java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getPublicMethod
    java.lang.String toProperClassName(java.lang.String) -> toProperClassName
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.lang.Entities -> org.apache.commons.lang.Entities:
    java.lang.String[][] BASIC_ARRAY -> BASIC_ARRAY
    java.lang.String[][] APOS_ARRAY -> APOS_ARRAY
    java.lang.String[][] ISO8859_1_ARRAY -> ISO8859_1_ARRAY
    java.lang.String[][] HTML40_ARRAY -> HTML40_ARRAY
    org.apache.commons.lang.Entities XML -> XML
    org.apache.commons.lang.Entities HTML32 -> HTML32
    org.apache.commons.lang.Entities HTML40 -> HTML40
    org.apache.commons.lang.Entities$EntityMap map -> map
    void fillWithHtml40Entities(org.apache.commons.lang.Entities) -> fillWithHtml40Entities
    void addEntities(java.lang.String[][]) -> addEntities
    void addEntity(java.lang.String,int) -> addEntity
    java.lang.String entityName(int) -> entityName
    int entityValue(java.lang.String) -> entityValue
    java.lang.String escape(java.lang.String) -> escape
    void escape(java.io.Writer,java.lang.String) -> escape
    java.lang.String unescape(java.lang.String) -> unescape
    void unescape(java.io.Writer,java.lang.String) -> unescape
org.apache.commons.lang.Entities$ArrayEntityMap -> org.apache.commons.lang.Entities$ArrayEntityMap:
    int growBy -> growBy
    int size -> size
    java.lang.String[] names -> names
    int[] values -> values
    void add(java.lang.String,int) -> add
    void ensureCapacity(int) -> ensureCapacity
    java.lang.String name(int) -> name
    int value(java.lang.String) -> value
org.apache.commons.lang.Entities$BinaryEntityMap -> org.apache.commons.lang.Entities$BinaryEntityMap:
    int binarySearch(int) -> binarySearch
    void add(java.lang.String,int) -> add
    java.lang.String name(int) -> name
org.apache.commons.lang.Entities$EntityMap -> org.apache.commons.lang.Entities$EntityMap:
    void add(java.lang.String,int) -> add
    java.lang.String name(int) -> name
    int value(java.lang.String) -> value
org.apache.commons.lang.Entities$HashEntityMap -> org.apache.commons.lang.Entities$HashEntityMap:
org.apache.commons.lang.Entities$LookupEntityMap -> org.apache.commons.lang.Entities$LookupEntityMap:
    java.lang.String[] lookupTable -> lookupTable
    int LOOKUP_TABLE_SIZE -> LOOKUP_TABLE_SIZE
    java.lang.String name(int) -> name
    java.lang.String[] lookupTable() -> lookupTable
    void createLookupTable() -> createLookupTable
org.apache.commons.lang.Entities$MapIntMap -> org.apache.commons.lang.Entities$MapIntMap:
    java.util.Map mapNameToValue -> mapNameToValue
    java.util.Map mapValueToName -> mapValueToName
    void add(java.lang.String,int) -> add
    java.lang.String name(int) -> name
    int value(java.lang.String) -> value
org.apache.commons.lang.Entities$PrimitiveEntityMap -> org.apache.commons.lang.Entities$PrimitiveEntityMap:
    java.util.Map mapNameToValue -> mapNameToValue
    org.apache.commons.lang.IntHashMap mapValueToName -> mapValueToName
    void add(java.lang.String,int) -> add
    java.lang.String name(int) -> name
    int value(java.lang.String) -> value
org.apache.commons.lang.Entities$TreeEntityMap -> org.apache.commons.lang.Entities$TreeEntityMap:
org.apache.commons.lang.IllegalClassException -> org.apache.commons.lang.IllegalClassException:
    long serialVersionUID -> serialVersionUID
    java.lang.String safeGetClassName(java.lang.Class) -> safeGetClassName
org.apache.commons.lang.IncompleteArgumentException -> org.apache.commons.lang.IncompleteArgumentException:
    long serialVersionUID -> serialVersionUID
    java.lang.String safeArrayToString(java.lang.Object[]) -> safeArrayToString
org.apache.commons.lang.IntHashMap -> org.apache.commons.lang.IntHashMap:
    org.apache.commons.lang.IntHashMap$Entry[] table -> table
    int count -> count
    int threshold -> threshold
    float loadFactor -> loadFactor
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsKey(int) -> containsKey
    java.lang.Object get(int) -> get
    void rehash() -> rehash
    java.lang.Object put(int,java.lang.Object) -> put
    java.lang.Object remove(int) -> remove
    void clear() -> clear
org.apache.commons.lang.IntHashMap$Entry -> org.apache.commons.lang.IntHashMap$Entry:
    int hash -> hash
    int key -> key
    java.lang.Object value -> value
    org.apache.commons.lang.IntHashMap$Entry next -> next
org.apache.commons.lang.LocaleUtils -> org.apache.commons.lang.LocaleUtils:
    java.util.List cAvailableLocaleList -> cAvailableLocaleList
    java.util.Set cAvailableLocaleSet -> cAvailableLocaleSet
    java.util.Map cLanguagesByCountry -> cLanguagesByCountry
    java.util.Map cCountriesByLanguage -> cCountriesByLanguage
    java.util.Locale toLocale(java.lang.String) -> toLocale
    java.util.List localeLookupList(java.util.Locale) -> localeLookupList
    java.util.List localeLookupList(java.util.Locale,java.util.Locale) -> localeLookupList
    java.util.List availableLocaleList() -> availableLocaleList
    java.util.Set availableLocaleSet() -> availableLocaleSet
    boolean isAvailableLocale(java.util.Locale) -> isAvailableLocale
    java.util.List languagesByCountry(java.lang.String) -> languagesByCountry
    java.util.List countriesByLanguage(java.lang.String) -> countriesByLanguage
org.apache.commons.lang.NotImplementedException -> org.apache.commons.lang.NotImplementedException:
    java.lang.String DEFAULT_MESSAGE -> DEFAULT_MESSAGE
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.exception.NestableDelegate delegate -> delegate
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
org.apache.commons.lang.NullArgumentException -> org.apache.commons.lang.NullArgumentException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang.NumberRange -> org.apache.commons.lang.NumberRange:
    java.lang.Number min -> min
    java.lang.Number max -> max
    java.lang.Number getMinimum() -> getMinimum
    java.lang.Number getMaximum() -> getMaximum
    boolean includesNumber(java.lang.Number) -> includesNumber
    boolean includesRange(org.apache.commons.lang.NumberRange) -> includesRange
    boolean overlaps(org.apache.commons.lang.NumberRange) -> overlaps
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.NumberUtils -> org.apache.commons.lang.NumberUtils:
    int stringToInt(java.lang.String) -> stringToInt
    int stringToInt(java.lang.String,int) -> stringToInt
    java.lang.Number createNumber(java.lang.String) -> createNumber
    boolean isAllZeros(java.lang.String) -> isAllZeros
    java.lang.Float createFloat(java.lang.String) -> createFloat
    java.lang.Double createDouble(java.lang.String) -> createDouble
    java.lang.Integer createInteger(java.lang.String) -> createInteger
    java.lang.Long createLong(java.lang.String) -> createLong
    java.math.BigInteger createBigInteger(java.lang.String) -> createBigInteger
    java.math.BigDecimal createBigDecimal(java.lang.String) -> createBigDecimal
    long minimum(long,long,long) -> minimum
    int minimum(int,int,int) -> minimum
    long maximum(long,long,long) -> maximum
    int maximum(int,int,int) -> maximum
    int compare(double,double) -> compare
    int compare(float,float) -> compare
    boolean isDigits(java.lang.String) -> isDigits
    boolean isNumber(java.lang.String) -> isNumber
org.apache.commons.lang.ObjectUtils -> org.apache.commons.lang.ObjectUtils:
    org.apache.commons.lang.ObjectUtils$Null NULL -> NULL
    java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object) -> defaultIfNull
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    int hashCode(java.lang.Object) -> hashCode
    java.lang.String identityToString(java.lang.Object) -> identityToString
    java.lang.StringBuffer appendIdentityToString(java.lang.StringBuffer,java.lang.Object) -> appendIdentityToString
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
org.apache.commons.lang.ObjectUtils$Null -> org.apache.commons.lang.ObjectUtils$Null:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.RandomStringUtils -> org.apache.commons.lang.RandomStringUtils:
    java.util.Random RANDOM -> RANDOM
    java.lang.String random(int) -> random
    java.lang.String randomAscii(int) -> randomAscii
    java.lang.String randomAlphabetic(int) -> randomAlphabetic
    java.lang.String randomAlphanumeric(int) -> randomAlphanumeric
    java.lang.String randomNumeric(int) -> randomNumeric
    java.lang.String random(int,boolean,boolean) -> random
    java.lang.String random(int,int,int,boolean,boolean) -> random
    java.lang.String random(int,int,int,boolean,boolean,char[]) -> random
    java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random) -> random
    java.lang.String random(int,java.lang.String) -> random
    java.lang.String random(int,char[]) -> random
org.apache.commons.lang.SerializationException -> org.apache.commons.lang.SerializationException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang.SerializationUtils -> org.apache.commons.lang.SerializationUtils:
    java.lang.Object clone(java.io.Serializable) -> clone
    void serialize(java.io.Serializable,java.io.OutputStream) -> serialize
    byte[] serialize(java.io.Serializable) -> serialize
    java.lang.Object deserialize(java.io.InputStream) -> deserialize
    java.lang.Object deserialize(byte[]) -> deserialize
org.apache.commons.lang.StringEscapeUtils -> org.apache.commons.lang.StringEscapeUtils:
    java.lang.String escapeJava(java.lang.String) -> escapeJava
    void escapeJava(java.io.Writer,java.lang.String) -> escapeJava
    java.lang.String escapeJavaScript(java.lang.String) -> escapeJavaScript
    void escapeJavaScript(java.io.Writer,java.lang.String) -> escapeJavaScript
    java.lang.String escapeJavaStyleString(java.lang.String,boolean) -> escapeJavaStyleString
    void escapeJavaStyleString(java.io.Writer,java.lang.String,boolean) -> escapeJavaStyleString
    java.lang.String hex(char) -> hex
    java.lang.String unescapeJava(java.lang.String) -> unescapeJava
    void unescapeJava(java.io.Writer,java.lang.String) -> unescapeJava
    java.lang.String unescapeJavaScript(java.lang.String) -> unescapeJavaScript
    void unescapeJavaScript(java.io.Writer,java.lang.String) -> unescapeJavaScript
    java.lang.String escapeHtml(java.lang.String) -> escapeHtml
    void escapeHtml(java.io.Writer,java.lang.String) -> escapeHtml
    java.lang.String unescapeHtml(java.lang.String) -> unescapeHtml
    void unescapeHtml(java.io.Writer,java.lang.String) -> unescapeHtml
    void escapeXml(java.io.Writer,java.lang.String) -> escapeXml
    java.lang.String escapeXml(java.lang.String) -> escapeXml
    void unescapeXml(java.io.Writer,java.lang.String) -> unescapeXml
    java.lang.String unescapeXml(java.lang.String) -> unescapeXml
    java.lang.String escapeSql(java.lang.String) -> escapeSql
org.apache.commons.lang.StringUtils -> org.apache.commons.lang.StringUtils:
    java.lang.String EMPTY -> EMPTY
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    int PAD_LIMIT -> PAD_LIMIT
    boolean isEmpty(java.lang.String) -> isEmpty
    boolean isNotEmpty(java.lang.String) -> isNotEmpty
    boolean isBlank(java.lang.String) -> isBlank
    boolean isNotBlank(java.lang.String) -> isNotBlank
    java.lang.String clean(java.lang.String) -> clean
    java.lang.String trim(java.lang.String) -> trim
    java.lang.String trimToNull(java.lang.String) -> trimToNull
    java.lang.String trimToEmpty(java.lang.String) -> trimToEmpty
    java.lang.String strip(java.lang.String) -> strip
    java.lang.String stripToNull(java.lang.String) -> stripToNull
    java.lang.String stripToEmpty(java.lang.String) -> stripToEmpty
    java.lang.String strip(java.lang.String,java.lang.String) -> strip
    java.lang.String stripStart(java.lang.String,java.lang.String) -> stripStart
    java.lang.String stripEnd(java.lang.String,java.lang.String) -> stripEnd
    java.lang.String[] stripAll(java.lang.String[]) -> stripAll
    java.lang.String[] stripAll(java.lang.String[],java.lang.String) -> stripAll
    boolean equals(java.lang.String,java.lang.String) -> equals
    boolean equalsIgnoreCase(java.lang.String,java.lang.String) -> equalsIgnoreCase
    int indexOf(java.lang.String,char) -> indexOf
    int indexOf(java.lang.String,char,int) -> indexOf
    int indexOf(java.lang.String,java.lang.String) -> indexOf
    int ordinalIndexOf(java.lang.String,java.lang.String,int) -> ordinalIndexOf
    int indexOf(java.lang.String,java.lang.String,int) -> indexOf
    int lastIndexOf(java.lang.String,char) -> lastIndexOf
    int lastIndexOf(java.lang.String,char,int) -> lastIndexOf
    int lastIndexOf(java.lang.String,java.lang.String) -> lastIndexOf
    int lastIndexOf(java.lang.String,java.lang.String,int) -> lastIndexOf
    boolean contains(java.lang.String,char) -> contains
    boolean contains(java.lang.String,java.lang.String) -> contains
    boolean containsIgnoreCase(java.lang.String,java.lang.String) -> containsIgnoreCase
    int indexOfAny(java.lang.String,char[]) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    int indexOfAnyBut(java.lang.String,char[]) -> indexOfAnyBut
    int indexOfAnyBut(java.lang.String,java.lang.String) -> indexOfAnyBut
    boolean containsOnly(java.lang.String,char[]) -> containsOnly
    boolean containsOnly(java.lang.String,java.lang.String) -> containsOnly
    boolean containsNone(java.lang.String,char[]) -> containsNone
    boolean containsNone(java.lang.String,java.lang.String) -> containsNone
    int indexOfAny(java.lang.String,java.lang.String[]) -> indexOfAny
    int lastIndexOfAny(java.lang.String,java.lang.String[]) -> lastIndexOfAny
    java.lang.String substring(java.lang.String,int) -> substring
    java.lang.String substring(java.lang.String,int,int) -> substring
    java.lang.String left(java.lang.String,int) -> left
    java.lang.String right(java.lang.String,int) -> right
    java.lang.String mid(java.lang.String,int,int) -> mid
    java.lang.String substringBefore(java.lang.String,java.lang.String) -> substringBefore
    java.lang.String substringAfter(java.lang.String,java.lang.String) -> substringAfter
    java.lang.String substringBeforeLast(java.lang.String,java.lang.String) -> substringBeforeLast
    java.lang.String substringAfterLast(java.lang.String,java.lang.String) -> substringAfterLast
    java.lang.String substringBetween(java.lang.String,java.lang.String) -> substringBetween
    java.lang.String substringBetween(java.lang.String,java.lang.String,java.lang.String) -> substringBetween
    java.lang.String getNestedString(java.lang.String,java.lang.String) -> getNestedString
    java.lang.String getNestedString(java.lang.String,java.lang.String,java.lang.String) -> getNestedString
    java.lang.String[] split(java.lang.String) -> split
    java.lang.String[] split(java.lang.String,char) -> split
    java.lang.String[] split(java.lang.String,java.lang.String) -> split
    java.lang.String[] split(java.lang.String,java.lang.String,int) -> split
    java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String) -> splitByWholeSeparator
    java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String,int) -> splitByWholeSeparator
    java.lang.String[] splitPreserveAllTokens(java.lang.String) -> splitPreserveAllTokens
    java.lang.String[] splitPreserveAllTokens(java.lang.String,char) -> splitPreserveAllTokens
    java.lang.String[] splitWorker(java.lang.String,char,boolean) -> splitWorker
    java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String) -> splitPreserveAllTokens
    java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String,int) -> splitPreserveAllTokens
    java.lang.String[] splitWorker(java.lang.String,java.lang.String,int,boolean) -> splitWorker
    java.lang.String concatenate(java.lang.Object[]) -> concatenate
    java.lang.String join(java.lang.Object[]) -> join
    java.lang.String join(java.lang.Object[],char) -> join
    java.lang.String join(java.lang.Object[],java.lang.String) -> join
    java.lang.String join(java.util.Iterator,char) -> join
    java.lang.String join(java.util.Iterator,java.lang.String) -> join
    java.lang.String deleteSpaces(java.lang.String) -> deleteSpaces
    java.lang.String deleteWhitespace(java.lang.String) -> deleteWhitespace
    java.lang.String removeStart(java.lang.String,java.lang.String) -> removeStart
    java.lang.String removeEnd(java.lang.String,java.lang.String) -> removeEnd
    java.lang.String remove(java.lang.String,java.lang.String) -> remove
    java.lang.String remove(java.lang.String,char) -> remove
    java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String) -> replaceOnce
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int) -> replace
    java.lang.String replaceChars(java.lang.String,char,char) -> replaceChars
    java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String) -> replaceChars
    java.lang.String overlayString(java.lang.String,java.lang.String,int,int) -> overlayString
    java.lang.String overlay(java.lang.String,java.lang.String,int,int) -> overlay
    java.lang.String chomp(java.lang.String) -> chomp
    java.lang.String chomp(java.lang.String,java.lang.String) -> chomp
    java.lang.String chompLast(java.lang.String) -> chompLast
    java.lang.String chompLast(java.lang.String,java.lang.String) -> chompLast
    java.lang.String getChomp(java.lang.String,java.lang.String) -> getChomp
    java.lang.String prechomp(java.lang.String,java.lang.String) -> prechomp
    java.lang.String getPrechomp(java.lang.String,java.lang.String) -> getPrechomp
    java.lang.String chop(java.lang.String) -> chop
    java.lang.String chopNewline(java.lang.String) -> chopNewline
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String repeat(java.lang.String,int) -> repeat
    java.lang.String padding(int,char) -> padding
    java.lang.String rightPad(java.lang.String,int) -> rightPad
    java.lang.String rightPad(java.lang.String,int,char) -> rightPad
    java.lang.String rightPad(java.lang.String,int,java.lang.String) -> rightPad
    java.lang.String leftPad(java.lang.String,int) -> leftPad
    java.lang.String leftPad(java.lang.String,int,char) -> leftPad
    java.lang.String leftPad(java.lang.String,int,java.lang.String) -> leftPad
    java.lang.String center(java.lang.String,int) -> center
    java.lang.String center(java.lang.String,int,char) -> center
    java.lang.String center(java.lang.String,int,java.lang.String) -> center
    java.lang.String upperCase(java.lang.String) -> upperCase
    java.lang.String lowerCase(java.lang.String) -> lowerCase
    java.lang.String capitalize(java.lang.String) -> capitalize
    java.lang.String capitalise(java.lang.String) -> capitalise
    java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    java.lang.String uncapitalise(java.lang.String) -> uncapitalise
    java.lang.String swapCase(java.lang.String) -> swapCase
    java.lang.String capitaliseAllWords(java.lang.String) -> capitaliseAllWords
    int countMatches(java.lang.String,java.lang.String) -> countMatches
    boolean isAlpha(java.lang.String) -> isAlpha
    boolean isAlphaSpace(java.lang.String) -> isAlphaSpace
    boolean isAlphanumeric(java.lang.String) -> isAlphanumeric
    boolean isAlphanumericSpace(java.lang.String) -> isAlphanumericSpace
    boolean isAsciiPrintable(java.lang.String) -> isAsciiPrintable
    boolean isNumeric(java.lang.String) -> isNumeric
    boolean isNumericSpace(java.lang.String) -> isNumericSpace
    boolean isWhitespace(java.lang.String) -> isWhitespace
    java.lang.String defaultString(java.lang.String) -> defaultString
    java.lang.String defaultString(java.lang.String,java.lang.String) -> defaultString
    java.lang.String defaultIfEmpty(java.lang.String,java.lang.String) -> defaultIfEmpty
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String reverseDelimited(java.lang.String,char) -> reverseDelimited
    java.lang.String reverseDelimitedString(java.lang.String,java.lang.String) -> reverseDelimitedString
    java.lang.String abbreviate(java.lang.String,int) -> abbreviate
    java.lang.String abbreviate(java.lang.String,int,int) -> abbreviate
    java.lang.String difference(java.lang.String,java.lang.String) -> difference
    int indexOfDifference(java.lang.String,java.lang.String) -> indexOfDifference
    int getLevenshteinDistance(java.lang.String,java.lang.String) -> getLevenshteinDistance
org.apache.commons.lang.SystemUtils -> org.apache.commons.lang.SystemUtils:
    java.lang.String OS_NAME_WINDOWS_PREFIX -> OS_NAME_WINDOWS_PREFIX
    java.lang.String USER_HOME_KEY -> USER_HOME_KEY
    java.lang.String USER_DIR_KEY -> USER_DIR_KEY
    java.lang.String JAVA_IO_TMPDIR_KEY -> JAVA_IO_TMPDIR_KEY
    java.lang.String JAVA_HOME_KEY -> JAVA_HOME_KEY
    java.lang.String AWT_TOOLKIT -> AWT_TOOLKIT
    java.lang.String FILE_ENCODING -> FILE_ENCODING
    java.lang.String FILE_SEPARATOR -> FILE_SEPARATOR
    java.lang.String JAVA_AWT_FONTS -> JAVA_AWT_FONTS
    java.lang.String JAVA_AWT_GRAPHICSENV -> JAVA_AWT_GRAPHICSENV
    java.lang.String JAVA_AWT_HEADLESS -> JAVA_AWT_HEADLESS
    java.lang.String JAVA_AWT_PRINTERJOB -> JAVA_AWT_PRINTERJOB
    java.lang.String JAVA_CLASS_PATH -> JAVA_CLASS_PATH
    java.lang.String JAVA_CLASS_VERSION -> JAVA_CLASS_VERSION
    java.lang.String JAVA_COMPILER -> JAVA_COMPILER
    java.lang.String JAVA_ENDORSED_DIRS -> JAVA_ENDORSED_DIRS
    java.lang.String JAVA_EXT_DIRS -> JAVA_EXT_DIRS
    java.lang.String JAVA_HOME -> JAVA_HOME
    java.lang.String JAVA_IO_TMPDIR -> JAVA_IO_TMPDIR
    java.lang.String JAVA_LIBRARY_PATH -> JAVA_LIBRARY_PATH
    java.lang.String JAVA_RUNTIME_NAME -> JAVA_RUNTIME_NAME
    java.lang.String JAVA_RUNTIME_VERSION -> JAVA_RUNTIME_VERSION
    java.lang.String JAVA_SPECIFICATION_NAME -> JAVA_SPECIFICATION_NAME
    java.lang.String JAVA_SPECIFICATION_VENDOR -> JAVA_SPECIFICATION_VENDOR
    java.lang.String JAVA_SPECIFICATION_VERSION -> JAVA_SPECIFICATION_VERSION
    java.lang.String JAVA_UTIL_PREFS_PREFERENCES_FACTORY -> JAVA_UTIL_PREFS_PREFERENCES_FACTORY
    java.lang.String JAVA_VENDOR -> JAVA_VENDOR
    java.lang.String JAVA_VENDOR_URL -> JAVA_VENDOR_URL
    java.lang.String JAVA_VERSION -> JAVA_VERSION
    java.lang.String JAVA_VM_INFO -> JAVA_VM_INFO
    java.lang.String JAVA_VM_NAME -> JAVA_VM_NAME
    java.lang.String JAVA_VM_SPECIFICATION_NAME -> JAVA_VM_SPECIFICATION_NAME
    java.lang.String JAVA_VM_SPECIFICATION_VENDOR -> JAVA_VM_SPECIFICATION_VENDOR
    java.lang.String JAVA_VM_SPECIFICATION_VERSION -> JAVA_VM_SPECIFICATION_VERSION
    java.lang.String JAVA_VM_VENDOR -> JAVA_VM_VENDOR
    java.lang.String JAVA_VM_VERSION -> JAVA_VM_VERSION
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    java.lang.String OS_ARCH -> OS_ARCH
    java.lang.String OS_NAME -> OS_NAME
    java.lang.String OS_VERSION -> OS_VERSION
    java.lang.String PATH_SEPARATOR -> PATH_SEPARATOR
    java.lang.String USER_COUNTRY -> USER_COUNTRY
    java.lang.String USER_DIR -> USER_DIR
    java.lang.String USER_HOME -> USER_HOME
    java.lang.String USER_LANGUAGE -> USER_LANGUAGE
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String USER_TIMEZONE -> USER_TIMEZONE
    java.lang.String JAVA_VERSION_TRIMMED -> JAVA_VERSION_TRIMMED
    float JAVA_VERSION_FLOAT -> JAVA_VERSION_FLOAT
    int JAVA_VERSION_INT -> JAVA_VERSION_INT
    boolean IS_JAVA_1_1 -> IS_JAVA_1_1
    boolean IS_JAVA_1_2 -> IS_JAVA_1_2
    boolean IS_JAVA_1_3 -> IS_JAVA_1_3
    boolean IS_JAVA_1_4 -> IS_JAVA_1_4
    boolean IS_JAVA_1_5 -> IS_JAVA_1_5
    boolean IS_JAVA_1_6 -> IS_JAVA_1_6
    boolean IS_OS_AIX -> IS_OS_AIX
    boolean IS_OS_HP_UX -> IS_OS_HP_UX
    boolean IS_OS_IRIX -> IS_OS_IRIX
    boolean IS_OS_LINUX -> IS_OS_LINUX
    boolean IS_OS_MAC -> IS_OS_MAC
    boolean IS_OS_MAC_OSX -> IS_OS_MAC_OSX
    boolean IS_OS_OS2 -> IS_OS_OS2
    boolean IS_OS_SOLARIS -> IS_OS_SOLARIS
    boolean IS_OS_SUN_OS -> IS_OS_SUN_OS
    boolean IS_OS_UNIX -> IS_OS_UNIX
    boolean IS_OS_WINDOWS -> IS_OS_WINDOWS
    boolean IS_OS_WINDOWS_2000 -> IS_OS_WINDOWS_2000
    boolean IS_OS_WINDOWS_95 -> IS_OS_WINDOWS_95
    boolean IS_OS_WINDOWS_98 -> IS_OS_WINDOWS_98
    boolean IS_OS_WINDOWS_ME -> IS_OS_WINDOWS_ME
    boolean IS_OS_WINDOWS_NT -> IS_OS_WINDOWS_NT
    boolean IS_OS_WINDOWS_XP -> IS_OS_WINDOWS_XP
    float getJavaVersion() -> getJavaVersion
    float getJavaVersionAsFloat() -> getJavaVersionAsFloat
    int getJavaVersionAsInt() -> getJavaVersionAsInt
    java.lang.String getJavaVersionTrimmed() -> getJavaVersionTrimmed
    boolean getJavaVersionMatches(java.lang.String) -> getJavaVersionMatches
    boolean getOSMatches(java.lang.String) -> getOSMatches
    boolean getOSMatches(java.lang.String,java.lang.String) -> getOSMatches
    java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    boolean isJavaVersionAtLeast(float) -> isJavaVersionAtLeast
    boolean isJavaVersionAtLeast(int) -> isJavaVersionAtLeast
    boolean isJavaAwtHeadless() -> isJavaAwtHeadless
    java.io.File getJavaHome() -> getJavaHome
    java.io.File getJavaIoTmpDir() -> getJavaIoTmpDir
    java.io.File getUserDir() -> getUserDir
    java.io.File getUserHome() -> getUserHome
org.apache.commons.lang.UnhandledException -> org.apache.commons.lang.UnhandledException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.lang.Validate -> org.apache.commons.lang.Validate:
    void isTrue(boolean,java.lang.String,java.lang.Object) -> isTrue
    void isTrue(boolean,java.lang.String,long) -> isTrue
    void isTrue(boolean,java.lang.String,double) -> isTrue
    void isTrue(boolean,java.lang.String) -> isTrue
    void isTrue(boolean) -> isTrue
    void notNull(java.lang.Object,java.lang.String) -> notNull
    void notNull(java.lang.Object) -> notNull
    void notEmpty(java.lang.Object[],java.lang.String) -> notEmpty
    void notEmpty(java.lang.Object[]) -> notEmpty
    void notEmpty(java.util.Collection,java.lang.String) -> notEmpty
    void notEmpty(java.util.Collection) -> notEmpty
    void notEmpty(java.util.Map,java.lang.String) -> notEmpty
    void notEmpty(java.util.Map) -> notEmpty
    void notEmpty(java.lang.String,java.lang.String) -> notEmpty
    void notEmpty(java.lang.String) -> notEmpty
    void noNullElements(java.lang.Object[],java.lang.String) -> noNullElements
    void noNullElements(java.lang.Object[]) -> noNullElements
    void noNullElements(java.util.Collection,java.lang.String) -> noNullElements
    void noNullElements(java.util.Collection) -> noNullElements
    void allElementsOfType(java.util.Collection,java.lang.Class,java.lang.String) -> allElementsOfType
    void allElementsOfType(java.util.Collection,java.lang.Class) -> allElementsOfType
org.apache.commons.lang.WordUtils -> org.apache.commons.lang.WordUtils:
    java.lang.String wrap(java.lang.String,int) -> wrap
    java.lang.String wrap(java.lang.String,int,java.lang.String,boolean) -> wrap
    java.lang.String capitalize(java.lang.String) -> capitalize
    java.lang.String capitalize(java.lang.String,char[]) -> capitalize
    java.lang.String capitalizeFully(java.lang.String) -> capitalizeFully
    java.lang.String capitalizeFully(java.lang.String,char[]) -> capitalizeFully
    java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    java.lang.String uncapitalize(java.lang.String,char[]) -> uncapitalize
    java.lang.String swapCase(java.lang.String) -> swapCase
    java.lang.String initials(java.lang.String) -> initials
    java.lang.String initials(java.lang.String,char[]) -> initials
    boolean isDelimiter(char,char[]) -> isDelimiter
org.apache.commons.lang.builder.CompareToBuilder -> org.apache.commons.lang.builder.CompareToBuilder:
    int comparison -> comparison
    int reflectionCompare(java.lang.Object,java.lang.Object) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,boolean) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,java.util.Collection) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,java.lang.String[]) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionCompare
    void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang.builder.CompareToBuilder,boolean,java.lang.String[]) -> reflectionAppend
    org.apache.commons.lang.builder.CompareToBuilder appendSuper(int) -> appendSuper
    org.apache.commons.lang.builder.CompareToBuilder append(java.lang.Object,java.lang.Object) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(java.lang.Object,java.lang.Object,java.util.Comparator) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(long,long) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(int,int) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(short,short) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(char,char) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(byte,byte) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(double,double) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(float,float) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(boolean,boolean) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[],java.util.Comparator) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(long[],long[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(int[],int[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(short[],short[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(char[],char[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(byte[],byte[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(double[],double[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(float[],float[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(boolean[],boolean[]) -> append
    int toComparison() -> toComparison
org.apache.commons.lang.builder.EqualsBuilder -> org.apache.commons.lang.builder.EqualsBuilder:
    boolean isEquals -> isEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,java.util.Collection) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,java.lang.String[]) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionEquals
    void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang.builder.EqualsBuilder,boolean,java.lang.String[]) -> reflectionAppend
    org.apache.commons.lang.builder.EqualsBuilder appendSuper(boolean) -> appendSuper
    org.apache.commons.lang.builder.EqualsBuilder append(java.lang.Object,java.lang.Object) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(long,long) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(int,int) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(short,short) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(char,char) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(byte,byte) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(double,double) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(float,float) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(boolean,boolean) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(long[],long[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(int[],int[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(short[],short[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(char[],char[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(byte[],byte[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(double[],double[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(float[],float[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(boolean[],boolean[]) -> append
    boolean isEquals() -> isEquals
    void setEquals(boolean) -> setEquals
org.apache.commons.lang.builder.HashCodeBuilder -> org.apache.commons.lang.builder.HashCodeBuilder:
    int iConstant -> iConstant
    int iTotal -> iTotal
    int reflectionHashCode(java.lang.Object) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,java.util.Collection) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,java.lang.String[]) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,boolean) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object,boolean) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionHashCode
    void reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang.builder.HashCodeBuilder,boolean,java.lang.String[]) -> reflectionAppend
    org.apache.commons.lang.builder.HashCodeBuilder appendSuper(int) -> appendSuper
    org.apache.commons.lang.builder.HashCodeBuilder append(java.lang.Object) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(long) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(int) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(short) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(char) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(byte) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(double) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(float) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(boolean) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(java.lang.Object[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(long[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(int[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(short[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(char[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(byte[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(double[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(float[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(boolean[]) -> append
    int toHashCode() -> toHashCode
org.apache.commons.lang.builder.ReflectionToStringBuilder -> org.apache.commons.lang.builder.ReflectionToStringBuilder:
    java.lang.ThreadLocal registry -> registry
    boolean appendStatics -> appendStatics
    boolean appendTransients -> appendTransients
    java.lang.String[] excludeFieldNames -> excludeFieldNames
    java.lang.Class upToClass -> upToClass
    java.util.Set getRegistry() -> getRegistry
    boolean isRegistered(java.lang.Object) -> isRegistered
    void register(java.lang.Object) -> register
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean,boolean) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean,boolean,java.lang.Class) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean,java.lang.Class) -> toString
    java.lang.String toStringExclude(java.lang.Object,java.lang.String) -> toStringExclude
    java.lang.String toStringExclude(java.lang.Object,java.util.Collection) -> toStringExclude
    java.lang.String[] toNoNullStringArray(java.util.Collection) -> toNoNullStringArray
    java.lang.String[] toNoNullStringArray(java.lang.Object[]) -> toNoNullStringArray
    java.lang.String toStringExclude(java.lang.Object,java.lang.String[]) -> toStringExclude
    void unregister(java.lang.Object) -> unregister
    boolean accept(java.lang.reflect.Field) -> accept
    void appendFieldsIn(java.lang.Class) -> appendFieldsIn
    java.lang.String[] getExcludeFieldNames() -> getExcludeFieldNames
    java.lang.Class getUpToClass() -> getUpToClass
    java.lang.Object getValue(java.lang.reflect.Field) -> getValue
    boolean isAppendStatics() -> isAppendStatics
    boolean isAppendTransients() -> isAppendTransients
    org.apache.commons.lang.builder.ToStringBuilder reflectionAppendArray(java.lang.Object) -> reflectionAppendArray
    void registerObject() -> registerObject
    void setAppendStatics(boolean) -> setAppendStatics
    void setAppendTransients(boolean) -> setAppendTransients
    org.apache.commons.lang.builder.ReflectionToStringBuilder setExcludeFieldNames(java.lang.String[]) -> setExcludeFieldNames
    void setUpToClass(java.lang.Class) -> setUpToClass
    java.lang.String toString() -> toString
    void unregisterObject() -> unregisterObject
org.apache.commons.lang.builder.ReflectionToStringBuilder$1 -> org.apache.commons.lang.builder.ReflectionToStringBuilder$1:
    java.lang.Object initialValue() -> initialValue
org.apache.commons.lang.builder.StandardToStringStyle -> org.apache.commons.lang.builder.StandardToStringStyle:
    long serialVersionUID -> serialVersionUID
    boolean isUseClassName() -> isUseClassName
    void setUseClassName(boolean) -> setUseClassName
    boolean isUseShortClassName() -> isUseShortClassName
    boolean isShortClassName() -> isShortClassName
    void setUseShortClassName(boolean) -> setUseShortClassName
    void setShortClassName(boolean) -> setShortClassName
    boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    boolean isUseFieldNames() -> isUseFieldNames
    void setUseFieldNames(boolean) -> setUseFieldNames
    boolean isDefaultFullDetail() -> isDefaultFullDetail
    void setDefaultFullDetail(boolean) -> setDefaultFullDetail
    boolean isArrayContentDetail() -> isArrayContentDetail
    void setArrayContentDetail(boolean) -> setArrayContentDetail
    java.lang.String getArrayStart() -> getArrayStart
    void setArrayStart(java.lang.String) -> setArrayStart
    java.lang.String getArrayEnd() -> getArrayEnd
    void setArrayEnd(java.lang.String) -> setArrayEnd
    java.lang.String getArraySeparator() -> getArraySeparator
    void setArraySeparator(java.lang.String) -> setArraySeparator
    java.lang.String getContentStart() -> getContentStart
    void setContentStart(java.lang.String) -> setContentStart
    java.lang.String getContentEnd() -> getContentEnd
    void setContentEnd(java.lang.String) -> setContentEnd
    java.lang.String getFieldNameValueSeparator() -> getFieldNameValueSeparator
    void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    java.lang.String getFieldSeparator() -> getFieldSeparator
    void setFieldSeparator(java.lang.String) -> setFieldSeparator
    boolean isFieldSeparatorAtStart() -> isFieldSeparatorAtStart
    void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    boolean isFieldSeparatorAtEnd() -> isFieldSeparatorAtEnd
    void setFieldSeparatorAtEnd(boolean) -> setFieldSeparatorAtEnd
    java.lang.String getNullText() -> getNullText
    void setNullText(java.lang.String) -> setNullText
    java.lang.String getSizeStartText() -> getSizeStartText
    void setSizeStartText(java.lang.String) -> setSizeStartText
    java.lang.String getSizeEndText() -> getSizeEndText
    void setSizeEndText(java.lang.String) -> setSizeEndText
    java.lang.String getSummaryObjectStartText() -> getSummaryObjectStartText
    void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    java.lang.String getSummaryObjectEndText() -> getSummaryObjectEndText
    void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
org.apache.commons.lang.builder.ToStringBuilder -> org.apache.commons.lang.builder.ToStringBuilder:
    org.apache.commons.lang.builder.ToStringStyle defaultStyle -> defaultStyle
    java.lang.StringBuffer buffer -> buffer
    java.lang.Object object -> object
    org.apache.commons.lang.builder.ToStringStyle style -> style
    org.apache.commons.lang.builder.ToStringStyle getDefaultStyle() -> getDefaultStyle
    java.lang.String reflectionToString(java.lang.Object) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean,java.lang.Class) -> reflectionToString
    void setDefaultStyle(org.apache.commons.lang.builder.ToStringStyle) -> setDefaultStyle
    org.apache.commons.lang.builder.ToStringBuilder append(boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(boolean[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(byte) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(byte[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(char) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(char[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(double) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(double[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(float) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(float[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(int) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(int[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(long) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(long[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.Object) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.Object[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(short) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(short[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,boolean[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,boolean[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,byte) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,byte[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,byte[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,char) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,char[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,char[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,double) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,double[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,double[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,float) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,float[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,float[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,int) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,int[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,int[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,long) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,long[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,long[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,java.lang.Object) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,java.lang.Object,boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,java.lang.Object[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,java.lang.Object[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,short) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,short[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,short[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder appendAsObjectToString(java.lang.Object) -> appendAsObjectToString
    org.apache.commons.lang.builder.ToStringBuilder appendSuper(java.lang.String) -> appendSuper
    org.apache.commons.lang.builder.ToStringBuilder appendToString(java.lang.String) -> appendToString
    java.lang.Object getObject() -> getObject
    java.lang.StringBuffer getStringBuffer() -> getStringBuffer
    org.apache.commons.lang.builder.ToStringStyle getStyle() -> getStyle
    java.lang.String toString() -> toString
org.apache.commons.lang.builder.ToStringStyle -> org.apache.commons.lang.builder.ToStringStyle:
    org.apache.commons.lang.builder.ToStringStyle DEFAULT_STYLE -> DEFAULT_STYLE
    org.apache.commons.lang.builder.ToStringStyle MULTI_LINE_STYLE -> MULTI_LINE_STYLE
    org.apache.commons.lang.builder.ToStringStyle NO_FIELD_NAMES_STYLE -> NO_FIELD_NAMES_STYLE
    org.apache.commons.lang.builder.ToStringStyle SHORT_PREFIX_STYLE -> SHORT_PREFIX_STYLE
    org.apache.commons.lang.builder.ToStringStyle SIMPLE_STYLE -> SIMPLE_STYLE
    boolean useFieldNames -> useFieldNames
    boolean useClassName -> useClassName
    boolean useShortClassName -> useShortClassName
    boolean useIdentityHashCode -> useIdentityHashCode
    java.lang.String contentStart -> contentStart
    java.lang.String contentEnd -> contentEnd
    java.lang.String fieldNameValueSeparator -> fieldNameValueSeparator
    boolean fieldSeparatorAtStart -> fieldSeparatorAtStart
    boolean fieldSeparatorAtEnd -> fieldSeparatorAtEnd
    java.lang.String fieldSeparator -> fieldSeparator
    java.lang.String arrayStart -> arrayStart
    java.lang.String arraySeparator -> arraySeparator
    boolean arrayContentDetail -> arrayContentDetail
    java.lang.String arrayEnd -> arrayEnd
    boolean defaultFullDetail -> defaultFullDetail
    java.lang.String nullText -> nullText
    java.lang.String sizeStartText -> sizeStartText
    java.lang.String sizeEndText -> sizeEndText
    java.lang.String summaryObjectStartText -> summaryObjectStartText
    java.lang.String summaryObjectEndText -> summaryObjectEndText
    void appendSuper(java.lang.StringBuffer,java.lang.String) -> appendSuper
    void appendToString(java.lang.StringBuffer,java.lang.String) -> appendToString
    void appendStart(java.lang.StringBuffer,java.lang.Object) -> appendStart
    void appendEnd(java.lang.StringBuffer,java.lang.Object) -> appendEnd
    void removeLastFieldSeparator(java.lang.StringBuffer) -> removeLastFieldSeparator
    void append(java.lang.StringBuffer,java.lang.String,java.lang.Object,java.lang.Boolean) -> append
    void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> appendInternal
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Collection) -> appendDetail
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Map) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,long) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,long) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,int) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,int) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,short) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,short) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,byte) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,byte) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,char) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,char) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,double) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,double) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,float) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,float) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,boolean) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,java.lang.Object[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendDetail
    void reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> reflectionAppendArrayDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,long[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,long[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,long[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,int[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,int[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,int[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,short[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,short[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,short[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,byte[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,byte[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,byte[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,char[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,char[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,char[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,double[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,double[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,double[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,float[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,float[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,float[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,boolean[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendSummary
    void appendClassName(java.lang.StringBuffer,java.lang.Object) -> appendClassName
    void appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object) -> appendIdentityHashCode
    void appendContentStart(java.lang.StringBuffer) -> appendContentStart
    void appendContentEnd(java.lang.StringBuffer) -> appendContentEnd
    void appendNullText(java.lang.StringBuffer,java.lang.String) -> appendNullText
    void appendFieldSeparator(java.lang.StringBuffer) -> appendFieldSeparator
    void appendFieldStart(java.lang.StringBuffer,java.lang.String) -> appendFieldStart
    void appendFieldEnd(java.lang.StringBuffer,java.lang.String) -> appendFieldEnd
    void appendSummarySize(java.lang.StringBuffer,java.lang.String,int) -> appendSummarySize
    boolean isFullDetail(java.lang.Boolean) -> isFullDetail
    java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    boolean isUseClassName() -> isUseClassName
    void setUseClassName(boolean) -> setUseClassName
    boolean isUseShortClassName() -> isUseShortClassName
    boolean isShortClassName() -> isShortClassName
    void setUseShortClassName(boolean) -> setUseShortClassName
    void setShortClassName(boolean) -> setShortClassName
    boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    boolean isUseFieldNames() -> isUseFieldNames
    void setUseFieldNames(boolean) -> setUseFieldNames
    boolean isDefaultFullDetail() -> isDefaultFullDetail
    void setDefaultFullDetail(boolean) -> setDefaultFullDetail
    boolean isArrayContentDetail() -> isArrayContentDetail
    void setArrayContentDetail(boolean) -> setArrayContentDetail
    java.lang.String getArrayStart() -> getArrayStart
    void setArrayStart(java.lang.String) -> setArrayStart
    java.lang.String getArrayEnd() -> getArrayEnd
    void setArrayEnd(java.lang.String) -> setArrayEnd
    java.lang.String getArraySeparator() -> getArraySeparator
    void setArraySeparator(java.lang.String) -> setArraySeparator
    java.lang.String getContentStart() -> getContentStart
    void setContentStart(java.lang.String) -> setContentStart
    java.lang.String getContentEnd() -> getContentEnd
    void setContentEnd(java.lang.String) -> setContentEnd
    java.lang.String getFieldNameValueSeparator() -> getFieldNameValueSeparator
    void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    java.lang.String getFieldSeparator() -> getFieldSeparator
    void setFieldSeparator(java.lang.String) -> setFieldSeparator
    boolean isFieldSeparatorAtStart() -> isFieldSeparatorAtStart
    void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    boolean isFieldSeparatorAtEnd() -> isFieldSeparatorAtEnd
    void setFieldSeparatorAtEnd(boolean) -> setFieldSeparatorAtEnd
    java.lang.String getNullText() -> getNullText
    void setNullText(java.lang.String) -> setNullText
    java.lang.String getSizeStartText() -> getSizeStartText
    void setSizeStartText(java.lang.String) -> setSizeStartText
    java.lang.String getSizeEndText() -> getSizeEndText
    void setSizeEndText(java.lang.String) -> setSizeEndText
    java.lang.String getSummaryObjectStartText() -> getSummaryObjectStartText
    void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    java.lang.String getSummaryObjectEndText() -> getSummaryObjectEndText
    void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
org.apache.commons.lang.builder.ToStringStyle$DefaultToStringStyle -> org.apache.commons.lang.builder.ToStringStyle$DefaultToStringStyle:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.builder.ToStringStyle$MultiLineToStringStyle -> org.apache.commons.lang.builder.ToStringStyle$MultiLineToStringStyle:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.builder.ToStringStyle$NoFieldNameToStringStyle -> org.apache.commons.lang.builder.ToStringStyle$NoFieldNameToStringStyle:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.builder.ToStringStyle$ShortPrefixToStringStyle -> org.apache.commons.lang.builder.ToStringStyle$ShortPrefixToStringStyle:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.builder.ToStringStyle$SimpleToStringStyle -> org.apache.commons.lang.builder.ToStringStyle$SimpleToStringStyle:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.enum.Enum -> org.apache.commons.lang.enum.Enum:
    long serialVersionUID -> serialVersionUID
    java.util.Map EMPTY_MAP -> EMPTY_MAP
    java.util.Map cEnumClasses -> cEnumClasses
    java.lang.String iName -> iName
    int iHashCode -> iHashCode
    java.lang.String iToString -> iToString
    java.lang.Class class$org$apache$commons$lang$enum$Enum -> class$org$apache$commons$lang$enum$Enum
    java.lang.Class class$org$apache$commons$lang$enum$ValuedEnum -> class$org$apache$commons$lang$enum$ValuedEnum
    void init(java.lang.String) -> init
    java.lang.Object readResolve() -> readResolve
    org.apache.commons.lang.enum.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    java.util.List getEnumList(java.lang.Class) -> getEnumList
    java.util.Iterator iterator(java.lang.Class) -> iterator
    org.apache.commons.lang.enum.Enum$Entry getEntry(java.lang.Class) -> getEntry
    org.apache.commons.lang.enum.Enum$Entry createEntry(java.lang.Class) -> createEntry
    java.lang.String getName() -> getName
    java.lang.Class getEnumClass() -> getEnumClass
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String getNameInOtherClassLoader(java.lang.Object) -> getNameInOtherClassLoader
    java.lang.String toString() -> toString
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.lang.enum.Enum$Entry -> org.apache.commons.lang.enum.Enum$Entry:
    java.util.Map map -> map
    java.util.Map unmodifiableMap -> unmodifiableMap
    java.util.List list -> list
    java.util.List unmodifiableList -> unmodifiableList
org.apache.commons.lang.enum.EnumUtils -> org.apache.commons.lang.enum.EnumUtils:
    org.apache.commons.lang.enum.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    org.apache.commons.lang.enum.ValuedEnum getEnum(java.lang.Class,int) -> getEnum
    java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    java.util.List getEnumList(java.lang.Class) -> getEnumList
    java.util.Iterator iterator(java.lang.Class) -> iterator
org.apache.commons.lang.enum.ValuedEnum -> org.apache.commons.lang.enum.ValuedEnum:
    long serialVersionUID -> serialVersionUID
    int iValue -> iValue
    org.apache.commons.lang.enum.Enum getEnum(java.lang.Class,int) -> getEnum
    int getValue() -> getValue
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.enums.Enum -> org.apache.commons.lang.enums.Enum:
    long serialVersionUID -> serialVersionUID
    java.util.Map EMPTY_MAP -> EMPTY_MAP
    java.util.Map cEnumClasses -> cEnumClasses
    java.lang.String iName -> iName
    int iHashCode -> iHashCode
    java.lang.String iToString -> iToString
    java.lang.Class class$org$apache$commons$lang$enums$Enum -> class$org$apache$commons$lang$enums$Enum
    java.lang.Class class$org$apache$commons$lang$enums$ValuedEnum -> class$org$apache$commons$lang$enums$ValuedEnum
    void init(java.lang.String) -> init
    java.lang.Object readResolve() -> readResolve
    org.apache.commons.lang.enums.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    java.util.List getEnumList(java.lang.Class) -> getEnumList
    java.util.Iterator iterator(java.lang.Class) -> iterator
    org.apache.commons.lang.enums.Enum$Entry getEntry(java.lang.Class) -> getEntry
    org.apache.commons.lang.enums.Enum$Entry createEntry(java.lang.Class) -> createEntry
    java.lang.String getName() -> getName
    java.lang.Class getEnumClass() -> getEnumClass
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String getNameInOtherClassLoader(java.lang.Object) -> getNameInOtherClassLoader
    java.lang.String toString() -> toString
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.lang.enums.Enum$Entry -> org.apache.commons.lang.enums.Enum$Entry:
    java.util.Map map -> map
    java.util.Map unmodifiableMap -> unmodifiableMap
    java.util.List list -> list
    java.util.List unmodifiableList -> unmodifiableList
org.apache.commons.lang.enums.EnumUtils -> org.apache.commons.lang.enums.EnumUtils:
    org.apache.commons.lang.enums.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    org.apache.commons.lang.enums.ValuedEnum getEnum(java.lang.Class,int) -> getEnum
    java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    java.util.List getEnumList(java.lang.Class) -> getEnumList
    java.util.Iterator iterator(java.lang.Class) -> iterator
org.apache.commons.lang.enums.ValuedEnum -> org.apache.commons.lang.enums.ValuedEnum:
    long serialVersionUID -> serialVersionUID
    int iValue -> iValue
    org.apache.commons.lang.enums.Enum getEnum(java.lang.Class,int) -> getEnum
    int getValue() -> getValue
    int compareTo(java.lang.Object) -> compareTo
    int getValueInOtherClassLoader(java.lang.Object) -> getValueInOtherClassLoader
    java.lang.String toString() -> toString
org.apache.commons.lang.exception.ExceptionUtils -> org.apache.commons.lang.exception.ExceptionUtils:
    java.lang.String WRAPPED_MARKER -> WRAPPED_MARKER
    java.lang.String[] CAUSE_METHOD_NAMES -> CAUSE_METHOD_NAMES
    java.lang.reflect.Method THROWABLE_CAUSE_METHOD -> THROWABLE_CAUSE_METHOD
    java.lang.reflect.Method THROWABLE_INITCAUSE_METHOD -> THROWABLE_INITCAUSE_METHOD
    java.lang.Class class$java$lang$Throwable -> class$java$lang$Throwable
    void addCauseMethodName(java.lang.String) -> addCauseMethodName
    void removeCauseMethodName(java.lang.String) -> removeCauseMethodName
    boolean setCause(java.lang.Throwable,java.lang.Throwable) -> setCause
    java.lang.String[] toArray(java.util.List) -> toArray
    java.util.ArrayList getCauseMethodNameList() -> getCauseMethodNameList
    boolean isCauseMethodName(java.lang.String) -> isCauseMethodName
    java.lang.Throwable getCause(java.lang.Throwable) -> getCause
    java.lang.Throwable getCause(java.lang.Throwable,java.lang.String[]) -> getCause
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    java.lang.Throwable getCauseUsingWellKnownTypes(java.lang.Throwable) -> getCauseUsingWellKnownTypes
    java.lang.Throwable getCauseUsingMethodName(java.lang.Throwable,java.lang.String) -> getCauseUsingMethodName
    java.lang.Throwable getCauseUsingFieldName(java.lang.Throwable,java.lang.String) -> getCauseUsingFieldName
    boolean isThrowableNested() -> isThrowableNested
    boolean isNestedThrowable(java.lang.Throwable) -> isNestedThrowable
    int getThrowableCount(java.lang.Throwable) -> getThrowableCount
    java.lang.Throwable[] getThrowables(java.lang.Throwable) -> getThrowables
    java.util.List getThrowableList(java.lang.Throwable) -> getThrowableList
    int indexOfThrowable(java.lang.Throwable,java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Throwable,java.lang.Class,int) -> indexOfThrowable
    int indexOfType(java.lang.Throwable,java.lang.Class) -> indexOfType
    int indexOfType(java.lang.Throwable,java.lang.Class,int) -> indexOfType
    int indexOf(java.lang.Throwable,java.lang.Class,int,boolean) -> indexOf
    void printRootCauseStackTrace(java.lang.Throwable) -> printRootCauseStackTrace
    void printRootCauseStackTrace(java.lang.Throwable,java.io.PrintStream) -> printRootCauseStackTrace
    void printRootCauseStackTrace(java.lang.Throwable,java.io.PrintWriter) -> printRootCauseStackTrace
    java.lang.String[] getRootCauseStackTrace(java.lang.Throwable) -> getRootCauseStackTrace
    void removeCommonFrames(java.util.List,java.util.List) -> removeCommonFrames
    java.lang.String getFullStackTrace(java.lang.Throwable) -> getFullStackTrace
    java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    java.lang.String[] getStackFrames(java.lang.Throwable) -> getStackFrames
    java.lang.String[] getStackFrames(java.lang.String) -> getStackFrames
    java.util.List getStackFrameList(java.lang.Throwable) -> getStackFrameList
    java.lang.String getMessage(java.lang.Throwable) -> getMessage
    java.lang.String getRootCauseMessage(java.lang.Throwable) -> getRootCauseMessage
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.lang.exception.Nestable -> org.apache.commons.lang.exception.Nestable:
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
org.apache.commons.lang.exception.NestableDelegate -> org.apache.commons.lang.exception.NestableDelegate:
    long serialVersionUID -> serialVersionUID
    java.lang.String MUST_BE_THROWABLE -> MUST_BE_THROWABLE
    java.lang.Throwable nestable -> nestable
    boolean topDown -> topDown
    boolean trimStackFrames -> trimStackFrames
    boolean matchSubclasses -> matchSubclasses
    java.lang.Class class$org$apache$commons$lang$exception$Nestable -> class$org$apache$commons$lang$exception$Nestable
    java.lang.String getMessage(int) -> getMessage
    java.lang.String getMessage(java.lang.String) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.String[] getStackFrames(java.lang.Throwable) -> getStackFrames
    void trimStackFrames(java.util.List) -> trimStackFrames
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.lang.exception.NestableError -> org.apache.commons.lang.exception.NestableError:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.exception.NestableDelegate delegate -> delegate
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
org.apache.commons.lang.exception.NestableException -> org.apache.commons.lang.exception.NestableException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.exception.NestableDelegate delegate -> delegate
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
org.apache.commons.lang.exception.NestableRuntimeException -> org.apache.commons.lang.exception.NestableRuntimeException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.exception.NestableDelegate delegate -> delegate
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
org.apache.commons.lang.math.DoubleRange -> org.apache.commons.lang.math.DoubleRange:
    long serialVersionUID -> serialVersionUID
    double min -> min
    double max -> max
    java.lang.Double minObject -> minObject
    java.lang.Double maxObject -> maxObject
    int hashCode -> hashCode
    java.lang.String toString -> toString
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    long getMinimumLong() -> getMinimumLong
    int getMinimumInteger() -> getMinimumInteger
    double getMinimumDouble() -> getMinimumDouble
    float getMinimumFloat() -> getMinimumFloat
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    long getMaximumLong() -> getMaximumLong
    int getMaximumInteger() -> getMaximumInteger
    double getMaximumDouble() -> getMaximumDouble
    float getMaximumFloat() -> getMaximumFloat
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean containsDouble(double) -> containsDouble
    boolean containsRange(org.apache.commons.lang.math.Range) -> containsRange
    boolean overlapsRange(org.apache.commons.lang.math.Range) -> overlapsRange
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.math.FloatRange -> org.apache.commons.lang.math.FloatRange:
    long serialVersionUID -> serialVersionUID
    float min -> min
    float max -> max
    java.lang.Float minObject -> minObject
    java.lang.Float maxObject -> maxObject
    int hashCode -> hashCode
    java.lang.String toString -> toString
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    long getMinimumLong() -> getMinimumLong
    int getMinimumInteger() -> getMinimumInteger
    double getMinimumDouble() -> getMinimumDouble
    float getMinimumFloat() -> getMinimumFloat
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    long getMaximumLong() -> getMaximumLong
    int getMaximumInteger() -> getMaximumInteger
    double getMaximumDouble() -> getMaximumDouble
    float getMaximumFloat() -> getMaximumFloat
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean containsFloat(float) -> containsFloat
    boolean containsRange(org.apache.commons.lang.math.Range) -> containsRange
    boolean overlapsRange(org.apache.commons.lang.math.Range) -> overlapsRange
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.math.Fraction -> org.apache.commons.lang.math.Fraction:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.math.Fraction ZERO -> ZERO
    org.apache.commons.lang.math.Fraction ONE -> ONE
    org.apache.commons.lang.math.Fraction ONE_HALF -> ONE_HALF
    org.apache.commons.lang.math.Fraction ONE_THIRD -> ONE_THIRD
    org.apache.commons.lang.math.Fraction TWO_THIRDS -> TWO_THIRDS
    org.apache.commons.lang.math.Fraction ONE_QUARTER -> ONE_QUARTER
    org.apache.commons.lang.math.Fraction TWO_QUARTERS -> TWO_QUARTERS
    org.apache.commons.lang.math.Fraction THREE_QUARTERS -> THREE_QUARTERS
    org.apache.commons.lang.math.Fraction ONE_FIFTH -> ONE_FIFTH
    org.apache.commons.lang.math.Fraction TWO_FIFTHS -> TWO_FIFTHS
    org.apache.commons.lang.math.Fraction THREE_FIFTHS -> THREE_FIFTHS
    org.apache.commons.lang.math.Fraction FOUR_FIFTHS -> FOUR_FIFTHS
    int numerator -> numerator
    int denominator -> denominator
    int hashCode -> hashCode
    java.lang.String toString -> toString
    java.lang.String toProperString -> toProperString
    org.apache.commons.lang.math.Fraction getFraction(int,int) -> getFraction
    org.apache.commons.lang.math.Fraction getFraction(int,int,int) -> getFraction
    org.apache.commons.lang.math.Fraction getReducedFraction(int,int) -> getReducedFraction
    org.apache.commons.lang.math.Fraction getFraction(double) -> getFraction
    org.apache.commons.lang.math.Fraction getFraction(java.lang.String) -> getFraction
    int getNumerator() -> getNumerator
    int getDenominator() -> getDenominator
    int getProperNumerator() -> getProperNumerator
    int getProperWhole() -> getProperWhole
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    org.apache.commons.lang.math.Fraction reduce() -> reduce
    org.apache.commons.lang.math.Fraction invert() -> invert
    org.apache.commons.lang.math.Fraction negate() -> negate
    org.apache.commons.lang.math.Fraction abs() -> abs
    org.apache.commons.lang.math.Fraction pow(int) -> pow
    int greatestCommonDivisor(int,int) -> greatestCommonDivisor
    int mulAndCheck(int,int) -> mulAndCheck
    int mulPosAndCheck(int,int) -> mulPosAndCheck
    int addAndCheck(int,int) -> addAndCheck
    int subAndCheck(int,int) -> subAndCheck
    org.apache.commons.lang.math.Fraction add(org.apache.commons.lang.math.Fraction) -> add
    org.apache.commons.lang.math.Fraction subtract(org.apache.commons.lang.math.Fraction) -> subtract
    org.apache.commons.lang.math.Fraction addSub(org.apache.commons.lang.math.Fraction,boolean) -> addSub
    org.apache.commons.lang.math.Fraction multiplyBy(org.apache.commons.lang.math.Fraction) -> multiplyBy
    org.apache.commons.lang.math.Fraction divideBy(org.apache.commons.lang.math.Fraction) -> divideBy
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
    java.lang.String toProperString() -> toProperString
org.apache.commons.lang.math.IntRange -> org.apache.commons.lang.math.IntRange:
    long serialVersionUID -> serialVersionUID
    int min -> min
    int max -> max
    java.lang.Integer minObject -> minObject
    java.lang.Integer maxObject -> maxObject
    int hashCode -> hashCode
    java.lang.String toString -> toString
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    long getMinimumLong() -> getMinimumLong
    int getMinimumInteger() -> getMinimumInteger
    double getMinimumDouble() -> getMinimumDouble
    float getMinimumFloat() -> getMinimumFloat
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    long getMaximumLong() -> getMaximumLong
    int getMaximumInteger() -> getMaximumInteger
    double getMaximumDouble() -> getMaximumDouble
    float getMaximumFloat() -> getMaximumFloat
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean containsInteger(int) -> containsInteger
    boolean containsRange(org.apache.commons.lang.math.Range) -> containsRange
    boolean overlapsRange(org.apache.commons.lang.math.Range) -> overlapsRange
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.math.JVMRandom -> org.apache.commons.lang.math.JVMRandom:
    long serialVersionUID -> serialVersionUID
    boolean constructed -> constructed
    void setSeed(long) -> setSeed
    double nextGaussian() -> nextGaussian
    void nextBytes(byte[]) -> nextBytes
    int nextInt() -> nextInt
    int nextInt(int) -> nextInt
    long nextLong() -> nextLong
    long nextLong(long) -> nextLong
    boolean nextBoolean() -> nextBoolean
    float nextFloat() -> nextFloat
    double nextDouble() -> nextDouble
org.apache.commons.lang.math.LongRange -> org.apache.commons.lang.math.LongRange:
    long serialVersionUID -> serialVersionUID
    long min -> min
    long max -> max
    java.lang.Long minObject -> minObject
    java.lang.Long maxObject -> maxObject
    int hashCode -> hashCode
    java.lang.String toString -> toString
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    long getMinimumLong() -> getMinimumLong
    int getMinimumInteger() -> getMinimumInteger
    double getMinimumDouble() -> getMinimumDouble
    float getMinimumFloat() -> getMinimumFloat
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    long getMaximumLong() -> getMaximumLong
    int getMaximumInteger() -> getMaximumInteger
    double getMaximumDouble() -> getMaximumDouble
    float getMaximumFloat() -> getMaximumFloat
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean containsLong(long) -> containsLong
    boolean containsRange(org.apache.commons.lang.math.Range) -> containsRange
    boolean overlapsRange(org.apache.commons.lang.math.Range) -> overlapsRange
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.math.NumberRange -> org.apache.commons.lang.math.NumberRange:
    long serialVersionUID -> serialVersionUID
    java.lang.Number min -> min
    java.lang.Number max -> max
    int hashCode -> hashCode
    java.lang.String toString -> toString
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.math.NumberUtils -> org.apache.commons.lang.math.NumberUtils:
    java.lang.Long LONG_ZERO -> LONG_ZERO
    java.lang.Long LONG_ONE -> LONG_ONE
    java.lang.Long LONG_MINUS_ONE -> LONG_MINUS_ONE
    java.lang.Integer INTEGER_ZERO -> INTEGER_ZERO
    java.lang.Integer INTEGER_ONE -> INTEGER_ONE
    java.lang.Integer INTEGER_MINUS_ONE -> INTEGER_MINUS_ONE
    java.lang.Short SHORT_ZERO -> SHORT_ZERO
    java.lang.Short SHORT_ONE -> SHORT_ONE
    java.lang.Short SHORT_MINUS_ONE -> SHORT_MINUS_ONE
    java.lang.Byte BYTE_ZERO -> BYTE_ZERO
    java.lang.Byte BYTE_ONE -> BYTE_ONE
    java.lang.Byte BYTE_MINUS_ONE -> BYTE_MINUS_ONE
    java.lang.Double DOUBLE_ZERO -> DOUBLE_ZERO
    java.lang.Double DOUBLE_ONE -> DOUBLE_ONE
    java.lang.Double DOUBLE_MINUS_ONE -> DOUBLE_MINUS_ONE
    java.lang.Float FLOAT_ZERO -> FLOAT_ZERO
    java.lang.Float FLOAT_ONE -> FLOAT_ONE
    java.lang.Float FLOAT_MINUS_ONE -> FLOAT_MINUS_ONE
    int stringToInt(java.lang.String) -> stringToInt
    int toInt(java.lang.String) -> toInt
    int stringToInt(java.lang.String,int) -> stringToInt
    int toInt(java.lang.String,int) -> toInt
    long toLong(java.lang.String) -> toLong
    long toLong(java.lang.String,long) -> toLong
    float toFloat(java.lang.String) -> toFloat
    float toFloat(java.lang.String,float) -> toFloat
    double toDouble(java.lang.String) -> toDouble
    double toDouble(java.lang.String,double) -> toDouble
    java.lang.Number createNumber(java.lang.String) -> createNumber
    boolean isAllZeros(java.lang.String) -> isAllZeros
    java.lang.Float createFloat(java.lang.String) -> createFloat
    java.lang.Double createDouble(java.lang.String) -> createDouble
    java.lang.Integer createInteger(java.lang.String) -> createInteger
    java.lang.Long createLong(java.lang.String) -> createLong
    java.math.BigInteger createBigInteger(java.lang.String) -> createBigInteger
    java.math.BigDecimal createBigDecimal(java.lang.String) -> createBigDecimal
    long min(long[]) -> min
    int min(int[]) -> min
    short min(short[]) -> min
    double min(double[]) -> min
    float min(float[]) -> min
    long max(long[]) -> max
    int max(int[]) -> max
    short max(short[]) -> max
    double max(double[]) -> max
    float max(float[]) -> max
    long min(long,long,long) -> min
    int min(int,int,int) -> min
    short min(short,short,short) -> min
    byte min(byte,byte,byte) -> min
    double min(double,double,double) -> min
    float min(float,float,float) -> min
    long max(long,long,long) -> max
    int max(int,int,int) -> max
    short max(short,short,short) -> max
    byte max(byte,byte,byte) -> max
    double max(double,double,double) -> max
    float max(float,float,float) -> max
    int compare(double,double) -> compare
    int compare(float,float) -> compare
    boolean isDigits(java.lang.String) -> isDigits
    boolean isNumber(java.lang.String) -> isNumber
org.apache.commons.lang.math.RandomUtils -> org.apache.commons.lang.math.RandomUtils:
    java.util.Random JVM_RANDOM -> JVM_RANDOM
    int nextInt() -> nextInt
    int nextInt(java.util.Random) -> nextInt
    int nextInt(int) -> nextInt
    int nextInt(java.util.Random,int) -> nextInt
    long nextLong() -> nextLong
    long nextLong(java.util.Random) -> nextLong
    boolean nextBoolean() -> nextBoolean
    boolean nextBoolean(java.util.Random) -> nextBoolean
    float nextFloat() -> nextFloat
    float nextFloat(java.util.Random) -> nextFloat
    double nextDouble() -> nextDouble
    double nextDouble(java.util.Random) -> nextDouble
org.apache.commons.lang.math.Range -> org.apache.commons.lang.math.Range:
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    long getMinimumLong() -> getMinimumLong
    int getMinimumInteger() -> getMinimumInteger
    double getMinimumDouble() -> getMinimumDouble
    float getMinimumFloat() -> getMinimumFloat
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    long getMaximumLong() -> getMaximumLong
    int getMaximumInteger() -> getMaximumInteger
    double getMaximumDouble() -> getMaximumDouble
    float getMaximumFloat() -> getMaximumFloat
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean containsLong(java.lang.Number) -> containsLong
    boolean containsLong(long) -> containsLong
    boolean containsInteger(java.lang.Number) -> containsInteger
    boolean containsInteger(int) -> containsInteger
    boolean containsDouble(java.lang.Number) -> containsDouble
    boolean containsDouble(double) -> containsDouble
    boolean containsFloat(java.lang.Number) -> containsFloat
    boolean containsFloat(float) -> containsFloat
    boolean containsRange(org.apache.commons.lang.math.Range) -> containsRange
    boolean overlapsRange(org.apache.commons.lang.math.Range) -> overlapsRange
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.Mutable -> org.apache.commons.lang.mutable.Mutable:
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
org.apache.commons.lang.mutable.MutableBoolean -> org.apache.commons.lang.mutable.MutableBoolean:
    long serialVersionUID -> serialVersionUID
    boolean value -> value
    boolean booleanValue() -> booleanValue
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(java.lang.Object) -> equals
    java.lang.Object getValue() -> getValue
    int hashCode() -> hashCode
    void setValue(boolean) -> setValue
    void setValue(java.lang.Object) -> setValue
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableByte -> org.apache.commons.lang.mutable.MutableByte:
    long serialVersionUID -> serialVersionUID
    byte value -> value
    java.lang.Object getValue() -> getValue
    void setValue(byte) -> setValue
    void setValue(java.lang.Object) -> setValue
    byte byteValue() -> byteValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Byte toByte() -> toByte
    void increment() -> increment
    void decrement() -> decrement
    void add(byte) -> add
    void add(java.lang.Number) -> add
    void subtract(byte) -> subtract
    void subtract(java.lang.Number) -> subtract
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableDouble -> org.apache.commons.lang.mutable.MutableDouble:
    long serialVersionUID -> serialVersionUID
    double value -> value
    java.lang.Object getValue() -> getValue
    void setValue(double) -> setValue
    void setValue(java.lang.Object) -> setValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    java.lang.Double toDouble() -> toDouble
    void increment() -> increment
    void decrement() -> decrement
    void add(double) -> add
    void add(java.lang.Number) -> add
    void subtract(double) -> subtract
    void subtract(java.lang.Number) -> subtract
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableFloat -> org.apache.commons.lang.mutable.MutableFloat:
    long serialVersionUID -> serialVersionUID
    float value -> value
    java.lang.Object getValue() -> getValue
    void setValue(float) -> setValue
    void setValue(java.lang.Object) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(float) -> add
    void add(java.lang.Number) -> add
    void subtract(float) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    java.lang.Float toFloat() -> toFloat
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableInt -> org.apache.commons.lang.mutable.MutableInt:
    long serialVersionUID -> serialVersionUID
    int value -> value
    java.lang.Object getValue() -> getValue
    void setValue(int) -> setValue
    void setValue(java.lang.Object) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(int) -> add
    void add(java.lang.Number) -> add
    void subtract(int) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Integer toInteger() -> toInteger
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableLong -> org.apache.commons.lang.mutable.MutableLong:
    long serialVersionUID -> serialVersionUID
    long value -> value
    java.lang.Object getValue() -> getValue
    void setValue(long) -> setValue
    void setValue(java.lang.Object) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(long) -> add
    void add(java.lang.Number) -> add
    void subtract(long) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Long toLong() -> toLong
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableObject -> org.apache.commons.lang.mutable.MutableObject:
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableShort -> org.apache.commons.lang.mutable.MutableShort:
    long serialVersionUID -> serialVersionUID
    short value -> value
    java.lang.Object getValue() -> getValue
    void setValue(short) -> setValue
    void setValue(java.lang.Object) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(short) -> add
    void add(java.lang.Number) -> add
    void subtract(short) -> subtract
    void subtract(java.lang.Number) -> subtract
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Short toShort() -> toShort
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.text.CompositeFormat -> org.apache.commons.lang.text.CompositeFormat:
    long serialVersionUID -> serialVersionUID
    java.text.Format parser -> parser
    java.text.Format formatter -> formatter
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.text.Format getParser() -> getParser
    java.text.Format getFormatter() -> getFormatter
    java.lang.String reformat(java.lang.String) -> reformat
org.apache.commons.lang.text.StrBuilder -> org.apache.commons.lang.text.StrBuilder:
    int CAPACITY -> CAPACITY
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int size -> size
    java.lang.String newLine -> newLine
    java.lang.String nullText -> nullText
    java.lang.String getNewLineText() -> getNewLineText
    org.apache.commons.lang.text.StrBuilder setNewLineText(java.lang.String) -> setNewLineText
    java.lang.String getNullText() -> getNullText
    org.apache.commons.lang.text.StrBuilder setNullText(java.lang.String) -> setNullText
    int length() -> length
    org.apache.commons.lang.text.StrBuilder setLength(int) -> setLength
    int capacity() -> capacity
    org.apache.commons.lang.text.StrBuilder ensureCapacity(int) -> ensureCapacity
    org.apache.commons.lang.text.StrBuilder minimizeCapacity() -> minimizeCapacity
    int size() -> size
    boolean isEmpty() -> isEmpty
    org.apache.commons.lang.text.StrBuilder clear() -> clear
    char charAt(int) -> charAt
    org.apache.commons.lang.text.StrBuilder setCharAt(int,char) -> setCharAt
    org.apache.commons.lang.text.StrBuilder deleteCharAt(int) -> deleteCharAt
    char[] toCharArray() -> toCharArray
    char[] toCharArray(int,int) -> toCharArray
    char[] getChars(char[]) -> getChars
    void getChars(int,int,char[],int) -> getChars
    org.apache.commons.lang.text.StrBuilder appendNewLine() -> appendNewLine
    org.apache.commons.lang.text.StrBuilder appendNull() -> appendNull
    org.apache.commons.lang.text.StrBuilder append(java.lang.Object) -> append
    org.apache.commons.lang.text.StrBuilder append(java.lang.String) -> append
    org.apache.commons.lang.text.StrBuilder append(java.lang.String,int,int) -> append
    org.apache.commons.lang.text.StrBuilder append(java.lang.StringBuffer) -> append
    org.apache.commons.lang.text.StrBuilder append(java.lang.StringBuffer,int,int) -> append
    org.apache.commons.lang.text.StrBuilder append(org.apache.commons.lang.text.StrBuilder) -> append
    org.apache.commons.lang.text.StrBuilder append(org.apache.commons.lang.text.StrBuilder,int,int) -> append
    org.apache.commons.lang.text.StrBuilder append(char[]) -> append
    org.apache.commons.lang.text.StrBuilder append(char[],int,int) -> append
    org.apache.commons.lang.text.StrBuilder append(boolean) -> append
    org.apache.commons.lang.text.StrBuilder append(char) -> append
    org.apache.commons.lang.text.StrBuilder append(int) -> append
    org.apache.commons.lang.text.StrBuilder append(long) -> append
    org.apache.commons.lang.text.StrBuilder append(float) -> append
    org.apache.commons.lang.text.StrBuilder append(double) -> append
    org.apache.commons.lang.text.StrBuilder appendWithSeparators(java.lang.Object[],java.lang.String) -> appendWithSeparators
    org.apache.commons.lang.text.StrBuilder appendWithSeparators(java.util.Collection,java.lang.String) -> appendWithSeparators
    org.apache.commons.lang.text.StrBuilder appendWithSeparators(java.util.Iterator,java.lang.String) -> appendWithSeparators
    org.apache.commons.lang.text.StrBuilder appendPadding(int,char) -> appendPadding
    org.apache.commons.lang.text.StrBuilder appendFixedWidthPadLeft(java.lang.Object,int,char) -> appendFixedWidthPadLeft
    org.apache.commons.lang.text.StrBuilder appendFixedWidthPadLeft(int,int,char) -> appendFixedWidthPadLeft
    org.apache.commons.lang.text.StrBuilder appendFixedWidthPadRight(java.lang.Object,int,char) -> appendFixedWidthPadRight
    org.apache.commons.lang.text.StrBuilder appendFixedWidthPadRight(int,int,char) -> appendFixedWidthPadRight
    org.apache.commons.lang.text.StrBuilder insert(int,java.lang.Object) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,java.lang.String) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,char[]) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,char[],int,int) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,boolean) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,char) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,int) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,long) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,float) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,double) -> insert
    void deleteImpl(int,int,int) -> deleteImpl
    org.apache.commons.lang.text.StrBuilder delete(int,int) -> delete
    org.apache.commons.lang.text.StrBuilder deleteAll(char) -> deleteAll
    org.apache.commons.lang.text.StrBuilder deleteFirst(char) -> deleteFirst
    org.apache.commons.lang.text.StrBuilder deleteAll(java.lang.String) -> deleteAll
    org.apache.commons.lang.text.StrBuilder deleteFirst(java.lang.String) -> deleteFirst
    org.apache.commons.lang.text.StrBuilder deleteAll(org.apache.commons.lang.text.StrMatcher) -> deleteAll
    org.apache.commons.lang.text.StrBuilder deleteFirst(org.apache.commons.lang.text.StrMatcher) -> deleteFirst
    void replaceImpl(int,int,int,java.lang.String,int) -> replaceImpl
    org.apache.commons.lang.text.StrBuilder replace(int,int,java.lang.String) -> replace
    org.apache.commons.lang.text.StrBuilder replaceAll(char,char) -> replaceAll
    org.apache.commons.lang.text.StrBuilder replaceFirst(char,char) -> replaceFirst
    org.apache.commons.lang.text.StrBuilder replaceAll(java.lang.String,java.lang.String) -> replaceAll
    org.apache.commons.lang.text.StrBuilder replaceFirst(java.lang.String,java.lang.String) -> replaceFirst
    org.apache.commons.lang.text.StrBuilder replaceAll(org.apache.commons.lang.text.StrMatcher,java.lang.String) -> replaceAll
    org.apache.commons.lang.text.StrBuilder replaceFirst(org.apache.commons.lang.text.StrMatcher,java.lang.String) -> replaceFirst
    org.apache.commons.lang.text.StrBuilder replace(org.apache.commons.lang.text.StrMatcher,java.lang.String,int,int,int) -> replace
    org.apache.commons.lang.text.StrBuilder replaceImpl(org.apache.commons.lang.text.StrMatcher,java.lang.String,int,int,int) -> replaceImpl
    org.apache.commons.lang.text.StrBuilder reverse() -> reverse
    org.apache.commons.lang.text.StrBuilder trim() -> trim
    boolean startsWith(java.lang.String) -> startsWith
    boolean endsWith(java.lang.String) -> endsWith
    java.lang.String substring(int) -> substring
    java.lang.String substring(int,int) -> substring
    java.lang.String leftString(int) -> leftString
    java.lang.String rightString(int) -> rightString
    java.lang.String midString(int,int) -> midString
    boolean contains(char) -> contains
    boolean contains(java.lang.String) -> contains
    boolean contains(org.apache.commons.lang.text.StrMatcher) -> contains
    int indexOf(char) -> indexOf
    int indexOf(char,int) -> indexOf
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,int) -> indexOf
    int indexOf(org.apache.commons.lang.text.StrMatcher) -> indexOf
    int indexOf(org.apache.commons.lang.text.StrMatcher,int) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    int lastIndexOf(char,int) -> lastIndexOf
    int lastIndexOf(java.lang.String) -> lastIndexOf
    int lastIndexOf(java.lang.String,int) -> lastIndexOf
    int lastIndexOf(org.apache.commons.lang.text.StrMatcher) -> lastIndexOf
    int lastIndexOf(org.apache.commons.lang.text.StrMatcher,int) -> lastIndexOf
    org.apache.commons.lang.text.StrTokenizer asTokenizer() -> asTokenizer
    java.io.Reader asReader() -> asReader
    java.io.Writer asWriter() -> asWriter
    boolean equalsIgnoreCase(org.apache.commons.lang.text.StrBuilder) -> equalsIgnoreCase
    boolean equals(org.apache.commons.lang.text.StrBuilder) -> equals
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.StringBuffer toStringBuffer() -> toStringBuffer
    int validateRange(int,int) -> validateRange
    void validateIndex(int) -> validateIndex
org.apache.commons.lang.text.StrBuilder$StrBuilderReader -> org.apache.commons.lang.text.StrBuilder$StrBuilderReader:
    int pos -> pos
    int mark -> mark
    org.apache.commons.lang.text.StrBuilder this$0 -> this$0
    void close() -> close
    int read() -> read
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer -> org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer:
    org.apache.commons.lang.text.StrBuilder this$0 -> this$0
    java.util.List tokenize(char[],int,int) -> tokenize
    java.lang.String getContent() -> getContent
org.apache.commons.lang.text.StrBuilder$StrBuilderWriter -> org.apache.commons.lang.text.StrBuilder$StrBuilderWriter:
    org.apache.commons.lang.text.StrBuilder this$0 -> this$0
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
org.apache.commons.lang.text.StrLookup -> org.apache.commons.lang.text.StrLookup:
    org.apache.commons.lang.text.StrLookup NONE_LOOKUP -> NONE_LOOKUP
    org.apache.commons.lang.text.StrLookup SYSTEM_PROPERTIES_LOOKUP -> SYSTEM_PROPERTIES_LOOKUP
    org.apache.commons.lang.text.StrLookup noneLookup() -> noneLookup
    org.apache.commons.lang.text.StrLookup systemPropertiesLookup() -> systemPropertiesLookup
    org.apache.commons.lang.text.StrLookup mapLookup(java.util.Map) -> mapLookup
    java.lang.String lookup(java.lang.String) -> lookup
org.apache.commons.lang.text.StrLookup$MapStrLookup -> org.apache.commons.lang.text.StrLookup$MapStrLookup:
    java.util.Map map -> map
    java.lang.String lookup(java.lang.String) -> lookup
org.apache.commons.lang.text.StrMatcher -> org.apache.commons.lang.text.StrMatcher:
    org.apache.commons.lang.text.StrMatcher COMMA_MATCHER -> COMMA_MATCHER
    org.apache.commons.lang.text.StrMatcher TAB_MATCHER -> TAB_MATCHER
    org.apache.commons.lang.text.StrMatcher SPACE_MATCHER -> SPACE_MATCHER
    org.apache.commons.lang.text.StrMatcher SPLIT_MATCHER -> SPLIT_MATCHER
    org.apache.commons.lang.text.StrMatcher TRIM_MATCHER -> TRIM_MATCHER
    org.apache.commons.lang.text.StrMatcher SINGLE_QUOTE_MATCHER -> SINGLE_QUOTE_MATCHER
    org.apache.commons.lang.text.StrMatcher DOUBLE_QUOTE_MATCHER -> DOUBLE_QUOTE_MATCHER
    org.apache.commons.lang.text.StrMatcher QUOTE_MATCHER -> QUOTE_MATCHER
    org.apache.commons.lang.text.StrMatcher NONE_MATCHER -> NONE_MATCHER
    org.apache.commons.lang.text.StrMatcher commaMatcher() -> commaMatcher
    org.apache.commons.lang.text.StrMatcher tabMatcher() -> tabMatcher
    org.apache.commons.lang.text.StrMatcher spaceMatcher() -> spaceMatcher
    org.apache.commons.lang.text.StrMatcher splitMatcher() -> splitMatcher
    org.apache.commons.lang.text.StrMatcher trimMatcher() -> trimMatcher
    org.apache.commons.lang.text.StrMatcher singleQuoteMatcher() -> singleQuoteMatcher
    org.apache.commons.lang.text.StrMatcher doubleQuoteMatcher() -> doubleQuoteMatcher
    org.apache.commons.lang.text.StrMatcher quoteMatcher() -> quoteMatcher
    org.apache.commons.lang.text.StrMatcher noneMatcher() -> noneMatcher
    org.apache.commons.lang.text.StrMatcher charMatcher(char) -> charMatcher
    org.apache.commons.lang.text.StrMatcher charSetMatcher(char[]) -> charSetMatcher
    org.apache.commons.lang.text.StrMatcher charSetMatcher(java.lang.String) -> charSetMatcher
    org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String) -> stringMatcher
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrMatcher$CharMatcher -> org.apache.commons.lang.text.StrMatcher$CharMatcher:
    char ch -> ch
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrMatcher$CharSetMatcher -> org.apache.commons.lang.text.StrMatcher$CharSetMatcher:
    char[] chars -> chars
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrMatcher$NoMatcher -> org.apache.commons.lang.text.StrMatcher$NoMatcher:
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrMatcher$StringMatcher -> org.apache.commons.lang.text.StrMatcher$StringMatcher:
    char[] chars -> chars
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrMatcher$TrimMatcher -> org.apache.commons.lang.text.StrMatcher$TrimMatcher:
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrSubstitutor -> org.apache.commons.lang.text.StrSubstitutor:
    char DEFAULT_ESCAPE -> DEFAULT_ESCAPE
    org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX -> DEFAULT_PREFIX
    org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX -> DEFAULT_SUFFIX
    char escapeChar -> escapeChar
    org.apache.commons.lang.text.StrMatcher prefixMatcher -> prefixMatcher
    org.apache.commons.lang.text.StrMatcher suffixMatcher -> suffixMatcher
    org.apache.commons.lang.text.StrLookup variableResolver -> variableResolver
    java.lang.String replace(java.lang.Object,java.util.Map) -> replace
    java.lang.String replace(java.lang.Object,java.util.Map,java.lang.String,java.lang.String) -> replace
    java.lang.String replaceSystemProperties(java.lang.Object) -> replaceSystemProperties
    java.lang.String replace(java.lang.String) -> replace
    java.lang.String replace(java.lang.String,int,int) -> replace
    java.lang.String replace(char[]) -> replace
    java.lang.String replace(char[],int,int) -> replace
    java.lang.String replace(java.lang.StringBuffer) -> replace
    java.lang.String replace(java.lang.StringBuffer,int,int) -> replace
    java.lang.String replace(org.apache.commons.lang.text.StrBuilder) -> replace
    java.lang.String replace(org.apache.commons.lang.text.StrBuilder,int,int) -> replace
    java.lang.String replace(java.lang.Object) -> replace
    boolean replaceIn(java.lang.StringBuffer) -> replaceIn
    boolean replaceIn(java.lang.StringBuffer,int,int) -> replaceIn
    boolean replaceIn(org.apache.commons.lang.text.StrBuilder) -> replaceIn
    boolean replaceIn(org.apache.commons.lang.text.StrBuilder,int,int) -> replaceIn
    boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int) -> substitute
    int substitute(org.apache.commons.lang.text.StrBuilder,int,int,java.util.List) -> substitute
    void checkCyclicSubstitution(java.lang.String,java.util.List) -> checkCyclicSubstitution
    java.lang.String resolveVariable(java.lang.String,org.apache.commons.lang.text.StrBuilder,int,int) -> resolveVariable
    char getEscapeChar() -> getEscapeChar
    void setEscapeChar(char) -> setEscapeChar
    org.apache.commons.lang.text.StrMatcher getVariablePrefixMatcher() -> getVariablePrefixMatcher
    org.apache.commons.lang.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang.text.StrMatcher) -> setVariablePrefixMatcher
    org.apache.commons.lang.text.StrSubstitutor setVariablePrefix(char) -> setVariablePrefix
    org.apache.commons.lang.text.StrSubstitutor setVariablePrefix(java.lang.String) -> setVariablePrefix
    org.apache.commons.lang.text.StrMatcher getVariableSuffixMatcher() -> getVariableSuffixMatcher
    org.apache.commons.lang.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang.text.StrMatcher) -> setVariableSuffixMatcher
    org.apache.commons.lang.text.StrSubstitutor setVariableSuffix(char) -> setVariableSuffix
    org.apache.commons.lang.text.StrSubstitutor setVariableSuffix(java.lang.String) -> setVariableSuffix
    org.apache.commons.lang.text.StrLookup getVariableResolver() -> getVariableResolver
    void setVariableResolver(org.apache.commons.lang.text.StrLookup) -> setVariableResolver
org.apache.commons.lang.text.StrTokenizer -> org.apache.commons.lang.text.StrTokenizer:
    org.apache.commons.lang.text.StrTokenizer CSV_TOKENIZER_PROTOTYPE -> CSV_TOKENIZER_PROTOTYPE
    org.apache.commons.lang.text.StrTokenizer TSV_TOKENIZER_PROTOTYPE -> TSV_TOKENIZER_PROTOTYPE
    char[] chars -> chars
    java.lang.String[] tokens -> tokens
    int tokenPos -> tokenPos
    org.apache.commons.lang.text.StrMatcher delimMatcher -> delimMatcher
    org.apache.commons.lang.text.StrMatcher quoteMatcher -> quoteMatcher
    org.apache.commons.lang.text.StrMatcher ignoredMatcher -> ignoredMatcher
    org.apache.commons.lang.text.StrMatcher trimmerMatcher -> trimmerMatcher
    boolean emptyAsNull -> emptyAsNull
    boolean ignoreEmptyTokens -> ignoreEmptyTokens
    org.apache.commons.lang.text.StrTokenizer getCSVClone() -> getCSVClone
    org.apache.commons.lang.text.StrTokenizer getCSVInstance() -> getCSVInstance
    org.apache.commons.lang.text.StrTokenizer getCSVInstance(java.lang.String) -> getCSVInstance
    org.apache.commons.lang.text.StrTokenizer getCSVInstance(char[]) -> getCSVInstance
    org.apache.commons.lang.text.StrTokenizer getTSVClone() -> getTSVClone
    org.apache.commons.lang.text.StrTokenizer getTSVInstance() -> getTSVInstance
    org.apache.commons.lang.text.StrTokenizer getTSVInstance(java.lang.String) -> getTSVInstance
    org.apache.commons.lang.text.StrTokenizer getTSVInstance(char[]) -> getTSVInstance
    int size() -> size
    java.lang.String nextToken() -> nextToken
    java.lang.String previousToken() -> previousToken
    java.lang.String[] getTokenArray() -> getTokenArray
    java.util.List getTokenList() -> getTokenList
    org.apache.commons.lang.text.StrTokenizer reset() -> reset
    org.apache.commons.lang.text.StrTokenizer reset(java.lang.String) -> reset
    org.apache.commons.lang.text.StrTokenizer reset(char[]) -> reset
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
    void checkTokenized() -> checkTokenized
    java.util.List tokenize(char[],int,int) -> tokenize
    void addToken(java.util.List,java.lang.String) -> addToken
    int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List) -> readNextToken
    int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int) -> readWithQuotes
    boolean isQuote(char[],int,int,int,int) -> isQuote
    org.apache.commons.lang.text.StrMatcher getDelimiterMatcher() -> getDelimiterMatcher
    org.apache.commons.lang.text.StrTokenizer setDelimiterMatcher(org.apache.commons.lang.text.StrMatcher) -> setDelimiterMatcher
    org.apache.commons.lang.text.StrTokenizer setDelimiterChar(char) -> setDelimiterChar
    org.apache.commons.lang.text.StrTokenizer setDelimiterString(java.lang.String) -> setDelimiterString
    org.apache.commons.lang.text.StrMatcher getQuoteMatcher() -> getQuoteMatcher
    org.apache.commons.lang.text.StrTokenizer setQuoteMatcher(org.apache.commons.lang.text.StrMatcher) -> setQuoteMatcher
    org.apache.commons.lang.text.StrTokenizer setQuoteChar(char) -> setQuoteChar
    org.apache.commons.lang.text.StrMatcher getIgnoredMatcher() -> getIgnoredMatcher
    org.apache.commons.lang.text.StrTokenizer setIgnoredMatcher(org.apache.commons.lang.text.StrMatcher) -> setIgnoredMatcher
    org.apache.commons.lang.text.StrTokenizer setIgnoredChar(char) -> setIgnoredChar
    org.apache.commons.lang.text.StrMatcher getTrimmerMatcher() -> getTrimmerMatcher
    org.apache.commons.lang.text.StrTokenizer setTrimmerMatcher(org.apache.commons.lang.text.StrMatcher) -> setTrimmerMatcher
    boolean isEmptyTokenAsNull() -> isEmptyTokenAsNull
    org.apache.commons.lang.text.StrTokenizer setEmptyTokenAsNull(boolean) -> setEmptyTokenAsNull
    boolean isIgnoreEmptyTokens() -> isIgnoreEmptyTokens
    org.apache.commons.lang.text.StrTokenizer setIgnoreEmptyTokens(boolean) -> setIgnoreEmptyTokens
    java.lang.String getContent() -> getContent
    java.lang.Object clone() -> clone
    java.lang.Object cloneReset() -> cloneReset
    java.lang.String toString() -> toString
org.apache.commons.lang.time.DateFormatUtils -> org.apache.commons.lang.time.DateFormatUtils:
    org.apache.commons.lang.time.FastDateFormat ISO_DATETIME_FORMAT -> ISO_DATETIME_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_DATETIME_TIME_ZONE_FORMAT -> ISO_DATETIME_TIME_ZONE_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_DATE_FORMAT -> ISO_DATE_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_DATE_TIME_ZONE_FORMAT -> ISO_DATE_TIME_ZONE_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_TIME_FORMAT -> ISO_TIME_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_TIME_TIME_ZONE_FORMAT -> ISO_TIME_TIME_ZONE_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_TIME_NO_T_FORMAT -> ISO_TIME_NO_T_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_TIME_NO_T_TIME_ZONE_FORMAT -> ISO_TIME_NO_T_TIME_ZONE_FORMAT
    org.apache.commons.lang.time.FastDateFormat SMTP_DATETIME_FORMAT -> SMTP_DATETIME_FORMAT
    java.lang.String formatUTC(long,java.lang.String) -> formatUTC
    java.lang.String formatUTC(java.util.Date,java.lang.String) -> formatUTC
    java.lang.String formatUTC(long,java.lang.String,java.util.Locale) -> formatUTC
    java.lang.String formatUTC(java.util.Date,java.lang.String,java.util.Locale) -> formatUTC
    java.lang.String format(long,java.lang.String) -> format
    java.lang.String format(java.util.Date,java.lang.String) -> format
    java.lang.String format(long,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(long,java.lang.String,java.util.Locale) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.Locale) -> format
    java.lang.String format(long,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
org.apache.commons.lang.time.DateUtils -> org.apache.commons.lang.time.DateUtils:
    java.util.TimeZone UTC_TIME_ZONE -> UTC_TIME_ZONE
    long MILLIS_PER_SECOND -> MILLIS_PER_SECOND
    long MILLIS_PER_MINUTE -> MILLIS_PER_MINUTE
    long MILLIS_PER_HOUR -> MILLIS_PER_HOUR
    long MILLIS_PER_DAY -> MILLIS_PER_DAY
    int SEMI_MONTH -> SEMI_MONTH
    int[][] fields -> fields
    int RANGE_WEEK_SUNDAY -> RANGE_WEEK_SUNDAY
    int RANGE_WEEK_MONDAY -> RANGE_WEEK_MONDAY
    int RANGE_WEEK_RELATIVE -> RANGE_WEEK_RELATIVE
    int RANGE_WEEK_CENTER -> RANGE_WEEK_CENTER
    int RANGE_MONTH_SUNDAY -> RANGE_MONTH_SUNDAY
    int RANGE_MONTH_MONDAY -> RANGE_MONTH_MONDAY
    int MILLIS_IN_SECOND -> MILLIS_IN_SECOND
    int MILLIS_IN_MINUTE -> MILLIS_IN_MINUTE
    int MILLIS_IN_HOUR -> MILLIS_IN_HOUR
    int MILLIS_IN_DAY -> MILLIS_IN_DAY
    boolean isSameDay(java.util.Date,java.util.Date) -> isSameDay
    boolean isSameDay(java.util.Calendar,java.util.Calendar) -> isSameDay
    boolean isSameInstant(java.util.Date,java.util.Date) -> isSameInstant
    boolean isSameInstant(java.util.Calendar,java.util.Calendar) -> isSameInstant
    boolean isSameLocalTime(java.util.Calendar,java.util.Calendar) -> isSameLocalTime
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date addYears(java.util.Date,int) -> addYears
    java.util.Date addMonths(java.util.Date,int) -> addMonths
    java.util.Date addWeeks(java.util.Date,int) -> addWeeks
    java.util.Date addDays(java.util.Date,int) -> addDays
    java.util.Date addHours(java.util.Date,int) -> addHours
    java.util.Date addMinutes(java.util.Date,int) -> addMinutes
    java.util.Date addSeconds(java.util.Date,int) -> addSeconds
    java.util.Date addMilliseconds(java.util.Date,int) -> addMilliseconds
    java.util.Date add(java.util.Date,int,int) -> add
    java.util.Date round(java.util.Date,int) -> round
    java.util.Calendar round(java.util.Calendar,int) -> round
    java.util.Date round(java.lang.Object,int) -> round
    java.util.Date truncate(java.util.Date,int) -> truncate
    java.util.Calendar truncate(java.util.Calendar,int) -> truncate
    java.util.Date truncate(java.lang.Object,int) -> truncate
    void modify(java.util.Calendar,int,boolean) -> modify
    java.util.Iterator iterator(java.util.Date,int) -> iterator
    java.util.Iterator iterator(java.util.Calendar,int) -> iterator
    java.util.Iterator iterator(java.lang.Object,int) -> iterator
org.apache.commons.lang.time.DateUtils$DateIterator -> org.apache.commons.lang.time.DateUtils$DateIterator:
    java.util.Calendar endFinal -> endFinal
    java.util.Calendar spot -> spot
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.commons.lang.time.DurationFormatUtils -> org.apache.commons.lang.time.DurationFormatUtils:
    java.lang.String ISO_EXTENDED_FORMAT_PATTERN -> ISO_EXTENDED_FORMAT_PATTERN
    java.lang.Object y -> y
    java.lang.Object M -> M
    java.lang.Object d -> d
    java.lang.Object H -> H
    java.lang.Object m -> m
    java.lang.Object s -> s
    java.lang.Object S -> S
    java.lang.String formatDurationHMS(long) -> formatDurationHMS
    java.lang.String formatDurationISO(long) -> formatDurationISO
    java.lang.String formatDuration(long,java.lang.String) -> formatDuration
    java.lang.String formatDuration(long,java.lang.String,boolean) -> formatDuration
    java.lang.String formatDurationWords(long,boolean,boolean) -> formatDurationWords
    java.lang.String formatPeriodISO(long,long) -> formatPeriodISO
    java.lang.String formatPeriod(long,long,java.lang.String) -> formatPeriod
    java.lang.String formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone) -> formatPeriod
    java.lang.String format(org.apache.commons.lang.time.DurationFormatUtils$Token[],int,int,int,int,int,int,int,boolean) -> format
    int reduceAndCorrect(java.util.Calendar,java.util.Calendar,int,int) -> reduceAndCorrect
    org.apache.commons.lang.time.DurationFormatUtils$Token[] lexx(java.lang.String) -> lexx
org.apache.commons.lang.time.DurationFormatUtils$Token -> org.apache.commons.lang.time.DurationFormatUtils$Token:
    java.lang.Object value -> value
    int count -> count
    boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object) -> containsTokenWithValue
    void increment() -> increment
    int getCount() -> getCount
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.time.FastDateFormat -> org.apache.commons.lang.time.FastDateFormat:
    long serialVersionUID -> serialVersionUID
    int FULL -> FULL
    int LONG -> LONG
    int MEDIUM -> MEDIUM
    int SHORT -> SHORT
    java.lang.String cDefaultPattern -> cDefaultPattern
    java.util.Map cInstanceCache -> cInstanceCache
    java.util.Map cDateInstanceCache -> cDateInstanceCache
    java.util.Map cTimeInstanceCache -> cTimeInstanceCache
    java.util.Map cDateTimeInstanceCache -> cDateTimeInstanceCache
    java.util.Map cTimeZoneDisplayCache -> cTimeZoneDisplayCache
    java.lang.String mPattern -> mPattern
    java.util.TimeZone mTimeZone -> mTimeZone
    boolean mTimeZoneForced -> mTimeZoneForced
    java.util.Locale mLocale -> mLocale
    boolean mLocaleForced -> mLocaleForced
    org.apache.commons.lang.time.FastDateFormat$Rule[] mRules -> mRules
    int mMaxLengthEstimate -> mMaxLengthEstimate
    org.apache.commons.lang.time.FastDateFormat getInstance() -> getInstance
    org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String) -> getInstance
    org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone) -> getInstance
    org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String,java.util.Locale) -> getInstance
    org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> getInstance
    org.apache.commons.lang.time.FastDateFormat getDateInstance(int) -> getDateInstance
    org.apache.commons.lang.time.FastDateFormat getDateInstance(int,java.util.Locale) -> getDateInstance
    org.apache.commons.lang.time.FastDateFormat getDateInstance(int,java.util.TimeZone) -> getDateInstance
    org.apache.commons.lang.time.FastDateFormat getDateInstance(int,java.util.TimeZone,java.util.Locale) -> getDateInstance
    org.apache.commons.lang.time.FastDateFormat getTimeInstance(int) -> getTimeInstance
    org.apache.commons.lang.time.FastDateFormat getTimeInstance(int,java.util.Locale) -> getTimeInstance
    org.apache.commons.lang.time.FastDateFormat getTimeInstance(int,java.util.TimeZone) -> getTimeInstance
    org.apache.commons.lang.time.FastDateFormat getTimeInstance(int,java.util.TimeZone,java.util.Locale) -> getTimeInstance
    org.apache.commons.lang.time.FastDateFormat getDateTimeInstance(int,int) -> getDateTimeInstance
    org.apache.commons.lang.time.FastDateFormat getDateTimeInstance(int,int,java.util.Locale) -> getDateTimeInstance
    org.apache.commons.lang.time.FastDateFormat getDateTimeInstance(int,int,java.util.TimeZone) -> getDateTimeInstance
    org.apache.commons.lang.time.FastDateFormat getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale) -> getDateTimeInstance
    java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale) -> getTimeZoneDisplay
    java.lang.String getDefaultPattern() -> getDefaultPattern
    void init() -> init
    java.util.List parsePattern() -> parsePattern
    java.lang.String parseToken(java.lang.String,int[]) -> parseToken
    org.apache.commons.lang.time.FastDateFormat$NumberRule selectNumberRule(int,int) -> selectNumberRule
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.String format(long) -> format
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Calendar) -> format
    java.lang.StringBuffer format(long,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer) -> format
    java.lang.StringBuffer applyRules(java.util.Calendar,java.lang.StringBuffer) -> applyRules
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    boolean getTimeZoneOverridesCalendar() -> getTimeZoneOverridesCalendar
    java.util.Locale getLocale() -> getLocale
    int getMaxLengthEstimate() -> getMaxLengthEstimate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.time.FastDateFormat$CharacterLiteral -> org.apache.commons.lang.time.FastDateFormat$CharacterLiteral:
    char mValue -> mValue
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$NumberRule -> org.apache.commons.lang.time.FastDateFormat$NumberRule:
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$PaddedNumberField -> org.apache.commons.lang.time.FastDateFormat$PaddedNumberField:
    int mField -> mField
    int mSize -> mSize
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$Pair -> org.apache.commons.lang.time.FastDateFormat$Pair:
    java.lang.Object mObj1 -> mObj1
    java.lang.Object mObj2 -> mObj2
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.time.FastDateFormat$Rule -> org.apache.commons.lang.time.FastDateFormat$Rule:
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$StringLiteral -> org.apache.commons.lang.time.FastDateFormat$StringLiteral:
    java.lang.String mValue -> mValue
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TextField -> org.apache.commons.lang.time.FastDateFormat$TextField:
    int mField -> mField
    java.lang.String[] mValues -> mValues
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TimeZoneDisplayKey -> org.apache.commons.lang.time.FastDateFormat$TimeZoneDisplayKey:
    java.util.TimeZone mTimeZone -> mTimeZone
    int mStyle -> mStyle
    java.util.Locale mLocale -> mLocale
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.lang.time.FastDateFormat$TimeZoneNameRule -> org.apache.commons.lang.time.FastDateFormat$TimeZoneNameRule:
    java.util.TimeZone mTimeZone -> mTimeZone
    boolean mTimeZoneForced -> mTimeZoneForced
    java.util.Locale mLocale -> mLocale
    int mStyle -> mStyle
    java.lang.String mStandard -> mStandard
    java.lang.String mDaylight -> mDaylight
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule -> org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule:
    org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule INSTANCE_COLON -> INSTANCE_COLON
    org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule INSTANCE_NO_COLON -> INSTANCE_NO_COLON
    boolean mColon -> mColon
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TwelveHourField -> org.apache.commons.lang.time.FastDateFormat$TwelveHourField:
    org.apache.commons.lang.time.FastDateFormat$NumberRule mRule -> mRule
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TwentyFourHourField -> org.apache.commons.lang.time.FastDateFormat$TwentyFourHourField:
    org.apache.commons.lang.time.FastDateFormat$NumberRule mRule -> mRule
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TwoDigitMonthField -> org.apache.commons.lang.time.FastDateFormat$TwoDigitMonthField:
    org.apache.commons.lang.time.FastDateFormat$TwoDigitMonthField INSTANCE -> INSTANCE
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TwoDigitNumberField -> org.apache.commons.lang.time.FastDateFormat$TwoDigitNumberField:
    int mField -> mField
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TwoDigitYearField -> org.apache.commons.lang.time.FastDateFormat$TwoDigitYearField:
    org.apache.commons.lang.time.FastDateFormat$TwoDigitYearField INSTANCE -> INSTANCE
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$UnpaddedMonthField -> org.apache.commons.lang.time.FastDateFormat$UnpaddedMonthField:
    org.apache.commons.lang.time.FastDateFormat$UnpaddedMonthField INSTANCE -> INSTANCE
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField -> org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField:
    org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField INSTANCE_YEAR -> INSTANCE_YEAR
    int mField -> mField
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.StopWatch -> org.apache.commons.lang.time.StopWatch:
    int STATE_UNSTARTED -> STATE_UNSTARTED
    int STATE_RUNNING -> STATE_RUNNING
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_SUSPENDED -> STATE_SUSPENDED
    int STATE_UNSPLIT -> STATE_UNSPLIT
    int STATE_SPLIT -> STATE_SPLIT
    int runningState -> runningState
    int splitState -> splitState
    long startTime -> startTime
    long stopTime -> stopTime
    void start() -> start
    void stop() -> stop
    void reset() -> reset
    void split() -> split
    void unsplit() -> unsplit
    void suspend() -> suspend
    void resume() -> resume
    long getTime() -> getTime
    long getSplitTime() -> getSplitTime
    java.lang.String toString() -> toString
    java.lang.String toSplitString() -> toSplitString
org.apache.harmony.awt.ContextStorage -> org.apache.harmony.awt.ContextStorage:
    boolean shutdownPending -> shutdownPending
    org.apache.harmony.awt.ContextStorage globalContext -> globalContext
    java.awt.Toolkit toolkit -> toolkit
    org.apache.harmony.awt.datatransfer.DTK dtk -> dtk
    java.awt.GraphicsEnvironment graphicsEnvironment -> graphicsEnvironment
    java.lang.Object contextLock -> contextLock
    void setDefaultToolkit(java.awt.Toolkit) -> setDefaultToolkit
    java.awt.Toolkit getDefaultToolkit() -> getDefaultToolkit
    void setDTK(org.apache.harmony.awt.datatransfer.DTK) -> setDTK
    org.apache.harmony.awt.datatransfer.DTK getDTK() -> getDTK
    java.lang.Object getContextLock() -> getContextLock
    java.awt.GraphicsEnvironment getGraphicsEnvironment() -> getGraphicsEnvironment
    void setGraphicsEnvironment(java.awt.GraphicsEnvironment) -> setGraphicsEnvironment
    org.apache.harmony.awt.ContextStorage getCurrentContext() -> getCurrentContext
    boolean shutdownPending() -> shutdownPending
    void shutdown() -> shutdown
org.apache.harmony.awt.ContextStorage$ContextLock -> org.apache.harmony.awt.ContextStorage$ContextLock:
    org.apache.harmony.awt.ContextStorage this$0 -> this$0
org.apache.harmony.awt.datatransfer.DTK -> org.apache.harmony.awt.datatransfer.DTK:
    org.apache.harmony.awt.datatransfer.NativeClipboard nativeClipboard -> nativeClipboard
    org.apache.harmony.awt.datatransfer.NativeClipboard nativeSelection -> nativeSelection
    java.awt.datatransfer.SystemFlavorMap systemFlavorMap -> systemFlavorMap
    org.apache.harmony.awt.datatransfer.DataTransferThread dataTransferThread -> dataTransferThread
    org.apache.harmony.awt.datatransfer.DTK getDTK() -> getDTK
    java.awt.datatransfer.SystemFlavorMap getSystemFlavorMap() -> getSystemFlavorMap
    void setSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap) -> setSystemFlavorMap
    org.apache.harmony.awt.datatransfer.NativeClipboard getNativeClipboard() -> getNativeClipboard
    org.apache.harmony.awt.datatransfer.NativeClipboard getNativeSelection() -> getNativeSelection
    org.apache.harmony.awt.datatransfer.NativeClipboard newNativeClipboard() -> newNativeClipboard
    org.apache.harmony.awt.datatransfer.NativeClipboard newNativeSelection() -> newNativeSelection
    void initDragAndDrop() -> initDragAndDrop
    void runEventLoop() -> runEventLoop
    java.awt.dnd.peer.DropTargetContextPeer createDropTargetContextPeer(java.awt.dnd.DropTargetContext) -> createDropTargetContextPeer
    java.awt.dnd.peer.DragSourceContextPeer createDragSourceContextPeer(java.awt.dnd.DragGestureEvent) -> createDragSourceContextPeer
    org.apache.harmony.awt.datatransfer.DTK createDTK() -> createDTK
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String[] getCharsets() -> getCharsets
    void initSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap) -> initSystemFlavorMap
    void appendSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap,java.awt.datatransfer.DataFlavor,java.lang.String) -> appendSystemFlavorMap
    void appendSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap,java.lang.String[],java.lang.String,java.lang.String) -> appendSystemFlavorMap
org.apache.harmony.awt.datatransfer.DataProvider -> org.apache.harmony.awt.datatransfer.DataProvider:
    java.lang.String FORMAT_TEXT -> FORMAT_TEXT
    java.lang.String FORMAT_FILE_LIST -> FORMAT_FILE_LIST
    java.lang.String FORMAT_URL -> FORMAT_URL
    java.lang.String FORMAT_HTML -> FORMAT_HTML
    java.lang.String FORMAT_IMAGE -> FORMAT_IMAGE
    java.lang.String TYPE_IMAGE -> TYPE_IMAGE
    java.lang.String TYPE_SERIALIZED -> TYPE_SERIALIZED
    java.lang.String TYPE_PLAINTEXT -> TYPE_PLAINTEXT
    java.lang.String TYPE_HTML -> TYPE_HTML
    java.lang.String TYPE_URL -> TYPE_URL
    java.lang.String TYPE_TEXTENCODING -> TYPE_TEXTENCODING
    java.lang.String TYPE_FILELIST -> TYPE_FILELIST
    java.lang.String TYPE_URILIST -> TYPE_URILIST
    java.awt.datatransfer.DataFlavor urlFlavor -> urlFlavor
    java.awt.datatransfer.DataFlavor uriFlavor -> uriFlavor
    java.lang.String[] getNativeFormats() -> getNativeFormats
    boolean isNativeFormatAvailable(java.lang.String) -> isNativeFormatAvailable
    java.lang.String getText() -> getText
    java.lang.String[] getFileList() -> getFileList
    java.lang.String getURL() -> getURL
    java.lang.String getHTML() -> getHTML
    org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap() -> getRawBitmap
    byte[] getSerializedObject(java.lang.Class) -> getSerializedObject
org.apache.harmony.awt.datatransfer.DataProxy -> org.apache.harmony.awt.datatransfer.DataProxy:
    java.lang.Class[] unicodeTextClasses -> unicodeTextClasses
    java.lang.Class[] charsetTextClasses -> charsetTextClasses
    org.apache.harmony.awt.datatransfer.DataProvider data -> data
    java.awt.datatransfer.SystemFlavorMap flavorMap -> flavorMap
    org.apache.harmony.awt.datatransfer.DataProvider getDataProvider() -> getDataProvider
    java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) -> getTransferData
    java.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor) -> isDataFlavorSupported
    java.lang.Object getPlainText(java.awt.datatransfer.DataFlavor) -> getPlainText
    java.lang.Object getFileList(java.awt.datatransfer.DataFlavor) -> getFileList
    java.lang.Object getHTML(java.awt.datatransfer.DataFlavor) -> getHTML
    java.lang.Object getURL(java.awt.datatransfer.DataFlavor) -> getURL
    java.lang.Object getSerializedObject(java.awt.datatransfer.DataFlavor) -> getSerializedObject
    java.lang.String getCharset(java.awt.datatransfer.DataFlavor) -> getCharset
    java.lang.Object getTextRepresentation(java.lang.String,java.awt.datatransfer.DataFlavor) -> getTextRepresentation
    java.awt.Image getImage(java.awt.datatransfer.DataFlavor) -> getImage
    boolean isRGB(org.apache.harmony.awt.datatransfer.RawBitmap) -> isRGB
    boolean isBGR(org.apache.harmony.awt.datatransfer.RawBitmap) -> isBGR
    java.awt.image.BufferedImage createBufferedImage(org.apache.harmony.awt.datatransfer.RawBitmap) -> createBufferedImage
org.apache.harmony.awt.datatransfer.DataSnapshot -> org.apache.harmony.awt.datatransfer.DataSnapshot:
    java.lang.String text -> text
    java.lang.String[] fileList -> fileList
    java.lang.String url -> url
    java.lang.String html -> html
    org.apache.harmony.awt.datatransfer.RawBitmap rawBitmap -> rawBitmap
    java.lang.String[] nativeFormats -> nativeFormats
    java.util.Map serializedObjects -> serializedObjects
    boolean isNativeFormatAvailable(java.lang.String) -> isNativeFormatAvailable
    java.lang.String getText() -> getText
    java.lang.String[] getFileList() -> getFileList
    java.lang.String getURL() -> getURL
    java.lang.String getHTML() -> getHTML
    org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap() -> getRawBitmap
    int[] getRawBitmapHeader() -> getRawBitmapHeader
    byte[] getRawBitmapBuffer8() -> getRawBitmapBuffer8
    short[] getRawBitmapBuffer16() -> getRawBitmapBuffer16
    int[] getRawBitmapBuffer32() -> getRawBitmapBuffer32
    byte[] getSerializedObject(java.lang.Class) -> getSerializedObject
    byte[] getSerializedObject(java.lang.String) -> getSerializedObject
    java.lang.String[] getNativeFormats() -> getNativeFormats
org.apache.harmony.awt.datatransfer.DataSource -> org.apache.harmony.awt.datatransfer.DataSource:
    java.awt.datatransfer.DataFlavor[] flavors -> flavors
    java.util.List nativeFormats -> nativeFormats
    java.awt.datatransfer.Transferable contents -> contents
    boolean isHtmlFlavor(java.awt.datatransfer.DataFlavor) -> isHtmlFlavor
    java.awt.datatransfer.DataFlavor[] getDataFlavors() -> getDataFlavors
    java.lang.String[] getNativeFormats() -> getNativeFormats
    java.util.List getNativeFormatsList() -> getNativeFormatsList
    java.util.List getNativesForFlavors(java.awt.datatransfer.DataFlavor[]) -> getNativesForFlavors
    java.lang.String getTextFromReader(java.io.Reader) -> getTextFromReader
    java.lang.String getText(boolean) -> getText
    java.lang.String getText() -> getText
    java.lang.String[] getFileList() -> getFileList
    java.lang.String getURL() -> getURL
    java.lang.String getHTML() -> getHTML
    org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap() -> getRawBitmap
    org.apache.harmony.awt.datatransfer.RawBitmap getImageBitmap(java.awt.Image) -> getImageBitmap
    org.apache.harmony.awt.datatransfer.RawBitmap getImageBitmap32(java.awt.image.BufferedImage) -> getImageBitmap32
    byte[] getSerializedObject(java.lang.Class) -> getSerializedObject
    boolean isNativeFormatAvailable(java.lang.String) -> isNativeFormatAvailable
org.apache.harmony.awt.datatransfer.DataTransferThread -> org.apache.harmony.awt.datatransfer.DataTransferThread:
    org.apache.harmony.awt.datatransfer.DTK dtk -> dtk
    void run() -> run
    void start() -> start
org.apache.harmony.awt.datatransfer.DragSourceEventProxy -> org.apache.harmony.awt.datatransfer.DragSourceEventProxy:
    int DRAG_ENTER -> DRAG_ENTER
    int DRAG_OVER -> DRAG_OVER
    int DRAG_ACTION_CHANGED -> DRAG_ACTION_CHANGED
    int DRAG_MOUSE_MOVED -> DRAG_MOUSE_MOVED
    int DRAG_EXIT -> DRAG_EXIT
    int DRAG_DROP_END -> DRAG_DROP_END
    java.awt.dnd.DragSourceContext context -> context
    int type -> type
    int userAction -> userAction
    int targetActions -> targetActions
    int x -> x
    int y -> y
    int modifiers -> modifiers
    boolean success -> success
    void run() -> run
    java.awt.dnd.DragSourceDragEvent newDragSourceDragEvent() -> newDragSourceDragEvent
org.apache.harmony.awt.datatransfer.FlavorsComparator -> org.apache.harmony.awt.datatransfer.FlavorsComparator:
    int compare(java.awt.datatransfer.DataFlavor,java.awt.datatransfer.DataFlavor) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.harmony.awt.datatransfer.NativeClipboard -> org.apache.harmony.awt.datatransfer.NativeClipboard:
    int OPS_TIMEOUT -> OPS_TIMEOUT
    void onShutdown() -> onShutdown
    void onRestart() -> onRestart
org.apache.harmony.awt.datatransfer.RawBitmap -> org.apache.harmony.awt.datatransfer.RawBitmap:
    int width -> width
    int height -> height
    int stride -> stride
    int bits -> bits
    int rMask -> rMask
    int gMask -> gMask
    int bMask -> bMask
    java.lang.Object buffer -> buffer
    int[] getHeader() -> getHeader
org.apache.harmony.awt.datatransfer.TextFlavor -> org.apache.harmony.awt.datatransfer.TextFlavor:
    java.lang.Class[] unicodeTextClasses -> unicodeTextClasses
    java.lang.Class[] charsetTextClasses -> charsetTextClasses
    void addUnicodeClasses(java.awt.datatransfer.SystemFlavorMap,java.lang.String,java.lang.String) -> addUnicodeClasses
    void addCharsetClasses(java.awt.datatransfer.SystemFlavorMap,java.lang.String,java.lang.String,java.lang.String) -> addCharsetClasses
org.apache.harmony.awt.internal.nls.Messages -> org.apache.harmony.awt.internal.nls.Messages:
    java.util.ResourceBundle bundle -> bundle
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.Object) -> getString
    java.lang.String getString(java.lang.String,int) -> getString
    java.lang.String getString(java.lang.String,char) -> getString
    java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object) -> getString
    java.lang.String getString(java.lang.String,java.lang.Object[]) -> getString
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    java.util.ResourceBundle setLocale(java.util.Locale,java.lang.String) -> setLocale
org.apache.harmony.awt.internal.nls.Messages$1 -> org.apache.harmony.awt.internal.nls.Messages$1:
    java.lang.String val$resource -> val$resource
    java.util.Locale val$locale -> val$locale
    java.lang.ClassLoader val$loader -> val$loader
    java.lang.Object run() -> run
org.apache.harmony.misc.SystemUtils -> org.apache.harmony.misc.SystemUtils:
    int OS_WINDOWS -> OS_WINDOWS
    int OS_LINUX -> OS_LINUX
    int OS_UNKNOWN -> OS_UNKNOWN
    int ARC_IA32 -> ARC_IA32
    int ARC_IA64 -> ARC_IA64
    int ARC_UNKNOWN -> ARC_UNKNOWN
    int os -> os
    int arc -> arc
    int getOS() -> getOS
org.apache.http.ConnectionClosedException -> org.apache.http.ConnectionClosedException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ConnectionReuseStrategy -> org.apache.http.ConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.FormattedHeader -> org.apache.http.FormattedHeader:
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    int getValuePos() -> getValuePos
org.apache.http.Header -> org.apache.http.Header:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
org.apache.http.HeaderElement -> org.apache.http.HeaderElement:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
org.apache.http.HeaderElementIterator -> org.apache.http.HeaderElementIterator:
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
org.apache.http.HeaderIterator -> org.apache.http.HeaderIterator:
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
org.apache.http.HttpClientConnection -> org.apache.http.HttpClientConnection:
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
org.apache.http.HttpConnection -> org.apache.http.HttpConnection:
    void close() -> close
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.HttpConnectionMetrics -> org.apache.http.HttpConnectionMetrics:
    long getRequestCount() -> getRequestCount
    long getResponseCount() -> getResponseCount
    long getSentBytesCount() -> getSentBytesCount
    long getReceivedBytesCount() -> getReceivedBytesCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void reset() -> reset
org.apache.http.HttpEntity -> org.apache.http.HttpEntity:
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.HttpEntityEnclosingRequest -> org.apache.http.HttpEntityEnclosingRequest:
    boolean expectContinue() -> expectContinue
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
org.apache.http.HttpException -> org.apache.http.HttpException:
    long serialVersionUID -> serialVersionUID
org.apache.http.HttpHeaders -> org.apache.http.HttpHeaders:
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String DAV -> DAV
    java.lang.String DEPTH -> DEPTH
    java.lang.String DESTINATION -> DESTINATION
    java.lang.String ETAG -> ETAG
    java.lang.String EXPECT -> EXPECT
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF -> IF
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    java.lang.String LOCK_TOKEN -> LOCK_TOKEN
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String OVERWRITE -> OVERWRITE
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SERVER -> SERVER
    java.lang.String STATUS_URI -> STATUS_URI
    java.lang.String TE -> TE
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String VARY -> VARY
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
org.apache.http.HttpHost -> org.apache.http.HttpHost:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_SCHEME_NAME -> DEFAULT_SCHEME_NAME
    java.lang.String hostname -> hostname
    java.lang.String lcHostname -> lcHostname
    int port -> port
    java.lang.String schemeName -> schemeName
    java.lang.String getHostName() -> getHostName
    int getPort() -> getPort
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String toURI() -> toURI
    java.lang.String toHostString() -> toHostString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
org.apache.http.HttpInetConnection -> org.apache.http.HttpInetConnection:
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
org.apache.http.HttpMessage -> org.apache.http.HttpMessage:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.HttpRequest -> org.apache.http.HttpRequest:
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
org.apache.http.HttpRequestFactory -> org.apache.http.HttpRequestFactory:
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.HttpRequestInterceptor -> org.apache.http.HttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpResponse -> org.apache.http.HttpResponse:
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.http.HttpResponseFactory -> org.apache.http.HttpResponseFactory:
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
org.apache.http.HttpResponseInterceptor -> org.apache.http.HttpResponseInterceptor:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpServerConnection -> org.apache.http.HttpServerConnection:
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    void flush() -> flush
org.apache.http.HttpStatus -> org.apache.http.HttpStatus:
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
org.apache.http.HttpVersion -> org.apache.http.HttpVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String HTTP -> HTTP
    org.apache.http.HttpVersion HTTP_0_9 -> HTTP_0_9
    org.apache.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    org.apache.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
org.apache.http.MalformedChunkCodingException -> org.apache.http.MalformedChunkCodingException:
    long serialVersionUID -> serialVersionUID
org.apache.http.MethodNotSupportedException -> org.apache.http.MethodNotSupportedException:
    long serialVersionUID -> serialVersionUID
org.apache.http.NameValuePair -> org.apache.http.NameValuePair:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
org.apache.http.NoHttpResponseException -> org.apache.http.NoHttpResponseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ParseException -> org.apache.http.ParseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ProtocolException -> org.apache.http.ProtocolException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ProtocolVersion -> org.apache.http.ProtocolVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String protocol -> protocol
    int major -> major
    int minor -> minor
    java.lang.String getProtocol() -> getProtocol
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isComparable(org.apache.http.ProtocolVersion) -> isComparable
    int compareToVersion(org.apache.http.ProtocolVersion) -> compareToVersion
    boolean greaterEquals(org.apache.http.ProtocolVersion) -> greaterEquals
    boolean lessEquals(org.apache.http.ProtocolVersion) -> lessEquals
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.ReasonPhraseCatalog -> org.apache.http.ReasonPhraseCatalog:
    java.lang.String getReason(int,java.util.Locale) -> getReason
org.apache.http.RequestLine -> org.apache.http.RequestLine:
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
org.apache.http.StatusLine -> org.apache.http.StatusLine:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
org.apache.http.TokenIterator -> org.apache.http.TokenIterator:
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
org.apache.http.TruncatedChunkException -> org.apache.http.TruncatedChunkException:
    long serialVersionUID -> serialVersionUID
org.apache.http.UnsupportedHttpVersionException -> org.apache.http.UnsupportedHttpVersionException:
    long serialVersionUID -> serialVersionUID
org.apache.http.annotation.GuardedBy -> org.apache.http.annotation.GuardedBy:
    java.lang.String value() -> value
org.apache.http.annotation.Immutable -> org.apache.http.annotation.Immutable:
org.apache.http.annotation.NotThreadSafe -> org.apache.http.annotation.NotThreadSafe:
org.apache.http.annotation.ThreadSafe -> org.apache.http.annotation.ThreadSafe:
org.apache.http.auth.AUTH -> org.apache.http.auth.AUTH:
    java.lang.String WWW_AUTH -> WWW_AUTH
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
    java.lang.String PROXY_AUTH -> PROXY_AUTH
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
org.apache.http.auth.AuthScheme -> org.apache.http.auth.AuthScheme:
    void processChallenge(org.apache.http.Header) -> processChallenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    boolean isComplete() -> isComplete
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
org.apache.http.auth.AuthSchemeFactory -> org.apache.http.auth.AuthSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.auth.AuthSchemeRegistry -> org.apache.http.auth.AuthSchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory) -> register
    void unregister(java.lang.String) -> unregister
    org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams) -> getAuthScheme
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
org.apache.http.auth.AuthScope -> org.apache.http.auth.AuthScope:
    java.lang.String ANY_HOST -> ANY_HOST
    int ANY_PORT -> ANY_PORT
    java.lang.String ANY_REALM -> ANY_REALM
    java.lang.String ANY_SCHEME -> ANY_SCHEME
    org.apache.http.auth.AuthScope ANY -> ANY
    java.lang.String scheme -> scheme
    java.lang.String realm -> realm
    java.lang.String host -> host
    int port -> port
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getRealm() -> getRealm
    java.lang.String getScheme() -> getScheme
    int match(org.apache.http.auth.AuthScope) -> match
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
org.apache.http.auth.AuthState -> org.apache.http.auth.AuthState:
    org.apache.http.auth.AuthScheme authScheme -> authScheme
    org.apache.http.auth.AuthScope authScope -> authScope
    org.apache.http.auth.Credentials credentials -> credentials
    void invalidate() -> invalidate
    boolean isValid() -> isValid
    void setAuthScheme(org.apache.http.auth.AuthScheme) -> setAuthScheme
    org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    org.apache.http.auth.Credentials getCredentials() -> getCredentials
    void setCredentials(org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.AuthScope getAuthScope() -> getAuthScope
    void setAuthScope(org.apache.http.auth.AuthScope) -> setAuthScope
    java.lang.String toString() -> toString
org.apache.http.auth.AuthenticationException -> org.apache.http.auth.AuthenticationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.BasicUserPrincipal -> org.apache.http.auth.BasicUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String getName() -> getName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.ContextAwareAuthScheme -> org.apache.http.auth.ContextAwareAuthScheme:
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.auth.Credentials -> org.apache.http.auth.Credentials:
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getPassword() -> getPassword
org.apache.http.auth.InvalidCredentialsException -> org.apache.http.auth.InvalidCredentialsException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.MalformedChallengeException -> org.apache.http.auth.MalformedChallengeException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.NTCredentials -> org.apache.http.auth.NTCredentials:
    long serialVersionUID -> serialVersionUID
    org.apache.http.auth.NTUserPrincipal principal -> principal
    java.lang.String password -> password
    java.lang.String workstation -> workstation
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    java.lang.String getDomain() -> getDomain
    java.lang.String getWorkstation() -> getWorkstation
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.NTUserPrincipal -> org.apache.http.auth.NTUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String domain -> domain
    java.lang.String ntname -> ntname
    java.lang.String getName() -> getName
    java.lang.String getDomain() -> getDomain
    java.lang.String getUsername() -> getUsername
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.UsernamePasswordCredentials -> org.apache.http.auth.UsernamePasswordCredentials:
    long serialVersionUID -> serialVersionUID
    org.apache.http.auth.BasicUserPrincipal principal -> principal
    java.lang.String password -> password
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.params.AuthPNames -> org.apache.http.auth.params.AuthPNames:
    java.lang.String CREDENTIAL_CHARSET -> CREDENTIAL_CHARSET
    java.lang.String TARGET_AUTH_PREF -> TARGET_AUTH_PREF
    java.lang.String PROXY_AUTH_PREF -> PROXY_AUTH_PREF
org.apache.http.auth.params.AuthParamBean -> org.apache.http.auth.params.AuthParamBean:
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
org.apache.http.auth.params.AuthParams -> org.apache.http.auth.params.AuthParams:
    java.lang.String getCredentialCharset(org.apache.http.params.HttpParams) -> getCredentialCharset
    void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String) -> setCredentialCharset
org.apache.http.client.AuthCache -> org.apache.http.client.AuthCache:
    void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> put
    org.apache.http.auth.AuthScheme get(org.apache.http.HttpHost) -> get
    void remove(org.apache.http.HttpHost) -> remove
    void clear() -> clear
org.apache.http.client.AuthenticationHandler -> org.apache.http.client.AuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.client.CircularRedirectException -> org.apache.http.client.CircularRedirectException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.ClientProtocolException -> org.apache.http.client.ClientProtocolException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.CookieStore -> org.apache.http.client.CookieStore:
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
org.apache.http.client.CredentialsProvider -> org.apache.http.client.CredentialsProvider:
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
org.apache.http.client.HttpClient -> org.apache.http.client.HttpClient:
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.HttpRequestRetryHandler -> org.apache.http.client.HttpRequestRetryHandler:
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
org.apache.http.client.HttpResponseException -> org.apache.http.client.HttpResponseException:
    long serialVersionUID -> serialVersionUID
    int statusCode -> statusCode
    int getStatusCode() -> getStatusCode
org.apache.http.client.NonRepeatableRequestException -> org.apache.http.client.NonRepeatableRequestException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.RedirectException -> org.apache.http.client.RedirectException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.RedirectHandler -> org.apache.http.client.RedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.client.RedirectStrategy -> org.apache.http.client.RedirectStrategy:
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
org.apache.http.client.RequestDirector -> org.apache.http.client.RequestDirector:
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.ResponseHandler -> org.apache.http.client.ResponseHandler:
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.client.UserTokenHandler -> org.apache.http.client.UserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
org.apache.http.client.entity.DecompressingEntity -> org.apache.http.client.entity.DecompressingEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    java.io.InputStream getDecompressingInputStream(java.io.InputStream) -> getDecompressingInputStream
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.client.entity.DeflateDecompressingEntity -> org.apache.http.client.entity.DeflateDecompressingEntity:
    java.io.InputStream getDecompressingInputStream(java.io.InputStream) -> getDecompressingInputStream
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
org.apache.http.client.entity.GzipDecompressingEntity -> org.apache.http.client.entity.GzipDecompressingEntity:
    java.io.InputStream getDecompressingInputStream(java.io.InputStream) -> getDecompressingInputStream
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
org.apache.http.client.entity.UrlEncodedFormEntity -> org.apache.http.client.entity.UrlEncodedFormEntity:
org.apache.http.client.methods.AbortableHttpRequest -> org.apache.http.client.methods.AbortableHttpRequest:
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
org.apache.http.client.methods.HttpDelete -> org.apache.http.client.methods.HttpDelete:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpEntityEnclosingRequestBase -> org.apache.http.client.methods.HttpEntityEnclosingRequestBase:
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpGet -> org.apache.http.client.methods.HttpGet:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpHead -> org.apache.http.client.methods.HttpHead:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpOptions -> org.apache.http.client.methods.HttpOptions:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
    java.util.Set getAllowedMethods(org.apache.http.HttpResponse) -> getAllowedMethods
org.apache.http.client.methods.HttpPost -> org.apache.http.client.methods.HttpPost:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPut -> org.apache.http.client.methods.HttpPut:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpRequestBase -> org.apache.http.client.methods.HttpRequestBase:
    java.util.concurrent.locks.Lock abortLock -> abortLock
    boolean aborted -> aborted
    java.net.URI uri -> uri
    org.apache.http.conn.ClientConnectionRequest connRequest -> connRequest
    org.apache.http.conn.ConnectionReleaseTrigger releaseTrigger -> releaseTrigger
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.net.URI getURI() -> getURI
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    void setURI(java.net.URI) -> setURI
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
    boolean isAborted() -> isAborted
    java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpTrace -> org.apache.http.client.methods.HttpTrace:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpUriRequest -> org.apache.http.client.methods.HttpUriRequest:
    java.lang.String getMethod() -> getMethod
    java.net.URI getURI() -> getURI
    void abort() -> abort
    boolean isAborted() -> isAborted
org.apache.http.client.params.AllClientPNames -> org.apache.http.client.params.AllClientPNames:
org.apache.http.client.params.AuthPolicy -> org.apache.http.client.params.AuthPolicy:
    java.lang.String NTLM -> NTLM
    java.lang.String DIGEST -> DIGEST
    java.lang.String BASIC -> BASIC
    java.lang.String SPNEGO -> SPNEGO
org.apache.http.client.params.ClientPNames -> org.apache.http.client.params.ClientPNames:
    java.lang.String CONNECTION_MANAGER_FACTORY_CLASS_NAME -> CONNECTION_MANAGER_FACTORY_CLASS_NAME
    java.lang.String CONNECTION_MANAGER_FACTORY -> CONNECTION_MANAGER_FACTORY
    java.lang.String HANDLE_REDIRECTS -> HANDLE_REDIRECTS
    java.lang.String REJECT_RELATIVE_REDIRECT -> REJECT_RELATIVE_REDIRECT
    java.lang.String MAX_REDIRECTS -> MAX_REDIRECTS
    java.lang.String ALLOW_CIRCULAR_REDIRECTS -> ALLOW_CIRCULAR_REDIRECTS
    java.lang.String HANDLE_AUTHENTICATION -> HANDLE_AUTHENTICATION
    java.lang.String COOKIE_POLICY -> COOKIE_POLICY
    java.lang.String VIRTUAL_HOST -> VIRTUAL_HOST
    java.lang.String DEFAULT_HEADERS -> DEFAULT_HEADERS
    java.lang.String DEFAULT_HOST -> DEFAULT_HOST
org.apache.http.client.params.ClientParamBean -> org.apache.http.client.params.ClientParamBean:
    void setConnectionManagerFactoryClassName(java.lang.String) -> setConnectionManagerFactoryClassName
    void setConnectionManagerFactory(org.apache.http.conn.ClientConnectionManagerFactory) -> setConnectionManagerFactory
    void setHandleRedirects(boolean) -> setHandleRedirects
    void setRejectRelativeRedirect(boolean) -> setRejectRelativeRedirect
    void setMaxRedirects(int) -> setMaxRedirects
    void setAllowCircularRedirects(boolean) -> setAllowCircularRedirects
    void setHandleAuthentication(boolean) -> setHandleAuthentication
    void setCookiePolicy(java.lang.String) -> setCookiePolicy
    void setVirtualHost(org.apache.http.HttpHost) -> setVirtualHost
    void setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    void setDefaultHost(org.apache.http.HttpHost) -> setDefaultHost
org.apache.http.client.params.CookiePolicy -> org.apache.http.client.params.CookiePolicy:
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String RFC_2109 -> RFC_2109
    java.lang.String RFC_2965 -> RFC_2965
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
org.apache.http.client.params.HttpClientParams -> org.apache.http.client.params.HttpClientParams:
    boolean isRedirecting(org.apache.http.params.HttpParams) -> isRedirecting
    void setRedirecting(org.apache.http.params.HttpParams,boolean) -> setRedirecting
    boolean isAuthenticating(org.apache.http.params.HttpParams) -> isAuthenticating
    void setAuthenticating(org.apache.http.params.HttpParams,boolean) -> setAuthenticating
    java.lang.String getCookiePolicy(org.apache.http.params.HttpParams) -> getCookiePolicy
    void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String) -> setCookiePolicy
org.apache.http.client.protocol.ClientContext -> org.apache.http.client.protocol.ClientContext:
    java.lang.String SCHEME_REGISTRY -> SCHEME_REGISTRY
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String AUTH_CACHE -> AUTH_CACHE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String AUTH_SCHEME_PREF -> AUTH_SCHEME_PREF
    java.lang.String USER_TOKEN -> USER_TOKEN
org.apache.http.client.protocol.ClientContextConfigurer -> org.apache.http.client.protocol.ClientContextConfigurer:
    org.apache.http.protocol.HttpContext context -> context
    void setCookieSpecRegistry(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecRegistry
    void setAuthSchemeRegistry(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemeRegistry
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    void setAuthSchemePref(java.util.List) -> setAuthSchemePref
org.apache.http.client.protocol.RequestAcceptEncoding -> org.apache.http.client.protocol.RequestAcceptEncoding:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestAddCookies -> org.apache.http.client.protocol.RequestAddCookies:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestAuthCache -> org.apache.http.client.protocol.RequestAuthCache:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void doPreemptiveAuth(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.auth.AuthState,org.apache.http.client.CredentialsProvider) -> doPreemptiveAuth
org.apache.http.client.protocol.RequestClientConnControl -> org.apache.http.client.protocol.RequestClientConnControl:
    org.apache.commons.logging.Log log -> log
    java.lang.String PROXY_CONN_DIRECTIVE -> PROXY_CONN_DIRECTIVE
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestDefaultHeaders -> org.apache.http.client.protocol.RequestDefaultHeaders:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestProxyAuthentication -> org.apache.http.client.protocol.RequestProxyAuthentication:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestTargetAuthentication -> org.apache.http.client.protocol.RequestTargetAuthentication:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseAuthCache -> org.apache.http.client.protocol.ResponseAuthCache:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    boolean isCachable(org.apache.http.auth.AuthState) -> isCachable
    void cache(org.apache.http.client.AuthCache,org.apache.http.HttpHost,org.apache.http.auth.AuthState) -> cache
org.apache.http.client.protocol.ResponseContentEncoding -> org.apache.http.client.protocol.ResponseContentEncoding:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseProcessCookies -> org.apache.http.client.protocol.ResponseProcessCookies:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    void processCookies(org.apache.http.HeaderIterator,org.apache.http.cookie.CookieSpec,org.apache.http.cookie.CookieOrigin,org.apache.http.client.CookieStore) -> processCookies
org.apache.http.client.utils.CloneUtils -> org.apache.http.client.utils.CloneUtils:
    java.lang.Object clone(java.lang.Object) -> clone
org.apache.http.client.utils.Idn -> org.apache.http.client.utils.Idn:
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.JdkIdn -> org.apache.http.client.utils.JdkIdn:
    java.lang.reflect.Method toUnicode -> toUnicode
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.Punycode -> org.apache.http.client.utils.Punycode:
    org.apache.http.client.utils.Idn impl -> impl
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.Rfc3492Idn -> org.apache.http.client.utils.Rfc3492Idn:
    int base -> base
    int tmin -> tmin
    int tmax -> tmax
    int skew -> skew
    int damp -> damp
    int initial_bias -> initial_bias
    int initial_n -> initial_n
    char delimiter -> delimiter
    java.lang.String ACE_PREFIX -> ACE_PREFIX
    int adapt(int,int,boolean) -> adapt
    int digit(char) -> digit
    java.lang.String toUnicode(java.lang.String) -> toUnicode
    java.lang.String decode(java.lang.String) -> decode
org.apache.http.client.utils.URIUtils -> org.apache.http.client.utils.URIUtils:
    java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> createURI
    java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean) -> rewriteURI
    java.lang.String normalizePath(java.lang.String) -> normalizePath
    java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost) -> rewriteURI
    java.net.URI resolve(java.net.URI,java.lang.String) -> resolve
    java.net.URI resolve(java.net.URI,java.net.URI) -> resolve
    java.net.URI resolveReferenceStartingWithQueryString(java.net.URI,java.net.URI) -> resolveReferenceStartingWithQueryString
    java.net.URI removeDotSegments(java.net.URI) -> removeDotSegments
    org.apache.http.HttpHost extractHost(java.net.URI) -> extractHost
org.apache.http.client.utils.URLEncodedUtils -> org.apache.http.client.utils.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    java.util.List parse(java.net.URI,java.lang.String) -> parse
    java.util.List parse(org.apache.http.HttpEntity) -> parse
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    void parse(java.util.List,java.util.Scanner,java.lang.String) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
org.apache.http.conn.BasicEofSensorWatcher -> org.apache.http.conn.BasicEofSensorWatcher:
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.BasicManagedEntity -> org.apache.http.conn.BasicManagedEntity:
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    boolean isRepeatable() -> isRepeatable
    java.io.InputStream getContent() -> getContent
    void ensureConsumed() -> ensureConsumed
    void consumeContent() -> consumeContent
    void writeTo(java.io.OutputStream) -> writeTo
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
    void releaseManagedConnection() -> releaseManagedConnection
org.apache.http.conn.ClientConnectionManager -> org.apache.http.conn.ClientConnectionManager:
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
org.apache.http.conn.ClientConnectionManagerFactory -> org.apache.http.conn.ClientConnectionManagerFactory:
    org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> newInstance
org.apache.http.conn.ClientConnectionOperator -> org.apache.http.conn.ClientConnectionOperator:
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
org.apache.http.conn.ClientConnectionRequest -> org.apache.http.conn.ClientConnectionRequest:
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
    void abortRequest() -> abortRequest
org.apache.http.conn.ConnectTimeoutException -> org.apache.http.conn.ConnectTimeoutException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.ConnectionKeepAliveStrategy -> org.apache.http.conn.ConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.conn.ConnectionPoolTimeoutException -> org.apache.http.conn.ConnectionPoolTimeoutException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.ConnectionReleaseTrigger -> org.apache.http.conn.ConnectionReleaseTrigger:
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.EofSensorInputStream -> org.apache.http.conn.EofSensorInputStream:
    java.io.InputStream wrappedStream -> wrappedStream
    boolean selfClosed -> selfClosed
    org.apache.http.conn.EofSensorWatcher eofWatcher -> eofWatcher
    boolean isReadAllowed() -> isReadAllowed
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int available() -> available
    void close() -> close
    void checkEOF(int) -> checkEOF
    void checkClose() -> checkClose
    void checkAbort() -> checkAbort
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.EofSensorWatcher -> org.apache.http.conn.EofSensorWatcher:
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.HttpHostConnectException -> org.apache.http.conn.HttpHostConnectException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost host -> host
    org.apache.http.HttpHost getHost() -> getHost
org.apache.http.conn.HttpRoutedConnection -> org.apache.http.conn.HttpRoutedConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
org.apache.http.conn.ManagedClientConnection -> org.apache.http.conn.ManagedClientConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setState(java.lang.Object) -> setState
    java.lang.Object getState() -> getState
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
org.apache.http.conn.MultihomePlainSocketFactory -> org.apache.http.conn.MultihomePlainSocketFactory:
    org.apache.http.conn.MultihomePlainSocketFactory DEFAULT_FACTORY -> DEFAULT_FACTORY
    org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.OperatedClientConnection -> org.apache.http.conn.OperatedClientConnection:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
org.apache.http.conn.params.ConnConnectionPNames -> org.apache.http.conn.params.ConnConnectionPNames:
    java.lang.String MAX_STATUS_LINE_GARBAGE -> MAX_STATUS_LINE_GARBAGE
org.apache.http.conn.params.ConnConnectionParamBean -> org.apache.http.conn.params.ConnConnectionParamBean:
    void setMaxStatusLineGarbage(int) -> setMaxStatusLineGarbage
org.apache.http.conn.params.ConnManagerPNames -> org.apache.http.conn.params.ConnManagerPNames:
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String MAX_CONNECTIONS_PER_ROUTE -> MAX_CONNECTIONS_PER_ROUTE
    java.lang.String MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
org.apache.http.conn.params.ConnManagerParamBean -> org.apache.http.conn.params.ConnManagerParamBean:
    void setTimeout(long) -> setTimeout
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean) -> setConnectionsPerRoute
org.apache.http.conn.params.ConnManagerParams -> org.apache.http.conn.params.ConnManagerParams:
    int DEFAULT_MAX_TOTAL_CONNECTIONS -> DEFAULT_MAX_TOTAL_CONNECTIONS
    org.apache.http.conn.params.ConnPerRoute DEFAULT_CONN_PER_ROUTE -> DEFAULT_CONN_PER_ROUTE
    long getTimeout(org.apache.http.params.HttpParams) -> getTimeout
    void setTimeout(org.apache.http.params.HttpParams,long) -> setTimeout
    void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute) -> setMaxConnectionsPerRoute
    org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams) -> getMaxConnectionsPerRoute
    void setMaxTotalConnections(org.apache.http.params.HttpParams,int) -> setMaxTotalConnections
    int getMaxTotalConnections(org.apache.http.params.HttpParams) -> getMaxTotalConnections
org.apache.http.conn.params.ConnManagerParams$1 -> org.apache.http.conn.params.ConnManagerParams$1:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRoute -> org.apache.http.conn.params.ConnPerRoute:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRouteBean -> org.apache.http.conn.params.ConnPerRouteBean:
    int DEFAULT_MAX_CONNECTIONS_PER_ROUTE -> DEFAULT_MAX_CONNECTIONS_PER_ROUTE
    java.util.concurrent.ConcurrentHashMap maxPerHostMap -> maxPerHostMap
    int defaultMax -> defaultMax
    int getDefaultMax() -> getDefaultMax
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoutes(java.util.Map) -> setMaxForRoutes
    java.lang.String toString() -> toString
org.apache.http.conn.params.ConnRoutePNames -> org.apache.http.conn.params.ConnRoutePNames:
    java.lang.String DEFAULT_PROXY -> DEFAULT_PROXY
    java.lang.String LOCAL_ADDRESS -> LOCAL_ADDRESS
    java.lang.String FORCED_ROUTE -> FORCED_ROUTE
org.apache.http.conn.params.ConnRouteParamBean -> org.apache.http.conn.params.ConnRouteParamBean:
    void setDefaultProxy(org.apache.http.HttpHost) -> setDefaultProxy
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    void setForcedRoute(org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
org.apache.http.conn.params.ConnRouteParams -> org.apache.http.conn.params.ConnRouteParams:
    org.apache.http.HttpHost NO_HOST -> NO_HOST
    org.apache.http.conn.routing.HttpRoute NO_ROUTE -> NO_ROUTE
    org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams) -> getDefaultProxy
    void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost) -> setDefaultProxy
    org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams) -> getForcedRoute
    void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
    java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams) -> getLocalAddress
    void setLocalAddress(org.apache.http.params.HttpParams,java.net.InetAddress) -> setLocalAddress
org.apache.http.conn.routing.BasicRouteDirector -> org.apache.http.conn.routing.BasicRouteDirector:
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
    int firstStep(org.apache.http.conn.routing.RouteInfo) -> firstStep
    int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> directStep
    int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> proxiedStep
org.apache.http.conn.routing.HttpRoute -> org.apache.http.conn.routing.HttpRoute:
    org.apache.http.HttpHost[] EMPTY_HTTP_HOST_ARRAY -> EMPTY_HTTP_HOST_ARRAY
    org.apache.http.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    org.apache.http.HttpHost[] proxyChain -> proxyChain
    org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost) -> toChain
    org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost[]) -> toChain
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.conn.routing.HttpRouteDirector -> org.apache.http.conn.routing.HttpRouteDirector:
    int UNREACHABLE -> UNREACHABLE
    int COMPLETE -> COMPLETE
    int CONNECT_TARGET -> CONNECT_TARGET
    int CONNECT_PROXY -> CONNECT_PROXY
    int TUNNEL_TARGET -> TUNNEL_TARGET
    int TUNNEL_PROXY -> TUNNEL_PROXY
    int LAYER_PROTOCOL -> LAYER_PROTOCOL
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
org.apache.http.conn.routing.HttpRoutePlanner -> org.apache.http.conn.routing.HttpRoutePlanner:
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.conn.routing.RouteInfo -> org.apache.http.conn.routing.RouteInfo:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
org.apache.http.conn.routing.RouteInfo$LayerType -> org.apache.http.conn.routing.RouteInfo$LayerType:
    org.apache.http.conn.routing.RouteInfo$LayerType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$LayerType LAYERED -> LAYERED
    org.apache.http.conn.routing.RouteInfo$LayerType[] $VALUES -> $VALUES
    org.apache.http.conn.routing.RouteInfo$LayerType[] values() -> values
    org.apache.http.conn.routing.RouteInfo$LayerType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteInfo$TunnelType -> org.apache.http.conn.routing.RouteInfo$TunnelType:
    org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED -> TUNNELLED
    org.apache.http.conn.routing.RouteInfo$TunnelType[] $VALUES -> $VALUES
    org.apache.http.conn.routing.RouteInfo$TunnelType[] values() -> values
    org.apache.http.conn.routing.RouteInfo$TunnelType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteTracker -> org.apache.http.conn.routing.RouteTracker:
    org.apache.http.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    boolean connected -> connected
    org.apache.http.HttpHost[] proxyChain -> proxyChain
    org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    void connectTarget(boolean) -> connectTarget
    void connectProxy(org.apache.http.HttpHost,boolean) -> connectProxy
    void tunnelTarget(boolean) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean) -> tunnelProxy
    void layerProtocol(boolean) -> layerProtocol
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    boolean isConnected() -> isConnected
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute toRoute() -> toRoute
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.conn.scheme.HostNameResolver -> org.apache.http.conn.scheme.HostNameResolver:
    java.net.InetAddress resolve(java.lang.String) -> resolve
org.apache.http.conn.scheme.LayeredSchemeSocketFactory -> org.apache.http.conn.scheme.LayeredSchemeSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
org.apache.http.conn.scheme.LayeredSchemeSocketFactoryAdaptor -> org.apache.http.conn.scheme.LayeredSchemeSocketFactoryAdaptor:
    org.apache.http.conn.scheme.LayeredSocketFactory factory -> factory
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
org.apache.http.conn.scheme.LayeredSocketFactory -> org.apache.http.conn.scheme.LayeredSocketFactory:
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor -> org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor:
    org.apache.http.conn.scheme.LayeredSchemeSocketFactory factory -> factory
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.scheme.PlainSocketFactory -> org.apache.http.conn.scheme.PlainSocketFactory:
    org.apache.http.conn.scheme.HostNameResolver nameResolver -> nameResolver
    org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
org.apache.http.conn.scheme.Scheme -> org.apache.http.conn.scheme.Scheme:
    java.lang.String name -> name
    org.apache.http.conn.scheme.SchemeSocketFactory socketFactory -> socketFactory
    int defaultPort -> defaultPort
    boolean layered -> layered
    java.lang.String stringRep -> stringRep
    int getDefaultPort() -> getDefaultPort
    org.apache.http.conn.scheme.SocketFactory getSocketFactory() -> getSocketFactory
    org.apache.http.conn.scheme.SchemeSocketFactory getSchemeSocketFactory() -> getSchemeSocketFactory
    java.lang.String getName() -> getName
    boolean isLayered() -> isLayered
    int resolvePort(int) -> resolvePort
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.scheme.SchemeRegistry -> org.apache.http.conn.scheme.SchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    org.apache.http.conn.scheme.Scheme getScheme(java.lang.String) -> getScheme
    org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost) -> getScheme
    org.apache.http.conn.scheme.Scheme get(java.lang.String) -> get
    org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme) -> register
    org.apache.http.conn.scheme.Scheme unregister(java.lang.String) -> unregister
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
org.apache.http.conn.scheme.SchemeSocketFactory -> org.apache.http.conn.scheme.SchemeSocketFactory:
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor -> org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor:
    org.apache.http.conn.scheme.SocketFactory factory -> factory
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    org.apache.http.conn.scheme.SocketFactory getFactory() -> getFactory
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.scheme.SocketFactory -> org.apache.http.conn.scheme.SocketFactory:
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.scheme.SocketFactoryAdaptor -> org.apache.http.conn.scheme.SocketFactoryAdaptor:
    org.apache.http.conn.scheme.SchemeSocketFactory factory -> factory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    org.apache.http.conn.scheme.SchemeSocketFactory getFactory() -> getFactory
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.ssl.AbstractVerifier -> org.apache.http.conn.ssl.AbstractVerifier:
    java.lang.String[] BAD_COUNTRY_2LDS -> BAD_COUNTRY_2LDS
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean) -> verify
    boolean acceptableCountryWildcard(java.lang.String) -> acceptableCountryWildcard
    java.lang.String[] getCNs(java.security.cert.X509Certificate) -> getCNs
    java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String) -> getSubjectAlts
    java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate) -> getDNSSubjectAlts
    int countDots(java.lang.String) -> countDots
    boolean isIPAddress(java.lang.String) -> isIPAddress
org.apache.http.conn.ssl.AllowAllHostnameVerifier -> org.apache.http.conn.ssl.AllowAllHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.BrowserCompatHostnameVerifier -> org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.SSLSocketFactory -> org.apache.http.conn.ssl.SSLSocketFactory:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String SSLV2 -> SSLV2
    org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER -> ALLOW_ALL_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER -> BROWSER_COMPATIBLE_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER -> STRICT_HOSTNAME_VERIFIER
    javax.net.ssl.SSLSocketFactory socketfactory -> socketfactory
    org.apache.http.conn.scheme.HostNameResolver nameResolver -> nameResolver
    org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
    javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy) -> createSSLContext
    javax.net.ssl.SSLContext createDefaultSSLContext() -> createDefaultSSLContext
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
    void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.ssl.StrictHostnameVerifier -> org.apache.http.conn.ssl.StrictHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.TrustManagerDecorator -> org.apache.http.conn.ssl.TrustManagerDecorator:
    javax.net.ssl.X509TrustManager trustManager -> trustManager
    org.apache.http.conn.ssl.TrustStrategy trustStrategy -> trustStrategy
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
org.apache.http.conn.ssl.TrustSelfSignedStrategy -> org.apache.http.conn.ssl.TrustSelfSignedStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
org.apache.http.conn.ssl.TrustStrategy -> org.apache.http.conn.ssl.TrustStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
org.apache.http.conn.ssl.X509HostnameVerifier -> org.apache.http.conn.ssl.X509HostnameVerifier:
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
org.apache.http.conn.util.InetAddressUtils -> org.apache.http.conn.util.InetAddressUtils:
    java.util.regex.Pattern IPV4_PATTERN -> IPV4_PATTERN
    java.util.regex.Pattern IPV6_STD_PATTERN -> IPV6_STD_PATTERN
    java.util.regex.Pattern IPV6_HEX_COMPRESSED_PATTERN -> IPV6_HEX_COMPRESSED_PATTERN
    boolean isIPv4Address(java.lang.String) -> isIPv4Address
    boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
    boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    boolean isIPv6Address(java.lang.String) -> isIPv6Address
org.apache.http.cookie.ClientCookie -> org.apache.http.cookie.ClientCookie:
    java.lang.String VERSION_ATTR -> VERSION_ATTR
    java.lang.String PATH_ATTR -> PATH_ATTR
    java.lang.String DOMAIN_ATTR -> DOMAIN_ATTR
    java.lang.String MAX_AGE_ATTR -> MAX_AGE_ATTR
    java.lang.String SECURE_ATTR -> SECURE_ATTR
    java.lang.String COMMENT_ATTR -> COMMENT_ATTR
    java.lang.String EXPIRES_ATTR -> EXPIRES_ATTR
    java.lang.String PORT_ATTR -> PORT_ATTR
    java.lang.String COMMENTURL_ATTR -> COMMENTURL_ATTR
    java.lang.String DISCARD_ATTR -> DISCARD_ATTR
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
org.apache.http.cookie.Cookie -> org.apache.http.cookie.Cookie:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getComment() -> getComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    java.lang.String getPath() -> getPath
    int[] getPorts() -> getPorts
    boolean isSecure() -> isSecure
    int getVersion() -> getVersion
    boolean isExpired(java.util.Date) -> isExpired
org.apache.http.cookie.CookieAttributeHandler -> org.apache.http.cookie.CookieAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.cookie.CookieIdentityComparator -> org.apache.http.cookie.CookieIdentityComparator:
    long serialVersionUID -> serialVersionUID
    int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieOrigin -> org.apache.http.cookie.CookieOrigin:
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    boolean secure -> secure
    java.lang.String getHost() -> getHost
    java.lang.String getPath() -> getPath
    int getPort() -> getPort
    boolean isSecure() -> isSecure
    java.lang.String toString() -> toString
org.apache.http.cookie.CookiePathComparator -> org.apache.http.cookie.CookiePathComparator:
    long serialVersionUID -> serialVersionUID
    java.lang.String normalizePath(org.apache.http.cookie.Cookie) -> normalizePath
    int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieRestrictionViolationException -> org.apache.http.cookie.CookieRestrictionViolationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.cookie.CookieSpec -> org.apache.http.cookie.CookieSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.cookie.CookieSpecFactory -> org.apache.http.cookie.CookieSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.cookie.CookieSpecRegistry -> org.apache.http.cookie.CookieSpecRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSpecs -> registeredSpecs
    void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory) -> register
    void unregister(java.lang.String) -> unregister
    org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams) -> getCookieSpec
    org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String) -> getCookieSpec
    java.util.List getSpecNames() -> getSpecNames
    void setItems(java.util.Map) -> setItems
org.apache.http.cookie.MalformedCookieException -> org.apache.http.cookie.MalformedCookieException:
    long serialVersionUID -> serialVersionUID
org.apache.http.cookie.SM -> org.apache.http.cookie.SM:
    java.lang.String COOKIE -> COOKIE
    java.lang.String COOKIE2 -> COOKIE2
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
org.apache.http.cookie.SetCookie -> org.apache.http.cookie.SetCookie:
    void setValue(java.lang.String) -> setValue
    void setComment(java.lang.String) -> setComment
    void setExpiryDate(java.util.Date) -> setExpiryDate
    void setDomain(java.lang.String) -> setDomain
    void setPath(java.lang.String) -> setPath
    void setSecure(boolean) -> setSecure
    void setVersion(int) -> setVersion
org.apache.http.cookie.SetCookie2 -> org.apache.http.cookie.SetCookie2:
    void setCommentURL(java.lang.String) -> setCommentURL
    void setPorts(int[]) -> setPorts
    void setDiscard(boolean) -> setDiscard
org.apache.http.cookie.params.CookieSpecPNames -> org.apache.http.cookie.params.CookieSpecPNames:
    java.lang.String DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String SINGLE_COOKIE_HEADER -> SINGLE_COOKIE_HEADER
org.apache.http.cookie.params.CookieSpecParamBean -> org.apache.http.cookie.params.CookieSpecParamBean:
    void setDatePatterns(java.util.Collection) -> setDatePatterns
    void setSingleHeader(boolean) -> setSingleHeader
org.apache.http.entity.AbstractHttpEntity -> org.apache.http.entity.AbstractHttpEntity:
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    boolean chunked -> chunked
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    boolean isChunked() -> isChunked
    void setContentType(org.apache.http.Header) -> setContentType
    void setContentType(java.lang.String) -> setContentType
    void setContentEncoding(org.apache.http.Header) -> setContentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void setChunked(boolean) -> setChunked
    void consumeContent() -> consumeContent
org.apache.http.entity.BasicHttpEntity -> org.apache.http.entity.BasicHttpEntity:
    java.io.InputStream content -> content
    long length -> length
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void setContentLength(long) -> setContentLength
    void setContent(java.io.InputStream) -> setContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.BufferedHttpEntity -> org.apache.http.entity.BufferedHttpEntity:
    byte[] buffer -> buffer
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.ByteArrayEntity -> org.apache.http.entity.ByteArrayEntity:
    byte[] content -> content
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.ContentLengthStrategy -> org.apache.http.entity.ContentLengthStrategy:
    int IDENTITY -> IDENTITY
    int CHUNKED -> CHUNKED
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.entity.ContentProducer -> org.apache.http.entity.ContentProducer:
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.EntityTemplate -> org.apache.http.entity.EntityTemplate:
    org.apache.http.entity.ContentProducer contentproducer -> contentproducer
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.FileEntity -> org.apache.http.entity.FileEntity:
    java.io.File file -> file
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.HttpEntityWrapper -> org.apache.http.entity.HttpEntityWrapper:
    org.apache.http.HttpEntity wrappedEntity -> wrappedEntity
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.InputStreamEntity -> org.apache.http.entity.InputStreamEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    long length -> length
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.SerializableEntity -> org.apache.http.entity.SerializableEntity:
    byte[] objSer -> objSer
    java.io.Serializable objRef -> objRef
    void createBytes(java.io.Serializable) -> createBytes
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.StringEntity -> org.apache.http.entity.StringEntity:
    byte[] content -> content
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.impl.AbstractHttpClientConnection -> org.apache.http.impl.AbstractHttpClientConnection:
    org.apache.http.impl.entity.EntitySerializer entityserializer -> entityserializer
    org.apache.http.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    org.apache.http.io.SessionInputBuffer inbuffer -> inbuffer
    org.apache.http.io.SessionOutputBuffer outbuffer -> outbuffer
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.io.HttpMessageParser responseParser -> responseParser
    org.apache.http.io.HttpMessageWriter requestWriter -> requestWriter
    org.apache.http.impl.HttpConnectionMetricsImpl metrics -> metrics
    void assertOpen() -> assertOpen
    org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    org.apache.http.HttpResponseFactory createHttpResponseFactory() -> createHttpResponseFactory
    org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createRequestWriter
    org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> createConnectionMetrics
    void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    boolean isEof() -> isEof
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.AbstractHttpServerConnection -> org.apache.http.impl.AbstractHttpServerConnection:
    org.apache.http.impl.entity.EntitySerializer entityserializer -> entityserializer
    org.apache.http.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    org.apache.http.io.SessionInputBuffer inbuffer -> inbuffer
    org.apache.http.io.SessionOutputBuffer outbuffer -> outbuffer
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.io.HttpMessageParser requestParser -> requestParser
    org.apache.http.io.HttpMessageWriter responseWriter -> responseWriter
    org.apache.http.impl.HttpConnectionMetricsImpl metrics -> metrics
    void assertOpen() -> assertOpen
    org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    org.apache.http.HttpRequestFactory createHttpRequestFactory() -> createHttpRequestFactory
    org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams) -> createRequestParser
    org.apache.http.io.HttpMessageWriter createResponseWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createResponseWriter
    org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> createConnectionMetrics
    void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    boolean isEof() -> isEof
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.DefaultConnectionReuseStrategy -> org.apache.http.impl.DefaultConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
    org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator) -> createTokenIterator
org.apache.http.impl.DefaultHttpClientConnection -> org.apache.http.impl.DefaultHttpClientConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    java.lang.String toString() -> toString
org.apache.http.impl.DefaultHttpRequestFactory -> org.apache.http.impl.DefaultHttpRequestFactory:
    java.lang.String[] RFC2616_COMMON_METHODS -> RFC2616_COMMON_METHODS
    java.lang.String[] RFC2616_ENTITY_ENC_METHODS -> RFC2616_ENTITY_ENC_METHODS
    java.lang.String[] RFC2616_SPECIAL_METHODS -> RFC2616_SPECIAL_METHODS
    boolean isOneOf(java.lang.String[],java.lang.String) -> isOneOf
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.impl.DefaultHttpResponseFactory -> org.apache.http.impl.DefaultHttpResponseFactory:
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
    java.util.Locale determineLocale(org.apache.http.protocol.HttpContext) -> determineLocale
org.apache.http.impl.DefaultHttpServerConnection -> org.apache.http.impl.DefaultHttpServerConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    java.lang.String toString() -> toString
org.apache.http.impl.EnglishReasonPhraseCatalog -> org.apache.http.impl.EnglishReasonPhraseCatalog:
    org.apache.http.impl.EnglishReasonPhraseCatalog INSTANCE -> INSTANCE
    java.lang.String[][] REASON_PHRASES -> REASON_PHRASES
    java.lang.String getReason(int,java.util.Locale) -> getReason
    void setReason(int,java.lang.String) -> setReason
org.apache.http.impl.HttpConnectionMetricsImpl -> org.apache.http.impl.HttpConnectionMetricsImpl:
    java.lang.String REQUEST_COUNT -> REQUEST_COUNT
    java.lang.String RESPONSE_COUNT -> RESPONSE_COUNT
    java.lang.String SENT_BYTES_COUNT -> SENT_BYTES_COUNT
    java.lang.String RECEIVED_BYTES_COUNT -> RECEIVED_BYTES_COUNT
    org.apache.http.io.HttpTransportMetrics inTransportMetric -> inTransportMetric
    org.apache.http.io.HttpTransportMetrics outTransportMetric -> outTransportMetric
    long requestCount -> requestCount
    long responseCount -> responseCount
    java.util.HashMap metricsCache -> metricsCache
    long getReceivedBytesCount() -> getReceivedBytesCount
    long getSentBytesCount() -> getSentBytesCount
    long getRequestCount() -> getRequestCount
    void incrementRequestCount() -> incrementRequestCount
    long getResponseCount() -> getResponseCount
    void incrementResponseCount() -> incrementResponseCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void setMetric(java.lang.String,java.lang.Object) -> setMetric
    void reset() -> reset
org.apache.http.impl.NoConnectionReuseStrategy -> org.apache.http.impl.NoConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.impl.SocketHttpClientConnection -> org.apache.http.impl.SocketHttpClientConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    boolean isOpen() -> isOpen
    java.net.Socket getSocket() -> getSocket
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
org.apache.http.impl.SocketHttpServerConnection -> org.apache.http.impl.SocketHttpServerConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    org.apache.http.io.SessionInputBuffer createHttpDataReceiver(java.net.Socket,int,org.apache.http.params.HttpParams) -> createHttpDataReceiver
    org.apache.http.io.SessionOutputBuffer createHttpDataTransmitter(java.net.Socket,int,org.apache.http.params.HttpParams) -> createHttpDataTransmitter
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    java.net.Socket getSocket() -> getSocket
    boolean isOpen() -> isOpen
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
org.apache.http.impl.auth.AuthSchemeBase -> org.apache.http.impl.auth.AuthSchemeBase:
    boolean proxy -> proxy
    void processChallenge(org.apache.http.Header) -> processChallenge
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    boolean isProxy() -> isProxy
    java.lang.String toString() -> toString
org.apache.http.impl.auth.BasicScheme -> org.apache.http.impl.auth.BasicScheme:
    boolean complete -> complete
    java.lang.String getSchemeName() -> getSchemeName
    void processChallenge(org.apache.http.Header) -> processChallenge
    boolean isComplete() -> isComplete
    boolean isConnectionBased() -> isConnectionBased
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean) -> authenticate
org.apache.http.impl.auth.BasicSchemeFactory -> org.apache.http.impl.auth.BasicSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.DigestScheme -> org.apache.http.impl.auth.DigestScheme:
    char[] HEXADECIMAL -> HEXADECIMAL
    boolean complete -> complete
    int QOP_UNKNOWN -> QOP_UNKNOWN
    int QOP_MISSING -> QOP_MISSING
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH -> QOP_AUTH
    java.lang.String lastNonce -> lastNonce
    long nounceCount -> nounceCount
    java.lang.String cnonce -> cnonce
    java.lang.String a1 -> a1
    java.lang.String a2 -> a2
    void processChallenge(org.apache.http.Header) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    boolean isConnectionBased() -> isConnectionBased
    void overrideParamter(java.lang.String,java.lang.String) -> overrideParamter
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    java.security.MessageDigest createMessageDigest(java.lang.String) -> createMessageDigest
    org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials) -> createDigestHeader
    java.lang.String getCnonce() -> getCnonce
    java.lang.String getA1() -> getA1
    java.lang.String getA2() -> getA2
    java.lang.String encode(byte[]) -> encode
    java.lang.String createCnonce() -> createCnonce
org.apache.http.impl.auth.DigestSchemeFactory -> org.apache.http.impl.auth.DigestSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.NTLMEngine -> org.apache.http.impl.auth.NTLMEngine:
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
org.apache.http.impl.auth.NTLMEngineException -> org.apache.http.impl.auth.NTLMEngineException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.auth.NTLMEngineImpl -> org.apache.http.impl.auth.NTLMEngineImpl:
    int FLAG_UNICODE_ENCODING -> FLAG_UNICODE_ENCODING
    int FLAG_TARGET_DESIRED -> FLAG_TARGET_DESIRED
    int FLAG_NEGOTIATE_SIGN -> FLAG_NEGOTIATE_SIGN
    int FLAG_NEGOTIATE_SEAL -> FLAG_NEGOTIATE_SEAL
    int FLAG_NEGOTIATE_NTLM -> FLAG_NEGOTIATE_NTLM
    int FLAG_NEGOTIATE_ALWAYS_SIGN -> FLAG_NEGOTIATE_ALWAYS_SIGN
    int FLAG_NEGOTIATE_NTLM2 -> FLAG_NEGOTIATE_NTLM2
    int FLAG_NEGOTIATE_128 -> FLAG_NEGOTIATE_128
    int FLAG_NEGOTIATE_KEY_EXCH -> FLAG_NEGOTIATE_KEY_EXCH
    java.security.SecureRandom RND_GEN -> RND_GEN
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String credentialCharset -> credentialCharset
    byte[] SIGNATURE -> SIGNATURE
    java.lang.String getResponseFor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getResponseFor
    java.lang.String getType1Message(java.lang.String,java.lang.String) -> getType1Message
    java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],int,java.lang.String,byte[]) -> getType3Message
    java.lang.String getCredentialCharset() -> getCredentialCharset
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
    java.lang.String stripDotSuffix(java.lang.String) -> stripDotSuffix
    java.lang.String convertHost(java.lang.String) -> convertHost
    java.lang.String convertDomain(java.lang.String) -> convertDomain
    int readULong(byte[],int) -> readULong
    int readUShort(byte[],int) -> readUShort
    byte[] readSecurityBuffer(byte[],int) -> readSecurityBuffer
    byte[] makeRandomChallenge() -> makeRandomChallenge
    byte[] makeNTLM2RandomChallenge() -> makeNTLM2RandomChallenge
    byte[] getLMResponse(java.lang.String,byte[]) -> getLMResponse
    byte[] getNTLMResponse(java.lang.String,byte[]) -> getNTLMResponse
    byte[] getNTLMv2Response(java.lang.String,java.lang.String,java.lang.String,byte[],byte[],byte[]) -> getNTLMv2Response
    byte[] getLMv2Response(java.lang.String,java.lang.String,java.lang.String,byte[],byte[]) -> getLMv2Response
    byte[] getNTLM2SessionResponse(java.lang.String,byte[],byte[]) -> getNTLM2SessionResponse
    byte[] lmHash(java.lang.String) -> lmHash
    byte[] ntlmHash(java.lang.String) -> ntlmHash
    byte[] ntlmv2Hash(java.lang.String,java.lang.String,java.lang.String) -> ntlmv2Hash
    byte[] lmResponse(byte[],byte[]) -> lmResponse
    byte[] lmv2Response(byte[],byte[],byte[]) -> lmv2Response
    byte[] createBlob(byte[],byte[]) -> createBlob
    java.security.Key createDESKey(byte[],int) -> createDESKey
    void oddParity(byte[]) -> oddParity
    void writeULong(byte[],int,int) -> writeULong
    int F(int,int,int) -> F
    int G(int,int,int) -> G
    int H(int,int,int) -> H
    int rotintlft(int,int) -> rotintlft
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
    byte[] access$000() -> access$000
    int access$100(byte[],int) -> access$100
    int access$200(byte[],int) -> access$200
    byte[] access$300(byte[],int) -> access$300
    java.lang.String access$400(java.lang.String) -> access$400
    java.lang.String access$500(java.lang.String) -> access$500
    byte[] access$600() -> access$600
    byte[] access$700() -> access$700
org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5 -> org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5:
    byte[] ipad -> ipad
    byte[] opad -> opad
    java.security.MessageDigest md5 -> md5
    byte[] getOutput() -> getOutput
    void update(byte[]) -> update
    void update(byte[],int,int) -> update
org.apache.http.impl.auth.NTLMEngineImpl$MD4 -> org.apache.http.impl.auth.NTLMEngineImpl$MD4:
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    long count -> count
    byte[] dataBuffer -> dataBuffer
    void update(byte[]) -> update
    byte[] getOutput() -> getOutput
    void processBuffer() -> processBuffer
    void round1(int[]) -> round1
    void round2(int[]) -> round2
    void round3(int[]) -> round3
org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage -> org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage:
    byte[] messageContents -> messageContents
    int currentOutputPosition -> currentOutputPosition
    int getPreambleLength() -> getPreambleLength
    int getMessageLength() -> getMessageLength
    byte readByte(int) -> readByte
    void readBytes(byte[],int) -> readBytes
    int readUShort(int) -> readUShort
    int readULong(int) -> readULong
    byte[] readSecurityBuffer(int) -> readSecurityBuffer
    void prepareResponse(int,int) -> prepareResponse
    void addByte(byte) -> addByte
    void addBytes(byte[]) -> addBytes
    void addUShort(int) -> addUShort
    void addULong(int) -> addULong
    java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMEngineImpl$Type1Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type1Message:
    byte[] hostBytes -> hostBytes
    byte[] domainBytes -> domainBytes
    java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMEngineImpl$Type2Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type2Message:
    byte[] challenge -> challenge
    java.lang.String target -> target
    byte[] targetInfo -> targetInfo
    int flags -> flags
    byte[] getChallenge() -> getChallenge
    java.lang.String getTarget() -> getTarget
    byte[] getTargetInfo() -> getTargetInfo
    int getFlags() -> getFlags
org.apache.http.impl.auth.NTLMEngineImpl$Type3Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type3Message:
    int type2Flags -> type2Flags
    byte[] domainBytes -> domainBytes
    byte[] hostBytes -> hostBytes
    byte[] userBytes -> userBytes
    byte[] lmResp -> lmResp
    byte[] ntResp -> ntResp
    java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMScheme -> org.apache.http.impl.auth.NTLMScheme:
    org.apache.http.impl.auth.NTLMEngine engine -> engine
    org.apache.http.impl.auth.NTLMScheme$State state -> state
    java.lang.String challenge -> challenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    boolean isComplete() -> isComplete
org.apache.http.impl.auth.NTLMScheme$State -> org.apache.http.impl.auth.NTLMScheme$State:
    org.apache.http.impl.auth.NTLMScheme$State UNINITIATED -> UNINITIATED
    org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED -> CHALLENGE_RECEIVED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED -> MSG_TYPE1_GENERATED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED -> MSG_TYPE2_RECEVIED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED -> MSG_TYPE3_GENERATED
    org.apache.http.impl.auth.NTLMScheme$State FAILED -> FAILED
    org.apache.http.impl.auth.NTLMScheme$State[] $VALUES -> $VALUES
    org.apache.http.impl.auth.NTLMScheme$State[] values() -> values
    org.apache.http.impl.auth.NTLMScheme$State valueOf(java.lang.String) -> valueOf
org.apache.http.impl.auth.NTLMSchemeFactory -> org.apache.http.impl.auth.NTLMSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.NegotiateScheme -> org.apache.http.impl.auth.NegotiateScheme:
    java.lang.String SPNEGO_OID -> SPNEGO_OID
    java.lang.String KERBEROS_OID -> KERBEROS_OID
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator -> spengoGenerator
    boolean stripPort -> stripPort
    org.ietf.jgss.GSSContext gssContext -> gssContext
    org.apache.http.impl.auth.NegotiateScheme$State state -> state
    byte[] token -> token
    org.ietf.jgss.Oid negotiationOid -> negotiationOid
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.ietf.jgss.GSSManager getManager() -> getManager
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
org.apache.http.impl.auth.NegotiateScheme$State -> org.apache.http.impl.auth.NegotiateScheme$State:
    org.apache.http.impl.auth.NegotiateScheme$State UNINITIATED -> UNINITIATED
    org.apache.http.impl.auth.NegotiateScheme$State CHALLENGE_RECEIVED -> CHALLENGE_RECEIVED
    org.apache.http.impl.auth.NegotiateScheme$State TOKEN_GENERATED -> TOKEN_GENERATED
    org.apache.http.impl.auth.NegotiateScheme$State FAILED -> FAILED
    org.apache.http.impl.auth.NegotiateScheme$State[] $VALUES -> $VALUES
    org.apache.http.impl.auth.NegotiateScheme$State[] values() -> values
    org.apache.http.impl.auth.NegotiateScheme$State valueOf(java.lang.String) -> valueOf
org.apache.http.impl.auth.NegotiateSchemeFactory -> org.apache.http.impl.auth.NegotiateSchemeFactory:
    org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator -> spengoGenerator
    boolean stripPort -> stripPort
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    boolean isStripPort() -> isStripPort
    org.apache.http.impl.auth.SpnegoTokenGenerator getSpengoGenerator() -> getSpengoGenerator
org.apache.http.impl.auth.RFC2617Scheme -> org.apache.http.impl.auth.RFC2617Scheme:
    java.util.Map params -> params
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    java.util.Map getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
org.apache.http.impl.auth.SpnegoTokenGenerator -> org.apache.http.impl.auth.SpnegoTokenGenerator:
    byte[] generateSpnegoDERObject(byte[]) -> generateSpnegoDERObject
org.apache.http.impl.auth.UnsupportedDigestAlgorithmException -> org.apache.http.impl.auth.UnsupportedDigestAlgorithmException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.client.AbstractAuthenticationHandler -> org.apache.http.impl.client.AbstractAuthenticationHandler:
    org.apache.commons.logging.Log log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    java.util.Map parseChallenges(org.apache.http.Header[]) -> parseChallenges
    java.util.List getAuthPreferences() -> getAuthPreferences
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.impl.client.AbstractHttpClient -> org.apache.http.impl.client.AbstractHttpClient:
    org.apache.commons.logging.Log log -> log
    org.apache.http.params.HttpParams defaultParams -> defaultParams
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.cookie.CookieSpecRegistry supportedCookieSpecs -> supportedCookieSpecs
    org.apache.http.auth.AuthSchemeRegistry supportedAuthSchemes -> supportedAuthSchemes
    org.apache.http.protocol.BasicHttpProcessor mutableProcessor -> mutableProcessor
    org.apache.http.protocol.ImmutableHttpProcessor protocolProcessor -> protocolProcessor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.AuthenticationHandler targetAuthHandler -> targetAuthHandler
    org.apache.http.client.AuthenticationHandler proxyAuthHandler -> proxyAuthHandler
    org.apache.http.client.CookieStore cookieStore -> cookieStore
    org.apache.http.client.CredentialsProvider credsProvider -> credsProvider
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    org.apache.http.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler createRedirectHandler() -> createRedirectHandler
    org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler() -> createTargetAuthenticationHandler
    org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler() -> createProxyAuthenticationHandler
    org.apache.http.client.CookieStore createCookieStore() -> createCookieStore
    org.apache.http.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    org.apache.http.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.protocol.HttpRequestExecutor getRequestExecutor() -> getRequestExecutor
    org.apache.http.auth.AuthSchemeRegistry getAuthSchemes() -> getAuthSchemes
    void setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemes
    org.apache.http.cookie.CookieSpecRegistry getCookieSpecs() -> getCookieSpecs
    void setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecs
    org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy() -> getConnectionReuseStrategy
    void setReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy() -> getConnectionKeepAliveStrategy
    void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler() -> getHttpRequestRetryHandler
    void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler) -> setHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler getRedirectHandler() -> getRedirectHandler
    void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    org.apache.http.client.RedirectStrategy getRedirectStrategy() -> getRedirectStrategy
    void setRedirectStrategy(org.apache.http.client.RedirectStrategy) -> setRedirectStrategy
    org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler() -> getTargetAuthenticationHandler
    void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setTargetAuthenticationHandler
    org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler() -> getProxyAuthenticationHandler
    void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setProxyAuthenticationHandler
    org.apache.http.client.CookieStore getCookieStore() -> getCookieStore
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    org.apache.http.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner() -> getRoutePlanner
    void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    org.apache.http.client.UserTokenHandler getUserTokenHandler() -> getUserTokenHandler
    void setUserTokenHandler(org.apache.http.client.UserTokenHandler) -> setUserTokenHandler
    org.apache.http.protocol.BasicHttpProcessor getHttpProcessor() -> getHttpProcessor
    org.apache.http.protocol.HttpProcessor getProtocolProcessor() -> getProtocolProcessor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpHost determineTarget(org.apache.http.client.methods.HttpUriRequest) -> determineTarget
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.params.HttpParams determineParams(org.apache.http.HttpRequest) -> determineParams
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.impl.client.BasicAuthCache -> org.apache.http.impl.client.BasicAuthCache:
    java.util.HashMap map -> map
    void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> put
    org.apache.http.auth.AuthScheme get(org.apache.http.HttpHost) -> get
    void remove(org.apache.http.HttpHost) -> remove
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicCookieStore -> org.apache.http.impl.client.BasicCookieStore:
    long serialVersionUID -> serialVersionUID
    java.util.TreeSet cookies -> cookies
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void addCookies(org.apache.http.cookie.Cookie[]) -> addCookies
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicCredentialsProvider -> org.apache.http.impl.client.BasicCredentialsProvider:
    java.util.concurrent.ConcurrentHashMap credMap -> credMap
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials matchCredentials(java.util.Map,org.apache.http.auth.AuthScope) -> matchCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicResponseHandler -> org.apache.http.impl.client.BasicResponseHandler:
    java.lang.String handleResponse(org.apache.http.HttpResponse) -> handleResponse
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.impl.client.ClientParamsStack -> org.apache.http.impl.client.ClientParamsStack:
    org.apache.http.params.HttpParams applicationParams -> applicationParams
    org.apache.http.params.HttpParams clientParams -> clientParams
    org.apache.http.params.HttpParams requestParams -> requestParams
    org.apache.http.params.HttpParams overrideParams -> overrideParams
    org.apache.http.params.HttpParams getApplicationParams() -> getApplicationParams
    org.apache.http.params.HttpParams getClientParams() -> getClientParams
    org.apache.http.params.HttpParams getRequestParams() -> getRequestParams
    org.apache.http.params.HttpParams getOverrideParams() -> getOverrideParams
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams copy() -> copy
org.apache.http.impl.client.ContentEncodingHttpClient -> org.apache.http.impl.client.ContentEncodingHttpClient:
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy -> org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.impl.client.DefaultHttpClient -> org.apache.http.impl.client.DefaultHttpClient:
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    void setDefaultHttpParams(org.apache.http.params.HttpParams) -> setDefaultHttpParams
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
org.apache.http.impl.client.DefaultHttpRequestRetryHandler -> org.apache.http.impl.client.DefaultHttpRequestRetryHandler:
    int retryCount -> retryCount
    boolean requestSentRetryEnabled -> requestSentRetryEnabled
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    int getRetryCount() -> getRetryCount
    boolean handleAsIdempotent(org.apache.http.HttpRequest) -> handleAsIdempotent
org.apache.http.impl.client.DefaultProxyAuthenticationHandler -> org.apache.http.impl.client.DefaultProxyAuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
org.apache.http.impl.client.DefaultRedirectHandler -> org.apache.http.impl.client.DefaultRedirectHandler:
    org.apache.commons.logging.Log log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.impl.client.DefaultRedirectStrategy -> org.apache.http.impl.client.DefaultRedirectStrategy:
    org.apache.commons.logging.Log log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    java.net.URI getLocationURI(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
    java.net.URI createLocationURI(java.lang.String) -> createLocationURI
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
org.apache.http.impl.client.DefaultRedirectStrategyAdaptor -> org.apache.http.impl.client.DefaultRedirectStrategyAdaptor:
    org.apache.http.client.RedirectHandler handler -> handler
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
org.apache.http.impl.client.DefaultRequestDirector -> org.apache.http.impl.client.DefaultRequestDirector:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.RedirectHandler redirectHandler -> redirectHandler
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.AuthenticationHandler targetAuthHandler -> targetAuthHandler
    org.apache.http.client.AuthenticationHandler proxyAuthHandler -> proxyAuthHandler
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.params.HttpParams params -> params
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    org.apache.http.auth.AuthState targetAuthState -> targetAuthState
    org.apache.http.auth.AuthState proxyAuthState -> proxyAuthState
    int execCount -> execCount
    int redirectCount -> redirectCount
    int maxRedirects -> maxRedirects
    org.apache.http.HttpHost virtualHost -> virtualHost
    org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest) -> wrapRequest
    void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute) -> rewriteRequestURI
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext) -> tryConnect
    org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext) -> tryExecute
    void releaseConnection() -> releaseConnection
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> establishRoute
    boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createTunnelToTarget
    boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> createTunnelToProxy
    org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createConnectRequest
    org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handleResponse
    void abortConnection() -> abortConnection
    void processChallenges(java.util.Map,org.apache.http.auth.AuthState,org.apache.http.client.AuthenticationHandler,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> processChallenges
    void updateAuthState(org.apache.http.auth.AuthState,org.apache.http.HttpHost,org.apache.http.client.CredentialsProvider) -> updateAuthState
    void invalidateAuthIfSuccessful(org.apache.http.auth.AuthState) -> invalidateAuthIfSuccessful
org.apache.http.impl.client.DefaultTargetAuthenticationHandler -> org.apache.http.impl.client.DefaultTargetAuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
org.apache.http.impl.client.DefaultUserTokenHandler -> org.apache.http.impl.client.DefaultUserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
    java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState) -> getAuthPrincipal
org.apache.http.impl.client.EntityEnclosingRequestWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper:
    org.apache.http.HttpEntity entity -> entity
    boolean consumed -> consumed
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    boolean isRepeatable() -> isRepeatable
    boolean access$002(org.apache.http.impl.client.EntityEnclosingRequestWrapper,boolean) -> access$002
org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper:
    org.apache.http.impl.client.EntityEnclosingRequestWrapper this$0 -> this$0
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.impl.client.RedirectLocations -> org.apache.http.impl.client.RedirectLocations:
    java.util.Set unique -> unique
    java.util.List all -> all
    boolean contains(java.net.URI) -> contains
    void add(java.net.URI) -> add
    boolean remove(java.net.URI) -> remove
    java.util.List getAll() -> getAll
org.apache.http.impl.client.RequestWrapper -> org.apache.http.impl.client.RequestWrapper:
    org.apache.http.HttpRequest original -> original
    java.net.URI uri -> uri
    java.lang.String method -> method
    org.apache.http.ProtocolVersion version -> version
    int execCount -> execCount
    void resetHeaders() -> resetHeaders
    java.lang.String getMethod() -> getMethod
    void setMethod(java.lang.String) -> setMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    void abort() -> abort
    boolean isAborted() -> isAborted
    org.apache.http.HttpRequest getOriginal() -> getOriginal
    boolean isRepeatable() -> isRepeatable
    int getExecCount() -> getExecCount
    void incrementExecCount() -> incrementExecCount
org.apache.http.impl.client.RoutedRequest -> org.apache.http.impl.client.RoutedRequest:
    org.apache.http.impl.client.RequestWrapper request -> request
    org.apache.http.conn.routing.HttpRoute route -> route
    org.apache.http.impl.client.RequestWrapper getRequest() -> getRequest
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.client.TunnelRefusedException -> org.apache.http.impl.client.TunnelRefusedException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpResponse response -> response
    org.apache.http.HttpResponse getResponse() -> getResponse
org.apache.http.impl.conn.AbstractClientConnAdapter -> org.apache.http.impl.conn.AbstractClientConnAdapter:
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.conn.OperatedClientConnection wrappedConnection -> wrappedConnection
    boolean markedReusable -> markedReusable
    boolean released -> released
    long duration -> duration
    void detach() -> detach
    org.apache.http.conn.OperatedClientConnection getWrappedConnection() -> getWrappedConnection
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    void assertNotAborted() -> assertNotAborted
    boolean isReleased() -> isReleased
    void assertValid(org.apache.http.conn.OperatedClientConnection) -> assertValid
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    void flush() -> flush
    boolean isResponseAvailable(int) -> isResponseAvailable
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isSecure() -> isSecure
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
org.apache.http.impl.conn.AbstractPoolEntry -> org.apache.http.impl.conn.AbstractPoolEntry:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.OperatedClientConnection connection -> connection
    org.apache.http.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    org.apache.http.conn.routing.RouteTracker tracker -> tracker
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void shutdownEntry() -> shutdownEntry
org.apache.http.impl.conn.AbstractPooledConnAdapter -> org.apache.http.impl.conn.AbstractPooledConnAdapter:
    org.apache.http.impl.conn.AbstractPoolEntry poolEntry -> poolEntry
    org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void assertValid(org.apache.http.impl.conn.AbstractPoolEntry) -> assertValid
    void assertAttached() -> assertAttached
    void detach() -> detach
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void close() -> close
    void shutdown() -> shutdown
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
org.apache.http.impl.conn.ConnectionShutdownException -> org.apache.http.impl.conn.ConnectionShutdownException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.conn.DefaultClientConnection -> org.apache.http.impl.conn.DefaultClientConnection:
    org.apache.commons.logging.Log log -> log
    org.apache.commons.logging.Log headerLog -> headerLog
    org.apache.commons.logging.Log wireLog -> wireLog
    java.net.Socket socket -> socket
    org.apache.http.HttpHost targetHost -> targetHost
    boolean connSecure -> connSecure
    boolean shutdown -> shutdown
    java.util.Map attributes -> attributes
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void shutdown() -> shutdown
    void close() -> close
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
org.apache.http.impl.conn.DefaultClientConnectionOperator -> org.apache.http.impl.conn.DefaultClientConnectionOperator:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
    void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> prepareSocket
    java.net.InetAddress[] resolveHostname(java.lang.String) -> resolveHostname
org.apache.http.impl.conn.DefaultHttpRoutePlanner -> org.apache.http.impl.conn.DefaultHttpRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.impl.conn.DefaultResponseParser -> org.apache.http.impl.conn.DefaultResponseParser:
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    int maxGarbageLines -> maxGarbageLines
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.HttpInetSocketAddress -> org.apache.http.impl.conn.HttpInetSocketAddress:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost host -> host
    org.apache.http.HttpHost getHost() -> getHost
    java.lang.String toString() -> toString
org.apache.http.impl.conn.IdleConnectionHandler -> org.apache.http.impl.conn.IdleConnectionHandler:
    org.apache.commons.logging.Log log -> log
    java.util.Map connectionToTimes -> connectionToTimes
    void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit) -> add
    boolean remove(org.apache.http.HttpConnection) -> remove
    void removeAll() -> removeAll
    void closeIdleConnections(long) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.conn.IdleConnectionHandler$TimeValues -> org.apache.http.impl.conn.IdleConnectionHandler$TimeValues:
    long timeAdded -> timeAdded
    long timeExpires -> timeExpires
    long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) -> access$000
    long access$100(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) -> access$100
org.apache.http.impl.conn.LoggingSessionInputBuffer -> org.apache.http.impl.conn.LoggingSessionInputBuffer:
    org.apache.http.io.SessionInputBuffer in -> in
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    boolean isDataAvailable(int) -> isDataAvailable
    int read(byte[],int,int) -> read
    int read() -> read
    int read(byte[]) -> read
    java.lang.String readLine() -> readLine
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
    boolean isEof() -> isEof
org.apache.http.impl.conn.LoggingSessionOutputBuffer -> org.apache.http.impl.conn.LoggingSessionOutputBuffer:
    org.apache.http.io.SessionOutputBuffer out -> out
    org.apache.http.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
    void flush() -> flush
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void writeLine(java.lang.String) -> writeLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.conn.ProxySelectorRoutePlanner -> org.apache.http.impl.conn.ProxySelectorRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    java.net.ProxySelector proxySelector -> proxySelector
    java.net.ProxySelector getProxySelector() -> getProxySelector
    void setProxySelector(java.net.ProxySelector) -> setProxySelector
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
    java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> chooseProxy
org.apache.http.impl.conn.ProxySelectorRoutePlanner$1 -> org.apache.http.impl.conn.ProxySelectorRoutePlanner$1:
    int[] $SwitchMap$java$net$Proxy$Type -> $SwitchMap$java$net$Proxy$Type
org.apache.http.impl.conn.SchemeRegistryFactory -> org.apache.http.impl.conn.SchemeRegistryFactory:
    org.apache.http.conn.scheme.SchemeRegistry createDefault() -> createDefault
org.apache.http.impl.conn.SingleClientConnManager -> org.apache.http.impl.conn.SingleClientConnManager:
    org.apache.commons.logging.Log log -> log
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    boolean alwaysShutDown -> alwaysShutDown
    org.apache.http.impl.conn.SingleClientConnManager$PoolEntry uniquePoolEntry -> uniquePoolEntry
    org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter managedConn -> managedConn
    long lastReleaseTime -> lastReleaseTime
    long connectionExpiresTime -> connectionExpiresTime
    boolean isShutDown -> isShutDown
    void finalize() -> finalize
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    void assertStillUp() -> assertStillUp
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
    void revokeConnection() -> revokeConnection
org.apache.http.impl.conn.SingleClientConnManager$1 -> org.apache.http.impl.conn.SingleClientConnManager$1:
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter -> org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
org.apache.http.impl.conn.SingleClientConnManager$PoolEntry -> org.apache.http.impl.conn.SingleClientConnManager$PoolEntry:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    void close() -> close
    void shutdown() -> shutdown
org.apache.http.impl.conn.Wire -> org.apache.http.impl.conn.Wire:
    org.apache.commons.logging.Log log -> log
    void wire(java.lang.String,java.io.InputStream) -> wire
    boolean enabled() -> enabled
    void output(java.io.InputStream) -> output
    void input(java.io.InputStream) -> input
    void output(byte[],int,int) -> output
    void input(byte[],int,int) -> input
    void output(byte[]) -> output
    void input(byte[]) -> input
    void output(int) -> output
    void input(int) -> input
    void output(java.lang.String) -> output
    void input(java.lang.String) -> input
org.apache.http.impl.conn.tsccm.AbstractConnPool -> org.apache.http.impl.conn.tsccm.AbstractConnPool:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    java.util.Set leasedConnections -> leasedConnections
    int numConnections -> numConnections
    boolean isShutDown -> isShutDown
    java.util.Set issuedConnections -> issuedConnections
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler -> idleConnHandler
    void enableConnectionGC() -> enableConnectionGC
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit) -> getEntry
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    void handleReference(java.lang.ref.Reference) -> handleReference
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void deleteClosedConnections() -> deleteClosedConnections
    void shutdown() -> shutdown
    void closeConnection(org.apache.http.conn.OperatedClientConnection) -> closeConnection
org.apache.http.impl.conn.tsccm.BasicPoolEntry -> org.apache.http.impl.conn.tsccm.BasicPoolEntry:
    long created -> created
    long updated -> updated
    long validUntil -> validUntil
    long expiry -> expiry
    org.apache.http.conn.OperatedClientConnection getConnection() -> getConnection
    org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef() -> getWeakRef
    void shutdownEntry() -> shutdownEntry
    long getCreated() -> getCreated
    long getUpdated() -> getUpdated
    long getExpiry() -> getExpiry
    long getValidUntil() -> getValidUntil
    void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    boolean isExpired(long) -> isExpired
org.apache.http.impl.conn.tsccm.BasicPoolEntryRef -> org.apache.http.impl.conn.tsccm.BasicPoolEntryRef:
    org.apache.http.conn.routing.HttpRoute route -> route
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter -> org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void detach() -> detach
org.apache.http.impl.conn.tsccm.ConnPoolByRoute -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.Set leasedConnections -> leasedConnections
    java.util.Queue freeConnections -> freeConnections
    java.util.Queue waitingThreads -> waitingThreads
    java.util.Map routeToPool -> routeToPool
    long connTTL -> connTTL
    java.util.concurrent.TimeUnit connTTLTimeUnit -> connTTLTimeUnit
    boolean shutdown -> shutdown
    int maxTotalConnections -> maxTotalConnections
    int numConnections -> numConnections
    java.util.concurrent.locks.Lock getLock() -> getLock
    java.util.Queue createFreeConnQueue() -> createFreeConnQueue
    java.util.Queue createWaitingThreadQueue() -> createWaitingThreadQueue
    java.util.Map createRouteToPoolMap() -> createRouteToPoolMap
    org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute) -> newRouteSpecificPool
    org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> newWaitingThread
    void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> closeConnection
    org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean) -> getRoutePool
    int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter) -> getEntryBlocking
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object) -> getFreeEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator) -> createEntry
    void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void deleteLeastUsedEntry() -> deleteLeastUsedEntry
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> notifyWaitingThread
    void deleteClosedConnections() -> deleteClosedConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    int getMaxTotalConnections() -> getMaxTotalConnections
    java.util.concurrent.locks.Lock access$000(org.apache.http.impl.conn.tsccm.ConnPoolByRoute) -> access$000
org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1:
    org.apache.http.impl.conn.tsccm.WaitingThreadAborter val$aborter -> val$aborter
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
org.apache.http.impl.conn.tsccm.PoolEntryRequest -> org.apache.http.impl.conn.tsccm.PoolEntryRequest:
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    void abortRequest() -> abortRequest
org.apache.http.impl.conn.tsccm.RefQueueHandler -> org.apache.http.impl.conn.tsccm.RefQueueHandler:
    void handleReference(java.lang.ref.Reference) -> handleReference
org.apache.http.impl.conn.tsccm.RefQueueWorker -> org.apache.http.impl.conn.tsccm.RefQueueWorker:
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    org.apache.http.impl.conn.tsccm.RefQueueHandler refHandler -> refHandler
    java.lang.Thread workerThread -> workerThread
    void run() -> run
    void shutdown() -> shutdown
    java.lang.String toString() -> toString
org.apache.http.impl.conn.tsccm.RouteSpecificPool -> org.apache.http.impl.conn.tsccm.RouteSpecificPool:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.routing.HttpRoute route -> route
    int maxEntries -> maxEntries
    org.apache.http.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.LinkedList freeEntries -> freeEntries
    java.util.Queue waitingThreads -> waitingThreads
    int numEntries -> numEntries
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    int getMaxEntries() -> getMaxEntries
    boolean isUnused() -> isUnused
    int getCapacity() -> getCapacity
    int getEntryCount() -> getEntryCount
    org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object) -> allocEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> freeEntry
    void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> createdEntry
    boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void dropEntry() -> dropEntry
    void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> queueThread
    boolean hasThread() -> hasThread
    org.apache.http.impl.conn.tsccm.WaitingThread nextThread() -> nextThread
    void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> removeThread
org.apache.http.impl.conn.tsccm.RouteSpecificPool$1 -> org.apache.http.impl.conn.tsccm.RouteSpecificPool$1:
    org.apache.http.impl.conn.tsccm.RouteSpecificPool this$0 -> this$0
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool -> connectionPool
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool -> pool
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.params.ConnPerRouteBean connPerRoute -> connPerRoute
    void finalize() -> finalize
    org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams) -> createConnectionPool
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute createConnectionPool(long,java.util.concurrent.TimeUnit) -> createConnectionPool
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void shutdown() -> shutdown
    int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager) -> access$000
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1:
    org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest -> val$poolRequest
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.tsccm.WaitingThread -> org.apache.http.impl.conn.tsccm.WaitingThread:
    java.util.concurrent.locks.Condition cond -> cond
    org.apache.http.impl.conn.tsccm.RouteSpecificPool pool -> pool
    java.lang.Thread waiter -> waiter
    boolean aborted -> aborted
    java.util.concurrent.locks.Condition getCondition() -> getCondition
    org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool() -> getPool
    java.lang.Thread getThread() -> getThread
    boolean await(java.util.Date) -> await
    void wakeup() -> wakeup
    void interrupt() -> interrupt
org.apache.http.impl.conn.tsccm.WaitingThreadAborter -> org.apache.http.impl.conn.tsccm.WaitingThreadAborter:
    org.apache.http.impl.conn.tsccm.WaitingThread waitingThread -> waitingThread
    boolean aborted -> aborted
    void abort() -> abort
    void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> setWaitingThread
org.apache.http.impl.cookie.AbstractCookieAttributeHandler -> org.apache.http.impl.cookie.AbstractCookieAttributeHandler:
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.AbstractCookieSpec -> org.apache.http.impl.cookie.AbstractCookieSpec:
    java.util.Map attribHandlerMap -> attribHandlerMap
    void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler) -> registerAttribHandler
    org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> findAttribHandler
    org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String) -> getAttribHandler
    java.util.Collection getAttribHandlers() -> getAttribHandlers
org.apache.http.impl.cookie.BasicClientCookie -> org.apache.http.impl.cookie.BasicClientCookie:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.util.Map attribs -> attribs
    java.lang.String value -> value
    java.lang.String cookieComment -> cookieComment
    java.lang.String cookieDomain -> cookieDomain
    java.util.Date cookieExpiryDate -> cookieExpiryDate
    java.lang.String cookiePath -> cookiePath
    boolean isSecure -> isSecure
    int cookieVersion -> cookieVersion
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    void setExpiryDate(java.util.Date) -> setExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    boolean isSecure() -> isSecure
    void setSecure(boolean) -> setSecure
    int[] getPorts() -> getPorts
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    boolean isExpired(java.util.Date) -> isExpired
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BasicClientCookie2 -> org.apache.http.impl.cookie.BasicClientCookie2:
    long serialVersionUID -> serialVersionUID
    java.lang.String commentURL -> commentURL
    int[] ports -> ports
    boolean discard -> discard
    int[] getPorts() -> getPorts
    void setPorts(int[]) -> setPorts
    java.lang.String getCommentURL() -> getCommentURL
    void setCommentURL(java.lang.String) -> setCommentURL
    void setDiscard(boolean) -> setDiscard
    boolean isPersistent() -> isPersistent
    boolean isExpired(java.util.Date) -> isExpired
    java.lang.Object clone() -> clone
org.apache.http.impl.cookie.BasicCommentHandler -> org.apache.http.impl.cookie.BasicCommentHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicDomainHandler -> org.apache.http.impl.cookie.BasicDomainHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicExpiresHandler -> org.apache.http.impl.cookie.BasicExpiresHandler:
    java.lang.String[] datepatterns -> datepatterns
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicMaxAgeHandler -> org.apache.http.impl.cookie.BasicMaxAgeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicPathHandler -> org.apache.http.impl.cookie.BasicPathHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicSecureHandler -> org.apache.http.impl.cookie.BasicSecureHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BestMatchSpec -> org.apache.http.impl.cookie.BestMatchSpec:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    org.apache.http.impl.cookie.RFC2965Spec strict -> strict
    org.apache.http.impl.cookie.RFC2109Spec obsoleteStrict -> obsoleteStrict
    org.apache.http.impl.cookie.BrowserCompatSpec compat -> compat
    org.apache.http.impl.cookie.RFC2965Spec getStrict() -> getStrict
    org.apache.http.impl.cookie.RFC2109Spec getObsoleteStrict() -> getObsoleteStrict
    org.apache.http.impl.cookie.BrowserCompatSpec getCompat() -> getCompat
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BestMatchSpecFactory -> org.apache.http.impl.cookie.BestMatchSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.BrowserCompatSpec -> org.apache.http.impl.cookie.BrowserCompatSpec:
    java.lang.String[] DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String[] DEFAULT_DATE_PATTERNS -> DEFAULT_DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BrowserCompatSpecFactory -> org.apache.http.impl.cookie.BrowserCompatSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.CookieSpecBase -> org.apache.http.impl.cookie.CookieSpecBase:
    java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin) -> getDefaultPath
    java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin) -> getDefaultDomain
    java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.DateParseException -> org.apache.http.impl.cookie.DateParseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.cookie.DateUtils -> org.apache.http.impl.cookie.DateUtils:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.lang.String[] DEFAULT_PATTERNS -> DEFAULT_PATTERNS
    java.util.Date DEFAULT_TWO_DIGIT_YEAR_START -> DEFAULT_TWO_DIGIT_YEAR_START
    java.util.TimeZone GMT -> GMT
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
org.apache.http.impl.cookie.DateUtils$DateFormatHolder -> org.apache.http.impl.cookie.DateUtils$DateFormatHolder:
    java.lang.ThreadLocal THREADLOCAL_FORMATS -> THREADLOCAL_FORMATS
    java.text.SimpleDateFormat formatFor(java.lang.String) -> formatFor
org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1 -> org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1:
    java.lang.ref.SoftReference initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
org.apache.http.impl.cookie.IgnoreSpec -> org.apache.http.impl.cookie.IgnoreSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.IgnoreSpecFactory -> org.apache.http.impl.cookie.IgnoreSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.NetscapeDomainHandler -> org.apache.http.impl.cookie.NetscapeDomainHandler:
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean isSpecialDomain(java.lang.String) -> isSpecialDomain
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.NetscapeDraftHeaderParser -> org.apache.http.impl.cookie.NetscapeDraftHeaderParser:
    org.apache.http.impl.cookie.NetscapeDraftHeaderParser DEFAULT -> DEFAULT
    org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeader
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.impl.cookie.NetscapeDraftSpec -> org.apache.http.impl.cookie.NetscapeDraftSpec:
    java.lang.String EXPIRES_PATTERN -> EXPIRES_PATTERN
    java.lang.String[] datepatterns -> datepatterns
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.NetscapeDraftSpecFactory -> org.apache.http.impl.cookie.NetscapeDraftSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.PublicSuffixFilter -> org.apache.http.impl.cookie.PublicSuffixFilter:
    org.apache.http.cookie.CookieAttributeHandler wrapped -> wrapped
    java.util.Set exceptions -> exceptions
    java.util.Set suffixes -> suffixes
    void setPublicSuffixes(java.util.Collection) -> setPublicSuffixes
    void setExceptions(java.util.Collection) -> setExceptions
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean isForPublicSuffix(org.apache.http.cookie.Cookie) -> isForPublicSuffix
org.apache.http.impl.cookie.PublicSuffixListParser -> org.apache.http.impl.cookie.PublicSuffixListParser:
    int MAX_LINE_LEN -> MAX_LINE_LEN
    org.apache.http.impl.cookie.PublicSuffixFilter filter -> filter
    void parse(java.io.Reader) -> parse
    boolean readLine(java.io.Reader,java.lang.StringBuilder) -> readLine
org.apache.http.impl.cookie.RFC2109DomainHandler -> org.apache.http.impl.cookie.RFC2109DomainHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2109Spec -> org.apache.http.impl.cookie.RFC2109Spec:
    org.apache.http.cookie.CookiePathComparator PATH_COMPARATOR -> PATH_COMPARATOR
    java.lang.String[] DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    java.util.List formatCookies(java.util.List) -> formatCookies
    java.util.List doFormatOneHeader(java.util.List) -> doFormatOneHeader
    java.util.List doFormatManyHeaders(java.util.List) -> doFormatManyHeaders
    void formatParamAsVer(org.apache.http.util.CharArrayBuffer,java.lang.String,java.lang.String,int) -> formatParamAsVer
    void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.RFC2109SpecFactory -> org.apache.http.impl.cookie.RFC2109SpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2109VersionHandler -> org.apache.http.impl.cookie.RFC2109VersionHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler -> org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler -> org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DomainAttributeHandler -> org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965PortAttributeHandler -> org.apache.http.impl.cookie.RFC2965PortAttributeHandler:
    int[] parsePortAttribute(java.lang.String) -> parsePortAttribute
    boolean portMatch(int,int[]) -> portMatch
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965Spec -> org.apache.http.impl.cookie.RFC2965Spec:
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List createCookies(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> createCookies
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin) -> adjustEffectiveHost
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.RFC2965SpecFactory -> org.apache.http.impl.cookie.RFC2965SpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2965VersionAttributeHandler -> org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.entity.EntityDeserializer -> org.apache.http.impl.entity.EntityDeserializer:
    org.apache.http.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> doDeserialize
    org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> deserialize
org.apache.http.impl.entity.EntitySerializer -> org.apache.http.impl.entity.EntitySerializer:
    org.apache.http.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage) -> doSerialize
    void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity) -> serialize
org.apache.http.impl.entity.LaxContentLengthStrategy -> org.apache.http.impl.entity.LaxContentLengthStrategy:
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.entity.StrictContentLengthStrategy -> org.apache.http.impl.entity.StrictContentLengthStrategy:
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.io.AbstractMessageParser -> org.apache.http.impl.io.AbstractMessageParser:
    int HEAD_LINE -> HEAD_LINE
    int HEADERS -> HEADERS
    org.apache.http.io.SessionInputBuffer sessionBuffer -> sessionBuffer
    int maxHeaderCount -> maxHeaderCount
    int maxLineLen -> maxLineLen
    java.util.List headerLines -> headerLines
    org.apache.http.message.LineParser lineParser -> lineParser
    int state -> state
    org.apache.http.HttpMessage message -> message
    org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser) -> parseHeaders
    org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List) -> parseHeaders
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.impl.io.AbstractMessageWriter -> org.apache.http.impl.io.AbstractMessageWriter:
    org.apache.http.io.SessionOutputBuffer sessionBuffer -> sessionBuffer
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.impl.io.AbstractSessionInputBuffer -> org.apache.http.impl.io.AbstractSessionInputBuffer:
    java.io.InputStream instream -> instream
    byte[] buffer -> buffer
    int bufferpos -> bufferpos
    int bufferlen -> bufferlen
    org.apache.http.util.ByteArrayBuffer linebuffer -> linebuffer
    java.lang.String charset -> charset
    boolean ascii -> ascii
    int maxLineLen -> maxLineLen
    int minChunkLimit -> minChunkLimit
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    void init(java.io.InputStream,int,org.apache.http.params.HttpParams) -> init
    org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    int fillBuffer() -> fillBuffer
    boolean hasBufferedData() -> hasBufferedData
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int locateLF() -> locateLF
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer) -> lineFromLineBuffer
    int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int) -> lineFromReadBuffer
    java.lang.String readLine() -> readLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.AbstractSessionOutputBuffer -> org.apache.http.impl.io.AbstractSessionOutputBuffer:
    byte[] CRLF -> CRLF
    java.io.OutputStream outstream -> outstream
    org.apache.http.util.ByteArrayBuffer buffer -> buffer
    java.lang.String charset -> charset
    boolean ascii -> ascii
    int minChunkLimit -> minChunkLimit
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    void init(java.io.OutputStream,int,org.apache.http.params.HttpParams) -> init
    org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    void flushBuffer() -> flushBuffer
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.ChunkedInputStream -> org.apache.http.impl.io.ChunkedInputStream:
    int CHUNK_LEN -> CHUNK_LEN
    int CHUNK_DATA -> CHUNK_DATA
    int CHUNK_CRLF -> CHUNK_CRLF
    int BUFFER_SIZE -> BUFFER_SIZE
    org.apache.http.io.SessionInputBuffer in -> in
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    int state -> state
    int chunkSize -> chunkSize
    int pos -> pos
    boolean eof -> eof
    boolean closed -> closed
    org.apache.http.Header[] footers -> footers
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void nextChunk() -> nextChunk
    int getChunkSize() -> getChunkSize
    void parseTrailerHeaders() -> parseTrailerHeaders
    void close() -> close
    org.apache.http.Header[] getFooters() -> getFooters
org.apache.http.impl.io.ChunkedOutputStream -> org.apache.http.impl.io.ChunkedOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    byte[] cache -> cache
    int cachePosition -> cachePosition
    boolean wroteLastChunk -> wroteLastChunk
    boolean closed -> closed
    void flushCache() -> flushCache
    void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    void writeClosingChunk() -> writeClosingChunk
    void finish() -> finish
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.http.impl.io.ContentLengthInputStream -> org.apache.http.impl.io.ContentLengthInputStream:
    int BUFFER_SIZE -> BUFFER_SIZE
    long contentLength -> contentLength
    long pos -> pos
    boolean closed -> closed
    org.apache.http.io.SessionInputBuffer in -> in
    void close() -> close
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    long skip(long) -> skip
org.apache.http.impl.io.ContentLengthOutputStream -> org.apache.http.impl.io.ContentLengthOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    long contentLength -> contentLength
    long total -> total
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
org.apache.http.impl.io.HttpRequestParser -> org.apache.http.impl.io.HttpRequestParser:
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpRequestWriter -> org.apache.http.impl.io.HttpRequestWriter:
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpResponseParser -> org.apache.http.impl.io.HttpResponseParser:
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpResponseWriter -> org.apache.http.impl.io.HttpResponseWriter:
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpTransportMetricsImpl -> org.apache.http.impl.io.HttpTransportMetricsImpl:
    long bytesTransferred -> bytesTransferred
    long getBytesTransferred() -> getBytesTransferred
    void setBytesTransferred(long) -> setBytesTransferred
    void incrementBytesTransferred(long) -> incrementBytesTransferred
    void reset() -> reset
org.apache.http.impl.io.IdentityInputStream -> org.apache.http.impl.io.IdentityInputStream:
    org.apache.http.io.SessionInputBuffer in -> in
    boolean closed -> closed
    int available() -> available
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
org.apache.http.impl.io.IdentityOutputStream -> org.apache.http.impl.io.IdentityOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
org.apache.http.impl.io.SocketInputBuffer -> org.apache.http.impl.io.SocketInputBuffer:
    java.lang.Class SOCKET_TIMEOUT_CLASS -> SOCKET_TIMEOUT_CLASS
    java.net.Socket socket -> socket
    boolean eof -> eof
    java.lang.Class SocketTimeoutExceptionClass() -> SocketTimeoutExceptionClass
    boolean isSocketTimeoutException(java.io.InterruptedIOException) -> isSocketTimeoutException
    int fillBuffer() -> fillBuffer
    boolean isDataAvailable(int) -> isDataAvailable
    boolean isEof() -> isEof
org.apache.http.impl.io.SocketOutputBuffer -> org.apache.http.impl.io.SocketOutputBuffer:
org.apache.http.io.BufferInfo -> org.apache.http.io.BufferInfo:
    int length() -> length
    int capacity() -> capacity
    int available() -> available
org.apache.http.io.EofSensor -> org.apache.http.io.EofSensor:
    boolean isEof() -> isEof
org.apache.http.io.HttpMessageParser -> org.apache.http.io.HttpMessageParser:
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.io.HttpMessageWriter -> org.apache.http.io.HttpMessageWriter:
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.io.HttpTransportMetrics -> org.apache.http.io.HttpTransportMetrics:
    long getBytesTransferred() -> getBytesTransferred
    void reset() -> reset
org.apache.http.io.SessionInputBuffer -> org.apache.http.io.SessionInputBuffer:
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int read() -> read
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.io.SessionOutputBuffer -> org.apache.http.io.SessionOutputBuffer:
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void flush() -> flush
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.message.AbstractHttpMessage -> org.apache.http.message.AbstractHttpMessage:
    org.apache.http.message.HeaderGroup headergroup -> headergroup
    org.apache.http.params.HttpParams params -> params
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.message.BasicHeader -> org.apache.http.message.BasicHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    org.apache.http.HeaderElement[] getElements() -> getElements
    java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElement -> org.apache.http.message.BasicHeaderElement:
    java.lang.String name -> name
    java.lang.String value -> value
    org.apache.http.NameValuePair[] parameters -> parameters
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElementIterator -> org.apache.http.message.BasicHeaderElementIterator:
    org.apache.http.HeaderIterator headerIt -> headerIt
    org.apache.http.message.HeaderValueParser parser -> parser
    org.apache.http.HeaderElement currentElement -> currentElement
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    org.apache.http.message.ParserCursor cursor -> cursor
    void bufferHeaderValue() -> bufferHeaderValue
    void parseNextElement() -> parseNextElement
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicHeaderIterator -> org.apache.http.message.BasicHeaderIterator:
    org.apache.http.Header[] allHeaders -> allHeaders
    int currentIndex -> currentIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicHeaderValueFormatter -> org.apache.http.message.BasicHeaderValueFormatter:
    org.apache.http.message.BasicHeaderValueFormatter DEFAULT -> DEFAULT
    java.lang.String SEPARATORS -> SEPARATORS
    java.lang.String UNSAFE_CHARS -> UNSAFE_CHARS
    java.lang.String formatElements(org.apache.http.HeaderElement[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatElements
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    int estimateElementsLen(org.apache.http.HeaderElement[]) -> estimateElementsLen
    java.lang.String formatHeaderElement(org.apache.http.HeaderElement,boolean,org.apache.http.message.HeaderValueFormatter) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    int estimateHeaderElementLen(org.apache.http.HeaderElement) -> estimateHeaderElementLen
    java.lang.String formatParameters(org.apache.http.NameValuePair[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    int estimateParametersLen(org.apache.http.NameValuePair[]) -> estimateParametersLen
    java.lang.String formatNameValuePair(org.apache.http.NameValuePair,boolean,org.apache.http.message.HeaderValueFormatter) -> formatNameValuePair
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
    int estimateNameValuePairLen(org.apache.http.NameValuePair) -> estimateNameValuePairLen
    void doFormatValue(org.apache.http.util.CharArrayBuffer,java.lang.String,boolean) -> doFormatValue
    boolean isSeparator(char) -> isSeparator
    boolean isUnsafe(char) -> isUnsafe
org.apache.http.message.BasicHeaderValueParser -> org.apache.http.message.BasicHeaderValueParser:
    org.apache.http.message.BasicHeaderValueParser DEFAULT -> DEFAULT
    char PARAM_DELIMITER -> PARAM_DELIMITER
    char ELEM_DELIMITER -> ELEM_DELIMITER
    char[] ALL_DELIMITERS -> ALL_DELIMITERS
    org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseElements
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseHeaderElement
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.HeaderElement createHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]) -> createHeaderElement
    org.apache.http.NameValuePair[] parseParameters(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseParameters
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseNameValuePair
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
    boolean isOneOf(char,char[]) -> isOneOf
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[]) -> parseNameValuePair
    org.apache.http.NameValuePair createNameValuePair(java.lang.String,java.lang.String) -> createNameValuePair
org.apache.http.message.BasicHttpEntityEnclosingRequest -> org.apache.http.message.BasicHttpEntityEnclosingRequest:
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
org.apache.http.message.BasicHttpRequest -> org.apache.http.message.BasicHttpRequest:
    java.lang.String method -> method
    java.lang.String uri -> uri
    org.apache.http.RequestLine requestline -> requestline
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    java.lang.String toString() -> toString
org.apache.http.message.BasicHttpResponse -> org.apache.http.message.BasicHttpResponse:
    org.apache.http.StatusLine statusline -> statusline
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    java.util.Locale locale -> locale
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    org.apache.http.HttpEntity getEntity() -> getEntity
    java.util.Locale getLocale() -> getLocale
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    void setLocale(java.util.Locale) -> setLocale
    java.lang.String getReason(int) -> getReason
    java.lang.String toString() -> toString
org.apache.http.message.BasicLineFormatter -> org.apache.http.message.BasicLineFormatter:
    org.apache.http.message.BasicLineFormatter DEFAULT -> DEFAULT
    org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer) -> initBuffer
    java.lang.String formatProtocolVersion(org.apache.http.ProtocolVersion,org.apache.http.message.LineFormatter) -> formatProtocolVersion
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    int estimateProtocolVersionLen(org.apache.http.ProtocolVersion) -> estimateProtocolVersionLen
    java.lang.String formatRequestLine(org.apache.http.RequestLine,org.apache.http.message.LineFormatter) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> doFormatRequestLine
    java.lang.String formatStatusLine(org.apache.http.StatusLine,org.apache.http.message.LineFormatter) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> doFormatStatusLine
    java.lang.String formatHeader(org.apache.http.Header,org.apache.http.message.LineFormatter) -> formatHeader
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
    void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> doFormatHeader
org.apache.http.message.BasicLineParser -> org.apache.http.message.BasicLineParser:
    org.apache.http.message.BasicLineParser DEFAULT -> DEFAULT
    org.apache.http.ProtocolVersion protocol -> protocol
    org.apache.http.ProtocolVersion parseProtocolVersion(java.lang.String,org.apache.http.message.LineParser) -> parseProtocolVersion
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    org.apache.http.ProtocolVersion createProtocolVersion(int,int) -> createProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser) -> parseRequestLine
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion) -> createRequestLine
    org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser) -> parseStatusLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> createStatusLine
    org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser) -> parseHeader
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
    void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> skipWhitespace
org.apache.http.message.BasicListHeaderIterator -> org.apache.http.message.BasicListHeaderIterator:
    java.util.List allHeaders -> allHeaders
    int currentIndex -> currentIndex
    int lastIndex -> lastIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicNameValuePair -> org.apache.http.message.BasicNameValuePair:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
org.apache.http.message.BasicRequestLine -> org.apache.http.message.BasicRequestLine:
    long serialVersionUID -> serialVersionUID
    org.apache.http.ProtocolVersion protoversion -> protoversion
    java.lang.String method -> method
    java.lang.String uri -> uri
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicStatusLine -> org.apache.http.message.BasicStatusLine:
    long serialVersionUID -> serialVersionUID
    org.apache.http.ProtocolVersion protoVersion -> protoVersion
    int statusCode -> statusCode
    java.lang.String reasonPhrase -> reasonPhrase
    int getStatusCode() -> getStatusCode
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicTokenIterator -> org.apache.http.message.BasicTokenIterator:
    java.lang.String HTTP_SEPARATORS -> HTTP_SEPARATORS
    org.apache.http.HeaderIterator headerIt -> headerIt
    java.lang.String currentHeader -> currentHeader
    java.lang.String currentToken -> currentToken
    int searchPos -> searchPos
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
    java.lang.Object next() -> next
    void remove() -> remove
    int findNext(int) -> findNext
    java.lang.String createToken(java.lang.String,int,int) -> createToken
    int findTokenStart(int) -> findTokenStart
    int findTokenSeparator(int) -> findTokenSeparator
    int findTokenEnd(int) -> findTokenEnd
    boolean isTokenSeparator(char) -> isTokenSeparator
    boolean isWhitespace(char) -> isWhitespace
    boolean isTokenChar(char) -> isTokenChar
    boolean isHttpSeparator(char) -> isHttpSeparator
org.apache.http.message.BufferedHeader -> org.apache.http.message.BufferedHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    int valuePos -> valuePos
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
    int getValuePos() -> getValuePos
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.HeaderGroup -> org.apache.http.message.HeaderGroup:
    long serialVersionUID -> serialVersionUID
    java.util.List headers -> headers
    void clear() -> clear
    void addHeader(org.apache.http.Header) -> addHeader
    void removeHeader(org.apache.http.Header) -> removeHeader
    void updateHeader(org.apache.http.Header) -> updateHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    org.apache.http.Header getCondensedHeader(java.lang.String) -> getCondensedHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.HeaderIterator iterator() -> iterator
    org.apache.http.HeaderIterator iterator(java.lang.String) -> iterator
    org.apache.http.message.HeaderGroup copy() -> copy
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.http.message.HeaderValueFormatter -> org.apache.http.message.HeaderValueFormatter:
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
org.apache.http.message.HeaderValueParser -> org.apache.http.message.HeaderValueParser:
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.message.LineFormatter -> org.apache.http.message.LineFormatter:
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
org.apache.http.message.LineParser -> org.apache.http.message.LineParser:
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
org.apache.http.message.ParserCursor -> org.apache.http.message.ParserCursor:
    int lowerBound -> lowerBound
    int upperBound -> upperBound
    int pos -> pos
    int getLowerBound() -> getLowerBound
    int getUpperBound() -> getUpperBound
    int getPos() -> getPos
    void updatePos(int) -> updatePos
    boolean atEnd() -> atEnd
    java.lang.String toString() -> toString
org.apache.http.params.AbstractHttpParams -> org.apache.http.params.AbstractHttpParams:
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.http.params.BasicHttpParams -> org.apache.http.params.BasicHttpParams:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap parameters -> parameters
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void clear() -> clear
    org.apache.http.params.HttpParams copy() -> copy
    java.lang.Object clone() -> clone
    void copyParams(org.apache.http.params.HttpParams) -> copyParams
org.apache.http.params.CoreConnectionPNames -> org.apache.http.params.CoreConnectionPNames:
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String TCP_NODELAY -> TCP_NODELAY
    java.lang.String SOCKET_BUFFER_SIZE -> SOCKET_BUFFER_SIZE
    java.lang.String SO_LINGER -> SO_LINGER
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    java.lang.String CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    java.lang.String STALE_CONNECTION_CHECK -> STALE_CONNECTION_CHECK
    java.lang.String MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    java.lang.String MAX_HEADER_COUNT -> MAX_HEADER_COUNT
    java.lang.String MIN_CHUNK_LIMIT -> MIN_CHUNK_LIMIT
org.apache.http.params.CoreProtocolPNames -> org.apache.http.params.CoreProtocolPNames:
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String HTTP_CONTENT_CHARSET -> HTTP_CONTENT_CHARSET
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String ORIGIN_SERVER -> ORIGIN_SERVER
    java.lang.String STRICT_TRANSFER_ENCODING -> STRICT_TRANSFER_ENCODING
    java.lang.String USE_EXPECT_CONTINUE -> USE_EXPECT_CONTINUE
    java.lang.String WAIT_FOR_CONTINUE -> WAIT_FOR_CONTINUE
org.apache.http.params.DefaultedHttpParams -> org.apache.http.params.DefaultedHttpParams:
    org.apache.http.params.HttpParams local -> local
    org.apache.http.params.HttpParams defaults -> defaults
    org.apache.http.params.HttpParams copy() -> copy
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams getDefaults() -> getDefaults
org.apache.http.params.HttpAbstractParamBean -> org.apache.http.params.HttpAbstractParamBean:
    org.apache.http.params.HttpParams params -> params
org.apache.http.params.HttpConnectionParamBean -> org.apache.http.params.HttpConnectionParamBean:
    void setSoTimeout(int) -> setSoTimeout
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    void setSocketBufferSize(int) -> setSocketBufferSize
    void setLinger(int) -> setLinger
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
org.apache.http.params.HttpConnectionParams -> org.apache.http.params.HttpConnectionParams:
    int getSoTimeout(org.apache.http.params.HttpParams) -> getSoTimeout
    void setSoTimeout(org.apache.http.params.HttpParams,int) -> setSoTimeout
    boolean getSoReuseaddr(org.apache.http.params.HttpParams) -> getSoReuseaddr
    void setSoReuseaddr(org.apache.http.params.HttpParams,boolean) -> setSoReuseaddr
    boolean getTcpNoDelay(org.apache.http.params.HttpParams) -> getTcpNoDelay
    void setTcpNoDelay(org.apache.http.params.HttpParams,boolean) -> setTcpNoDelay
    int getSocketBufferSize(org.apache.http.params.HttpParams) -> getSocketBufferSize
    void setSocketBufferSize(org.apache.http.params.HttpParams,int) -> setSocketBufferSize
    int getLinger(org.apache.http.params.HttpParams) -> getLinger
    void setLinger(org.apache.http.params.HttpParams,int) -> setLinger
    int getConnectionTimeout(org.apache.http.params.HttpParams) -> getConnectionTimeout
    void setConnectionTimeout(org.apache.http.params.HttpParams,int) -> setConnectionTimeout
    boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams) -> isStaleCheckingEnabled
    void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean) -> setStaleCheckingEnabled
org.apache.http.params.HttpParams -> org.apache.http.params.HttpParams:
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams copy() -> copy
    boolean removeParameter(java.lang.String) -> removeParameter
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.http.params.HttpProtocolParamBean -> org.apache.http.params.HttpProtocolParamBean:
    void setHttpElementCharset(java.lang.String) -> setHttpElementCharset
    void setContentCharset(java.lang.String) -> setContentCharset
    void setVersion(org.apache.http.HttpVersion) -> setVersion
    void setUserAgent(java.lang.String) -> setUserAgent
    void setUseExpectContinue(boolean) -> setUseExpectContinue
org.apache.http.params.HttpProtocolParams -> org.apache.http.params.HttpProtocolParams:
    java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams) -> getHttpElementCharset
    void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String) -> setHttpElementCharset
    java.lang.String getContentCharset(org.apache.http.params.HttpParams) -> getContentCharset
    void setContentCharset(org.apache.http.params.HttpParams,java.lang.String) -> setContentCharset
    org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams) -> getVersion
    void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion) -> setVersion
    java.lang.String getUserAgent(org.apache.http.params.HttpParams) -> getUserAgent
    void setUserAgent(org.apache.http.params.HttpParams,java.lang.String) -> setUserAgent
    boolean useExpectContinue(org.apache.http.params.HttpParams) -> useExpectContinue
    void setUseExpectContinue(org.apache.http.params.HttpParams,boolean) -> setUseExpectContinue
org.apache.http.params.SyncBasicHttpParams -> org.apache.http.params.SyncBasicHttpParams:
    long serialVersionUID -> serialVersionUID
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    void clear() -> clear
    java.lang.Object clone() -> clone
org.apache.http.protocol.BasicHttpContext -> org.apache.http.protocol.BasicHttpContext:
    org.apache.http.protocol.HttpContext parentContext -> parentContext
    java.util.Map map -> map
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.BasicHttpProcessor -> org.apache.http.protocol.BasicHttpProcessor:
    java.util.List requestInterceptors -> requestInterceptors
    java.util.List responseInterceptors -> responseInterceptors
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addInterceptor(org.apache.http.HttpRequestInterceptor) -> addInterceptor
    void addInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addInterceptor(org.apache.http.HttpResponseInterceptor) -> addInterceptor
    void addInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void setInterceptors(java.util.List) -> setInterceptors
    void clearInterceptors() -> clearInterceptors
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor) -> copyInterceptors
    org.apache.http.protocol.BasicHttpProcessor copy() -> copy
    java.lang.Object clone() -> clone
org.apache.http.protocol.DefaultedHttpContext -> org.apache.http.protocol.DefaultedHttpContext:
    org.apache.http.protocol.HttpContext local -> local
    org.apache.http.protocol.HttpContext defaults -> defaults
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    org.apache.http.protocol.HttpContext getDefaults() -> getDefaults
org.apache.http.protocol.ExecutionContext -> org.apache.http.protocol.ExecutionContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
    java.lang.String HTTP_PROXY_HOST -> HTTP_PROXY_HOST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
org.apache.http.protocol.HTTP -> org.apache.http.protocol.HTTP:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String CONTENT_LEN -> CONTENT_LEN
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String EXPECT_DIRECTIVE -> EXPECT_DIRECTIVE
    java.lang.String CONN_DIRECTIVE -> CONN_DIRECTIVE
    java.lang.String TARGET_HOST -> TARGET_HOST
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String DATE_HEADER -> DATE_HEADER
    java.lang.String SERVER_HEADER -> SERVER_HEADER
    java.lang.String EXPECT_CONTINUE -> EXPECT_CONTINUE
    java.lang.String CONN_CLOSE -> CONN_CLOSE
    java.lang.String CONN_KEEP_ALIVE -> CONN_KEEP_ALIVE
    java.lang.String CHUNK_CODING -> CHUNK_CODING
    java.lang.String IDENTITY_CODING -> IDENTITY_CODING
    java.lang.String UTF_8 -> UTF_8
    java.lang.String UTF_16 -> UTF_16
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String ASCII -> ASCII
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String DEFAULT_CONTENT_CHARSET -> DEFAULT_CONTENT_CHARSET
    java.lang.String DEFAULT_PROTOCOL_CHARSET -> DEFAULT_PROTOCOL_CHARSET
    java.lang.String OCTET_STREAM_TYPE -> OCTET_STREAM_TYPE
    java.lang.String PLAIN_TEXT_TYPE -> PLAIN_TEXT_TYPE
    java.lang.String CHARSET_PARAM -> CHARSET_PARAM
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    boolean isWhitespace(char) -> isWhitespace
org.apache.http.protocol.HttpContext -> org.apache.http.protocol.HttpContext:
    java.lang.String RESERVED_PREFIX -> RESERVED_PREFIX
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.HttpDateGenerator -> org.apache.http.protocol.HttpDateGenerator:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.util.TimeZone GMT -> GMT
    java.text.DateFormat dateformat -> dateformat
    long dateAsLong -> dateAsLong
    java.lang.String dateAsText -> dateAsText
    java.lang.String getCurrentDate() -> getCurrentDate
org.apache.http.protocol.HttpExpectationVerifier -> org.apache.http.protocol.HttpExpectationVerifier:
    void verify(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> verify
org.apache.http.protocol.HttpProcessor -> org.apache.http.protocol.HttpProcessor:
org.apache.http.protocol.HttpRequestExecutor -> org.apache.http.protocol.HttpRequestExecutor:
    boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse) -> canResponseHaveBody
    org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> execute
    void closeConnection(org.apache.http.HttpClientConnection) -> closeConnection
    void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> preProcess
    org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doSendRequest
    org.apache.http.HttpResponse doReceiveResponse(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doReceiveResponse
    void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> postProcess
org.apache.http.protocol.HttpRequestHandler -> org.apache.http.protocol.HttpRequestHandler:
    void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handle
org.apache.http.protocol.HttpRequestHandlerRegistry -> org.apache.http.protocol.HttpRequestHandlerRegistry:
    org.apache.http.protocol.UriPatternMatcher matcher -> matcher
    void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
    boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
org.apache.http.protocol.HttpRequestHandlerResolver -> org.apache.http.protocol.HttpRequestHandlerResolver:
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestInterceptorList -> org.apache.http.protocol.HttpRequestInterceptorList:
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpResponseInterceptorList -> org.apache.http.protocol.HttpResponseInterceptorList:
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpService -> org.apache.http.protocol.HttpService:
    org.apache.http.params.HttpParams params -> params
    org.apache.http.protocol.HttpProcessor processor -> processor
    org.apache.http.protocol.HttpRequestHandlerResolver handlerResolver -> handlerResolver
    org.apache.http.ConnectionReuseStrategy connStrategy -> connStrategy
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.protocol.HttpExpectationVerifier expectationVerifier -> expectationVerifier
    void setHttpProcessor(org.apache.http.protocol.HttpProcessor) -> setHttpProcessor
    void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setConnReuseStrategy
    void setResponseFactory(org.apache.http.HttpResponseFactory) -> setResponseFactory
    void setParams(org.apache.http.params.HttpParams) -> setParams
    void setHandlerResolver(org.apache.http.protocol.HttpRequestHandlerResolver) -> setHandlerResolver
    void setExpectationVerifier(org.apache.http.protocol.HttpExpectationVerifier) -> setExpectationVerifier
    org.apache.http.params.HttpParams getParams() -> getParams
    void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext) -> handleRequest
    void handleException(org.apache.http.HttpException,org.apache.http.HttpResponse) -> handleException
    void doService(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> doService
org.apache.http.protocol.ImmutableHttpProcessor -> org.apache.http.protocol.ImmutableHttpProcessor:
    org.apache.http.HttpRequestInterceptor[] requestInterceptors -> requestInterceptors
    org.apache.http.HttpResponseInterceptor[] responseInterceptors -> responseInterceptors
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestConnControl -> org.apache.http.protocol.RequestConnControl:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestContent -> org.apache.http.protocol.RequestContent:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestDate -> org.apache.http.protocol.RequestDate:
    org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestExpectContinue -> org.apache.http.protocol.RequestExpectContinue:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestTargetHost -> org.apache.http.protocol.RequestTargetHost:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestUserAgent -> org.apache.http.protocol.RequestUserAgent:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseConnControl -> org.apache.http.protocol.ResponseConnControl:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseContent -> org.apache.http.protocol.ResponseContent:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseDate -> org.apache.http.protocol.ResponseDate:
    org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseServer -> org.apache.http.protocol.ResponseServer:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.SyncBasicHttpContext -> org.apache.http.protocol.SyncBasicHttpContext:
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.UriPatternMatcher -> org.apache.http.protocol.UriPatternMatcher:
    java.util.Map map -> map
    void register(java.lang.String,java.lang.Object) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    void setObjects(java.util.Map) -> setObjects
    java.lang.Object lookup(java.lang.String) -> lookup
    boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
org.apache.http.util.ByteArrayBuffer -> org.apache.http.util.ByteArrayBuffer:
    long serialVersionUID -> serialVersionUID
    byte[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(byte[],int,int) -> append
    void append(int) -> append
    void append(char[],int,int) -> append
    void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    void clear() -> clear
    byte[] toByteArray() -> toByteArray
    int byteAt(int) -> byteAt
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    byte[] buffer() -> buffer
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(byte,int,int) -> indexOf
    int indexOf(byte) -> indexOf
org.apache.http.util.CharArrayBuffer -> org.apache.http.util.CharArrayBuffer:
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(char[],int,int) -> append
    void append(java.lang.String) -> append
    void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    void append(org.apache.http.util.CharArrayBuffer) -> append
    void append(char) -> append
    void append(byte[],int,int) -> append
    void append(org.apache.http.util.ByteArrayBuffer,int,int) -> append
    void append(java.lang.Object) -> append
    void clear() -> clear
    char[] toCharArray() -> toCharArray
    char charAt(int) -> charAt
    char[] buffer() -> buffer
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(int,int,int) -> indexOf
    int indexOf(int) -> indexOf
    java.lang.String substring(int,int) -> substring
    java.lang.String substringTrimmed(int,int) -> substringTrimmed
    java.lang.String toString() -> toString
org.apache.http.util.EncodingUtils -> org.apache.http.util.EncodingUtils:
    java.lang.String getString(byte[],int,int,java.lang.String) -> getString
    java.lang.String getString(byte[],java.lang.String) -> getString
    byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    java.lang.String getAsciiString(byte[]) -> getAsciiString
org.apache.http.util.EntityUtils -> org.apache.http.util.EntityUtils:
    void consume(org.apache.http.HttpEntity) -> consume
    byte[] toByteArray(org.apache.http.HttpEntity) -> toByteArray
    java.lang.String getContentCharSet(org.apache.http.HttpEntity) -> getContentCharSet
    java.lang.String getContentMimeType(org.apache.http.HttpEntity) -> getContentMimeType
    java.lang.String toString(org.apache.http.HttpEntity,java.lang.String) -> toString
    java.lang.String toString(org.apache.http.HttpEntity) -> toString
org.apache.http.util.ExceptionUtils -> org.apache.http.util.ExceptionUtils:
    java.lang.reflect.Method INIT_CAUSE_METHOD -> INIT_CAUSE_METHOD
    java.lang.Class class$java$lang$Throwable -> class$java$lang$Throwable
    java.lang.reflect.Method getInitCauseMethod() -> getInitCauseMethod
    void initCause(java.lang.Throwable,java.lang.Throwable) -> initCause
    java.lang.Class class$(java.lang.String) -> class$
org.apache.http.util.LangUtils -> org.apache.http.util.LangUtils:
    int HASH_SEED -> HASH_SEED
    int HASH_OFFSET -> HASH_OFFSET
    int hashCode(int,int) -> hashCode
    int hashCode(int,boolean) -> hashCode
    int hashCode(int,java.lang.Object) -> hashCode
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean equals(java.lang.Object[],java.lang.Object[]) -> equals
org.apache.http.util.VersionInfo -> org.apache.http.util.VersionInfo:
    java.lang.String UNAVAILABLE -> UNAVAILABLE
    java.lang.String VERSION_PROPERTY_FILE -> VERSION_PROPERTY_FILE
    java.lang.String PROPERTY_MODULE -> PROPERTY_MODULE
    java.lang.String PROPERTY_RELEASE -> PROPERTY_RELEASE
    java.lang.String PROPERTY_TIMESTAMP -> PROPERTY_TIMESTAMP
    java.lang.String infoPackage -> infoPackage
    java.lang.String infoModule -> infoModule
    java.lang.String infoRelease -> infoRelease
    java.lang.String infoTimestamp -> infoTimestamp
    java.lang.String infoClassloader -> infoClassloader
    java.lang.String getPackage() -> getPackage
    java.lang.String getModule() -> getModule
    java.lang.String getRelease() -> getRelease
    java.lang.String getTimestamp() -> getTimestamp
    java.lang.String getClassloader() -> getClassloader
    java.lang.String toString() -> toString
    org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader) -> loadVersionInfo
    org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader) -> loadVersionInfo
    org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader) -> fromMap
org.xclcharts.chart.ArcLineChart -> org.xclcharts.chart.ArcLineChart:
    java.lang.String TAG -> TAG
    int OFFSET_ANGLE -> OFFSET_ANGLE
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintLine -> mPaintLine
    java.util.List mDataset -> mDataset
    float mBarInnerMargin -> mBarInnerMargin
    float mLabelOffsetX -> mLabelOffsetX
    android.graphics.Paint mPaintFill -> mPaintFill
    float mRadius -> mRadius
    float mInnerRaius -> mInnerRaius
    org.xclcharts.renderer.plot.PlotAttrInfoRender plotAttrInfoRender -> plotAttrInfoRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void calcPlotRange() -> calcPlotRange
    float getRadius() -> getRadius
    void setLabelOffsetX(float) -> setLabelOffsetX
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    android.graphics.Paint getInnerPaint() -> getInnerPaint
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    org.xclcharts.renderer.plot.PlotAttrInfo getPlotAttrInfo() -> getPlotAttrInfo
    boolean setBarInnerMargin(float) -> setBarInnerMargin
    float getInnerMargin() -> getInnerMargin
    void setInnerRaius(float) -> setInnerRaius
    boolean validateAngle(float) -> validateAngle
    boolean renderCap(android.graphics.Canvas,float,android.graphics.PointF[],int[]) -> renderCap
    boolean renderLabels(android.graphics.Canvas,float,android.graphics.PointF[]) -> renderLabels
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.chart.ArcLineData -> org.xclcharts.chart.ArcLineData:
    java.lang.String TAG -> TAG
    java.lang.String mKey -> mKey
    java.lang.String mLabel -> mLabel
    double mValue -> mValue
    int mColor -> mColor
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    void setLabel(java.lang.String) -> setLabel
    void setPercentage(double) -> setPercentage
    void setBarColor(int) -> setBarColor
    java.lang.String getLabel() -> getLabel
    double getPercentage() -> getPercentage
    int getBarColor() -> getBarColor
    float getSliceAngle() -> getSliceAngle
org.xclcharts.chart.AreaChart -> org.xclcharts.chart.AreaChart:
    java.lang.String TAG -> TAG
    android.graphics.Paint mPaintAreaFill -> mPaintAreaFill
    java.util.List mDataSet -> mDataSet
    int mAreaAlpha -> mAreaAlpha
    java.util.List mLstPathPoints -> mLstPathPoints
    android.graphics.Path mPathArea -> mPathArea
    android.graphics.PointF[] mBezierControls -> mBezierControls
    java.util.List mLstKey -> mLstKey
    java.util.List mLstPoints -> mLstPoints
    java.util.List mLstDotInfo -> mLstDotInfo
    org.xclcharts.renderer.XEnum$CrurveLineStyle mCrurveLineStyle -> mCrurveLineStyle
    int Y_MIN -> Y_MIN
    int Y_MAX -> Y_MAX
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initPaint() -> initPaint
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setAreaAlpha(int) -> setAreaAlpha
    void setCrurveLineStyle(org.xclcharts.renderer.XEnum$CrurveLineStyle) -> setCrurveLineStyle
    org.xclcharts.renderer.XEnum$CrurveLineStyle getCrurveLineStyle() -> getCrurveLineStyle
    boolean calcAllPoints(org.xclcharts.chart.AreaData,java.util.List,java.util.List,java.util.List) -> calcAllPoints
    boolean renderBezierArea(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,org.xclcharts.chart.AreaData,java.util.List) -> renderBezierArea
    boolean renderArea(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,org.xclcharts.chart.AreaData,java.util.List) -> renderArea
    boolean renderLine(android.graphics.Canvas,org.xclcharts.chart.AreaData,java.util.List) -> renderLine
    boolean renderBezierCurveLine(android.graphics.Canvas,android.graphics.Path,org.xclcharts.chart.AreaData,java.util.List) -> renderBezierCurveLine
    boolean renderDotAndLabel(android.graphics.Canvas,org.xclcharts.chart.AreaData,int,java.util.List) -> renderDotAndLabel
    float getLineMaxMinY(int,java.util.List) -> getLineMaxMinY
    boolean renderVerticalPlot(android.graphics.Canvas) -> renderVerticalPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
org.xclcharts.chart.AreaData -> org.xclcharts.chart.AreaData:
    int mAreaFillColor -> mAreaFillColor
    boolean mApplayGradient -> mApplayGradient
    int mAreaBeginColor -> mAreaBeginColor
    int mAreaEndColor -> mAreaEndColor
    android.graphics.Shader$TileMode mTileMode -> mTileMode
    org.xclcharts.renderer.XEnum$Direction mDirection -> mDirection
    void setAreaFillColor(int) -> setAreaFillColor
    int getAreaFillColor() -> getAreaFillColor
    void setApplayGradient(boolean) -> setApplayGradient
    boolean getApplayGradient() -> getApplayGradient
    void setGradientDirection(org.xclcharts.renderer.XEnum$Direction) -> setGradientDirection
    org.xclcharts.renderer.XEnum$Direction getGradientDirection() -> getGradientDirection
    void setGradientMode(android.graphics.Shader$TileMode) -> setGradientMode
    android.graphics.Shader$TileMode getGradientMode() -> getGradientMode
    void setAreaBeginColor(int) -> setAreaBeginColor
    void setAreaEndColor(int) -> setAreaEndColor
    int getAreaBeginColor() -> getAreaBeginColor
    int getAreaEndColor() -> getAreaEndColor
org.xclcharts.chart.BarChart -> org.xclcharts.chart.BarChart:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.bar.FlatBar mFlatBar -> mFlatBar
    java.util.List mDataSet -> mDataSet
    org.xclcharts.renderer.line.PlotCustomLine mCustomLine -> mCustomLine
    java.util.List mAnchorSet -> mAnchorSet
    boolean mEqualAxisMin -> mEqualAxisMin
    org.xclcharts.renderer.XEnum$BarCenterStyle mBarCenterStyle -> mBarCenterStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setBarCenterStyle(org.xclcharts.renderer.XEnum$BarCenterStyle) -> setBarCenterStyle
    org.xclcharts.renderer.XEnum$BarCenterStyle getBarCenterStyle() -> getBarCenterStyle
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    void hideBarEqualAxisMin() -> hideBarEqualAxisMin
    void showBarEqualAxisMin() -> showBarEqualAxisMin
    void setCustomLines(java.util.List) -> setCustomLines
    void setCategories(java.util.List) -> setCategories
    void setAnchorDataPoint(java.util.List) -> setAnchorDataPoint
    java.util.List getAnchorDataPoint() -> getAnchorDataPoint
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setChartDirection(org.xclcharts.renderer.XEnum$Direction) -> setChartDirection
    org.xclcharts.renderer.XEnum$Direction getChartDirection() -> getChartDirection
    void defaultAxisSetting() -> defaultAxisSetting
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    int getDataAxisDetailSetMaxSize() -> getDataAxisDetailSetMaxSize
    int getDataTickCount() -> getDataTickCount
    int getCateTickCount() -> getCateTickCount
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    float get3DOffsetX() -> get3DOffsetX
    float get3DBaseOffsetX() -> get3DBaseOffsetX
    float get3DBaseOffsetY() -> get3DBaseOffsetY
    boolean renderHorizontalBar(android.graphics.Canvas) -> renderHorizontalBar
    float getHPValPosition(double) -> getHPValPosition
    float getHPDataAxisStdX() -> getHPDataAxisStdX
    float getVPDataAxisStdY() -> getVPDataAxisStdY
    float getVPValPosition(double) -> getVPValPosition
    float getAxisXPos(org.xclcharts.renderer.XEnum$AxisLocation) -> getAxisXPos
    float getAxisYPos(org.xclcharts.renderer.XEnum$AxisLocation) -> getAxisYPos
    void drawClipCategoryAxisLine(android.graphics.Canvas) -> drawClipCategoryAxisLine
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int getDatasetSize(java.util.List) -> getDatasetSize
    void setBarDataColor(android.graphics.Paint,java.util.List,int,int) -> setBarDataColor
    org.xclcharts.event.click.BarPosition getPositionRecord(float,float) -> getPositionRecord
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
org.xclcharts.chart.BarChart3D -> org.xclcharts.chart.BarChart3D:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.bar.Bar3D mBar3D -> mBar3D
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setAxis3DBaseThickness(int) -> setAxis3DBaseThickness
    double getAxis3DBaseThickness() -> getAxis3DBaseThickness
    void setBarThickness(int) -> setBarThickness
    double getBarThickness() -> getBarThickness
    void setBarAngle(int) -> setBarAngle
    int getBarAngle() -> getBarAngle
    void setBarAlpha(int) -> setBarAlpha
    void setAxis3DBaseColor(int) -> setAxis3DBaseColor
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    boolean renderHorizontalBar(android.graphics.Canvas) -> renderHorizontalBar
    float get3DOffsetX() -> get3DOffsetX
    float get3DBaseOffsetX() -> get3DBaseOffsetX
    float get3DBaseOffsetY() -> get3DBaseOffsetY
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
    void drawClipAxisLine(android.graphics.Canvas) -> drawClipAxisLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
org.xclcharts.chart.BarData -> org.xclcharts.chart.BarData:
    java.util.List mDataSet -> mDataSet
    java.util.List mDataColor -> mDataColor
    java.lang.String mKey -> mKey
    java.lang.Integer mColor -> mColor
    void setDataColor(java.util.List) -> setDataColor
    java.util.List getDataColor() -> getDataColor
    void setDataSet(java.util.List) -> setDataSet
    void setKey(java.lang.String) -> setKey
    void setColor(java.lang.Integer) -> setColor
    java.util.List getDataSet() -> getDataSet
    java.lang.String getKey() -> getKey
    java.lang.Integer getColor() -> getColor
org.xclcharts.chart.BubbleChart -> org.xclcharts.chart.BubbleChart:
    java.lang.String TAG -> TAG
    java.util.List mDataset -> mDataset
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    float mBubbleMaxSize -> mBubbleMaxSize
    float mBubbleMinSize -> mBubbleMinSize
    float mBubbleScaleMax -> mBubbleScaleMax
    float mBubbleScaleMin -> mBubbleScaleMin
    android.graphics.Paint mPaintPoint -> mPaintPoint
    org.xclcharts.renderer.line.PlotDot mPlotDot -> mPlotDot
    android.graphics.Paint mPaintBorderPoint -> mPaintBorderPoint
    org.xclcharts.renderer.plot.PlotQuadrantRender mPlotQuadrant -> mPlotQuadrant
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setBubbleMaxSize(float) -> setBubbleMaxSize
    void setBubbleMinSize(float) -> setBubbleMinSize
    void setBubbleScaleMax(float) -> setBubbleScaleMax
    void setBubbleScaleMin(float) -> setBubbleScaleMin
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    void setDotLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(java.lang.String) -> getFormatterDotLabel
    float calcRaidus(float,float,float) -> calcRaidus
    org.xclcharts.renderer.plot.PlotQuadrant getPlotQuadrant() -> getPlotQuadrant
    android.graphics.Paint getPointPaint() -> getPointPaint
    android.graphics.Paint getPointBorderPaint() -> getPointBorderPaint
    void drawQuadrant(android.graphics.Canvas) -> drawQuadrant
    void renderPoints(android.graphics.Canvas,org.xclcharts.chart.BubbleData,int) -> renderPoints
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
org.xclcharts.chart.BubbleData -> org.xclcharts.chart.BubbleData:
    java.util.List mPointMap -> mPointMap
    java.util.List mBubble -> mBubble
    android.graphics.Paint mLabelPaint -> mLabelPaint
    java.lang.String mLabel -> mLabel
    boolean mLabelVisible -> mLabelVisible
    int mColor -> mColor
    int mBorderColor -> mBorderColor
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setDataSet(java.util.List) -> setDataSet
    java.util.List getDataSet() -> getDataSet
    void setBubble(java.util.List) -> setBubble
    java.util.List getBubble() -> getBubble
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setBorderColor(int) -> setBorderColor
    int getBorderColor() -> getBorderColor
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.CircleChart -> org.xclcharts.chart.CircleChart:
    java.lang.String TAG -> TAG
    java.lang.String mDataInfo -> mDataInfo
    org.xclcharts.renderer.XEnum$CircleType mDisplayType -> mDisplayType
    android.graphics.Paint mPaintBgCircle -> mPaintBgCircle
    android.graphics.Paint mPaintFillCircle -> mPaintFillCircle
    android.graphics.Paint mPaintDataInfo -> mPaintDataInfo
    boolean mShowInnerFill -> mShowInnerFill
    boolean mShowInnerBG -> mShowInnerBG
    java.util.List mDataSet -> mDataSet
    float moRadius -> moRadius
    float miRadius -> miRadius
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void setDataSource(java.util.List) -> setDataSource
    void setAttributeInfo(java.lang.String) -> setAttributeInfo
    void setCircleType(org.xclcharts.renderer.XEnum$CircleType) -> setCircleType
    android.graphics.Paint getFillCirclePaint() -> getFillCirclePaint
    android.graphics.Paint getBgCirclePaint() -> getBgCirclePaint
    android.graphics.Paint getDataInfoPaint() -> getDataInfoPaint
    void hideInnerFill() -> hideInnerFill
    void hideInnerBG() -> hideInnerBG
    void showInnerFill() -> showInnerFill
    boolean isShowInnerFill() -> isShowInnerFill
    void showInnerBG() -> showInnerBG
    boolean isShowInnerBG() -> isShowInnerBG
    void setORadius(float) -> setORadius
    void setIRadius(float) -> setIRadius
    void drawPercent(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float) -> drawPercent
    float getCirY(float,int) -> getCirY
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.CustomLineData -> org.xclcharts.chart.CustomLineData:
    java.lang.String mLabel -> mLabel
    java.lang.Double mDesireValue -> mDesireValue
    int mColor -> mColor
    int mLineStroke -> mLineStroke
    float mLabelRotateAngle -> mLabelRotateAngle
    android.graphics.Paint$Align mLabelAlign -> mLabelAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mLabelPostion -> mLabelPostion
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    org.xclcharts.renderer.XEnum$DotStyle mLineCap -> mLineCap
    int mLabelOffset -> mLabelOffset
    android.graphics.Paint mPaintCustomLine -> mPaintCustomLine
    android.graphics.Paint mPaintLineLabel -> mPaintLineLabel
    boolean mLineVisible -> mLineVisible
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    java.lang.Double getValue() -> getValue
    void setValue(java.lang.Double) -> setValue
    int getColor() -> getColor
    void setColor(int) -> setColor
    int getLineStroke() -> getLineStroke
    void setLineStroke(int) -> setLineStroke
    boolean isSetLineStroke() -> isSetLineStroke
    void setCustomLineCap(org.xclcharts.renderer.XEnum$DotStyle) -> setCustomLineCap
    org.xclcharts.renderer.XEnum$DotStyle getCustomeLineCap() -> getCustomeLineCap
    void setLabelHorizontalPostion(android.graphics.Paint$Align) -> setLabelHorizontalPostion
    android.graphics.Paint$Align getLabelHorizontalPostion() -> getLabelHorizontalPostion
    void setLabelVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setLabelVerticalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign getLabelVerticalAlign() -> getLabelVerticalAlign
    void setLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineStyle
    org.xclcharts.renderer.XEnum$LineStyle getLineStyle() -> getLineStyle
    float getLabelRotateAngle() -> getLabelRotateAngle
    void setLabelRotateAngle(float) -> setLabelRotateAngle
    void setLabelOffset(int) -> setLabelOffset
    int getLabelOffset() -> getLabelOffset
    android.graphics.Paint getCustomLinePaint() -> getCustomLinePaint
    android.graphics.Paint getLineLabelPaint() -> getLineLabelPaint
    boolean isShowLine() -> isShowLine
    void hideLine() -> hideLine
    void showLine() -> showLine
org.xclcharts.chart.DialChart -> org.xclcharts.chart.DialChart:
    java.lang.String TAG -> TAG
    int INIT_ANGLE -> INIT_ANGLE
    int FIX_TOTAL_ANGLE -> FIX_TOTAL_ANGLE
    float mStartAngle -> mStartAngle
    float mTotalAngle -> mTotalAngle
    java.util.List mRoundAxis -> mRoundAxis
    org.xclcharts.renderer.plot.PointerRender mPointer -> mPointer
    java.util.List mPointerSet -> mPointerSet
    org.xclcharts.renderer.plot.PlotAttrInfoRender plotAttrInfoRender -> plotAttrInfoRender
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setStartAngle(float) -> setStartAngle
    void setTotalAngle(float) -> setTotalAngle
    java.util.List getPlotAxis() -> getPlotAxis
    java.util.List getPlotPointer() -> getPlotPointer
    org.xclcharts.renderer.plot.PlotAttrInfo getPlotAttrInfo() -> getPlotAttrInfo
    void addPointer() -> addPointer
    void clearPlotPointer() -> clearPlotPointer
    void clearPlotAxis() -> clearPlotAxis
    void clearAll() -> clearAll
    org.xclcharts.renderer.plot.Pointer getPointer() -> getPointer
    void renderPointerLine(android.graphics.Canvas) -> renderPointerLine
    void addInnerTicksAxis(float,java.util.List) -> addInnerTicksAxis
    void addOuterTicksAxis(float,java.util.List) -> addOuterTicksAxis
    void addTicksAxis(float,java.util.List,org.xclcharts.renderer.XEnum$RoundTickAxisType) -> addTicksAxis
    void addStrokeRingAxis(float,float,java.util.List,java.util.List) -> addStrokeRingAxis
    void addStrokeRingAxis(float,float,java.util.List,java.util.List,java.util.List) -> addStrokeRingAxis
    void addFillRingAxis(float,java.util.List,java.util.List) -> addFillRingAxis
    void addFillRingAxis(float,java.util.List,java.util.List,java.util.List) -> addFillRingAxis
    void addRingAxis(float,float,java.util.List,java.util.List,java.util.List) -> addRingAxis
    void addArcLineAxis(float) -> addArcLineAxis
    void addFillAxis(float,int) -> addFillAxis
    void addCircleAxis(float,int) -> addCircleAxis
    void addLineAxis(org.xclcharts.renderer.XEnum$Location,float) -> addLineAxis
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.DountChart -> org.xclcharts.chart.DountChart:
    int mFillRadius -> mFillRadius
    float mInnerRadius -> mInnerRadius
    android.graphics.Paint mPaintFill -> mPaintFill
    android.graphics.Paint mPaintCenterText -> mPaintCenterText
    java.lang.String mCenterText -> mCenterText
    org.xclcharts.renderer.plot.PlotAttrInfoRender plotAttrInfoRender -> plotAttrInfoRender
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void initCenterTextPaint() -> initCenterTextPaint
    org.xclcharts.renderer.plot.PlotAttrInfo getPlotAttrInfo() -> getPlotAttrInfo
    android.graphics.Paint getInnerPaint() -> getInnerPaint
    void setInnerRadius(float) -> setInnerRadius
    float calcInnerRadius() -> calcInnerRadius
    android.graphics.Paint getCenterTextPaint() -> getCenterTextPaint
    void setCenterText(java.lang.String) -> setCenterText
    void renderCenterText(android.graphics.Canvas) -> renderCenterText
    android.graphics.PointF renderLabelInside(android.graphics.Canvas,java.lang.String,float,float,float,float,float,boolean) -> renderLabelInside
    void renderInnderCircle(android.graphics.Canvas) -> renderInnderCircle
    void renderDount(android.graphics.Canvas) -> renderDount
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
org.xclcharts.chart.FunnelChart -> org.xclcharts.chart.FunnelChart:
    java.lang.String TAG -> TAG
    java.util.List mDataSet -> mDataSet
    org.xclcharts.renderer.XEnum$SortType mSortType -> mSortType
    float mPlotWidthPercent -> mPlotWidthPercent
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPaintFunnelLine -> mPaintFunnelLine
    boolean mFunnelLineVisible -> mFunnelLineVisible
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintLabelLine -> mPaintLabelLine
    boolean mIsLabelLineSyncColor -> mIsLabelLineSyncColor
    boolean mIsLabelSyncColor -> mIsLabelSyncColor
    boolean mIsShowLabelLine -> mIsShowLabelLine
    org.xclcharts.renderer.XEnum$HorizontalAlign mLabelAlign -> mLabelAlign
    boolean mLabelVisible -> mLabelVisible
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SortType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SortType
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    android.graphics.Paint getPaint() -> getPaint
    android.graphics.Paint getFunnelLinePaint() -> getFunnelLinePaint
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    android.graphics.Paint getLabelLinePaint() -> getLabelLinePaint
    void setPlotWidthPercent(float) -> setPlotWidthPercent
    void setSortType(org.xclcharts.renderer.XEnum$SortType) -> setSortType
    void hideLabelLine() -> hideLabelLine
    void showLabelLine() -> showLabelLine
    boolean isShowLabelLine() -> isShowLabelLine
    void syncLabelLineColor() -> syncLabelLineColor
    void syncLabelColor() -> syncLabelColor
    void setFunnelLineVisible(boolean) -> setFunnelLineVisible
    boolean getFunnelLineVisible() -> getFunnelLineVisible
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabelAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setLabelAlign
    org.xclcharts.renderer.XEnum$HorizontalAlign getLabelAlign() -> getLabelAlign
    java.util.List getDataSource() -> getDataSource
    void setDataSource(java.util.List) -> setDataSource
    boolean sortDataSet() -> sortDataSet
    void drawTriangle(android.graphics.Canvas,float,android.graphics.PointF,android.graphics.PointF) -> drawTriangle
    float getHalfWidth(float,float) -> getHalfWidth
    void renderPlotDesc(android.graphics.Canvas,float,float,float) -> renderPlotDesc
    void renderPlotAsc(android.graphics.Canvas,float,float,float) -> renderPlotAsc
    void renderPlotOne(android.graphics.Canvas,float,float,float) -> renderPlotOne
    void renderLabels(android.graphics.Canvas,java.lang.String,float,float,int) -> renderLabels
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SortType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SortType
org.xclcharts.chart.FunnelData -> org.xclcharts.chart.FunnelData:
    java.lang.String mLabel -> mLabel
    float mData -> mData
    int mColor -> mColor
    int mAlpha -> mAlpha
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setData(float) -> setData
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    void setColor(int) -> setColor
    int getColor() -> getColor
    float getData() -> getData
    int compareTo(org.xclcharts.chart.FunnelData) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.xclcharts.chart.GaugeChart -> org.xclcharts.chart.GaugeChart:
    java.lang.String TAG -> TAG
    double mTickSteps -> mTickSteps
    java.util.List mLabels -> mLabels
    android.graphics.Paint mPaintTick -> mPaintTick
    float mPointerAngle -> mPointerAngle
    android.graphics.Paint mPaintPointerLine -> mPaintPointerLine
    android.graphics.Paint mPaintPinterCircle -> mPaintPinterCircle
    android.graphics.Paint mPaintPartitionFill -> mPaintPartitionFill
    android.graphics.Paint mPaintDount -> mPaintDount
    java.util.List mPartitionDataset -> mPartitionDataset
    int mStartAngle -> mStartAngle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initPaint() -> initPaint
    android.graphics.Paint getTickPaint() -> getTickPaint
    android.graphics.Paint getPinterCirclePaint() -> getPinterCirclePaint
    android.graphics.Paint getPointerLinePaint() -> getPointerLinePaint
    android.graphics.Paint getPartitionFillPaint() -> getPartitionFillPaint
    android.graphics.Paint getDountPaint() -> getDountPaint
    void drawPercent(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float) -> drawPercent
    void setTickSteps(double) -> setTickSteps
    void setCategories(java.util.List) -> setCategories
    void setPartition(java.util.List) -> setPartition
    void setCurrentAngle(float) -> setCurrentAngle
    void renderLabels(android.graphics.Canvas) -> renderLabels
    void renderTicks(android.graphics.Canvas) -> renderTicks
    void renderPointerLine(android.graphics.Canvas) -> renderPointerLine
    void renderPinterCircle(android.graphics.Canvas) -> renderPinterCircle
    boolean renderPartitionFill(android.graphics.Canvas) -> renderPartitionFill
    float getCirY() -> getCirY
    float getRadius() -> getRadius
    void renderDount(android.graphics.Canvas) -> renderDount
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.LineChart -> org.xclcharts.chart.LineChart:
    java.lang.String TAG -> TAG
    java.util.List mDataSet -> mDataSet
    boolean mLineAxisIntersectVisible -> mLineAxisIntersectVisible
    java.util.List mLstKey -> mLstKey
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setLineAxisIntersectVisible(boolean) -> setLineAxisIntersectVisible
    boolean getLineAxisIntersectVisible() -> getLineAxisIntersectVisible
    void setBarCenterStyle(org.xclcharts.renderer.XEnum$BarCenterStyle) -> setBarCenterStyle
    org.xclcharts.renderer.XEnum$BarCenterStyle getBarCenterStyle() -> getBarCenterStyle
    void setXCoordFirstTickmarksBegin(boolean) -> setXCoordFirstTickmarksBegin
    boolean renderLine(android.graphics.Canvas,org.xclcharts.chart.LineData,java.lang.String,int) -> renderLine
    boolean renderVerticalPlot(android.graphics.Canvas) -> renderVerticalPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
org.xclcharts.chart.LineData -> org.xclcharts.chart.LineData:
    java.util.List mLinePoint -> mLinePoint
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setDataSet(java.util.List) -> setDataSet
    java.util.List getLinePoint() -> getLinePoint
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.LnData -> org.xclcharts.chart.LnData:
    java.lang.String mLabel -> mLabel
    boolean mLabelVisible -> mLabelVisible
    org.xclcharts.renderer.line.PlotLine mPlotLine -> mPlotLine
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    org.xclcharts.renderer.plot.PlotLabelRender mPlotLabel -> mPlotLabel
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    org.xclcharts.renderer.line.PlotLine getPlotLine() -> getPlotLine
    void setLineColor(int) -> setLineColor
    int getLineColor() -> getLineColor
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
    void setLineKey(java.lang.String) -> setLineKey
    java.lang.String getLineKey() -> getLineKey
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    android.graphics.Paint getDotPaint() -> getDotPaint
    void setDotRadius(int) -> setDotRadius
    org.xclcharts.renderer.XEnum$LineStyle getLineStyle() -> getLineStyle
    void setLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineStyle
    org.xclcharts.renderer.plot.PlotLabel getLabelOptions() -> getLabelOptions
org.xclcharts.chart.PieChart -> org.xclcharts.chart.PieChart:
    java.lang.String TAG -> TAG
    boolean mGradient -> mGradient
    float mSelectedOffset -> mSelectedOffset
    java.util.List mDataset -> mDataset
    android.graphics.Paint mPaintArc -> mPaintArc
    android.graphics.RectF mRectF -> mRectF
    android.graphics.Paint mPaintArcBorder -> mPaintArcBorder
    boolean mSaveLabelsPosition -> mSaveLabelsPosition
    org.xclcharts.renderer.XEnum$LabelSaveType mLabelSaveType -> mLabelSaveType
    java.util.ArrayList mLstLabels -> mLstLabels
    float mTotalAngle -> mTotalAngle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    android.graphics.Paint geArcPaint() -> geArcPaint
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setTotalAngle(float) -> setTotalAngle
    float getTotalAngle() -> getTotalAngle
    void saveLabelsPosition(org.xclcharts.renderer.XEnum$LabelSaveType) -> saveLabelsPosition
    java.util.ArrayList getLabelsPosition() -> getLabelsPosition
    android.graphics.Paint getArcBorderPaint() -> getArcBorderPaint
    void showGradient() -> showGradient
    void hideGradient() -> hideGradient
    boolean getGradient() -> getGradient
    void setSelectedOffset(float) -> setSelectedOffset
    float getSelectedOffset() -> getSelectedOffset
    android.graphics.RadialGradient renderRadialGradient(android.graphics.Paint,float,float,float) -> renderRadialGradient
    boolean validateAngle(float) -> validateAngle
    void renderArcBorder(android.graphics.Canvas,android.graphics.RectF,float,float) -> renderArcBorder
    void initRectF(float,float,float,float) -> initRectF
    boolean renderLabels(android.graphics.Canvas) -> renderLabels
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    boolean validateParams() -> validateParams
    org.xclcharts.event.click.ArcPosition getPositionRecord(float,float) -> getPositionRecord
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.PieChart3D -> org.xclcharts.chart.PieChart3D:
    java.lang.String TAG -> TAG
    int mRender3DLevel -> mRender3DLevel
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    boolean render3D(android.graphics.Canvas,float,java.util.List,float,float,float) -> render3D
    boolean renderFlatArcAndLegend(android.graphics.Canvas,float,java.util.List,float,float,float) -> renderFlatArcAndLegend
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
org.xclcharts.chart.PieData -> org.xclcharts.chart.PieData:
    java.lang.String mPieKey -> mPieKey
    java.lang.String mPieLabel -> mPieLabel
    double mPieValue -> mPieValue
    int mPieColor -> mPieColor
    boolean mSelected -> mSelected
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    org.xclcharts.renderer.XEnum$SliceLabelStyle mLabelStyle -> mLabelStyle
    boolean mCustLabelStyle -> mCustLabelStyle
    int mCustLabelColor -> mCustLabelColor
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    void setLabel(java.lang.String) -> setLabel
    void setPercentage(double) -> setPercentage
    void setSliceColor(int) -> setSliceColor
    void setSelected(boolean) -> setSelected
    java.lang.String getLabel() -> getLabel
    double getPercentage() -> getPercentage
    boolean getSelected() -> getSelected
    int getSliceColor() -> getSliceColor
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
    void setCustLabelStyle(org.xclcharts.renderer.XEnum$SliceLabelStyle,int) -> setCustLabelStyle
    org.xclcharts.renderer.XEnum$SliceLabelStyle getLabelStyle() -> getLabelStyle
    boolean getCustLabelStyleStatus() -> getCustLabelStyleStatus
    int getCustLabelColor() -> getCustLabelColor
org.xclcharts.chart.PointD -> org.xclcharts.chart.PointD:
    double x -> x
    double y -> y
org.xclcharts.chart.RadarChart -> org.xclcharts.chart.RadarChart:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.axis.DataAxisRender dataAxis -> dataAxis
    org.xclcharts.renderer.axis.CategoryAxisRender categoryAxis -> categoryAxis
    java.util.List mDataSet -> mDataSet
    java.lang.Float[][] mArrayDotX -> mArrayDotX
    java.lang.Float[][] mArrayDotY -> mArrayDotY
    java.lang.Float[][] mArrayLabelX -> mArrayLabelX
    java.lang.Float[][] mArrayLabelY -> mArrayLabelY
    java.lang.Float[] mArrayLabelAgent -> mArrayLabelAgent
    java.lang.Float[] mArrayRadius -> mArrayRadius
    int mLabelOffset -> mLabelOffset
    int mAreaAlpha -> mAreaAlpha
    android.graphics.Path mRdPath -> mRdPath
    org.xclcharts.renderer.XEnum$RadarChartType mRadarChartType -> mRadarChartType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void clearArray() -> clearArray
    void setChartType(org.xclcharts.renderer.XEnum$RadarChartType) -> setChartType
    org.xclcharts.renderer.axis.DataAxis getDataAxis() -> getDataAxis
    org.xclcharts.renderer.axis.CategoryAxis getCategoryAxis() -> getCategoryAxis
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setAreaAlpha(int) -> setAreaAlpha
    boolean validateParams() -> validateParams
    void renderGridLines(android.graphics.Canvas) -> renderGridLines
    void renderGridLinesRadar(android.graphics.Canvas) -> renderGridLinesRadar
    void renderGridLinesRound(android.graphics.Canvas) -> renderGridLinesRound
    void renderAxisLines(android.graphics.Canvas) -> renderAxisLines
    void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    int getAxisTickCount() -> getAxisTickCount
    int getPlotAgentNumber() -> getPlotAgentNumber
    void setlabelOffset(int) -> setlabelOffset
    void calcAllPoints() -> calcAllPoints
    void renderDataArea(android.graphics.Canvas) -> renderDataArea
    void renderDataLine(android.graphics.Canvas,org.xclcharts.chart.RadarData,java.lang.Float[],java.lang.Float[],int) -> renderDataLine
    void drawDataPath(android.graphics.Canvas,org.xclcharts.chart.RadarData,java.lang.Float[],java.lang.Float[],int) -> drawDataPath
    void renderDotAndLabel(android.graphics.Canvas,org.xclcharts.chart.RadarData,float,float,int,int) -> renderDotAndLabel
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle
org.xclcharts.chart.RadarData -> org.xclcharts.chart.RadarData:
    org.xclcharts.renderer.XEnum$DataAreaStyle mAreaStyle -> mAreaStyle
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    void setAreaStyle(org.xclcharts.renderer.XEnum$DataAreaStyle) -> setAreaStyle
    org.xclcharts.renderer.XEnum$DataAreaStyle getAreaStyle() -> getAreaStyle
    org.xclcharts.renderer.XEnum$LineStyle getLineStyle() -> getLineStyle
    void setLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineStyle
org.xclcharts.chart.RangeBarChart -> org.xclcharts.chart.RangeBarChart:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.bar.FlatBar mFlatBar -> mFlatBar
    java.util.List mDataSet -> mDataSet
    java.lang.String mKey -> mKey
    float mBarWidth -> mBarWidth
    boolean mLabelVisible -> mLabelVisible
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setBarWidth(float) -> setBarWidth
    float getBarWidth() -> getBarWidth
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    float[] cataPosition(double,double) -> cataPosition
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
    org.xclcharts.event.click.BarPosition getPositionRecord(float,float) -> getPositionRecord
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
org.xclcharts.chart.RangeBarData -> org.xclcharts.chart.RangeBarData:
    double mMax -> mMax
    double mMin -> mMin
    double mX -> mX
    void setMax(double) -> setMax
    void setMin(double) -> setMin
    double getMax() -> getMax
    double getMin() -> getMin
    void setX(double) -> setX
    double getX() -> getX
org.xclcharts.chart.RoseChart -> org.xclcharts.chart.RoseChart:
    java.lang.String TAG -> TAG
    android.graphics.Paint mPaintInner -> mPaintInner
    boolean mShowInner -> mShowInner
    int mIntervalAngle -> mIntervalAngle
    android.graphics.Paint mPaintBg -> mPaintBg
    boolean mShowBgLines -> mShowBgLines
    boolean mShowBgCircle -> mShowBgCircle
    java.util.Map mListBgSeg -> mListBgSeg
    int mShowBgLineColor -> mShowBgLineColor
    boolean mShowOuterLabels -> mShowOuterLabels
    int mBgLines -> mBgLines
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    android.graphics.Paint getInnerPaint() -> getInnerPaint
    void setIntervalAngle(int) -> setIntervalAngle
    void showInner() -> showInner
    void hideInner() -> hideInner
    void showOuterLabels() -> showOuterLabels
    void hideOuterLabels() -> hideOuterLabels
    android.graphics.Paint getBgPaint() -> getBgPaint
    void showBgLines(int) -> showBgLines
    void showBgCircle(java.util.Map) -> showBgCircle
    void hideBgLines() -> hideBgLines
    void hideBgCircle() -> hideBgCircle
    void setBgLines(int) -> setBgLines
    boolean validateParams() -> validateParams
    void drawBGCircle(android.graphics.Canvas) -> drawBGCircle
    void drawBGLines(android.graphics.Canvas) -> drawBGLines
    float getLabelRadius() -> getLabelRadius
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
org.xclcharts.chart.ScatterChart -> org.xclcharts.chart.ScatterChart:
    java.lang.String TAG -> TAG
    java.util.List mDataset -> mDataset
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    android.graphics.Paint mPaintPoint -> mPaintPoint
    org.xclcharts.renderer.plot.PlotQuadrantRender mPlotQuadrant -> mPlotQuadrant
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    void setDotLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(java.lang.String) -> getFormatterDotLabel
    org.xclcharts.renderer.plot.PlotQuadrant getPlotQuadrant() -> getPlotQuadrant
    android.graphics.Paint getPointPaint() -> getPointPaint
    void drawQuadrant(android.graphics.Canvas) -> drawQuadrant
    void renderPoints(android.graphics.Canvas,org.xclcharts.chart.ScatterData,int) -> renderPoints
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
org.xclcharts.chart.ScatterData -> org.xclcharts.chart.ScatterData:
    java.lang.String mLabel -> mLabel
    boolean mLabelVisible -> mLabelVisible
    java.util.List mPointMap -> mPointMap
    android.graphics.Paint mLabelPaint -> mLabelPaint
    org.xclcharts.renderer.line.PlotDot mPlotDot -> mPlotDot
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setDataSet(java.util.List) -> setDataSet
    java.util.List getDataSet() -> getDataSet
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    org.xclcharts.renderer.line.PlotDot getPlotDot() -> getPlotDot
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.SplineChart -> org.xclcharts.chart.SplineChart:
    java.lang.String TAG -> TAG
    java.util.List mDataSet -> mDataSet
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    java.util.List mLstPoints -> mLstPoints
    android.graphics.Path mBezierPath -> mBezierPath
    java.util.List mLstKey -> mLstKey
    java.util.List mLstDotInfo -> mLstDotInfo
    org.xclcharts.renderer.XEnum$CrurveLineStyle mCrurveLineStyle -> mCrurveLineStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    void setDotLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(java.lang.String) -> getFormatterDotLabel
    void setCrurveLineStyle(org.xclcharts.renderer.XEnum$CrurveLineStyle) -> setCrurveLineStyle
    org.xclcharts.renderer.XEnum$CrurveLineStyle getCrurveLineStyle() -> getCrurveLineStyle
    void calcAllPoints(org.xclcharts.chart.SplineData,java.util.List,java.util.List) -> calcAllPoints
    boolean renderLine(android.graphics.Canvas,org.xclcharts.chart.SplineData,java.util.List) -> renderLine
    boolean renderBezierCurveLine(android.graphics.Canvas,android.graphics.Path,org.xclcharts.chart.SplineData,java.util.List) -> renderBezierCurveLine
    boolean renderDotAndLabel(android.graphics.Canvas,org.xclcharts.chart.SplineData,int,java.util.List) -> renderDotAndLabel
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
org.xclcharts.chart.SplineData -> org.xclcharts.chart.SplineData:
    java.util.List mLinePointMap -> mLinePointMap
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setLineDataSet(java.util.List) -> setLineDataSet
    java.util.List getLineDataSet() -> getLineDataSet
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.StackBarChart -> org.xclcharts.chart.StackBarChart:
    org.xclcharts.renderer.bar.FlatBar flatBar -> flatBar
    boolean mTotalLabelVisible -> mTotalLabelVisible
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setTotalLabelVisible(boolean) -> setTotalLabelVisible
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    boolean renderHorizontalBar(android.graphics.Canvas) -> renderHorizontalBar
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
org.xclcharts.common.CurveHelper -> org.xclcharts.common.CurveHelper:
    void curve3(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF[]) -> curve3
org.xclcharts.common.DensityUtil -> org.xclcharts.common.DensityUtil:
    float getDensity(android.content.Context) -> getDensity
    int dip2px(android.content.Context,float) -> dip2px
    int px2dip(android.content.Context,float) -> px2dip
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    int getWidth(android.view.View) -> getWidth
    int getHeight(android.view.View) -> getHeight
org.xclcharts.common.DrawHelper -> org.xclcharts.common.DrawHelper:
    org.xclcharts.common.DrawHelper instance -> instance
    android.graphics.RectF mRectF -> mRectF
    android.graphics.Path mPath -> mPath
    android.graphics.Paint mPaint -> mPaint
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
    org.xclcharts.common.DrawHelper getInstance() -> getInstance
    void initRectF() -> initRectF
    void initPath() -> initPath
    void initPaint() -> initPaint
    int randomColor() -> randomColor
    int getLightColor(int,int) -> getLightColor
    int getDarkerColor(int) -> getDarkerColor
    int getPaintFontHeight(android.graphics.Paint) -> getPaintFontHeight
    float getTextWidth(android.graphics.Paint,java.lang.String) -> getTextWidth
    int calcTextHeight(android.graphics.Paint,java.lang.String) -> calcTextHeight
    void drawRotateText(java.lang.String,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawRotateText
    void drawTrigangle(float,float,float,org.xclcharts.renderer.XEnum$TriangleDirection,org.xclcharts.renderer.XEnum$TriangleStyle,android.graphics.Canvas,android.graphics.Paint) -> drawTrigangle
    android.graphics.PathEffect getDotLineStyle() -> getDotLineStyle
    android.graphics.PathEffect getDashLineStyle() -> getDashLineStyle
    void drawDotLine(float,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawDotLine
    void drawDashLine(float,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawDashLine
    void drawLine(org.xclcharts.renderer.XEnum$LineStyle,float,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawLine
    void drawPercent(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float,boolean) -> drawPercent
    void drawPathArc(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float) -> drawPathArc
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
org.xclcharts.common.IFormatterDoubleCallBack -> org.xclcharts.common.IFormatterDoubleCallBack:
    java.lang.String doubleFormatter(java.lang.Double) -> doubleFormatter
org.xclcharts.common.IFormatterTextCallBack -> org.xclcharts.common.IFormatterTextCallBack:
    java.lang.String textFormatter(java.lang.String) -> textFormatter
org.xclcharts.common.MathHelper -> org.xclcharts.common.MathHelper:
    org.xclcharts.common.MathHelper instance -> instance
    float mPosX -> mPosX
    float mPosY -> mPosY
    android.graphics.PointF mPointF -> mPointF
    int DEFAULT_DIV_SCALE -> DEFAULT_DIV_SCALE
    boolean mHighPrecision -> mHighPrecision
    org.xclcharts.common.MathHelper getInstance() -> getInstance
    void resetEndPointXY() -> resetEndPointXY
    android.graphics.PointF calcArcEndPointXY(float,float,float,float) -> calcArcEndPointXY
    android.graphics.PointF getArcEndPointF() -> getArcEndPointF
    float getPosX() -> getPosX
    float getPosY() -> getPosY
    double getDegree(float,float,float,float) -> getDegree
    double getDistance(float,float,float,float) -> getDistance
    float getSliceAngle(float,float) -> getSliceAngle
    void disableHighPrecision() -> disableHighPrecision
    void enabledHighPrecision() -> enabledHighPrecision
    float add(float,float) -> add
    float sub(float,float) -> sub
    float mul(float,float) -> mul
    float div(float,float) -> div
    float div(float,float,int) -> div
    float round(float,int) -> round
    double add(double,double) -> add
    double sub(double,double) -> sub
    double div(double,double) -> div
    double div(double,double,int) -> div
    double mul(double,double) -> mul
    double round(double,int) -> round
org.xclcharts.common.PointHelper -> org.xclcharts.common.PointHelper:
    android.graphics.PointF center(android.graphics.PointF,android.graphics.PointF) -> center
    float distance(android.graphics.PointF,android.graphics.PointF) -> distance
    android.graphics.PointF translate(android.graphics.PointF,float,float) -> translate
    android.graphics.PointF percent(android.graphics.PointF,android.graphics.PointF,float) -> percent
    android.graphics.PointF percent(android.graphics.PointF,float,android.graphics.PointF,float) -> percent
org.xclcharts.common.SysinfoHelper -> org.xclcharts.common.SysinfoHelper:
    org.xclcharts.common.SysinfoHelper instance -> instance
    org.xclcharts.common.SysinfoHelper getInstance() -> getInstance
    boolean supportHardwareAccelerated() -> supportHardwareAccelerated
org.xclcharts.event.click.ArcPosition -> org.xclcharts.event.click.ArcPosition:
    float mOffsetAngle -> mOffsetAngle
    float mCurrentAngle -> mCurrentAngle
    float mRadius -> mRadius
    float mSelectedOffset -> mSelectedOffset
    float mInitAngle -> mInitAngle
    android.graphics.PointF mCirXY -> mCirXY
    float getAngle() -> getAngle
    void saveInitialAngle(float) -> saveInitialAngle
    float getRadius() -> getRadius
    android.graphics.PointF getPointF() -> getPointF
    float getStartAngle() -> getStartAngle
    float getSweepAngle() -> getSweepAngle
    float getSelectedOffset() -> getSelectedOffset
    boolean compareRange(float,float) -> compareRange
    boolean compareRadius(float,float) -> compareRadius
org.xclcharts.event.click.BarPosition -> org.xclcharts.event.click.BarPosition:
org.xclcharts.event.click.ChartArcListener -> org.xclcharts.event.click.ChartArcListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.ArcPosition) -> onClick
org.xclcharts.event.click.ChartBarListener -> org.xclcharts.event.click.ChartBarListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.BarPosition) -> onClick
org.xclcharts.event.click.ChartPointListener -> org.xclcharts.event.click.ChartPointListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.PointPosition) -> onClick
org.xclcharts.event.click.PlotArcPosition -> org.xclcharts.event.click.PlotArcPosition:
    void saveAngle(float,float,float,float) -> saveAngle
    void savePlotDataID(int) -> savePlotDataID
    void savePlotDataChildID(int) -> savePlotDataChildID
    void savePlotCirXY(float,float) -> savePlotCirXY
    boolean compareF(float,float) -> compareF
org.xclcharts.event.click.PlotBarPosition -> org.xclcharts.event.click.PlotBarPosition:
    void savePlotDataID(int) -> savePlotDataID
    void savePlotDataChildID(int) -> savePlotDataChildID
    void savePlotRectF(float,float,float,float) -> savePlotRectF
    void savePlotRectF(android.graphics.RectF) -> savePlotRectF
    boolean compareF(float,float) -> compareF
org.xclcharts.event.click.PlotPointPosition -> org.xclcharts.event.click.PlotPointPosition:
    void savePlotDataID(int) -> savePlotDataID
    void savePlotDataChildID(int) -> savePlotDataChildID
    void savePlotPosition(float,float) -> savePlotPosition
    void savePlotRectF(float,float,float,float) -> savePlotRectF
    void savePlotRectF(android.graphics.RectF) -> savePlotRectF
    boolean compareF(float,float) -> compareF
org.xclcharts.event.click.PointPosition -> org.xclcharts.event.click.PointPosition:
    android.graphics.PointF mPoint -> mPoint
    android.graphics.PointF getPosition() -> getPosition
    java.lang.String getPointInfo() -> getPointInfo
org.xclcharts.event.click.PositionListener -> org.xclcharts.event.click.PositionListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.PositionRecord) -> onClick
org.xclcharts.event.click.PositionRecord -> org.xclcharts.event.click.PositionRecord:
    int mDataID -> mDataID
    int mDataChildID -> mDataChildID
    boolean compareRange(float,float) -> compareRange
    int getDataID() -> getDataID
    int getDataChildID() -> getDataChildID
    int getRecordID() -> getRecordID
    void saveDataID(int) -> saveDataID
    void saveDataChildID(int) -> saveDataChildID
org.xclcharts.event.click.RectPosition -> org.xclcharts.event.click.RectPosition:
    android.graphics.RectF mRectF -> mRectF
    android.graphics.RectF mRectFRange -> mRectFRange
    int mExtValue -> mExtValue
    void extPointClickRange(int) -> extPointClickRange
    void saveRectF(float,float,float,float) -> saveRectF
    void saveRectF(android.graphics.RectF) -> saveRectF
    float getRadius() -> getRadius
    java.lang.String getRectInfo() -> getRectInfo
    android.graphics.RectF getRectF() -> getRectF
    boolean compareRange(float,float) -> compareRange
org.xclcharts.event.touch.ChartTouch -> org.xclcharts.event.touch.ChartTouch:
    android.view.View mView -> mView
    org.xclcharts.renderer.XChart mChart -> mChart
    float oldX -> oldX
    float oldY -> oldY
    float oldDist -> oldDist
    float newDist -> newDist
    float halfDist -> halfDist
    float scaleRate -> scaleRate
    int action -> action
    float newX -> newX
    float newY -> newY
    float FIXED_RANGE -> FIXED_RANGE
    void handleTouch(android.view.MotionEvent) -> handleTouch
    void handleTouch_Scale(android.view.MotionEvent) -> handleTouch_Scale
    void handleTouch_PanMode(android.view.MotionEvent) -> handleTouch_PanMode
    void setLocation(float,float,float,float) -> setLocation
    float spacing(android.view.MotionEvent) -> spacing
org.xclcharts.event.touch.IChartTouch -> org.xclcharts.event.touch.IChartTouch:
    void handleTouch(android.view.MotionEvent) -> handleTouch
org.xclcharts.renderer.AxesChart -> org.xclcharts.renderer.AxesChart:
    org.xclcharts.renderer.axis.DataAxisRender dataAxis -> dataAxis
    org.xclcharts.renderer.axis.CategoryAxisRender categoryAxis -> categoryAxis
    org.xclcharts.renderer.plot.AxisTitleRender axisTitle -> axisTitle
    org.xclcharts.common.IFormatterDoubleCallBack mItemLabelFormatter -> mItemLabelFormatter
    org.xclcharts.renderer.XEnum$Direction mDirection -> mDirection
    float mMoveX -> mMoveX
    float mMoveY -> mMoveY
    org.xclcharts.renderer.XEnum$AxisLocation mDataAxisLocation -> mDataAxisLocation
    org.xclcharts.renderer.XEnum$AxisLocation mCategoryAxisLocation -> mCategoryAxisLocation
    boolean mAxesClosed -> mAxesClosed
    float myMargin -> myMargin
    float mxMargin -> mxMargin
    java.util.ArrayList mLstDataTick -> mLstDataTick
    java.util.ArrayList mLstCateTick -> mLstCateTick
    org.xclcharts.renderer.AxesChart$ClipExt mClipExt -> mClipExt
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    void initChart() -> initChart
    org.xclcharts.renderer.axis.DataAxis getDataAxis() -> getDataAxis
    org.xclcharts.renderer.axis.CategoryAxis getCategoryAxis() -> getCategoryAxis
    void initCategoryAxis() -> initCategoryAxis
    void initDataAxis() -> initDataAxis
    void drawCategoryAxisLabels(android.graphics.Canvas,java.util.ArrayList) -> drawCategoryAxisLabels
    void drawDataAxisLabels(android.graphics.Canvas,java.util.ArrayList) -> drawDataAxisLabels
    org.xclcharts.renderer.plot.AxisTitle getAxisTitle() -> getAxisTitle
    float getAxisScreenWidth() -> getAxisScreenWidth
    float getPlotScreenWidth() -> getPlotScreenWidth
    float getPlotScreenHeight() -> getPlotScreenHeight
    float getAxisScreenHeight() -> getAxisScreenHeight
    float getVerticalYSteps(int) -> getVerticalYSteps
    float getVerticalXSteps(int) -> getVerticalXSteps
    void setItemLabelFormatter(org.xclcharts.common.IFormatterDoubleCallBack) -> setItemLabelFormatter
    java.lang.String getFormatterItemLabel(double) -> getFormatterItemLabel
    boolean isDrawYAxisTickMarks(float,float) -> isDrawYAxisTickMarks
    boolean isDrawXAxisTickMarks(float,float) -> isDrawXAxisTickMarks
    void drawHorizontalGridLines(android.graphics.Canvas,float,float,int,int,float,float) -> drawHorizontalGridLines
    void drawVerticalGridLines(android.graphics.Canvas,float,float,int,int,float,float) -> drawVerticalGridLines
    void setDataAxisLocation(org.xclcharts.renderer.XEnum$AxisLocation) -> setDataAxisLocation
    org.xclcharts.renderer.XEnum$AxisLocation getDataAxisLocation() -> getDataAxisLocation
    void setCategoryAxisLocation(org.xclcharts.renderer.XEnum$AxisLocation) -> setCategoryAxisLocation
    org.xclcharts.renderer.XEnum$AxisLocation getCategoryAxisLocation() -> getCategoryAxisLocation
    float getAxisXPos(org.xclcharts.renderer.XEnum$AxisLocation) -> getAxisXPos
    float getAxisYPos(org.xclcharts.renderer.XEnum$AxisLocation) -> getAxisYPos
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setAxesClosed(boolean) -> setAxesClosed
    boolean getAxesClosedStatus() -> getAxesClosedStatus
    void initMoveXY() -> initMoveXY
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipAxisClosed(android.graphics.Canvas) -> drawClipAxisClosed
    void drawClipDataAxisLine(android.graphics.Canvas) -> drawClipDataAxisLine
    void drawClipCategoryAxisLine(android.graphics.Canvas) -> drawClipCategoryAxisLine
    void drawClipAxisLine(android.graphics.Canvas) -> drawClipAxisLine
    void drawClipDataAxisTickMarks(android.graphics.Canvas) -> drawClipDataAxisTickMarks
    void drawClipCategoryAxisTickMarks(android.graphics.Canvas) -> drawClipCategoryAxisTickMarks
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    boolean drawFixedPlot(android.graphics.Canvas) -> drawFixedPlot
    void setXTickMarksOffsetMargin(float) -> setXTickMarksOffsetMargin
    void setYTickMarksOffsetMargin(float) -> setYTickMarksOffsetMargin
    float getClipYMargin() -> getClipYMargin
    float getClipXMargin() -> getClipXMargin
    org.xclcharts.renderer.AxesChart$ClipExt getClipExt() -> getClipExt
    boolean drawClipVerticalPlot(android.graphics.Canvas) -> drawClipVerticalPlot
    boolean drawClipHorizontalPlot(android.graphics.Canvas) -> drawClipHorizontalPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.renderer.AxesChart$ClipExt -> org.xclcharts.renderer.AxesChart$ClipExt:
    float mClipExtLeft -> mClipExtLeft
    float mClipExtTop -> mClipExtTop
    float mClipExtRight -> mClipExtRight
    float mClipExtBottom -> mClipExtBottom
    float clipExtLeft -> clipExtLeft
    float clipExtTop -> clipExtTop
    float clipExtRight -> clipExtRight
    float clipExtBottom -> clipExtBottom
    org.xclcharts.renderer.AxesChart this$0 -> this$0
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType
    void setExtLeft(float) -> setExtLeft
    void setExtTop(float) -> setExtTop
    void setExtRight(float) -> setExtRight
    void setExtBottom(float) -> setExtBottom
    void calc(org.xclcharts.renderer.XEnum$ChartType) -> calc
    float getExtLeft() -> getExtLeft
    float getExtTop() -> getExtTop
    float getExtRight() -> getExtRight
    float getExtBottom() -> getExtBottom
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType
org.xclcharts.renderer.CirChart -> org.xclcharts.renderer.CirChart:
    java.lang.String TAG -> TAG
    float mRadius -> mRadius
    org.xclcharts.renderer.XEnum$SliceLabelStyle mLabelStyle -> mLabelStyle
    android.graphics.Paint mPaintLabel -> mPaintLabel
    float mOffsetAngle -> mOffsetAngle
    org.xclcharts.renderer.plot.LabelBrokenLineRender mLabelLine -> mLabelLine
    boolean mIsLabelLineSyncColor -> mIsLabelLineSyncColor
    boolean mIsLabelPointSyncColor -> mIsLabelPointSyncColor
    boolean mIsLabelSyncColor -> mIsLabelSyncColor
    org.xclcharts.renderer.plot.PlotLabelRender mPlotLabel -> mPlotLabel
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    void calcPlotRange() -> calcPlotRange
    float getRadius() -> getRadius
    void setInitialAngle(float) -> setInitialAngle
    float getInitialAngle() -> getInitialAngle
    void setLabelStyle(org.xclcharts.renderer.XEnum$SliceLabelStyle) -> setLabelStyle
    org.xclcharts.renderer.XEnum$SliceLabelStyle getLabelStyle() -> getLabelStyle
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    org.xclcharts.renderer.plot.LabelBrokenLine getLabelBrokenLine() -> getLabelBrokenLine
    android.graphics.PointF renderLabelInside(android.graphics.Canvas,java.lang.String,float,float,float,float,float,boolean) -> renderLabelInside
    android.graphics.PointF renderLabelOutside(android.graphics.Canvas,java.lang.String,float,float,float,float,float,boolean) -> renderLabelOutside
    android.graphics.PointF renderLabelLine(android.graphics.Canvas,org.xclcharts.chart.PieData,float,float,float,float,boolean) -> renderLabelLine
    void syncLabelLineColor() -> syncLabelLineColor
    void syncLabelPointColor() -> syncLabelPointColor
    void syncLabelColor() -> syncLabelColor
    org.xclcharts.renderer.plot.PlotLabel getPlotLabel() -> getPlotLabel
    boolean renderLabel(android.graphics.Canvas,org.xclcharts.chart.PieData,org.xclcharts.renderer.info.PlotArcLabelInfo,boolean,boolean) -> renderLabel
    boolean postRender(android.graphics.Canvas) -> postRender
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.renderer.EventChart -> org.xclcharts.renderer.EventChart:
    java.lang.String TAG -> TAG
    boolean mListenClick -> mListenClick
    int mClickRangeExtValue -> mClickRangeExtValue
    java.util.ArrayList mRecordset -> mRecordset
    int mSelectID -> mSelectID
    int mSelectDataID -> mSelectDataID
    int mSelectDataChildID -> mSelectDataChildID
    boolean mShowClikedFocus -> mShowClikedFocus
    android.graphics.Paint mFocusPaint -> mFocusPaint
    android.graphics.PointF mFocusPoint -> mFocusPoint
    float mFocusRadius -> mFocusRadius
    android.graphics.RectF mFocusRect -> mFocusRect
    org.xclcharts.event.click.ArcPosition mFocusArcPosition -> mFocusArcPosition
    boolean mFocusArcSelect -> mFocusArcSelect
    org.xclcharts.renderer.info.ToolTipRender mToolTip -> mToolTip
    void ActiveListenItemClick() -> ActiveListenItemClick
    void DeactiveListenItemClick() -> DeactiveListenItemClick
    boolean getListenItemClickStatus() -> getListenItemClickStatus
    java.util.ArrayList getPositionRecordset() -> getPositionRecordset
    void showClikedFocus() -> showClikedFocus
    void clearSelected() -> clearSelected
    void saveSelected(int,int,int) -> saveSelected
    int getSelected() -> getSelected
    void savePointRecord(int,int,float,float,android.graphics.RectF) -> savePointRecord
    void savePointRecord(int,int,float,float,float,float,float,float) -> savePointRecord
    void saveBarRectFRecord(int,int,float,float,float,float) -> saveBarRectFRecord
    void saveBarRecord(int,int,float,float,android.graphics.RectF) -> saveBarRecord
    void saveArcRecord(int,float,float,float,float,float,float,float) -> saveArcRecord
    void extPointClickRange(int) -> extPointClickRange
    boolean isPlotClickArea(float,float) -> isPlotClickArea
    org.xclcharts.event.click.ArcPosition getArcRecord(float,float) -> getArcRecord
    org.xclcharts.event.click.BarPosition getBarRecord(float,float) -> getBarRecord
    org.xclcharts.event.click.PointPosition getPointRecord(float,float) -> getPointRecord
    void initPositionRecord() -> initPositionRecord
    android.graphics.Paint getFocusPaint() -> getFocusPaint
    void showFocusPointF(android.graphics.PointF,float) -> showFocusPointF
    void showFocusRectF(android.graphics.RectF) -> showFocusRectF
    void showFocusArc(org.xclcharts.event.click.ArcPosition) -> showFocusArc
    void showFocusArc(org.xclcharts.event.click.ArcPosition,boolean) -> showFocusArc
    org.xclcharts.renderer.info.ToolTip getToolTip() -> getToolTip
    void renderToolTip(android.graphics.Canvas) -> renderToolTip
    boolean drawFocusRect(android.graphics.Canvas,int,int,float,float,float,float) -> drawFocusRect
    boolean renderFocusShape(android.graphics.Canvas) -> renderFocusShape
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.renderer.IRender -> org.xclcharts.renderer.IRender:
    boolean render(android.graphics.Canvas) -> render
org.xclcharts.renderer.LnChart -> org.xclcharts.renderer.LnChart:
    java.lang.String TAG -> TAG
    android.graphics.PointF[] BezierControls -> BezierControls
    java.util.List mAnchorSet -> mAnchorSet
    org.xclcharts.renderer.line.PlotCustomLine mCustomLine -> mCustomLine
    boolean mXCoordFirstTickmarksBegin -> mXCoordFirstTickmarksBegin
    org.xclcharts.renderer.XEnum$BarCenterStyle mBarCenterStyle -> mBarCenterStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
    float getVPValPosition(double) -> getVPValPosition
    float getLnXValPosition(double,double,double) -> getLnXValPosition
    float getVPDataAxisStdY() -> getVPDataAxisStdY
    float getAxisYPos(org.xclcharts.renderer.XEnum$AxisLocation) -> getAxisYPos
    void setCustomLines(java.util.List) -> setCustomLines
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    int getCategoryAxisCount() -> getCategoryAxisCount
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    boolean isPlotClickArea(float,float) -> isPlotClickArea
    org.xclcharts.event.click.PointPosition getPositionRecord(float,float) -> getPositionRecord
    void renderBezierCurveLine(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,java.util.List) -> renderBezierCurveLine
    void renderBezierCurvePath(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF[]) -> renderBezierCurvePath
    void bezierCurvePathAxisMinValue(android.graphics.Path,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF[]) -> bezierCurvePathAxisMinValue
    void setAnchorDataPoint(java.util.List) -> setAnchorDataPoint
    java.util.List getAnchorDataPoint() -> getAnchorDataPoint
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
org.xclcharts.renderer.RdChart -> org.xclcharts.renderer.RdChart:
    java.lang.String TAG -> TAG
    float mRadius -> mRadius
    int mOffsetAngle -> mOffsetAngle
    org.xclcharts.common.IFormatterDoubleCallBack mDotLabelFormatter -> mDotLabelFormatter
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintLine -> mPaintLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    void calcPlotRange() -> calcPlotRange
    org.xclcharts.event.click.PointPosition getPositionRecord(float,float) -> getPositionRecord
    float getRadius() -> getRadius
    void setInitialAngle(int) -> setInitialAngle
    int getInitialAngle() -> getInitialAngle
    void setDotLabelFormatter(org.xclcharts.common.IFormatterDoubleCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(double) -> getFormatterDotLabel
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.renderer.XChart -> org.xclcharts.renderer.XChart:
    org.xclcharts.renderer.plot.PlotAreaRender plotArea -> plotArea
    org.xclcharts.renderer.plot.PlotGridRender plotGrid -> plotGrid
    org.xclcharts.renderer.plot.PlotTitleRender plotTitle -> plotTitle
    float mLeft -> mLeft
    float mTop -> mTop
    float mRight -> mRight
    float mBottom -> mBottom
    float mWidth -> mWidth
    float mHeight -> mHeight
    float mPaddingTop -> mPaddingTop
    float mPaddingBottom -> mPaddingBottom
    float mPaddingLeft -> mPaddingLeft
    float mPaddingRight -> mPaddingRight
    boolean mBackgroundColorVisible -> mBackgroundColorVisible
    float[] mTranslateXY -> mTranslateXY
    boolean mShowBorder -> mShowBorder
    org.xclcharts.renderer.plot.BorderRender mBorder -> mBorder
    org.xclcharts.renderer.plot.PlotLegendRender plotLegend -> plotLegend
    org.xclcharts.renderer.info.LegendRender mDyLegend -> mDyLegend
    boolean mEnableScale -> mEnableScale
    float mXScale -> mXScale
    float mYScale -> mYScale
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    boolean mDyLineVisible -> mDyLineVisible
    org.xclcharts.renderer.info.DyLineRender mDyLine -> mDyLine
    boolean mEnablePanMode -> mEnablePanMode
    org.xclcharts.renderer.XEnum$PanMode mPlotPanMode -> mPlotPanMode
    boolean mControlPanRange -> mControlPanRange
    void initChart() -> initChart
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    org.xclcharts.renderer.plot.PlotLegend getPlotLegend() -> getPlotLegend
    void setPadding(float,float,float,float) -> setPadding
    org.xclcharts.renderer.plot.PlotArea getPlotArea() -> getPlotArea
    org.xclcharts.renderer.plot.PlotGrid getPlotGrid() -> getPlotGrid
    org.xclcharts.renderer.plot.PlotTitle getPlotTitle() -> getPlotTitle
    void setChartRange(float,float) -> setChartRange
    void setChartRange(float,float,float,float) -> setChartRange
    void setTitle(java.lang.String) -> setTitle
    void addSubtitle(java.lang.String) -> addSubtitle
    void setTitleVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setTitleVerticalAlign
    void setTitleAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setTitleAlign
    float getLeft() -> getLeft
    float getTop() -> getTop
    float getRight() -> getRight
    float getBottom() -> getBottom
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getPaddingTop() -> getPaddingTop
    float getPaddingBottom() -> getPaddingBottom
    float getPaddingLeft() -> getPaddingLeft
    float getPaddingRight() -> getPaddingRight
    android.graphics.PointF getCenterXY() -> getCenterXY
    void setTranslateXY(float,float) -> setTranslateXY
    float[] getTranslateXY() -> getTranslateXY
    void calcPlotRange() -> calcPlotRange
    void renderTitle(android.graphics.Canvas) -> renderTitle
    boolean drawAnchor(java.util.List,int,int,android.graphics.Canvas,float,float) -> drawAnchor
    void setApplyBackgroundColor(boolean) -> setApplyBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundColor(org.xclcharts.renderer.XEnum$Direction,int,int) -> setBackgroundColor
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
    void showBorder() -> showBorder
    void showRoundBorder() -> showRoundBorder
    void hideBorder() -> hideBorder
    org.xclcharts.renderer.plot.Border getBorder() -> getBorder
    boolean isShowBorder() -> isShowBorder
    int getBorderWidth() -> getBorderWidth
    void setBorderWidth(int) -> setBorderWidth
    void renderBorder(android.graphics.Canvas) -> renderBorder
    void renderChartBackground(android.graphics.Canvas) -> renderChartBackground
    void setScale(float,float,float,float) -> setScale
    boolean getClikedScaleStatus() -> getClikedScaleStatus
    void scaleChart(android.graphics.Canvas) -> scaleChart
    void enableScale() -> enableScale
    void disableScale() -> disableScale
    boolean getScaleStatus() -> getScaleStatus
    void setPlotPanMode(org.xclcharts.renderer.XEnum$PanMode) -> setPlotPanMode
    org.xclcharts.renderer.XEnum$PanMode getPlotPanMode() -> getPlotPanMode
    void enablePanMode() -> enablePanMode
    void disablePanMode() -> disablePanMode
    void enabledCtlPanRange() -> enabledCtlPanRange
    void disabledCtlPanRange() -> disabledCtlPanRange
    boolean getCtlPanRangeStatus() -> getCtlPanRangeStatus
    boolean getPanModeStatus() -> getPanModeStatus
    org.xclcharts.renderer.info.Legend getDyLegend() -> getDyLegend
    void showDyLine() -> showDyLine
    void hideDyLine() -> hideDyLine
    boolean getDyLineVisible() -> getDyLineVisible
    org.xclcharts.renderer.info.DyLine getDyLine() -> getDyLine
    void drawDyLine(android.graphics.Canvas) -> drawDyLine
    void drawDyLegend(android.graphics.Canvas) -> drawDyLegend
    boolean postRender(android.graphics.Canvas) -> postRender
    boolean render(android.graphics.Canvas) -> render
    void disableHighPrecision() -> disableHighPrecision
    void enabledHighPrecision() -> enabledHighPrecision
    float add(float,float) -> add
    float sub(float,float) -> sub
    float mul(float,float) -> mul
    float div(float,float) -> div
org.xclcharts.renderer.XEnum -> org.xclcharts.renderer.XEnum:
org.xclcharts.renderer.XEnum$AnchorStyle -> org.xclcharts.renderer.XEnum$AnchorStyle:
    org.xclcharts.renderer.XEnum$AnchorStyle RECT -> RECT
    org.xclcharts.renderer.XEnum$AnchorStyle CIRCLE -> CIRCLE
    org.xclcharts.renderer.XEnum$AnchorStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$AnchorStyle[] values() -> values
    org.xclcharts.renderer.XEnum$AnchorStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$AxisLocation -> org.xclcharts.renderer.XEnum$AxisLocation:
    org.xclcharts.renderer.XEnum$AxisLocation TOP -> TOP
    org.xclcharts.renderer.XEnum$AxisLocation BOTTOM -> BOTTOM
    org.xclcharts.renderer.XEnum$AxisLocation LEFT -> LEFT
    org.xclcharts.renderer.XEnum$AxisLocation RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$AxisLocation HORIZONTAL_CENTER -> HORIZONTAL_CENTER
    org.xclcharts.renderer.XEnum$AxisLocation VERTICAL_CENTER -> VERTICAL_CENTER
    org.xclcharts.renderer.XEnum$AxisLocation[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$AxisLocation[] values() -> values
    org.xclcharts.renderer.XEnum$AxisLocation valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$AxisTitleStyle -> org.xclcharts.renderer.XEnum$AxisTitleStyle:
    org.xclcharts.renderer.XEnum$AxisTitleStyle NORMAL -> NORMAL
    org.xclcharts.renderer.XEnum$AxisTitleStyle ENDPOINT -> ENDPOINT
    org.xclcharts.renderer.XEnum$AxisTitleStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$AxisTitleStyle[] values() -> values
    org.xclcharts.renderer.XEnum$AxisTitleStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$BarCenterStyle -> org.xclcharts.renderer.XEnum$BarCenterStyle:
    org.xclcharts.renderer.XEnum$BarCenterStyle TICKMARKS -> TICKMARKS
    org.xclcharts.renderer.XEnum$BarCenterStyle SPACE -> SPACE
    org.xclcharts.renderer.XEnum$BarCenterStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$BarCenterStyle[] values() -> values
    org.xclcharts.renderer.XEnum$BarCenterStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$BarStyle -> org.xclcharts.renderer.XEnum$BarStyle:
    org.xclcharts.renderer.XEnum$BarStyle GRADIENT -> GRADIENT
    org.xclcharts.renderer.XEnum$BarStyle FILL -> FILL
    org.xclcharts.renderer.XEnum$BarStyle STROKE -> STROKE
    org.xclcharts.renderer.XEnum$BarStyle OUTLINE -> OUTLINE
    org.xclcharts.renderer.XEnum$BarStyle TRIANGLE -> TRIANGLE
    org.xclcharts.renderer.XEnum$BarStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$BarStyle[] values() -> values
    org.xclcharts.renderer.XEnum$BarStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$ChartType -> org.xclcharts.renderer.XEnum$ChartType:
    org.xclcharts.renderer.XEnum$ChartType NONE -> NONE
    org.xclcharts.renderer.XEnum$ChartType BAR -> BAR
    org.xclcharts.renderer.XEnum$ChartType BAR3D -> BAR3D
    org.xclcharts.renderer.XEnum$ChartType STACKBAR -> STACKBAR
    org.xclcharts.renderer.XEnum$ChartType PIE -> PIE
    org.xclcharts.renderer.XEnum$ChartType PIE3D -> PIE3D
    org.xclcharts.renderer.XEnum$ChartType DOUNT -> DOUNT
    org.xclcharts.renderer.XEnum$ChartType LINE -> LINE
    org.xclcharts.renderer.XEnum$ChartType SPLINE -> SPLINE
    org.xclcharts.renderer.XEnum$ChartType AREA -> AREA
    org.xclcharts.renderer.XEnum$ChartType ROSE -> ROSE
    org.xclcharts.renderer.XEnum$ChartType RADAR -> RADAR
    org.xclcharts.renderer.XEnum$ChartType DIAL -> DIAL
    org.xclcharts.renderer.XEnum$ChartType RANGEBAR -> RANGEBAR
    org.xclcharts.renderer.XEnum$ChartType ARCLINE -> ARCLINE
    org.xclcharts.renderer.XEnum$ChartType CIRCLE -> CIRCLE
    org.xclcharts.renderer.XEnum$ChartType SCATTER -> SCATTER
    org.xclcharts.renderer.XEnum$ChartType BUBBLE -> BUBBLE
    org.xclcharts.renderer.XEnum$ChartType GAUGE -> GAUGE
    org.xclcharts.renderer.XEnum$ChartType FUNNEL -> FUNNEL
    org.xclcharts.renderer.XEnum$ChartType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$ChartType[] values() -> values
    org.xclcharts.renderer.XEnum$ChartType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$CircleType -> org.xclcharts.renderer.XEnum$CircleType:
    org.xclcharts.renderer.XEnum$CircleType FULL -> FULL
    org.xclcharts.renderer.XEnum$CircleType HALF -> HALF
    org.xclcharts.renderer.XEnum$CircleType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$CircleType[] values() -> values
    org.xclcharts.renderer.XEnum$CircleType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$CrurveLineStyle -> org.xclcharts.renderer.XEnum$CrurveLineStyle:
    org.xclcharts.renderer.XEnum$CrurveLineStyle BEELINE -> BEELINE
    org.xclcharts.renderer.XEnum$CrurveLineStyle BEZIERCURVE -> BEZIERCURVE
    org.xclcharts.renderer.XEnum$CrurveLineStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$CrurveLineStyle[] values() -> values
    org.xclcharts.renderer.XEnum$CrurveLineStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DataAreaStyle -> org.xclcharts.renderer.XEnum$DataAreaStyle:
    org.xclcharts.renderer.XEnum$DataAreaStyle FILL -> FILL
    org.xclcharts.renderer.XEnum$DataAreaStyle STROKE -> STROKE
    org.xclcharts.renderer.XEnum$DataAreaStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DataAreaStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DataAreaStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$Direction -> org.xclcharts.renderer.XEnum$Direction:
    org.xclcharts.renderer.XEnum$Direction HORIZONTAL -> HORIZONTAL
    org.xclcharts.renderer.XEnum$Direction VERTICAL -> VERTICAL
    org.xclcharts.renderer.XEnum$Direction[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$Direction[] values() -> values
    org.xclcharts.renderer.XEnum$Direction valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DotStyle -> org.xclcharts.renderer.XEnum$DotStyle:
    org.xclcharts.renderer.XEnum$DotStyle HIDE -> HIDE
    org.xclcharts.renderer.XEnum$DotStyle TRIANGLE -> TRIANGLE
    org.xclcharts.renderer.XEnum$DotStyle RECT -> RECT
    org.xclcharts.renderer.XEnum$DotStyle DOT -> DOT
    org.xclcharts.renderer.XEnum$DotStyle RING -> RING
    org.xclcharts.renderer.XEnum$DotStyle PRISMATIC -> PRISMATIC
    org.xclcharts.renderer.XEnum$DotStyle X -> X
    org.xclcharts.renderer.XEnum$DotStyle CROSS -> CROSS
    org.xclcharts.renderer.XEnum$DotStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DotStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DotStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DyInfoStyle -> org.xclcharts.renderer.XEnum$DyInfoStyle:
    org.xclcharts.renderer.XEnum$DyInfoStyle RECT -> RECT
    org.xclcharts.renderer.XEnum$DyInfoStyle ROUNDRECT -> ROUNDRECT
    org.xclcharts.renderer.XEnum$DyInfoStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DyInfoStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DyInfoStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DyLineStyle -> org.xclcharts.renderer.XEnum$DyLineStyle:
    org.xclcharts.renderer.XEnum$DyLineStyle Cross -> Cross
    org.xclcharts.renderer.XEnum$DyLineStyle BackwardDiagonal -> BackwardDiagonal
    org.xclcharts.renderer.XEnum$DyLineStyle Vertical -> Vertical
    org.xclcharts.renderer.XEnum$DyLineStyle Horizontal -> Horizontal
    org.xclcharts.renderer.XEnum$DyLineStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DyLineStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DyLineStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$HorizontalAlign -> org.xclcharts.renderer.XEnum$HorizontalAlign:
    org.xclcharts.renderer.XEnum$HorizontalAlign LEFT -> LEFT
    org.xclcharts.renderer.XEnum$HorizontalAlign CENTER -> CENTER
    org.xclcharts.renderer.XEnum$HorizontalAlign RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$HorizontalAlign[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$HorizontalAlign[] values() -> values
    org.xclcharts.renderer.XEnum$HorizontalAlign valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LabelLinePoint -> org.xclcharts.renderer.XEnum$LabelLinePoint:
    org.xclcharts.renderer.XEnum$LabelLinePoint NONE -> NONE
    org.xclcharts.renderer.XEnum$LabelLinePoint BEGIN -> BEGIN
    org.xclcharts.renderer.XEnum$LabelLinePoint END -> END
    org.xclcharts.renderer.XEnum$LabelLinePoint ALL -> ALL
    org.xclcharts.renderer.XEnum$LabelLinePoint[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LabelLinePoint[] values() -> values
    org.xclcharts.renderer.XEnum$LabelLinePoint valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LabelSaveType -> org.xclcharts.renderer.XEnum$LabelSaveType:
    org.xclcharts.renderer.XEnum$LabelSaveType NONE -> NONE
    org.xclcharts.renderer.XEnum$LabelSaveType ONLYPOSITION -> ONLYPOSITION
    org.xclcharts.renderer.XEnum$LabelSaveType ALL -> ALL
    org.xclcharts.renderer.XEnum$LabelSaveType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LabelSaveType[] values() -> values
    org.xclcharts.renderer.XEnum$LabelSaveType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LegendType -> org.xclcharts.renderer.XEnum$LegendType:
    org.xclcharts.renderer.XEnum$LegendType COLUMN -> COLUMN
    org.xclcharts.renderer.XEnum$LegendType ROW -> ROW
    org.xclcharts.renderer.XEnum$LegendType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LegendType[] values() -> values
    org.xclcharts.renderer.XEnum$LegendType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LineStyle -> org.xclcharts.renderer.XEnum$LineStyle:
    org.xclcharts.renderer.XEnum$LineStyle SOLID -> SOLID
    org.xclcharts.renderer.XEnum$LineStyle DOT -> DOT
    org.xclcharts.renderer.XEnum$LineStyle DASH -> DASH
    org.xclcharts.renderer.XEnum$LineStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LineStyle[] values() -> values
    org.xclcharts.renderer.XEnum$LineStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$Location -> org.xclcharts.renderer.XEnum$Location:
    org.xclcharts.renderer.XEnum$Location TOP -> TOP
    org.xclcharts.renderer.XEnum$Location BOTTOM -> BOTTOM
    org.xclcharts.renderer.XEnum$Location LEFT -> LEFT
    org.xclcharts.renderer.XEnum$Location RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$Location[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$Location[] values() -> values
    org.xclcharts.renderer.XEnum$Location valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$PanMode -> org.xclcharts.renderer.XEnum$PanMode:
    org.xclcharts.renderer.XEnum$PanMode HORIZONTAL -> HORIZONTAL
    org.xclcharts.renderer.XEnum$PanMode VERTICAL -> VERTICAL
    org.xclcharts.renderer.XEnum$PanMode FREE -> FREE
    org.xclcharts.renderer.XEnum$PanMode[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$PanMode[] values() -> values
    org.xclcharts.renderer.XEnum$PanMode valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$PointerStyle -> org.xclcharts.renderer.XEnum$PointerStyle:
    org.xclcharts.renderer.XEnum$PointerStyle TRIANGLE -> TRIANGLE
    org.xclcharts.renderer.XEnum$PointerStyle LINE -> LINE
    org.xclcharts.renderer.XEnum$PointerStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$PointerStyle[] values() -> values
    org.xclcharts.renderer.XEnum$PointerStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RadarChartType -> org.xclcharts.renderer.XEnum$RadarChartType:
    org.xclcharts.renderer.XEnum$RadarChartType RADAR -> RADAR
    org.xclcharts.renderer.XEnum$RadarChartType ROUND -> ROUND
    org.xclcharts.renderer.XEnum$RadarChartType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RadarChartType[] values() -> values
    org.xclcharts.renderer.XEnum$RadarChartType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RectType -> org.xclcharts.renderer.XEnum$RectType:
    org.xclcharts.renderer.XEnum$RectType RECT -> RECT
    org.xclcharts.renderer.XEnum$RectType ROUNDRECT -> ROUNDRECT
    org.xclcharts.renderer.XEnum$RectType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RectType[] values() -> values
    org.xclcharts.renderer.XEnum$RectType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RoundAxisType -> org.xclcharts.renderer.XEnum$RoundAxisType:
    org.xclcharts.renderer.XEnum$RoundAxisType TICKAXIS -> TICKAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType RINGAXIS -> RINGAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType ARCLINEAXIS -> ARCLINEAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType FILLAXIS -> FILLAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType CIRCLEAXIS -> CIRCLEAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType LINEAXIS -> LINEAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RoundAxisType[] values() -> values
    org.xclcharts.renderer.XEnum$RoundAxisType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RoundTickAxisType -> org.xclcharts.renderer.XEnum$RoundTickAxisType:
    org.xclcharts.renderer.XEnum$RoundTickAxisType INNER_TICKAXIS -> INNER_TICKAXIS
    org.xclcharts.renderer.XEnum$RoundTickAxisType OUTER_TICKAXIS -> OUTER_TICKAXIS
    org.xclcharts.renderer.XEnum$RoundTickAxisType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RoundTickAxisType[] values() -> values
    org.xclcharts.renderer.XEnum$RoundTickAxisType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$SliceLabelStyle -> org.xclcharts.renderer.XEnum$SliceLabelStyle:
    org.xclcharts.renderer.XEnum$SliceLabelStyle HIDE -> HIDE
    org.xclcharts.renderer.XEnum$SliceLabelStyle INSIDE -> INSIDE
    org.xclcharts.renderer.XEnum$SliceLabelStyle OUTSIDE -> OUTSIDE
    org.xclcharts.renderer.XEnum$SliceLabelStyle BROKENLINE -> BROKENLINE
    org.xclcharts.renderer.XEnum$SliceLabelStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$SliceLabelStyle[] values() -> values
    org.xclcharts.renderer.XEnum$SliceLabelStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$SortType -> org.xclcharts.renderer.XEnum$SortType:
    org.xclcharts.renderer.XEnum$SortType NORMAL -> NORMAL
    org.xclcharts.renderer.XEnum$SortType ASC -> ASC
    org.xclcharts.renderer.XEnum$SortType DESC -> DESC
    org.xclcharts.renderer.XEnum$SortType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$SortType[] values() -> values
    org.xclcharts.renderer.XEnum$SortType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$TickType -> org.xclcharts.renderer.XEnum$TickType:
    org.xclcharts.renderer.XEnum$TickType MARKS -> MARKS
    org.xclcharts.renderer.XEnum$TickType LABELS -> LABELS
    org.xclcharts.renderer.XEnum$TickType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$TickType[] values() -> values
    org.xclcharts.renderer.XEnum$TickType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$TriangleDirection -> org.xclcharts.renderer.XEnum$TriangleDirection:
    org.xclcharts.renderer.XEnum$TriangleDirection UP -> UP
    org.xclcharts.renderer.XEnum$TriangleDirection DOWN -> DOWN
    org.xclcharts.renderer.XEnum$TriangleDirection LEFT -> LEFT
    org.xclcharts.renderer.XEnum$TriangleDirection RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$TriangleDirection[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$TriangleDirection[] values() -> values
    org.xclcharts.renderer.XEnum$TriangleDirection valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$TriangleStyle -> org.xclcharts.renderer.XEnum$TriangleStyle:
    org.xclcharts.renderer.XEnum$TriangleStyle OUTLINE -> OUTLINE
    org.xclcharts.renderer.XEnum$TriangleStyle FILL -> FILL
    org.xclcharts.renderer.XEnum$TriangleStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$TriangleStyle[] values() -> values
    org.xclcharts.renderer.XEnum$TriangleStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$VerticalAlign -> org.xclcharts.renderer.XEnum$VerticalAlign:
    org.xclcharts.renderer.XEnum$VerticalAlign TOP -> TOP
    org.xclcharts.renderer.XEnum$VerticalAlign MIDDLE -> MIDDLE
    org.xclcharts.renderer.XEnum$VerticalAlign BOTTOM -> BOTTOM
    org.xclcharts.renderer.XEnum$VerticalAlign[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$VerticalAlign[] values() -> values
    org.xclcharts.renderer.XEnum$VerticalAlign valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.axis.Axis -> org.xclcharts.renderer.axis.Axis:
    android.graphics.Paint mPaintAxis -> mPaintAxis
    boolean mAxisLineVisible -> mAxisLineVisible
    android.graphics.Paint mPaintTickMarks -> mPaintTickMarks
    android.graphics.Paint mPaintTickLabels -> mPaintTickLabels
    boolean mTickMarksVisible -> mTickMarksVisible
    boolean mAxisLabelsVisible -> mAxisLabelsVisible
    float mTickLabelRotateAngle -> mTickLabelRotateAngle
    boolean mAxisVisible -> mAxisVisible
    void initAxisPaint() -> initAxisPaint
    void initTickMarksPaint() -> initTickMarksPaint
    void initTickLabelPaint() -> initTickLabelPaint
    void show() -> show
    void hide() -> hide
    boolean isShow() -> isShow
    void showAxisLine() -> showAxisLine
    void hideAxisLine() -> hideAxisLine
    boolean isShowAxisLine() -> isShowAxisLine
    android.graphics.Paint getAxisPaint() -> getAxisPaint
    android.graphics.Paint getTickMarksPaint() -> getTickMarksPaint
    android.graphics.Paint getTickLabelPaint() -> getTickLabelPaint
    void showTickMarks() -> showTickMarks
    void hideTickMarks() -> hideTickMarks
    boolean isShowTickMarks() -> isShowTickMarks
    void showAxisLabels() -> showAxisLabels
    void hideAxisLabels() -> hideAxisLabels
    boolean isShowAxisLabels() -> isShowAxisLabels
    float getTickLabelRotateAngle() -> getTickLabelRotateAngle
    void setTickLabelRotateAngle(float) -> setTickLabelRotateAngle
org.xclcharts.renderer.axis.CategoryAxis -> org.xclcharts.renderer.axis.CategoryAxis:
    double mAxisSteps -> mAxisSteps
    boolean mAxisBindStd -> mAxisBindStd
    void setAxisSteps(double) -> setAxisSteps
    double getAxisSteps() -> getAxisSteps
    void setAxisBuildStd(boolean) -> setAxisBuildStd
    boolean getAxisBuildStdStatus() -> getAxisBuildStdStatus
org.xclcharts.renderer.axis.CategoryAxisRender -> org.xclcharts.renderer.axis.CategoryAxisRender:
    java.util.List getDataSet() -> getDataSet
    void renderAxisHorizontalTick(org.xclcharts.renderer.XChart,android.graphics.Canvas,float,float,java.lang.String,float,float,boolean) -> renderAxisHorizontalTick
    void renderAxisVerticalTick(android.graphics.Canvas,float,float,java.lang.String,float,float,boolean) -> renderAxisVerticalTick
    void renderAxis(android.graphics.Canvas,float,float,float,float) -> renderAxis
    void renderAxisLine(android.graphics.Canvas,float,float,float,float) -> renderAxisLine
    void setDataBuilding(java.util.List) -> setDataBuilding
org.xclcharts.renderer.axis.DataAxis -> org.xclcharts.renderer.axis.DataAxis:
    double mDataAxisMin -> mDataAxisMin
    double mDataAxisMax -> mDataAxisMax
    double mDataAxisSteps -> mDataAxisSteps
    double mDetailModeSteps -> mDetailModeSteps
    boolean mShowFirstTick -> mShowFirstTick
    float mDataAxisStd -> mDataAxisStd
    boolean mAxisStdStatus -> mAxisStdStatus
    void enabledAxisStd() -> enabledAxisStd
    void disableddAxisStd() -> disableddAxisStd
    void setAxisStd(float) -> setAxisStd
    boolean getAxisStdStatus() -> getAxisStdStatus
    float getAxisStd() -> getAxisStd
    void setAxisMin(double) -> setAxisMin
    void setAxisMax(double) -> setAxisMax
    void setAxisSteps(double) -> setAxisSteps
    void setDetailModeSteps(double) -> setDetailModeSteps
    float getAxisMin() -> getAxisMin
    float getAxisMax() -> getAxisMax
    double getAxisSteps() -> getAxisSteps
    double getDetailModeSteps() -> getDetailModeSteps
    boolean isDetailMode() -> isDetailMode
    void showFirstTick() -> showFirstTick
    void hideFirstTick() -> hideFirstTick
org.xclcharts.renderer.axis.DataAxisRender -> org.xclcharts.renderer.axis.DataAxisRender:
    int mCurrentId -> mCurrentId
    float getAxisRange() -> getAxisRange
    int getAixTickCount() -> getAixTickCount
    void setAxisTickCurrentID(int) -> setAxisTickCurrentID
    boolean isPrimaryTick() -> isPrimaryTick
    boolean isPrimaryTick(int) -> isPrimaryTick
    int getTickMarksLength() -> getTickMarksLength
    boolean isShowAxisLabels() -> isShowAxisLabels
    void renderAxisHorizontalTick(org.xclcharts.renderer.XChart,android.graphics.Canvas,float,float,java.lang.String,boolean) -> renderAxisHorizontalTick
    void renderAxisVerticalTick(android.graphics.Canvas,float,float,java.lang.String,boolean) -> renderAxisVerticalTick
    void renderAxis(android.graphics.Canvas,float,float,float,float) -> renderAxis
    void renderAxisLine(android.graphics.Canvas,float,float,float,float) -> renderAxisLine
org.xclcharts.renderer.axis.RoundAxis -> org.xclcharts.renderer.axis.RoundAxis:
    float mCirX -> mCirX
    float mCirY -> mCirY
    float mOrgRadius -> mOrgRadius
    float mRadius -> mRadius
    int mDetailModeSteps -> mDetailModeSteps
    float mRadiusPercentage -> mRadiusPercentage
    float mInnerRadiusPercentage -> mInnerRadiusPercentage
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    float mTotalAngle -> mTotalAngle
    float mInitAngle -> mInitAngle
    org.xclcharts.renderer.XEnum$RoundAxisType mAxisType -> mAxisType
    java.util.List mPercentage -> mPercentage
    java.util.List mColor -> mColor
    java.util.List mLabels -> mLabels
    android.graphics.Paint mPaintFillAxis -> mPaintFillAxis
    boolean mLongTickfakeBold -> mLongTickfakeBold
    org.xclcharts.renderer.XEnum$RoundTickAxisType mRoundTickAxisType -> mRoundTickAxisType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
    void setRoundAxisType(org.xclcharts.renderer.XEnum$RoundAxisType) -> setRoundAxisType
    void setDetailModeSteps(int) -> setDetailModeSteps
    void setDetailModeSteps(int,boolean) -> setDetailModeSteps
    float getRadius() -> getRadius
    void setRoundTickAxisType(org.xclcharts.renderer.XEnum$RoundTickAxisType) -> setRoundTickAxisType
    void setRadiusPercentage(float) -> setRadiusPercentage
    void setRingInnerRadiusPercentage(float) -> setRingInnerRadiusPercentage
    android.graphics.Paint getFillAxisPaint() -> getFillAxisPaint
    void initFillAxisPaint() -> initFillAxisPaint
    void setLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setLabelFormatter
    java.lang.String getFormatterLabel(java.lang.String) -> getFormatterLabel
    org.xclcharts.renderer.XEnum$RoundAxisType getAxisType() -> getAxisType
    float getOuterRadiusPercentage() -> getOuterRadiusPercentage
    float getRingInnerRadiusPercentage() -> getRingInnerRadiusPercentage
    float getOuterRadius() -> getOuterRadius
    float getRingInnerRadius() -> getRingInnerRadius
    android.graphics.PointF getCenterXY() -> getCenterXY
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
org.xclcharts.renderer.axis.RoundAxisRender -> org.xclcharts.renderer.axis.RoundAxisRender:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.XEnum$Location mLocation -> mLocation
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
    void setAxisPercentage(java.util.List) -> setAxisPercentage
    void setAxisColor(java.util.List) -> setAxisColor
    void setAxisLabels(java.util.List) -> setAxisLabels
    void setLineAxisLocation(org.xclcharts.renderer.XEnum$Location) -> setLineAxisLocation
    boolean renderTicks(android.graphics.Canvas,java.util.List) -> renderTicks
    android.graphics.PointF getLabelXY(java.lang.String,float,float,float,float,float,float) -> getLabelXY
    boolean renderFillAxis(android.graphics.Canvas) -> renderFillAxis
    boolean renderTickAxis(android.graphics.Canvas) -> renderTickAxis
    boolean renderArcLineAxis(android.graphics.Canvas) -> renderArcLineAxis
    boolean renderCircleAxis(android.graphics.Canvas) -> renderCircleAxis
    boolean renderRingAxis(android.graphics.Canvas) -> renderRingAxis
    boolean renderPartitions(android.graphics.Canvas,float,float,int,java.lang.String) -> renderPartitions
    boolean renderLineAxis(android.graphics.Canvas) -> renderLineAxis
    void setCenterXY(float,float) -> setCenterXY
    void setOrgRadius(float) -> setOrgRadius
    void setAngleInfo(float,float) -> setAngleInfo
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
org.xclcharts.renderer.axis.XYAxis -> org.xclcharts.renderer.axis.XYAxis:
    java.util.List mDataSet -> mDataSet
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    android.graphics.Paint$Align mTickMarksAlign -> mTickMarksAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mTickMarksPosition -> mTickMarksPosition
    int mTickMarksLength -> mTickMarksLength
    int mTickLabelMargin -> mTickLabelMargin
    int[] $SWITCH_TABLE$android$graphics$Paint$Align -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    void setVerticalTickPosition(org.xclcharts.renderer.XEnum$VerticalAlign) -> setVerticalTickPosition
    org.xclcharts.renderer.XEnum$VerticalAlign getVerticalTickPosition() -> getVerticalTickPosition
    void setHorizontalTickAlign(android.graphics.Paint$Align) -> setHorizontalTickAlign
    android.graphics.Paint$Align getHorizontalTickAlign() -> getHorizontalTickAlign
    void setLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setLabelFormatter
    java.lang.String getFormatterLabel(java.lang.String) -> getFormatterLabel
    void renderHorizontalTick(org.xclcharts.renderer.XChart,android.graphics.Canvas,float,float,java.lang.String,float,float,boolean) -> renderHorizontalTick
    void renderVerticalTick(android.graphics.Canvas,float,float,java.lang.String,float,float,boolean) -> renderVerticalTick
    void renderLeftAxisTickMaskLabel(android.graphics.Canvas,float,float,java.lang.String,float) -> renderLeftAxisTickMaskLabel
    int getTickMarksLength() -> getTickMarksLength
    void setTickLabelMargin(int) -> setTickLabelMargin
    int getTickLabelMargin() -> getTickLabelMargin
    int[] $SWITCH_TABLE$android$graphics$Paint$Align() -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
org.xclcharts.renderer.bar.Bar -> org.xclcharts.renderer.bar.Bar:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.XEnum$Direction mBarDirection -> mBarDirection
    android.graphics.Paint mPaintBar -> mPaintBar
    android.graphics.Paint mPaintItemLabel -> mPaintItemLabel
    int mItemLabelAnchorOffset -> mItemLabelAnchorOffset
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    boolean mShowItemLabel -> mShowItemLabel
    double mBarInnerMargin -> mBarInnerMargin
    org.xclcharts.renderer.XEnum$BarStyle mBarStyle -> mBarStyle
    float mBarTickSpacePercent -> mBarTickSpacePercent
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    org.xclcharts.renderer.XEnum$Direction getBarDirection() -> getBarDirection
    void setBarDirection(org.xclcharts.renderer.XEnum$Direction) -> setBarDirection
    android.graphics.Paint getBarPaint() -> getBarPaint
    android.graphics.Paint getItemLabelPaint() -> getItemLabelPaint
    int getItemLabelAnchorOffset() -> getItemLabelAnchorOffset
    void setItemLabelAnchorOffset(int) -> setItemLabelAnchorOffset
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
    void setItemLabelVisible(boolean) -> setItemLabelVisible
    boolean setBarTickSpacePercent(float) -> setBarTickSpacePercent
    boolean setBarInnerMargin(float) -> setBarInnerMargin
    double getInnerMargin() -> getInnerMargin
    boolean getItemLabelsVisible() -> getItemLabelsVisible
    float[] calcBarHeightAndMargin(float,int) -> calcBarHeightAndMargin
    float[] calcBarWidthAndMargin(float,int) -> calcBarWidthAndMargin
    void drawBarItemLabel(java.lang.String,float,float,android.graphics.Canvas) -> drawBarItemLabel
    void setBarStyle(org.xclcharts.renderer.XEnum$BarStyle) -> setBarStyle
    org.xclcharts.renderer.XEnum$BarStyle getBarStyle() -> getBarStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
org.xclcharts.renderer.bar.Bar3D -> org.xclcharts.renderer.bar.Bar3D:
    int mThickness -> mThickness
    int mAngle -> mAngle
    int mAlpha -> mAlpha
    android.graphics.Paint mPaint3D -> mPaint3D
    android.graphics.Paint mPaintBase -> mPaintBase
    android.graphics.Paint mPaintBase3D -> mPaintBase3D
    int mAxisBaseThickness -> mAxisBaseThickness
    int mAxisBaseColor -> mAxisBaseColor
    android.graphics.Path mPathRectangle2D -> mPathRectangle2D
    android.graphics.Paint mPaintLine -> mPaintLine
    double getOffsetX(double,double) -> getOffsetX
    double getOffsetY(double,double) -> getOffsetY
    double getOffsetX() -> getOffsetX
    double getOffsetY() -> getOffsetY
    float[] getBarHeightAndMargin(float,int) -> getBarHeightAndMargin
    float[] getBarWidthAndMargin(float,int) -> getBarWidthAndMargin
    void renderVertical3DBar(float,float,float,float,int,android.graphics.Canvas) -> renderVertical3DBar
    void render3DXAxis(float,float,float,float,android.graphics.Canvas) -> render3DXAxis
    void renderHorizontal3DBar(float,float,float,float,int,android.graphics.Canvas) -> renderHorizontal3DBar
    void render3DYAxis(float,float,float,float,android.graphics.Canvas) -> render3DYAxis
    int getThickness() -> getThickness
    void setThickness(int) -> setThickness
    int getAngle() -> getAngle
    void setAngle(int) -> setAngle
    int getAlpha() -> getAlpha
    void setAlpha(int) -> setAlpha
    int getAxis3DBaseThickness() -> getAxis3DBaseThickness
    void setAxis3DBaseThickness(int) -> setAxis3DBaseThickness
    void renderBarItemLabel(java.lang.String,float,float,android.graphics.Canvas) -> renderBarItemLabel
    void setAxis3DBaseColor(int) -> setAxis3DBaseColor
    int getAxis3DBaseColor() -> getAxis3DBaseColor
org.xclcharts.renderer.bar.FlatBar -> org.xclcharts.renderer.bar.FlatBar:
    java.lang.String TAG -> TAG
    int mFillAlpha -> mFillAlpha
    android.graphics.LinearGradient linearGradient -> linearGradient
    android.graphics.Path mPath -> mPath
    int radius -> radius
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle
    int getFillAlpha() -> getFillAlpha
    void setFillAlpha(int) -> setFillAlpha
    float[] getBarHeightAndMargin(float,int) -> getBarHeightAndMargin
    float[] getBarWidthAndMargin(float,int) -> getBarWidthAndMargin
    void setBarGradient(float,float,float,float) -> setBarGradient
    boolean renderBar(float,float,float,float,android.graphics.Canvas) -> renderBar
    void renderBarItemLabel(java.lang.String,float,float,android.graphics.Canvas) -> renderBarItemLabel
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle
org.xclcharts.renderer.info.AnchorDataPoint -> org.xclcharts.renderer.info.AnchorDataPoint:
    int mDataSeriesID -> mDataSeriesID
    int mDataChildID -> mDataChildID
    org.xclcharts.renderer.XEnum$AnchorStyle mAnchorStyle -> mAnchorStyle
    java.lang.String mAnchor -> mAnchor
    int mAnchorTextSize -> mAnchorTextSize
    int mAnchorTextColor -> mAnchorTextColor
    int mBgColor -> mBgColor
    int mAlpha -> mAlpha
    org.xclcharts.renderer.XEnum$DataAreaStyle mDataAreaStyle -> mDataAreaStyle
    float mRadius -> mRadius
    org.xclcharts.renderer.XEnum$AnchorStyle getAnchorStyle() -> getAnchorStyle
    void setAnchorStyle(org.xclcharts.renderer.XEnum$AnchorStyle) -> setAnchorStyle
    int getDataSeriesID() -> getDataSeriesID
    void setDataSeriesID(int) -> setDataSeriesID
    int getDataChildID() -> getDataChildID
    void setDataChildID(int) -> setDataChildID
    void setAnchor(java.lang.String) -> setAnchor
    java.lang.String getAnchor() -> getAnchor
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setTextSize(int) -> setTextSize
    float getTextSize() -> getTextSize
    void setTextColor(int) -> setTextColor
    int getTextColor() -> getTextColor
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setBgColor(int) -> setBgColor
    int getBgColor() -> getBgColor
    void setAreaStyle(org.xclcharts.renderer.XEnum$DataAreaStyle) -> setAreaStyle
    org.xclcharts.renderer.XEnum$DataAreaStyle getAreaStyle() -> getAreaStyle
org.xclcharts.renderer.info.AnchorRender -> org.xclcharts.renderer.info.AnchorRender:
    org.xclcharts.renderer.info.AnchorRender instance -> instance
    android.graphics.RectF mRect -> mRect
    android.graphics.Paint mPaintText -> mPaintText
    android.graphics.Paint mPaintBg -> mPaintBg
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AnchorStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AnchorStyle
    org.xclcharts.renderer.info.AnchorRender getInstance() -> getInstance
    void renderAnchor(android.graphics.Canvas,org.xclcharts.renderer.info.AnchorDataPoint,float,float) -> renderAnchor
    void renderRect(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderRect
    android.graphics.Paint getTextPaint() -> getTextPaint
    android.graphics.Paint getBgPaint() -> getBgPaint
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AnchorStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AnchorStyle
org.xclcharts.renderer.info.DyInfo -> org.xclcharts.renderer.info.DyInfo:
    java.lang.String TAG -> TAG
    android.graphics.Paint mPaintBorder -> mPaintBorder
    android.graphics.Paint mPaintBackground -> mPaintBackground
    android.graphics.RectF mRect -> mRect
    float mRowSpan -> mRowSpan
    float mColSpan -> mColSpan
    float mMargin -> mMargin
    org.xclcharts.renderer.XEnum$DyInfoStyle mStyle -> mStyle
    float mRoundRectX -> mRoundRectX
    float mRoundRectY -> mRoundRectY
    java.util.ArrayList mClickedDotStyle -> mClickedDotStyle
    java.util.ArrayList mClickedText -> mClickedText
    java.util.ArrayList mClickedPaint -> mClickedPaint
    android.graphics.PointF mCenterXY -> mCenterXY
    android.graphics.Paint$Align mPositionAlign -> mPositionAlign
    float mRectWidth -> mRectWidth
    float mRectHeight -> mRectHeight
    int[] $SWITCH_TABLE$android$graphics$Paint$Align -> $SWITCH_TABLE$android$graphics$Paint$Align
    android.graphics.Paint getBorderPaint() -> getBorderPaint
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
    boolean validateParams() -> validateParams
    void getContentRect() -> getContentRect
    void setRowSpan(float) -> setRowSpan
    void setColSpan(float) -> setColSpan
    void setMargin(float) -> setMargin
    void setRoundRectX(float) -> setRoundRectX
    void setRoundRectY(float) -> setRoundRectY
    void setCenterXY(float,float) -> setCenterXY
    void setStyle(org.xclcharts.renderer.XEnum$DyInfoStyle) -> setStyle
    void addInfo(java.lang.String,android.graphics.Paint) -> addInfo
    void addInfo(org.xclcharts.renderer.line.PlotDot,java.lang.String,android.graphics.Paint) -> addInfo
    void drawInfo(android.graphics.Canvas) -> drawInfo
    void clear() -> clear
    void getInfoRect() -> getInfoRect
    int[] $SWITCH_TABLE$android$graphics$Paint$Align() -> $SWITCH_TABLE$android$graphics$Paint$Align
org.xclcharts.renderer.info.DyLine -> org.xclcharts.renderer.info.DyLine:
    android.graphics.Paint mPaintLine -> mPaintLine
    android.graphics.PointF mCenterXY -> mCenterXY
    org.xclcharts.renderer.XEnum$DyLineStyle mDyLineStyle -> mDyLineStyle
    org.xclcharts.renderer.XEnum$LineStyle mLineDrawStyle -> mLineDrawStyle
    float mOldX -> mOldX
    float mOldY -> mOldY
    android.graphics.Paint getLinePaint() -> getLinePaint
    void setCurrentXY(float,float) -> setCurrentXY
    boolean isInvalidate() -> isInvalidate
    void setDyLineStyle(org.xclcharts.renderer.XEnum$DyLineStyle) -> setDyLineStyle
    org.xclcharts.renderer.XEnum$DyLineStyle getDyLineStyle() -> getDyLineStyle
    void setLineDrawStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineDrawStyle
    org.xclcharts.renderer.XEnum$LineStyle getLineDrawStyle() -> getLineDrawStyle
org.xclcharts.renderer.info.DyLineRender -> org.xclcharts.renderer.info.DyLineRender:
    float mLeft -> mLeft
    float mTop -> mTop
    float mRight -> mRight
    float mBottom -> mBottom
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle
    void drawCross(android.graphics.Canvas) -> drawCross
    void drawBackwardDiagonal(android.graphics.Canvas) -> drawBackwardDiagonal
    void drawVertical(android.graphics.Canvas) -> drawVertical
    void drawHorizontal(android.graphics.Canvas) -> drawHorizontal
    void renderLine(android.graphics.Canvas,float,float,float,float) -> renderLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle
org.xclcharts.renderer.info.Legend -> org.xclcharts.renderer.info.Legend:
    float mXPercentage -> mXPercentage
    float mYPercentage -> mYPercentage
    void setPosition(float,float) -> setPosition
    void addLegend(java.lang.String,android.graphics.Paint) -> addLegend
    void addLegend(org.xclcharts.renderer.line.PlotDot,java.lang.String,android.graphics.Paint) -> addLegend
org.xclcharts.renderer.info.LegendRender -> org.xclcharts.renderer.info.LegendRender:
    void setPlotWH(float,float) -> setPlotWH
    void renderInfo(android.graphics.Canvas) -> renderInfo
org.xclcharts.renderer.info.PlotArcLabelInfo -> org.xclcharts.renderer.info.PlotArcLabelInfo:
    float Radius -> Radius
    float OffsetAngle -> OffsetAngle
    float CurrentAngle -> CurrentAngle
    android.graphics.PointF mLabelPointF -> mLabelPointF
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    float getOffsetAngle() -> getOffsetAngle
    void setOffsetAngle(float) -> setOffsetAngle
    float getCurrentAngle() -> getCurrentAngle
    void setCurrentAngle(float) -> setCurrentAngle
    android.graphics.PointF getLabelPointF() -> getLabelPointF
    void setLabelPointF(android.graphics.PointF) -> setLabelPointF
org.xclcharts.renderer.info.PlotAxisTick -> org.xclcharts.renderer.info.PlotAxisTick:
    boolean mShowTickMarks -> mShowTickMarks
    float getLabelX() -> getLabelX
    void setLabelX(float) -> setLabelX
    float getLabelY() -> getLabelY
    void setLabelY(float) -> setLabelY
    boolean isShowTickMarks() -> isShowTickMarks
org.xclcharts.renderer.info.PlotDataInfo -> org.xclcharts.renderer.info.PlotDataInfo:
    float X -> X
    float Y -> Y
    java.lang.String Label -> Label
    int ID -> ID
    float labelX -> labelX
    float labelY -> labelY
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    int getID() -> getID
    void setID(int) -> setID
org.xclcharts.renderer.info.ToolTip -> org.xclcharts.renderer.info.ToolTip:
    void setInfoStyle(org.xclcharts.renderer.XEnum$DyInfoStyle) -> setInfoStyle
    void setRoundRadius(float,float) -> setRoundRadius
    void setAlign(android.graphics.Paint$Align) -> setAlign
    void setCurrentXY(float,float) -> setCurrentXY
    void addToolTip(java.lang.String,android.graphics.Paint) -> addToolTip
    void addToolTip(org.xclcharts.renderer.line.PlotDot,java.lang.String,android.graphics.Paint) -> addToolTip
org.xclcharts.renderer.info.ToolTipRender -> org.xclcharts.renderer.info.ToolTipRender:
    void renderInfo(android.graphics.Canvas) -> renderInfo
org.xclcharts.renderer.line.DotInfo -> org.xclcharts.renderer.line.DotInfo:
    java.lang.Double mValue -> mValue
    java.lang.Double mXValue -> mXValue
    java.lang.Double mYValue -> mYValue
    float mX -> mX
    float mY -> mY
    java.lang.String getLabel() -> getLabel
org.xclcharts.renderer.line.PlotCustomLine -> org.xclcharts.renderer.line.PlotCustomLine:
    java.lang.String TAG -> TAG
    java.util.List mCustomLineDataset -> mCustomLineDataset
    org.xclcharts.renderer.axis.DataAxisRender mDataAxis -> mDataAxis
    org.xclcharts.renderer.plot.PlotAreaRender mPlotArea -> mPlotArea
    float mAxisScreenHeight -> mAxisScreenHeight
    float mAxisScreenWidth -> mAxisScreenWidth
    int CAPSIZE -> CAPSIZE
    org.xclcharts.renderer.line.PlotDot mDot -> mDot
    int[] $SWITCH_TABLE$android$graphics$Paint$Align -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    void setVerticalPlot(org.xclcharts.renderer.axis.DataAxisRender,org.xclcharts.renderer.plot.PlotAreaRender,float) -> setVerticalPlot
    void setHorizontalPlot(org.xclcharts.renderer.axis.DataAxisRender,org.xclcharts.renderer.plot.PlotAreaRender,float) -> setHorizontalPlot
    boolean validateParams() -> validateParams
    boolean renderVerticalCustomlinesDataAxis(android.graphics.Canvas) -> renderVerticalCustomlinesDataAxis
    void renderCapLabelVerticalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float) -> renderCapLabelVerticalPlot
    void renderLabel(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float) -> renderLabel
    boolean renderHorizontalCustomlinesDataAxis(android.graphics.Canvas) -> renderHorizontalCustomlinesDataAxis
    void renderCapLabelHorizontalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,double) -> renderCapLabelHorizontalPlot
    void renderLineCapHorizontalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float) -> renderLineCapHorizontalPlot
    void renderLineCapVerticalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float) -> renderLineCapVerticalPlot
    void renderLineCap(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float,float,float) -> renderLineCap
    void initPlotDot() -> initPlotDot
    void setCustomLines(java.util.List) -> setCustomLines
    void setDataAxis(org.xclcharts.renderer.axis.DataAxisRender) -> setDataAxis
    void setPlotArea(org.xclcharts.renderer.plot.PlotAreaRender) -> setPlotArea
    void setAxisScreenHeight(float) -> setAxisScreenHeight
    void setAxisScreenWidth(float) -> setAxisScreenWidth
    int[] $SWITCH_TABLE$android$graphics$Paint$Align() -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
org.xclcharts.renderer.line.PlotDot -> org.xclcharts.renderer.line.PlotDot:
    int mColor -> mColor
    int mRingInnerColor -> mRingInnerColor
    org.xclcharts.renderer.XEnum$DotStyle mDotStyle -> mDotStyle
    float mRadius -> mRadius
    int mAlpha -> mAlpha
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setRingInnerColor(int) -> setRingInnerColor
    int getRingInnerColor() -> getRingInnerColor
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
    void setDotRadius(float) -> setDotRadius
    float getDotRadius() -> getDotRadius
    void setAlpah(int) -> setAlpah
    int getAlpha() -> getAlpha
org.xclcharts.renderer.line.PlotDotRender -> org.xclcharts.renderer.line.PlotDotRender:
    org.xclcharts.renderer.line.PlotDotRender instance -> instance
    android.graphics.Paint mPaintFill -> mPaintFill
    android.graphics.Path mPath -> mPath
    android.graphics.RectF mRect -> mRect
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle
    org.xclcharts.renderer.line.PlotDotRender getInstance() -> getInstance
    void initPath() -> initPath
    android.graphics.Paint getInnerFillPaint() -> getInnerFillPaint
    android.graphics.RectF renderDot(android.graphics.Canvas,org.xclcharts.renderer.line.PlotDot,float,float,android.graphics.Paint) -> renderDot
    void renderRing(android.graphics.Canvas,android.graphics.Paint,float,org.xclcharts.renderer.line.PlotDot,float,float) -> renderRing
    void renderTriangle(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderTriangle
    void renderPrismatic(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderPrismatic
    void renderRect(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderRect
    void renderX(android.graphics.Canvas,android.graphics.Paint) -> renderX
    void renderCross(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderCross
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle
org.xclcharts.renderer.line.PlotLine -> org.xclcharts.renderer.line.PlotLine:
    android.graphics.Paint mPaintLine -> mPaintLine
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintDot -> mPaintDot
    org.xclcharts.renderer.line.PlotDot mPlotDot -> mPlotDot
    void initLinePaint() -> initLinePaint
    void initLabelPaint() -> initLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    android.graphics.Paint getDotPaint() -> getDotPaint
    org.xclcharts.renderer.line.PlotDot getPlotDot() -> getPlotDot
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
org.xclcharts.renderer.plot.AxisTitle -> org.xclcharts.renderer.plot.AxisTitle:
    android.graphics.Paint mPaintLeftAxisTitle -> mPaintLeftAxisTitle
    android.graphics.Paint mPaintLowerAxisTitle -> mPaintLowerAxisTitle
    android.graphics.Paint mPaintRightAxisTitle -> mPaintRightAxisTitle
    java.lang.String mLeftAxisTitle -> mLeftAxisTitle
    java.lang.String mLowerAxisTitle -> mLowerAxisTitle
    java.lang.String mRightAxisTitle -> mRightAxisTitle
    org.xclcharts.renderer.XEnum$AxisTitleStyle mAxisTitleStyle -> mAxisTitleStyle
    java.lang.String mCrossPointTitle -> mCrossPointTitle
    void initLeftAxisTitlePaint() -> initLeftAxisTitlePaint
    void initLowerAxisTitlePaint() -> initLowerAxisTitlePaint
    void initRightAxisTitlePaint() -> initRightAxisTitlePaint
    android.graphics.Paint getLeftTitlePaint() -> getLeftTitlePaint
    android.graphics.Paint getLowerTitlePaint() -> getLowerTitlePaint
    android.graphics.Paint getRightTitlePaint() -> getRightTitlePaint
    void setLeftTitle(java.lang.String) -> setLeftTitle
    void setLowerTitle(java.lang.String) -> setLowerTitle
    void setRightTitle(java.lang.String) -> setRightTitle
    java.lang.String getLeftTitle() -> getLeftTitle
    java.lang.String getLowerTitle() -> getLowerTitle
    java.lang.String getRightTitle() -> getRightTitle
    void setTitleStyle(org.xclcharts.renderer.XEnum$AxisTitleStyle) -> setTitleStyle
    void setCrossPointTitle(java.lang.String) -> setCrossPointTitle
org.xclcharts.renderer.plot.AxisTitleRender -> org.xclcharts.renderer.plot.AxisTitleRender:
    org.xclcharts.renderer.XChart mChart -> mChart
    void setRange(org.xclcharts.renderer.XChart) -> setRange
    boolean render(android.graphics.Canvas) -> render
    void drawLeftAxisTitle(android.graphics.Canvas,java.lang.String,double,double,double,double) -> drawLeftAxisTitle
    void drawLowerAxisTitle(android.graphics.Canvas,java.lang.String,double,double,double,double) -> drawLowerAxisTitle
    void drawRightAxisTitle(android.graphics.Canvas,java.lang.String,double,double,double,double) -> drawRightAxisTitle
org.xclcharts.renderer.plot.Border -> org.xclcharts.renderer.plot.Border:
    android.graphics.Paint mPaintBorderLine -> mPaintBorderLine
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    org.xclcharts.renderer.XEnum$RectType mRectType -> mRectType
    int mRaidus -> mRaidus
    int mBorderSpadding -> mBorderSpadding
    android.graphics.Paint mPaintBackground -> mPaintBackground
    android.graphics.Paint getLinePaint() -> getLinePaint
    void setBorderLineColor(int) -> setBorderLineColor
    void setBorderLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setBorderLineStyle
    void setBorderRectType(org.xclcharts.renderer.XEnum$RectType) -> setBorderRectType
    org.xclcharts.renderer.XEnum$LineStyle getBorderLineStyle() -> getBorderLineStyle
    org.xclcharts.renderer.XEnum$RectType getBorderRectType() -> getBorderRectType
    void setRoundRadius(int) -> setRoundRadius
    int getRoundRadius() -> getRoundRadius
    int getBorderWidth() -> getBorderWidth
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
org.xclcharts.renderer.plot.BorderRender -> org.xclcharts.renderer.plot.BorderRender:
    android.graphics.RectF mRect -> mRect
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType
    int getBorderSpadding() -> getBorderSpadding
    void setPaintLineStyle() -> setPaintLineStyle
    void renderBox(android.graphics.Canvas,android.graphics.RectF,boolean,boolean) -> renderBox
    void renderBorder(java.lang.String,android.graphics.Canvas,float,float,float,float) -> renderBorder
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType
org.xclcharts.renderer.plot.LabelBrokenLine -> org.xclcharts.renderer.plot.LabelBrokenLine:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.XEnum$LabelLinePoint mLinePoint -> mLinePoint
    float mRadius -> mRadius
    android.graphics.Paint mPaintLabelLine -> mPaintLabelLine
    android.graphics.Paint mPaintPoint -> mPaintPoint
    float mLabelBrokenLineLength -> mLabelBrokenLineLength
    boolean mIsBZLine -> mIsBZLine
    float mBrokenStartPoint -> mBrokenStartPoint
    void isBZLine() -> isBZLine
    void isBeeLine() -> isBeeLine
    void setLinePointStyle(org.xclcharts.renderer.XEnum$LabelLinePoint) -> setLinePointStyle
    org.xclcharts.renderer.XEnum$LabelLinePoint getLinePointStyle() -> getLinePointStyle
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setBrokenLine(float) -> setBrokenLine
    float getBrokenLine() -> getBrokenLine
    android.graphics.Paint getLabelLinePaint() -> getLabelLinePaint
    android.graphics.Paint getPointPaint() -> getPointPaint
    void setBrokenStartPoint(float) -> setBrokenStartPoint
org.xclcharts.renderer.plot.LabelBrokenLineRender -> org.xclcharts.renderer.plot.LabelBrokenLineRender:
    android.graphics.Path mBzLine -> mBzLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint
    android.graphics.PointF renderLabelLine(java.lang.String,float,float,float,float,float,android.graphics.Canvas,android.graphics.Paint,boolean,org.xclcharts.renderer.plot.PlotLabelRender) -> renderLabelLine
    void drawBrokenLine(float,float,float,float,float,android.graphics.Canvas) -> drawBrokenLine
    void drawBZLine(float,float,float,float,float,android.graphics.Canvas) -> drawBZLine
    void drawPoint(float,float,float,float,float,float,android.graphics.Canvas) -> drawPoint
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint
org.xclcharts.renderer.plot.PlotArea -> org.xclcharts.renderer.plot.PlotArea:
    float mLeft -> mLeft
    float mTop -> mTop
    float mRight -> mRight
    float mBottom -> mBottom
    float mWidth -> mWidth
    float mHeight -> mHeight
    android.graphics.Paint mBackgroundPaint -> mBackgroundPaint
    boolean mBackgroundColorVisible -> mBackgroundColorVisible
    float mExtWidth -> mExtWidth
    boolean mApplayGradient -> mApplayGradient
    int mBeginColor -> mBeginColor
    int mEndColor -> mEndColor
    android.graphics.Shader$TileMode mTileMode -> mTileMode
    org.xclcharts.renderer.XEnum$Direction mDirection -> mDirection
    void initBackgroundPaint() -> initBackgroundPaint
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
    void setBackgroundColorVisible(boolean) -> setBackgroundColorVisible
    boolean getBackgroundColorVisible() -> getBackgroundColorVisible
    void setBackgroundColor(boolean,int) -> setBackgroundColor
    float getLeft() -> getLeft
    float getPlotLeft() -> getPlotLeft
    float getTop() -> getTop
    float getPlotTop() -> getPlotTop
    float getBottom() -> getBottom
    float getPlotBottom() -> getPlotBottom
    float getRight() -> getRight
    float getPlotRight() -> getPlotRight
    float getWidth() -> getWidth
    float getPlotWidth() -> getPlotWidth
    float getHeight() -> getHeight
    float getPlotHeight() -> getPlotHeight
    void extWidth(float) -> extWidth
    float getExtWidth() -> getExtWidth
    void setApplayGradient(boolean) -> setApplayGradient
    boolean getApplayGradient() -> getApplayGradient
    void setGradientDirection(org.xclcharts.renderer.XEnum$Direction) -> setGradientDirection
    org.xclcharts.renderer.XEnum$Direction getGradientDirection() -> getGradientDirection
    void setGradientMode(android.graphics.Shader$TileMode) -> setGradientMode
    android.graphics.Shader$TileMode getGradientMode() -> getGradientMode
    void setBeginColor(int) -> setBeginColor
    void setEndColor(int) -> setEndColor
    int getBeginColor() -> getBeginColor
    int getEndColor() -> getEndColor
org.xclcharts.renderer.plot.PlotAreaRender -> org.xclcharts.renderer.plot.PlotAreaRender:
    void drawPlotBackground(android.graphics.Canvas) -> drawPlotBackground
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    void setLeft(float) -> setLeft
    void setTop(float) -> setTop
    void setRight(float) -> setRight
    void setBottom(float) -> setBottom
    float getPlotRight() -> getPlotRight
    boolean render(android.graphics.Canvas) -> render
org.xclcharts.renderer.plot.PlotAttrInfo -> org.xclcharts.renderer.plot.PlotAttrInfo:
    java.util.List mAttrInfoLocation -> mAttrInfoLocation
    java.util.List mAttrInfo -> mAttrInfo
    java.util.List mAttrInfoPostion -> mAttrInfoPostion
    java.util.List mAttrInfoPaint -> mAttrInfoPaint
    java.util.List getPlotAttrInfo() -> getPlotAttrInfo
    java.util.List getPlotAttrInfoPostion() -> getPlotAttrInfoPostion
    java.util.List getPlotAttrInfoPaint() -> getPlotAttrInfoPaint
    void clearPlotAttrInfo() -> clearPlotAttrInfo
    void addAttributeInfo(org.xclcharts.renderer.XEnum$Location,java.lang.String,float,android.graphics.Paint) -> addAttributeInfo
org.xclcharts.renderer.plot.PlotAttrInfoRender -> org.xclcharts.renderer.plot.PlotAttrInfoRender:
    android.graphics.PointF mPosPintF -> mPosPintF
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    void renderAttrInfo(android.graphics.Canvas,float,float,float) -> renderAttrInfo
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
org.xclcharts.renderer.plot.PlotGrid -> org.xclcharts.renderer.plot.PlotGrid:
    android.graphics.Paint mPaintGridLineHorizontal -> mPaintGridLineHorizontal
    android.graphics.Paint mPaintGridLineVertical -> mPaintGridLineVertical
    boolean mGridLinesHorizontalVisible -> mGridLinesHorizontalVisible
    boolean mGridLinesVerticalVisible -> mGridLinesVerticalVisible
    boolean mOddRowBgColorVisible -> mOddRowBgColorVisible
    boolean mEvenRowBgColorVisible -> mEvenRowBgColorVisible
    android.graphics.Paint mPaintOddBgColor -> mPaintOddBgColor
    android.graphics.Paint mPaintEvenBgColor -> mPaintEvenBgColor
    org.xclcharts.renderer.XEnum$LineStyle mHorizontalLineStyle -> mHorizontalLineStyle
    org.xclcharts.renderer.XEnum$LineStyle mVerticalLineStyle -> mVerticalLineStyle
    void initEvenBgColorPaint() -> initEvenBgColorPaint
    void initOddBgColorPaint() -> initOddBgColorPaint
    void initHorizontalLinePaint() -> initHorizontalLinePaint
    void initVerticalLinePaint() -> initVerticalLinePaint
    void setOddRowBackgroundColor(int) -> setOddRowBackgroundColor
    void setEvenRowBackgroundColor(int) -> setEvenRowBackgroundColor
    void showHorizontalLines() -> showHorizontalLines
    void hideHorizontalLines() -> hideHorizontalLines
    boolean isShowHorizontalLines() -> isShowHorizontalLines
    void showVerticalLines() -> showVerticalLines
    void hideVerticalLines() -> hideVerticalLines
    boolean isShowVerticalLines() -> isShowVerticalLines
    void showOddRowBgColor() -> showOddRowBgColor
    void hideOddRowBgColor() -> hideOddRowBgColor
    boolean isShowOddRowBgColor() -> isShowOddRowBgColor
    void showEvenRowBgColor() -> showEvenRowBgColor
    void hideEvenRowBgColor() -> hideEvenRowBgColor
    boolean isShowEvenRowBgColor() -> isShowEvenRowBgColor
    android.graphics.Paint getHorizontalLinePaint() -> getHorizontalLinePaint
    android.graphics.Paint getVerticalLinePaint() -> getVerticalLinePaint
    android.graphics.Paint getOddRowsBgColorPaint() -> getOddRowsBgColorPaint
    android.graphics.Paint getEvenRowsBgColorPaint() -> getEvenRowsBgColorPaint
    org.xclcharts.renderer.XEnum$LineStyle getVerticalLineStyle() -> getVerticalLineStyle
    void setVerticalLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setVerticalLineStyle
    org.xclcharts.renderer.XEnum$LineStyle getHorizontalLineStyle() -> getHorizontalLineStyle
    void setHorizontalLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setHorizontalLineStyle
org.xclcharts.renderer.plot.PlotGridRender -> org.xclcharts.renderer.plot.PlotGridRender:
    boolean mMajorTickLine -> mMajorTickLine
    int BLOB_WIDTH -> BLOB_WIDTH
    void setPrimaryTickLine(boolean) -> setPrimaryTickLine
    void renderOddRowsFill(android.graphics.Canvas,float,float,float,float) -> renderOddRowsFill
    void renderEvenRowsFill(android.graphics.Canvas,float,float,float,float) -> renderEvenRowsFill
    void renderGridLinesHorizontal(android.graphics.Canvas,float,float,float,float) -> renderGridLinesHorizontal
    void renderGridLinesVertical(android.graphics.Canvas,float,float,float,float) -> renderGridLinesVertical
org.xclcharts.renderer.plot.PlotLabel -> org.xclcharts.renderer.plot.PlotLabel:
    float mMargin -> mMargin
    org.xclcharts.renderer.plot.BorderRender mBorder -> mBorder
    boolean mShowBox -> mShowBox
    boolean mShowBoxBorder -> mShowBoxBorder
    boolean mShowBackground -> mShowBackground
    float mOffsetX -> mOffsetX
    float mOffsetY -> mOffsetY
    int DEF_BOX_BG_ALPHA -> DEF_BOX_BG_ALPHA
    org.xclcharts.renderer.plot.Border getBox() -> getBox
    void initBox() -> initBox
    void hideBox() -> hideBox
    void hideBorder() -> hideBorder
    void hideBackground() -> hideBackground
    void showBox() -> showBox
    void showBorder() -> showBorder
    void showBackground() -> showBackground
    void setOffsetX(float) -> setOffsetX
    void setOffsetY(float) -> setOffsetY
    void setMargin(float) -> setMargin
    float getMargin() -> getMargin
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float) -> drawLabel
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float,int) -> drawLabel
org.xclcharts.renderer.plot.PlotLabelRender -> org.xclcharts.renderer.plot.PlotLabelRender:
    android.graphics.RectF mRectBox -> mRectBox
    int mBorderColor -> mBorderColor
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float,int) -> drawLabel
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float) -> drawLabel
    float getLabelWidth(android.graphics.Paint,java.lang.String) -> getLabelWidth
    float getLabelHeight(android.graphics.Paint) -> getLabelHeight
    void drawBox(android.graphics.Canvas,float,float,float,float) -> drawBox
org.xclcharts.renderer.plot.PlotLegend -> org.xclcharts.renderer.plot.PlotLegend:
    float mMargin -> mMargin
    android.graphics.Paint mKeyPaint -> mKeyPaint
    boolean mVisible -> mVisible
    float mOffsetX -> mOffsetX
    float mOffsetY -> mOffsetY
    float mRowSpan -> mRowSpan
    float mColSpan -> mColSpan
    org.xclcharts.renderer.XEnum$LegendType mLegendType -> mLegendType
    org.xclcharts.renderer.XEnum$HorizontalAlign mHorizontalAlign -> mHorizontalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mVerticalAlign -> mVerticalAlign
    org.xclcharts.renderer.plot.BorderRender mBorder -> mBorder
    boolean mShowBox -> mShowBox
    boolean mShowBoxBorder -> mShowBoxBorder
    boolean mShowBackground -> mShowBackground
    void show() -> show
    void hide() -> hide
    boolean isShow() -> isShow
    void hideBox() -> hideBox
    void hideBorder() -> hideBorder
    void hideBackground() -> hideBackground
    void showBox() -> showBox
    void showBorder() -> showBorder
    void showBackground() -> showBackground
    android.graphics.Paint getPaint() -> getPaint
    void setLabelMargin(float) -> setLabelMargin
    void setRowSpan(float) -> setRowSpan
    void setColSpan(float) -> setColSpan
    float getLabelMargin() -> getLabelMargin
    void setOffsetX(float) -> setOffsetX
    void setOffsetY(float) -> setOffsetY
    void setType(org.xclcharts.renderer.XEnum$LegendType) -> setType
    org.xclcharts.renderer.XEnum$LegendType getType() -> getType
    void setHorizontalAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setHorizontalAlign
    org.xclcharts.renderer.XEnum$HorizontalAlign getHorizontalAlign() -> getHorizontalAlign
    void setVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setVerticalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign getVerticalAlign() -> getVerticalAlign
    org.xclcharts.renderer.plot.Border getBox() -> getBox
org.xclcharts.renderer.plot.PlotLegendRender -> org.xclcharts.renderer.plot.PlotLegendRender:
    org.xclcharts.renderer.plot.PlotArea mPlotArea -> mPlotArea
    org.xclcharts.renderer.XChart mXChart -> mXChart
    float mKeyLabelX -> mKeyLabelX
    float mKeyLabelY -> mKeyLabelY
    java.util.ArrayList mLstDotStyle -> mLstDotStyle
    java.util.ArrayList mLstKey -> mLstKey
    java.util.ArrayList mLstColor -> mLstColor
    float mRectWidth -> mRectWidth
    float mRectHeight -> mRectHeight
    java.util.LinkedHashMap mMapID -> mMapID
    boolean mIsLnChart -> mIsLnChart
    android.graphics.Paint mPaintLine -> mPaintLine
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType mType -> mType
    int BOX_LINE_SIZE -> BOX_LINE_SIZE
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    void setXChart(org.xclcharts.renderer.XChart) -> setXChart
    void initEnv() -> initEnv
    float getLabelTextWidth(java.lang.String) -> getLabelTextWidth
    float getLabelTextHeight() -> getLabelTextHeight
    boolean renderBarKey(android.graphics.Canvas,java.util.List) -> renderBarKey
    void renderLineKey(android.graphics.Canvas,java.util.List) -> renderLineKey
    void renderPieKey(android.graphics.Canvas,java.util.List) -> renderPieKey
    void renderRdKey(android.graphics.Canvas,java.util.List) -> renderRdKey
    void renderPointKey(android.graphics.Canvas,java.util.List) -> renderPointKey
    void renderBubbleKey(android.graphics.Canvas,java.util.List) -> renderBubbleKey
    void renderRoundBarKey(android.graphics.Canvas,java.util.List) -> renderRoundBarKey
    void renderRangeBarKey(android.graphics.Canvas,java.lang.String,int) -> renderRangeBarKey
    void setLnChartStatus() -> setLnChartStatus
    void render(android.graphics.Canvas) -> render
    float getRectWidth() -> getRectWidth
    void calcContentRect() -> calcContentRect
    void getStartXY() -> getStartXY
    void drawLegend(android.graphics.Canvas) -> drawLegend
    void clearLst() -> clearLst
    void drawBox(android.graphics.Canvas) -> drawBox
    void refreshLst() -> refreshLst
    void convertArrayLineKey(java.util.List) -> convertArrayLineKey
    void convertArrayBarKey(java.util.List) -> convertArrayBarKey
    void convertArrayPieKey(java.util.List) -> convertArrayPieKey
    void convertArrayRadarKey(java.util.List) -> convertArrayRadarKey
    void convertArrayPointKey(java.util.List) -> convertArrayPointKey
    void convertArrayBubbleKey(java.util.List) -> convertArrayBubbleKey
    void convertArrayArcLineKey(java.util.List) -> convertArrayArcLineKey
    boolean isDrawKey(java.lang.String) -> isDrawKey
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType -> org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType:
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType AXIS -> AXIS
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType CIR -> CIR
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType LN -> LN
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType RD -> RD
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType[] values() -> values
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.plot.PlotQuadrant -> org.xclcharts.renderer.plot.PlotQuadrant:
    int mFirstColor -> mFirstColor
    int mSecondColor -> mSecondColor
    int mThirdColor -> mThirdColor
    int mFourthColor -> mFourthColor
    boolean mShow -> mShow
    boolean mShowBgColor -> mShowBgColor
    boolean mShowVerticalLine -> mShowVerticalLine
    boolean mShowHorizontalLine -> mShowHorizontalLine
    android.graphics.Paint mPaintBgColor -> mPaintBgColor
    android.graphics.Paint mPaintVerticalLine -> mPaintVerticalLine
    android.graphics.Paint mPaintHorizontalLine -> mPaintHorizontalLine
    double mQuadrantXValue -> mQuadrantXValue
    double mQuadrantYValue -> mQuadrantYValue
    void show(double,double) -> show
    void hide() -> hide
    boolean isShow() -> isShow
    void showBgColor() -> showBgColor
    void hideBgColor() -> hideBgColor
    void showVerticalLine() -> showVerticalLine
    void hideVerticalLine() -> hideVerticalLine
    void showHorizontalLine() -> showHorizontalLine
    void hideHorizontalLine() -> hideHorizontalLine
    void setBgColor(int,int,int,int) -> setBgColor
    android.graphics.Paint getVerticalLinePaint() -> getVerticalLinePaint
    android.graphics.Paint getHorizontalLinePaint() -> getHorizontalLinePaint
    android.graphics.Paint getBgColorPaint() -> getBgColorPaint
    void setQuadrantXYValue(double,double) -> setQuadrantXYValue
    double getQuadrantXValue() -> getQuadrantXValue
    double getQuadrantYValue() -> getQuadrantYValue
org.xclcharts.renderer.plot.PlotQuadrantRender -> org.xclcharts.renderer.plot.PlotQuadrantRender:
    void drawQuadrant(android.graphics.Canvas,float,float,float,float,float,float) -> drawQuadrant
org.xclcharts.renderer.plot.PlotTitle -> org.xclcharts.renderer.plot.PlotTitle:
    java.lang.String mChartTitle -> mChartTitle
    java.lang.String mSubtitle -> mSubtitle
    android.graphics.Paint mPaintTitle -> mPaintTitle
    android.graphics.Paint mPaintSubtitle -> mPaintSubtitle
    org.xclcharts.renderer.XEnum$HorizontalAlign mChartTitleAlign -> mChartTitleAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mTitlePosition -> mTitlePosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSubtitle(java.lang.String) -> setSubtitle
    java.lang.String getSubtitle() -> getSubtitle
    android.graphics.Paint getTitlePaint() -> getTitlePaint
    android.graphics.Paint getSubtitlePaint() -> getSubtitlePaint
    void setTitleAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setTitleAlign
    org.xclcharts.renderer.XEnum$HorizontalAlign getTitleAlign() -> getTitleAlign
    void setVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setVerticalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign getVerticalAlign() -> getVerticalAlign
org.xclcharts.renderer.plot.PlotTitleRender -> org.xclcharts.renderer.plot.PlotTitleRender:
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    void renderTitle(float,float,float,float,float,android.graphics.Canvas) -> renderTitle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
org.xclcharts.renderer.plot.Pointer -> org.xclcharts.renderer.plot.Pointer:
    android.graphics.Paint mPaintPoint -> mPaintPoint
    android.graphics.Paint mPaintBaseCircle -> mPaintBaseCircle
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    float mPercentage -> mPercentage
    float mPointerRadiusPercentage -> mPointerRadiusPercentage
    float mPointerTailRadiusPercentage -> mPointerTailRadiusPercentage
    float mBaseRadius -> mBaseRadius
    org.xclcharts.renderer.XEnum$PointerStyle mPointStyle -> mPointStyle
    boolean mShowBaseCircle -> mShowBaseCircle
    void setPointerStyle(org.xclcharts.renderer.XEnum$PointerStyle) -> setPointerStyle
    org.xclcharts.renderer.XEnum$PointerStyle getPointerStyle() -> getPointerStyle
    void setLength(float) -> setLength
    void setLength(float,float) -> setLength
    android.graphics.Paint getPointerPaint() -> getPointerPaint
    android.graphics.Paint getBaseCirclePaint() -> getBaseCirclePaint
    void setBaseRadius(float) -> setBaseRadius
    float getBaseRadius() -> getBaseRadius
    void hideBaseCircle() -> hideBaseCircle
    void showBaseCircle() -> showBaseCircle
    boolean isShowBaseCircle() -> isShowBaseCircle
    void setPercentage(float) -> setPercentage
    float getPercentage() -> getPercentage
org.xclcharts.renderer.plot.PointerRender -> org.xclcharts.renderer.plot.PointerRender:
    int FIX_ANGLE -> FIX_ANGLE
    float mStartAngle -> mStartAngle
    float mTotalAngle -> mTotalAngle
    float mPointerAngle -> mPointerAngle
    float mParentRadius -> mParentRadius
    float mPointerRadius -> mPointerRadius
    float mPointerTailRadius -> mPointerTailRadius
    float mEndX -> mEndX
    float mEndY -> mEndY
    float mTailX -> mTailX
    float mTailY -> mTailY
    android.graphics.Path mPath -> mPath
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle
    void setStartXY(float,float) -> setStartXY
    void setCurrentAngle(float) -> setCurrentAngle
    void setStartAngle(float) -> setStartAngle
    void setTotalAngle(float) -> setTotalAngle
    void setParentRadius(float) -> setParentRadius
    void calcRadius() -> calcRadius
    void setPointEndXY(float,float) -> setPointEndXY
    float getCurrentPointerAngle() -> getCurrentPointerAngle
    void calcEndXY() -> calcEndXY
    void renerLine(android.graphics.Canvas) -> renerLine
    void renderTriangle(android.graphics.Canvas) -> renderTriangle
    void renderCircle(android.graphics.Canvas) -> renderCircle
    void render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle
org.xclcharts.view.ChartView -> org.xclcharts.view.ChartView:
    org.xclcharts.event.touch.ChartTouch[] mChartTouch -> mChartTouch
    void render(android.graphics.Canvas) -> render
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    java.util.List bindChart() -> bindChart
    int getTouchCharts() -> getTouchCharts
    boolean touchChart(android.view.MotionEvent) -> touchChart
org.xclcharts.view.GraphicalView -> org.xclcharts.view.GraphicalView:
    java.lang.String TAG -> TAG
    void initChartView() -> initChartView
    void refresh() -> refresh
    void render(android.graphics.Canvas) -> render
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
    void disableHardwareAccelerated() -> disableHardwareAccelerated
org.xclcharts.views.SplineChartView -> org.xclcharts.views.SplineChartView:
    java.lang.String TAG -> TAG
    org.xclcharts.chart.SplineChart chart -> chart
    java.util.LinkedList labels -> labels
    java.util.LinkedList chartData -> chartData
    org.xclcharts.views.SplineChartView$OnItemClickListener listener -> listener
    void setTitle(java.lang.String) -> setTitle
    void setSubTitle(java.lang.String) -> setSubTitle
    void setLabels(java.util.List) -> setLabels
    void setDataAxisMax(double) -> setDataAxisMax
    void setDataAxisStep(double) -> setDataAxisStep
    void setLabelAxisMax(double) -> setLabelAxisMax
    void setDataset(java.lang.String,java.util.List) -> setDataset
    void initView() -> initView
    void setOnItemClickListener(org.xclcharts.views.SplineChartView$OnItemClickListener) -> setOnItemClickListener
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void chartRender() -> chartRender
    void render(android.graphics.Canvas) -> render
    java.util.List bindChart() -> bindChart
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void triggerClick(float,float) -> triggerClick
org.xclcharts.views.SplineChartView$1 -> org.xclcharts.views.SplineChartView$1:
    org.xclcharts.views.SplineChartView this$0 -> this$0
    java.lang.String textFormatter(java.lang.String) -> textFormatter
org.xclcharts.views.SplineChartView$OnItemClickListener -> org.xclcharts.views.SplineChartView$OnItemClickListener:
    void itemClick(org.xclcharts.chart.PointD) -> itemClick
org.xclcharts.views.StaticSplineChartView -> org.xclcharts.views.StaticSplineChartView:
    java.lang.String TAG -> TAG
    org.xclcharts.chart.SplineChart chart -> chart
    java.util.LinkedList labels -> labels
    java.util.LinkedList chartData -> chartData
    boolean hasData -> hasData
    void setDataAxisMax(double) -> setDataAxisMax
    void setDataAxisStep(double) -> setDataAxisStep
    void setLabelAxisMax(double) -> setLabelAxisMax
    void setDataset(java.util.List) -> setDataset
    void setLabel(java.util.List) -> setLabel
    void initView() -> initView
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void chartRender() -> chartRender
    boolean hasData() -> hasData
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void render(android.graphics.Canvas) -> render
    java.util.List bindChart() -> bindChart
vi.com.gdi.bgl.android.java.EnvDrawText -> vi.com.gdi.bgl.android.java.EnvDrawText:
    java.lang.String a -> a
    android.graphics.Paint pt -> pt
    int iWordWidthMax -> iWordWidthMax
    int iWordHightMax -> iWordHightMax
    boolean bBmpChange -> bBmpChange
    android.graphics.Bitmap bmp -> bmp
    android.graphics.Canvas canvasTemp -> canvasTemp
    int[] buffer -> buffer
    android.util.SparseArray fontCache -> fontCache
    int[] drawText(java.lang.String,int,int,int[],int,int,int,int) -> drawText
    short[] getTextSize(java.lang.String,int) -> getTextSize
    void registFontCache(int,android.graphics.Typeface) -> registFontCache
    void removeFontCache(int) -> removeFontCache
vi.com.gdi.bgl.android.java.a -> vi.com.gdi.bgl.android.java.a:
    android.graphics.Typeface a -> a
    int b -> b
